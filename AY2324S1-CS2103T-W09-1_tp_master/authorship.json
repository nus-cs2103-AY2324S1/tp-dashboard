[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bhnuka"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-W09-1/tp/actions)","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"bhnuka"},"content":"# FAPro","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"bhnuka"},"content":"## FApro seeks to improve the quality of life of financial advisors (FAs). It allows FAs to **keep track of large numbers of contacts**. It allows FAs to have a one-stop platform to **manage their contacts** and **conduct financial analytics** while providing a big-picture view of their clientele as a whole.","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"bhnuka"},"content":"## Problem Addressed","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"bhnuka"},"content":"* A lot of contacts","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"bhnuka"},"content":"* Hard to track which clients have existing products and which products","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"bhnuka"},"content":"* Possibly volatile contacts as need to keep up with them over long periods of time","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"bhnuka"},"content":"* Share info on a large-scale basis","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"bhnuka"},"content":"* Do analytics","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"bhnuka"},"content":"* Provides them with an overview of all possible clients (big-picture)","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"bhnuka"},"content":"* For the detailed documentation of this project, see the **[FAPro Product Website](https://github.com/AY2324S1-CS2103T-W09-1/tp)**.","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"bhnuka"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"bhnuka":16,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"bhnuka"},"content":"run {","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"bhnuka"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"syamfarh"},"content":"    implementation group: \u0027com.calendarfx\u0027, name: \u0027view\u0027, version: \u002711.12.6\u0027","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":74,"author":{"gitId":"limzhenwy"},"content":"    archiveFileName \u003d \u0027fapro.jar\u0027","lastModifiedDate":"2023-10-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"Daphne789"},"content":"run {","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"Daphne789"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"limzhenwy":1,"Daphne789":2,"bhnuka":4,"syamfarh":1,"-":73}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `syamfarh@comp.nus.edu.sg`","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"### Lim Zhe Rui","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/zherui.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[[github](https://github.com/johndoe)]","lastModifiedDate":"2020-06-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* Role: Project Advisor","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"### Bhanuka Bandara Ekanayake ","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"bhnuka"},"content":"\u003cimg src\u003d\"images/bhnuka.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"[[github](http://github.com/bhnuka)]","lastModifiedDate":"2023-09-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Daphne Shaine Wilhelmina","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"Daphne789"},"content":"\u003cimg src\u003d\"images/daphne789.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"[[github](http://github.com/Daphne789)] ","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"### Glenn Ng Jun Jie","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"glenngnng"},"content":"\u003cimg src\u003d\"images/glenngnng.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"[[github](http://github.com/glenngnng)]","lastModifiedDate":"2023-09-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"### Lim Zhen Wy","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"limzhenwy"},"content":"\u003cimg src\u003d\"images/limzhenwy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"[[github](http://github.com/limzhenwy)]","lastModifiedDate":"2023-09-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2023-09-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2023-09-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"### Muhammad Syam Farhan bin Agus Rizal","lastModifiedDate":"2023-09-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":58,"author":{"gitId":"syamfarh"},"content":"\u003cimg src\u003d\"images/syamfarh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"[[github](http://github.com/syamfarh)]","lastModifiedDate":"2023-09-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Daphne789":1,"glenngnng":1,"limzhenwy":1,"bhnuka":1,"syamfarh":1,"-":58}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"bhnuka"},"content":"### Clone feature","lastModifiedDate":"2023-10-23"},{"lineNumber":238,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":239,"author":{"gitId":"bhnuka"},"content":"#### Implementation","lastModifiedDate":"2023-10-23"},{"lineNumber":240,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":241,"author":{"gitId":"bhnuka"},"content":"The clone feature creates a copy of a person in the addressbook while only adding a number at the end of the name and maintaining all other variables. ","lastModifiedDate":"2023-10-23"},{"lineNumber":242,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":243,"author":{"gitId":"bhnuka"},"content":"Given below is an example usage scenario and how the clone mechanism behaves at each step.","lastModifiedDate":"2023-10-23"},{"lineNumber":244,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":245,"author":{"gitId":"bhnuka"},"content":"Step 1. The user executes \"list\" to see what Persons are available in the address book","lastModifiedDate":"2023-10-23"},{"lineNumber":246,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":247,"author":{"gitId":"bhnuka"},"content":"![Clone0](images/Clone0.png)","lastModifiedDate":"2023-10-23"},{"lineNumber":248,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":249,"author":{"gitId":"bhnuka"},"content":"Step 2. The user executes \"clone 1\" to clone the person at index 1 of the addressbook, John","lastModifiedDate":"2023-10-23"},{"lineNumber":250,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":251,"author":{"gitId":"bhnuka"},"content":"![Clone1](images/Clone1.png)","lastModifiedDate":"2023-10-23"},{"lineNumber":252,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":253,"author":{"gitId":"bhnuka"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2023-10-23"},{"lineNumber":254,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":255,"author":{"gitId":"bhnuka"},"content":"![CloneActivityDiagram](images/CloneActivityDiagram.png)","lastModifiedDate":"2023-10-23"},{"lineNumber":256,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":257,"author":{"gitId":"bhnuka"},"content":"#### Design considerations:","lastModifiedDate":"2023-10-23"},{"lineNumber":258,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":259,"author":{"gitId":"bhnuka"},"content":"**Aspect: How clone executes:**","lastModifiedDate":"2023-10-23"},{"lineNumber":260,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":261,"author":{"gitId":"bhnuka"},"content":"* **Alternative 1 (current choice):** Copies the person at the index provided and returns a person with a number next to their name","lastModifiedDate":"2023-10-23"},{"lineNumber":262,"author":{"gitId":"bhnuka"},"content":"  * Pros: Fast, prevents excessive copying of a person while ensuring that there are no struct duplicates","lastModifiedDate":"2023-10-23"},{"lineNumber":263,"author":{"gitId":"bhnuka"},"content":"  * Cons: Can be restrictive and time consuming, as you have to keep copying the clone if you wish to make a clone of a person","lastModifiedDate":"2023-10-23"},{"lineNumber":264,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":265,"author":{"gitId":"bhnuka"},"content":"* **Alternative 2:** Copies the person exactly as is while allowing for duplicates","lastModifiedDate":"2023-10-23"},{"lineNumber":266,"author":{"gitId":"bhnuka"},"content":"  * Pros: Fast, allows for as many copies of a person as the user desires","lastModifiedDate":"2023-10-23"},{"lineNumber":267,"author":{"gitId":"bhnuka"},"content":"  * Cons: Will be difficult to keep track of contacts, defeating the purpose of FAPro as a comprehensive yet focused contact organiserr","lastModifiedDate":"2023-10-23"},{"lineNumber":268,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":269,"author":{"gitId":"bhnuka"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2023-10-23"},{"lineNumber":270,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":271,"author":{"gitId":"glenngnng"},"content":"### Undo feature","lastModifiedDate":"2023-10-27"},{"lineNumber":272,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":273,"author":{"gitId":"glenngnng"},"content":"#### Implementation","lastModifiedDate":"2023-10-27"},{"lineNumber":274,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":275,"author":{"gitId":"glenngnng"},"content":"The `undo` feature undoes the most recent undoable command. The only undoable commands available are: `add`, `clone`, `edit`,","lastModifiedDate":"2023-10-27"},{"lineNumber":276,"author":{"gitId":"glenngnng"},"content":"`delete`, \u0026 `clear`. Commands that do not modify the address book, such as `list`, `find`, `sort` etc. are not ","lastModifiedDate":"2023-10-27"},{"lineNumber":277,"author":{"gitId":"glenngnng"},"content":"undoable commands.","lastModifiedDate":"2023-10-27"},{"lineNumber":278,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":279,"author":{"gitId":"glenngnng"},"content":"The undo mechanism is facilitated by the use of `ArrayLists` in `ModelManager` to store deleted persons, edited persons, ","lastModifiedDate":"2023-10-27"},{"lineNumber":280,"author":{"gitId":"glenngnng"},"content":"as well as the previous undoable commands. As such `ArrayLists` are instantiated every time the user starts the ","lastModifiedDate":"2023-10-27"},{"lineNumber":281,"author":{"gitId":"glenngnng"},"content":"program, undo does not store the commands from previous sessions and cannot undo changes made in previous sessions.","lastModifiedDate":"2023-10-27"},{"lineNumber":282,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":283,"author":{"gitId":"glenngnng"},"content":"The undo mechanism also changes the implementation of all the undoable commands. For all undoable commands, when they ","lastModifiedDate":"2023-10-27"},{"lineNumber":284,"author":{"gitId":"glenngnng"},"content":"are invoked, `ModelManager` will be called to store each command in an `ArrayList` named `previousUndoableCommands`. ","lastModifiedDate":"2023-10-27"},{"lineNumber":285,"author":{"gitId":"glenngnng"},"content":"Furthermore, for the `delete` and `clear` commands, each deleted person will be stored in an `ArrayList` named ","lastModifiedDate":"2023-10-27"},{"lineNumber":286,"author":{"gitId":"glenngnng"},"content":"`deletedPersons`. For the `edit` command, a `pair` of the original `person` and the edited `person` will be stored in an ","lastModifiedDate":"2023-10-27"},{"lineNumber":287,"author":{"gitId":"glenngnng"},"content":"`ArrayList` named `editedPersons`. ","lastModifiedDate":"2023-10-27"},{"lineNumber":288,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":289,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":290,"author":{"gitId":"glenngnng"},"content":"Additionally, it implements a single `execute` command which determines which type of undo operation to do based on the ","lastModifiedDate":"2023-10-27"},{"lineNumber":291,"author":{"gitId":"glenngnng"},"content":"most recent previous undoable command. The other undo operations are:","lastModifiedDate":"2023-10-27"},{"lineNumber":292,"author":{"gitId":"glenngnng"},"content":"* `UndoCommand#executeUndoDelete(Model)`","lastModifiedDate":"2023-10-27"},{"lineNumber":293,"author":{"gitId":"glenngnng"},"content":"* `UndoCommand#executeUndoClear(Model)`","lastModifiedDate":"2023-10-27"},{"lineNumber":294,"author":{"gitId":"glenngnng"},"content":"* `UndoCommand#executeUndoAdd(Model)`","lastModifiedDate":"2023-10-27"},{"lineNumber":295,"author":{"gitId":"glenngnng"},"content":"* `UndoCommand#executeUndoEdit(Model)`","lastModifiedDate":"2023-10-27"},{"lineNumber":296,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":297,"author":{"gitId":"glenngnng"},"content":"These operations make use of other operations exposed in the `Model` interface, which are:","lastModifiedDate":"2023-10-27"},{"lineNumber":298,"author":{"gitId":"glenngnng"},"content":"* `Model#storeDeletedPerson(Person)`","lastModifiedDate":"2023-10-27"},{"lineNumber":299,"author":{"gitId":"glenngnng"},"content":"* `Model#getDeletedPerson()`","lastModifiedDate":"2023-10-27"},{"lineNumber":300,"author":{"gitId":"glenngnng"},"content":"* `Model#removeDeletedPerson()`","lastModifiedDate":"2023-10-27"},{"lineNumber":301,"author":{"gitId":"glenngnng"},"content":"* `Model#getDeletedPersonsSize()`","lastModifiedDate":"2023-10-27"},{"lineNumber":302,"author":{"gitId":"glenngnng"},"content":"* `Model#getPreviousUndoableCommandsSize()`","lastModifiedDate":"2023-10-27"},{"lineNumber":303,"author":{"gitId":"glenngnng"},"content":"* `Model#getNumberOfPreviousDeleteCommands()`","lastModifiedDate":"2023-10-27"},{"lineNumber":304,"author":{"gitId":"glenngnng"},"content":"* `Model#undoDelete()`","lastModifiedDate":"2023-10-27"},{"lineNumber":305,"author":{"gitId":"glenngnng"},"content":"* `Model#storePreviousUndoableCommand(String)`","lastModifiedDate":"2023-10-27"},{"lineNumber":306,"author":{"gitId":"glenngnng"},"content":"* `Model#getPreviousUndoableCommand()`","lastModifiedDate":"2023-10-27"},{"lineNumber":307,"author":{"gitId":"glenngnng"},"content":"* `Model#removePreviousUndoableCommand()`","lastModifiedDate":"2023-10-27"},{"lineNumber":308,"author":{"gitId":"glenngnng"},"content":"* `Model#getAddressBookSize()`","lastModifiedDate":"2023-10-27"},{"lineNumber":309,"author":{"gitId":"glenngnng"},"content":"* `Model#storeEditedPersonsPair(Person, Person)`","lastModifiedDate":"2023-10-27"},{"lineNumber":310,"author":{"gitId":"glenngnng"},"content":"* `Model#getEditedPersonsPair()`","lastModifiedDate":"2023-10-27"},{"lineNumber":311,"author":{"gitId":"glenngnng"},"content":"* `Model#removeEditedPersonsPair()`","lastModifiedDate":"2023-10-27"},{"lineNumber":312,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":313,"author":{"gitId":"glenngnng"},"content":"Given below is an example usage scenario and how the undo mechanism behaves at each step.","lastModifiedDate":"2023-10-27"},{"lineNumber":314,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":315,"author":{"gitId":"glenngnng"},"content":"Step 1. The user launches the application for the first time. The `ArrayList`s `previousUndoableCommands`, ","lastModifiedDate":"2023-10-27"},{"lineNumber":316,"author":{"gitId":"glenngnng"},"content":"`deletedPersons`, and `editedPersons` are initialized as a blank `ArrayList`.","lastModifiedDate":"2023-10-27"},{"lineNumber":317,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":318,"author":{"gitId":"glenngnng"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls ","lastModifiedDate":"2023-10-27"},{"lineNumber":319,"author":{"gitId":"glenngnng"},"content":"`Model#storePreviousUndoableCommand(String)`, adding the command as a String into `previousUndoableCommands`, and also ","lastModifiedDate":"2023-10-27"},{"lineNumber":320,"author":{"gitId":"glenngnng"},"content":"calls `Model#storeDeletedPerson(Person)`, adding the Person into `deletedPersons`.","lastModifiedDate":"2023-10-27"},{"lineNumber":321,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":322,"author":{"gitId":"glenngnng"},"content":":information_source: **Note:** If an undoable command fails its execution, it will not call ","lastModifiedDate":"2023-10-27"},{"lineNumber":323,"author":{"gitId":"glenngnng"},"content":"`Model#storePreviousUndoableCommand(String)` so nothing is stored in `previousUndoableCommands`, and `ModelManager` ","lastModifiedDate":"2023-10-27"},{"lineNumber":324,"author":{"gitId":"glenngnng"},"content":"is unchanged.","lastModifiedDate":"2023-10-27"},{"lineNumber":325,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":326,"author":{"gitId":"glenngnng"},"content":"Step 3. The user now decides that deleting the person was a mistake, and decides to undo that action by executing ","lastModifiedDate":"2023-10-27"},{"lineNumber":327,"author":{"gitId":"glenngnng"},"content":"the `undo` command. The `undo` command will call `model#getPreviousUndoableCommand`, which gets the most recent ","lastModifiedDate":"2023-10-27"},{"lineNumber":328,"author":{"gitId":"glenngnng"},"content":"undoable command executed by the user. In this case, it is the `delete` command. Hence, `UndoCommand#executeUndoAdd","lastModifiedDate":"2023-10-27"},{"lineNumber":329,"author":{"gitId":"glenngnng"},"content":"(model)` is called, which adds back the deleted `Person` to the address book. ","lastModifiedDate":"2023-10-27"},{"lineNumber":330,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":331,"author":{"gitId":"glenngnng"},"content":"In the process, `Model#removePreviousUndoableCommand` is called, removing the delete command (as a String) from the  ","lastModifiedDate":"2023-10-27"},{"lineNumber":332,"author":{"gitId":"glenngnng"},"content":"`ArrayList` `previousUndoableCommands`.","lastModifiedDate":"2023-10-27"},{"lineNumber":333,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":334,"author":{"gitId":"glenngnng"},"content":"The following sequence diagram shows how the `undo` operation and (mainly) `executeUndoAdd` operation works.","lastModifiedDate":"2023-10-27"},{"lineNumber":335,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":336,"author":{"gitId":"glenngnng"},"content":"Step 4. The user now decides to execute the command `list`. As this command is not an undoable command, ","lastModifiedDate":"2023-10-27"},{"lineNumber":337,"author":{"gitId":"glenngnng"},"content":"`Model#storePreviousUndoableCommand(String)` and other storing operations are not called, so `ModelManager` remains ","lastModifiedDate":"2023-10-27"},{"lineNumber":338,"author":{"gitId":"glenngnng"},"content":"unchanged.","lastModifiedDate":"2023-10-27"},{"lineNumber":339,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":340,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":341,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":342,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"limzhenwy"},"content":"### Find by address feature","lastModifiedDate":"2023-10-26"},{"lineNumber":347,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":348,"author":{"gitId":"limzhenwy"},"content":"#### Implementation","lastModifiedDate":"2023-10-26"},{"lineNumber":349,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":350,"author":{"gitId":"limzhenwy"},"content":"The find by address/find_add feature filters the list of contacts in the address book based on their address.","lastModifiedDate":"2023-10-26"},{"lineNumber":351,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":352,"author":{"gitId":"limzhenwy"},"content":"Given below is an example usage scenario and how the find_add feature works.","lastModifiedDate":"2023-10-26"},{"lineNumber":353,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":354,"author":{"gitId":"limzhenwy"},"content":"Step 1. The financial adviser wants to find out all their clients living in Serangoon so that they can ","lastModifiedDate":"2023-10-26"},{"lineNumber":355,"author":{"gitId":"limzhenwy"},"content":"        line up client appointments efficiently.","lastModifiedDate":"2023-10-26"},{"lineNumber":356,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":357,"author":{"gitId":"limzhenwy"},"content":"Step 2. The financial adviser enters `find_add Serangoon` into the command box and presses enter.","lastModifiedDate":"2023-10-26"},{"lineNumber":358,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":359,"author":{"gitId":"limzhenwy"},"content":"Step 3. A list of all contacts who have `Serangoon` in their address is listed.","lastModifiedDate":"2023-10-26"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":361,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":366,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":367,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":368,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":369,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":383,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"bhnuka"},"content":"* financial advisors","lastModifiedDate":"2023-10-02"},{"lineNumber":385,"author":{"gitId":"bhnuka"},"content":"* has a need for sorting clients by schedule","lastModifiedDate":"2023-10-02"},{"lineNumber":386,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":387,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":388,"author":{"gitId":"bhnuka"},"content":"**Value proposition**:","lastModifiedDate":"2023-10-02"},{"lineNumber":389,"author":{"gitId":"bhnuka"},"content":"FApro seeks to improve the quality of life of financial advisors (FAs). It allows FAs to keep track of large numbers of contacts. It allows FAs to have a one-stop platform to manage their contacts and conduct financial analytics while providing a big-picture view of their clientele as a whole.","lastModifiedDate":"2023-10-02"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"| Priority | As a …​                          | I want to …​                          | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"Daphne789"},"content":"|----------|----------------------------------|---------------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2023-10-27"},{"lineNumber":399,"author":{"gitId":"limzhenwy"},"content":"| `* * *`  | user                             | add a new person                      | add entries that I need                                                |","lastModifiedDate":"2023-10-02"},{"lineNumber":400,"author":{"gitId":"-"},"content":"| `* * *`  | user                             | delete a person                       | remove entries that I no longer need                                   |","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"| `* * *`  | user                             | find a person by name                 | locate details of persons without having to go through the entire list |","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"limzhenwy"},"content":"| `* * *`  | financial advisor                | find a person by address              | line-up all my client meetings efficiently                             |","lastModifiedDate":"2023-10-26"},{"lineNumber":403,"author":{"gitId":"limzhenwy"},"content":"| `* * *`  | financial advisor                | find all contacts by appointment date | see what appointments I have for that date                             |","lastModifiedDate":"2023-10-26"},{"lineNumber":404,"author":{"gitId":"limzhenwy"},"content":"| `* * *`  | financial advisor                | edit contact details of clients       | client details are up to date                                          |","lastModifiedDate":"2023-10-26"},{"lineNumber":405,"author":{"gitId":"Daphne789"},"content":"| `* * *`  | financial advisor                | be able to view the help page         | quickly troubleshoot and learn how to operate the program              |","lastModifiedDate":"2023-10-27"},{"lineNumber":406,"author":{"gitId":"bhnuka"},"content":"| `* *`    | lazy financial advisor           | be able to clone a person             | I can easily replicate contacts that are similar                       |","lastModifiedDate":"2023-10-23"},{"lineNumber":407,"author":{"gitId":"syamfarh"},"content":"| `* *`    | financial advisor                | be able to sort clients contact list  | easier to find client contact that I am looking for                    |","lastModifiedDate":"2023-10-26"},{"lineNumber":408,"author":{"gitId":"bhnuka"},"content":"| `* *`    | clumsy financial advisor         | be able to undo commands done previously such as delete, clear, edit, add    | undo my mistakes made with a simple command, rather than having to do multiple commands  | ","lastModifiedDate":"2023-10-27"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"Daphne789"},"content":"(For all use cases below, the **System** is the `FAPro` and the **Actor** is the `Financial Advisor`, unless specified otherwise)","lastModifiedDate":"2023-10-03"},{"lineNumber":415,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":416,"author":{"gitId":"Daphne789"},"content":"**Use case: Add a person**","lastModifiedDate":"2023-10-03"},{"lineNumber":417,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":418,"author":{"gitId":"Daphne789"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":419,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":420,"author":{"gitId":"Daphne789"},"content":"1.  Financial Advisor requests to list persons","lastModifiedDate":"2023-10-03"},{"lineNumber":421,"author":{"gitId":"Daphne789"},"content":"2.  FAPro shows a list of persons","lastModifiedDate":"2023-10-03"},{"lineNumber":422,"author":{"gitId":"Daphne789"},"content":"3.  Financial Advisor requests to add a new person","lastModifiedDate":"2023-10-03"},{"lineNumber":423,"author":{"gitId":"Daphne789"},"content":"4.  FAPro adds the person to the address book based on the specified parameter (name, address, phone number, email address, occupation, and tag)","lastModifiedDate":"2023-10-03"},{"lineNumber":424,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":425,"author":{"gitId":"Daphne789"},"content":"    Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":426,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":427,"author":{"gitId":"Daphne789"},"content":"**Extensions**","lastModifiedDate":"2023-10-03"},{"lineNumber":428,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":429,"author":{"gitId":"Daphne789"},"content":"* 3a. The parameter is provided in an invalid format.","lastModifiedDate":"2023-10-03"},{"lineNumber":430,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":431,"author":{"gitId":"Daphne789"},"content":"    * 3a1. FAPro shows an error message: \"Invalid command format!\"","lastModifiedDate":"2023-10-03"},{"lineNumber":432,"author":{"gitId":"Daphne789"},"content":"  ","lastModifiedDate":"2023-10-03"},{"lineNumber":433,"author":{"gitId":"Daphne789"},"content":"        Use case resumes at step 2.","lastModifiedDate":"2023-10-03"},{"lineNumber":434,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":435,"author":{"gitId":"Daphne789"},"content":"* 3b. The parameter is specified multiple times.","lastModifiedDate":"2023-10-03"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":437,"author":{"gitId":"Daphne789"},"content":"    * 3b1. FAPro shows an error message: \"The parameter can only be specified once!\"","lastModifiedDate":"2023-10-03"},{"lineNumber":438,"author":{"gitId":"Daphne789"},"content":"  ","lastModifiedDate":"2023-10-03"},{"lineNumber":439,"author":{"gitId":"Daphne789"},"content":"        Use case resumes at step 2.","lastModifiedDate":"2023-10-03"},{"lineNumber":440,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":441,"author":{"gitId":"Daphne789"},"content":"* 3c. The person\u0027s name is the same as the existing name in the address book.","lastModifiedDate":"2023-10-03"},{"lineNumber":442,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":443,"author":{"gitId":"Daphne789"},"content":"    * 3c1. FAPro shows an error message: \"This person already exists in the address book\"","lastModifiedDate":"2023-10-03"},{"lineNumber":444,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":445,"author":{"gitId":"Daphne789"},"content":"        Use case resumes at step 2.","lastModifiedDate":"2023-10-03"},{"lineNumber":446,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":447,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"Daphne789"},"content":"1.  Financial Advisor requests to list persons","lastModifiedDate":"2023-10-03"},{"lineNumber":453,"author":{"gitId":"Daphne789"},"content":"2.  FAPro shows a list of persons","lastModifiedDate":"2023-10-03"},{"lineNumber":454,"author":{"gitId":"Daphne789"},"content":"3.  Financial Advisor requests to delete a specific person in the list","lastModifiedDate":"2023-10-03"},{"lineNumber":455,"author":{"gitId":"Daphne789"},"content":"4.  FAPro deletes the person","lastModifiedDate":"2023-10-03"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"Daphne789"},"content":"    * 3a1. FAPro shows an error message:  “Sorry, that value is not accepted! Please specify the index of the person you would like to delete! It should be non-negative and within the address book!”","lastModifiedDate":"2023-10-03"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"        Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":472,"author":{"gitId":"bhnuka"},"content":"**Use case: Clone a person**","lastModifiedDate":"2023-10-23"},{"lineNumber":473,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":474,"author":{"gitId":"bhnuka"},"content":"**MSS**","lastModifiedDate":"2023-10-23"},{"lineNumber":475,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":476,"author":{"gitId":"bhnuka"},"content":"1.  Financial Advisor requests to list persons","lastModifiedDate":"2023-10-23"},{"lineNumber":477,"author":{"gitId":"bhnuka"},"content":"2.  FAPro shows a list of persons","lastModifiedDate":"2023-10-23"},{"lineNumber":478,"author":{"gitId":"bhnuka"},"content":"3.  Financial Advisor requests to clone a specific person in the list","lastModifiedDate":"2023-10-23"},{"lineNumber":479,"author":{"gitId":"bhnuka"},"content":"4.  FAPro clones the person","lastModifiedDate":"2023-10-23"},{"lineNumber":480,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":481,"author":{"gitId":"bhnuka"},"content":"    Use case ends.","lastModifiedDate":"2023-10-23"},{"lineNumber":482,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":483,"author":{"gitId":"bhnuka"},"content":"**Extensions**","lastModifiedDate":"2023-10-23"},{"lineNumber":484,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":485,"author":{"gitId":"limzhenwy"},"content":"* 1a. The parameter is provided in an invalid format.","lastModifiedDate":"2023-10-26"},{"lineNumber":486,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":487,"author":{"gitId":"limzhenwy"},"content":"    * 1a1. FAPro shows an error message: \"Invalid command format!\", along with instructions on how to","lastModifiedDate":"2023-10-26"},{"lineNumber":488,"author":{"gitId":"limzhenwy"},"content":"      properly use the command.","lastModifiedDate":"2023-10-26"},{"lineNumber":489,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":490,"author":{"gitId":"bhnuka"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-10-23"},{"lineNumber":491,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":492,"author":{"gitId":"bhnuka"},"content":"    * 3a1. FAPro shows an error message:  “Sorry, that value is not accepted! Please specify the index of the person you would like to clone! It should be non-negative and within the address book!”","lastModifiedDate":"2023-10-23"},{"lineNumber":493,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":494,"author":{"gitId":"bhnuka"},"content":"        Use case resumes at step 2.","lastModifiedDate":"2023-10-23"},{"lineNumber":495,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":496,"author":{"gitId":"bhnuka"},"content":"* 3b. The given person has already been cloned.","lastModifiedDate":"2023-10-23"},{"lineNumber":497,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":498,"author":{"gitId":"bhnuka"},"content":"    * 3b1. FAPro shows an error message:  “A clone of this person already exists. To clone again, please edit the previous clone first or alternatively, clone the previous clone.\"","lastModifiedDate":"2023-10-23"},{"lineNumber":499,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":500,"author":{"gitId":"bhnuka"},"content":"        Use case resumes at step 2.","lastModifiedDate":"2023-10-23"},{"lineNumber":501,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":502,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":503,"author":{"gitId":"limzhenwy"},"content":"**Use case: Find a person**","lastModifiedDate":"2023-10-26"},{"lineNumber":504,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":505,"author":{"gitId":"Daphne789"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":506,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":507,"author":{"gitId":"limzhenwy"},"content":"1.  Financial Advisor requests to find person(s) using a specific input","lastModifiedDate":"2023-10-26"},{"lineNumber":508,"author":{"gitId":"limzhenwy"},"content":"2.  FAPro shows a list of person(s) who fits the search input","lastModifiedDate":"2023-10-26"},{"lineNumber":509,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":510,"author":{"gitId":"Daphne789"},"content":"    Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":511,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":512,"author":{"gitId":"Daphne789"},"content":"**Extensions**","lastModifiedDate":"2023-10-03"},{"lineNumber":513,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":514,"author":{"gitId":"limzhenwy"},"content":"* 1a. The parameter is provided in an invalid format.","lastModifiedDate":"2023-10-26"},{"lineNumber":515,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":516,"author":{"gitId":"limzhenwy"},"content":"    * 1a1. FAPro shows an error message: \"Invalid command format!\", along with instructions on how to","lastModifiedDate":"2023-10-26"},{"lineNumber":517,"author":{"gitId":"limzhenwy"},"content":"      properly use the command.","lastModifiedDate":"2023-10-26"},{"lineNumber":518,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":519,"author":{"gitId":"limzhenwy"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-10-26"},{"lineNumber":520,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":521,"author":{"gitId":"limzhenwy"},"content":"* 2a. The list is empty because no contacts exist with the search input.","lastModifiedDate":"2023-10-26"},{"lineNumber":522,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":523,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2023-10-26"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":525,"author":{"gitId":"Daphne789"},"content":"**Use case: Edit a person**","lastModifiedDate":"2023-10-03"},{"lineNumber":526,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":527,"author":{"gitId":"Daphne789"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":528,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":529,"author":{"gitId":"Daphne789"},"content":"1.  Financial Advisor requests to list persons","lastModifiedDate":"2023-10-03"},{"lineNumber":530,"author":{"gitId":"Daphne789"},"content":"2.  FAPro shows a list of persons","lastModifiedDate":"2023-10-03"},{"lineNumber":531,"author":{"gitId":"Daphne789"},"content":"3.  Financial Advisor requests to edit specified parameter of a specific person in the list","lastModifiedDate":"2023-10-03"},{"lineNumber":532,"author":{"gitId":"Daphne789"},"content":"4.  FAPro edits the specified parameter (name, address, phone number, email address, occupation, and tag) of a person","lastModifiedDate":"2023-10-03"},{"lineNumber":533,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":534,"author":{"gitId":"Daphne789"},"content":"    Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":535,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":536,"author":{"gitId":"Daphne789"},"content":"**Extensions**","lastModifiedDate":"2023-10-03"},{"lineNumber":537,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":538,"author":{"gitId":"Daphne789"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-10-03"},{"lineNumber":539,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":540,"author":{"gitId":"Daphne789"},"content":"    Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":541,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":542,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-10-03"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":544,"author":{"gitId":"Daphne789"},"content":"    * 3a1. FAPro shows an error message: \"Invalid command format!\"","lastModifiedDate":"2023-10-03"},{"lineNumber":545,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":546,"author":{"gitId":"Daphne789"},"content":"        Use case resumes at step 2.","lastModifiedDate":"2023-10-03"},{"lineNumber":547,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":548,"author":{"gitId":"Daphne789"},"content":"* 3b. The parameter is provided in an invalid format.","lastModifiedDate":"2023-10-03"},{"lineNumber":549,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":550,"author":{"gitId":"Daphne789"},"content":"    * 3b1. FAPro shows an error message: \"Invalid command format!\"","lastModifiedDate":"2023-10-03"},{"lineNumber":551,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":552,"author":{"gitId":"Daphne789"},"content":"        Use case resumes at step 2.","lastModifiedDate":"2023-10-03"},{"lineNumber":553,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":554,"author":{"gitId":"Daphne789"},"content":"* 3c. The parameter is specified multiple times.","lastModifiedDate":"2023-10-03"},{"lineNumber":555,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":556,"author":{"gitId":"Daphne789"},"content":"    * 3c1. FAPro shows an error message: \"The parameter can only be specified once.\"","lastModifiedDate":"2023-10-03"},{"lineNumber":557,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":558,"author":{"gitId":"Daphne789"},"content":"        Use case resumes at step 2.","lastModifiedDate":"2023-10-03"},{"lineNumber":559,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":560,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":561,"author":{"gitId":"Daphne789"},"content":"**Use case: Viewing help**","lastModifiedDate":"2023-10-27"},{"lineNumber":562,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":563,"author":{"gitId":"Daphne789"},"content":"Preconditions:","lastModifiedDate":"2023-10-27"},{"lineNumber":564,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":565,"author":{"gitId":"Daphne789"},"content":"* The user has opened FAPro.","lastModifiedDate":"2023-10-27"},{"lineNumber":566,"author":{"gitId":"Daphne789"},"content":"* The user is on the main application interface.","lastModifiedDate":"2023-10-27"},{"lineNumber":567,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":568,"author":{"gitId":"Daphne789"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":569,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":570,"author":{"gitId":"Daphne789"},"content":"1.  Financial Advisor requests viewing help.","lastModifiedDate":"2023-10-27"},{"lineNumber":571,"author":{"gitId":"Daphne789"},"content":"2.  FAPro shows a help window.","lastModifiedDate":"2023-10-27"},{"lineNumber":572,"author":{"gitId":"Daphne789"},"content":"3.  Financial Advisor views a list of all the main commands and a link to FAPro\u0027s ","lastModifiedDate":"2023-10-27"},{"lineNumber":573,"author":{"gitId":"Daphne789"},"content":"    user guide.","lastModifiedDate":"2023-10-27"},{"lineNumber":574,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":575,"author":{"gitId":"Daphne789"},"content":"    Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":576,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":577,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":578,"author":{"gitId":"syamfarh"},"content":"**Use case: Sort contact list**","lastModifiedDate":"2023-10-26"},{"lineNumber":579,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":580,"author":{"gitId":"syamfarh"},"content":"**MSS**","lastModifiedDate":"2023-10-26"},{"lineNumber":581,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":582,"author":{"gitId":"syamfarh"},"content":"1.  Financial Advisor requests to list persons","lastModifiedDate":"2023-10-26"},{"lineNumber":583,"author":{"gitId":"syamfarh"},"content":"2.  FAPro shows a list of persons ","lastModifiedDate":"2023-10-26"},{"lineNumber":584,"author":{"gitId":"syamfarh"},"content":"3.  Financial Advisor requests to sort contacts by a parameter","lastModifiedDate":"2023-10-26"},{"lineNumber":585,"author":{"gitId":"syamfarh"},"content":"4.  FAPro shows a sorted list","lastModifiedDate":"2023-10-26"},{"lineNumber":586,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":587,"author":{"gitId":"syamfarh"},"content":"    Use case ends.","lastModifiedDate":"2023-10-26"},{"lineNumber":588,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":589,"author":{"gitId":"syamfarh"},"content":"**Extensions**","lastModifiedDate":"2023-10-26"},{"lineNumber":590,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":591,"author":{"gitId":"syamfarh"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-10-26"},{"lineNumber":592,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":593,"author":{"gitId":"syamfarh"},"content":"  Use case ends.","lastModifiedDate":"2023-10-26"},{"lineNumber":594,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":595,"author":{"gitId":"syamfarh"},"content":"* 3a. The parameter provided is invalid.","lastModifiedDate":"2023-10-26"},{"lineNumber":596,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":597,"author":{"gitId":"syamfarh"},"content":"    * 3b1. FAPro shows an error message: \"Invalid command format!\"","lastModifiedDate":"2023-10-26"},{"lineNumber":598,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":599,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-26"},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":601,"author":{"gitId":"syamfarh"},"content":"* 3b. The parameter is specified multiple times.","lastModifiedDate":"2023-10-26"},{"lineNumber":602,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":603,"author":{"gitId":"syamfarh"},"content":"    * 3c1. FAPro shows an error message: \"The parameter can only be specified once.\"","lastModifiedDate":"2023-10-26"},{"lineNumber":604,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":605,"author":{"gitId":"syamfarh"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-26"},{"lineNumber":606,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":611,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"glenngnng"},"content":"4. The app should be responsive, with a maximum response time of 2 seconds for common user actions like searching for contacts or adding new ones.","lastModifiedDate":"2023-10-03"},{"lineNumber":613,"author":{"gitId":"glenngnng"},"content":"5. The user interface should be intuitive enough for users who are not IT-savvy.","lastModifiedDate":"2023-10-03"},{"lineNumber":614,"author":{"gitId":"glenngnng"},"content":"6. There should be user authentication and authorization mechanisms to ensure only authorized users can access and ","lastModifiedDate":"2023-10-03"},{"lineNumber":615,"author":{"gitId":"glenngnng"},"content":"    modify data.","lastModifiedDate":"2023-10-03"},{"lineNumber":616,"author":{"gitId":"glenngnng"},"content":"7. The app should not be required to handle the direct contacting of persons.","lastModifiedDate":"2023-10-03"},{"lineNumber":617,"author":{"gitId":"glenngnng"},"content":"8. Should have regular backups of user data and a reliable mechanism for data recovery.","lastModifiedDate":"2023-10-03"},{"lineNumber":618,"author":{"gitId":"glenngnng"},"content":"9. Should have easy-to-read and detailed User \u0026 Developer Guides.","lastModifiedDate":"2023-10-03"},{"lineNumber":619,"author":{"gitId":"glenngnng"},"content":"10. Codebase should be structured using singular coding standard and style.","lastModifiedDate":"2023-10-03"},{"lineNumber":620,"author":{"gitId":"glenngnng"},"content":"11. Testing should be implemented for easier maintenance.","lastModifiedDate":"2023-10-03"},{"lineNumber":621,"author":{"gitId":"glenngnng"},"content":"12. The app should be designed to handle unexpected input and edge cases gracefully, without crashing the system.","lastModifiedDate":"2023-10-03"},{"lineNumber":622,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":623,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":624,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":625,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":626,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":628,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":631,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":632,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":633,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":634,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":635,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":636,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":637,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":638,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":639,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":640,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":641,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":642,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":643,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":644,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":645,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":646,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":647,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":648,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":649,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":650,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":651,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":652,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":653,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":654,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":655,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":656,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":657,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":658,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":659,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":660,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":661,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":662,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":663,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":664,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":665,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":666,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":667,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":668,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":669,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":670,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":671,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":672,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":673,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":674,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":675,"author":{"gitId":"bhnuka"},"content":"### Cloning a person","lastModifiedDate":"2023-10-23"},{"lineNumber":676,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":677,"author":{"gitId":"bhnuka"},"content":"1. Cloning a person whohas not been cloned while all persons are being shown","lastModifiedDate":"2023-10-23"},{"lineNumber":678,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":679,"author":{"gitId":"bhnuka"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2023-10-23"},{"lineNumber":680,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":681,"author":{"gitId":"bhnuka"},"content":"   1. Test case: `clone 1`\u003cbr\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":682,"author":{"gitId":"bhnuka"},"content":"      Expected: First contact is cloned from the list. Details of the cloned contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2023-10-23"},{"lineNumber":683,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":684,"author":{"gitId":"bhnuka"},"content":"   1. Test case: `clone 0`\u003cbr\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":685,"author":{"gitId":"bhnuka"},"content":"      Expected: No person is cloned. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2023-10-23"},{"lineNumber":686,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":687,"author":{"gitId":"bhnuka"},"content":"   1. Other incorrect clone commands to try: `clone`, `clone x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":688,"author":{"gitId":"bhnuka"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2023-10-23"},{"lineNumber":689,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":690,"author":{"gitId":"bhnuka"},"content":"2. Cloning a person who has already been cloned while all persons are being shown","lastModifiedDate":"2023-10-23"},{"lineNumber":691,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":692,"author":{"gitId":"bhnuka"},"content":"   2. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2023-10-23"},{"lineNumber":693,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":694,"author":{"gitId":"bhnuka"},"content":"   2. Test case: `clone 1`\u003cbr\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":695,"author":{"gitId":"bhnuka"},"content":"      Expected: First contact has already been cloned. Error message is returned.","lastModifiedDate":"2023-10-23"},{"lineNumber":696,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":697,"author":{"gitId":"bhnuka"},"content":"3. Cloning a clone while all persons are being shown","lastModifiedDate":"2023-10-23"},{"lineNumber":698,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":699,"author":{"gitId":"bhnuka"},"content":"   2. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2023-10-23"},{"lineNumber":700,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":701,"author":{"gitId":"bhnuka"},"content":"   2. Test case: `clone 1`\u003cbr\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":702,"author":{"gitId":"bhnuka"},"content":"      Expected: The clone is cloned from the list and the number next to its name it incremented. Details of the cloned contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2023-10-23"},{"lineNumber":703,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":704,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":705,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":706,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":707,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":708,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":709,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":710,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":711,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"glenngnng":81,"limzhenwy":30,"Daphne789":103,"bhnuka":99,"syamfarh":26,"-":372}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"bhnuka"},"content":"FApro seeks to improve the quality of life of financial advisors (FAs). It allows FAs to **keep track of large numbers of contacts**. It allows FAs to have a one-stop platform to manage their contacts and conduct financial analytics while providing a big-picture view of their clientele as a whole.","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"limzhenwy"},"content":"1. Download the latest `fapro.jar` from [here](https://github.com/AY2324S1-CS2103T-W09-1/tp/releases).","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"bhnuka"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for FAPro","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"limzhenwy"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar fapro.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"bhnuka"},"content":"  * `add n/John Doe p/98765432 e/johnd@example.com o/Barber a/John Street, Block 123, #01-01` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"limzhenwy"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user\u003cbr\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"limzhenwy"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"limzhenwy"},"content":"* Items in square brackets are optional\u003cbr\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"limzhenwy"},"content":"  e.g. `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"limzhenwy"},"content":"* Items with `…`​ after them can be used multiple times including zero times\u003cbr\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"limzhenwy"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"limzhenwy"},"content":"* Parameters can be in any order\u003cbr\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"limzhenwy"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"limzhenwy"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored\u003cbr\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"bhnuka"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":63,"author":{"gitId":"bhnuka"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"Daphne789"},"content":"### Viewing help: `help`","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"limzhenwy"},"content":"Shows a message listing all the main commands and explaining how to access the user guide.","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"limzhenwy"},"content":"#### Format: ","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"limzhenwy"},"content":"* `help`","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"Daphne789"},"content":"![help format](images/helpFormat.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"Daphne789"},"content":"#### Precise expected outcome on success:","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"Daphne789"},"content":"* Message shown to the user:","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"Daphne789"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"Daphne789"},"content":"Opened help window.","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"Daphne789"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"Daphne789"},"content":"* A pop-up window lists all the main commands and displays a link to FAPro\u0027s user guide","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"Daphne789"},"content":"![help window](images/helpWindow.png)","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"Daphne789"},"content":"### Viewing risk assessment questionnaire: `questionnaire`","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"limzhenwy"},"content":"Displays questions that are used for generating client risk profile levels.","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"limzhenwy"},"content":"#### Format: ","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"limzhenwy"},"content":"* `questionnaire`","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"Daphne789"},"content":"![questionnaire format](images/questionnaireFormat.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"Daphne789"},"content":"#### Precise expected outcome on success:","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"Daphne789"},"content":"* Message shown to the user:","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"Daphne789"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"Daphne789"},"content":"Opened questionnaire window.","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"Daphne789"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"Daphne789"},"content":"* A pop-up window shows the risk assessment multiple choice questions, including the grading and risk profile categories criteria","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"Daphne789"},"content":"![questionnaire window](images/questionnaireWindow.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":101,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":102,"author":{"gitId":"Daphne789"},"content":"### Adds risk profile level to a contact:`riskprofile`","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"limzhenwy"},"content":"Generates the client risk profile level based on their response of risk assessment questionnaire provided in Questionnaire tab and adds it to their contact.","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"Daphne789"},"content":"#### Format:","lastModifiedDate":"2023-11-02"},{"lineNumber":107,"author":{"gitId":"Daphne789"},"content":"* `riskprofile INDEX res/RESULT`","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"Daphne789"},"content":"#### Example commands:","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"Daphne789"},"content":"* `riskprofile 3 res/a,b,c,d,e,e,b,c`","lastModifiedDate":"2023-11-02"},{"lineNumber":111,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":112,"author":{"gitId":"Daphne789"},"content":"![riskprofile format](images/riskProfileFormat.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":113,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"Daphne789"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"Daphne789"},"content":"This command can also be used to update the client risk profile","lastModifiedDate":"2023-11-02"},{"lineNumber":116,"author":{"gitId":"Daphne789"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":117,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":118,"author":{"gitId":"Daphne789"},"content":"#### Acceptable values for each parameter:","lastModifiedDate":"2023-11-02"},{"lineNumber":119,"author":{"gitId":"Daphne789"},"content":"* INDEX: Only accept positive integers less than the size of the contacts displayed","lastModifiedDate":"2023-11-02"},{"lineNumber":120,"author":{"gitId":"Daphne789"},"content":"* RESULT: Valid result format, 8 comma-separated characters from \u0027a\u0027 - \u0027e\u0027 (e,b,a,c,b,b,a,e)","lastModifiedDate":"2023-11-02"},{"lineNumber":121,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":122,"author":{"gitId":"Daphne789"},"content":"#### Precise expected outcome on success:","lastModifiedDate":"2023-11-02"},{"lineNumber":123,"author":{"gitId":"Daphne789"},"content":"* Message shown to the user:","lastModifiedDate":"2023-11-02"},{"lineNumber":124,"author":{"gitId":"Daphne789"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":125,"author":{"gitId":"Daphne789"},"content":"Added risk profile to Person: X","lastModifiedDate":"2023-11-02"},{"lineNumber":126,"author":{"gitId":"Daphne789"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":127,"author":{"gitId":"Daphne789"},"content":"where X are the details of the person edited","lastModifiedDate":"2023-11-02"},{"lineNumber":128,"author":{"gitId":"Daphne789"},"content":"* A risk profile label with a specified color will be added to the contact which has 5 categories:","lastModifiedDate":"2023-11-02"},{"lineNumber":129,"author":{"gitId":"Daphne789"},"content":"  \u003cspan style\u003d\"background-color:#4CAF50; color:white;\"\u003e**Low**\u003c/span\u003e,","lastModifiedDate":"2023-11-02"},{"lineNumber":130,"author":{"gitId":"limzhenwy"},"content":"  \u003cspan style\u003d\"background-color:#2196F3; color:white;\"\u003e**Moderately Low**\u003c/span\u003e,","lastModifiedDate":"2023-11-02"},{"lineNumber":131,"author":{"gitId":"Daphne789"},"content":"  \u003cspan style\u003d\"background-color:#FFC107; color:white;\"\u003e**Moderate**\u003c/span\u003e,","lastModifiedDate":"2023-11-02"},{"lineNumber":132,"author":{"gitId":"Daphne789"},"content":"  \u003cspan style\u003d\"background-color:#FF6600; color:white;\"\u003e**Moderately High**\u003c/span\u003e,","lastModifiedDate":"2023-11-02"},{"lineNumber":133,"author":{"gitId":"Daphne789"},"content":"  \u003cspan style\u003d\"background-color:#F44336; color:white;\"\u003e**High**\u003c/span\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":134,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":135,"author":{"gitId":"Daphne789"},"content":"![riskprofile result](images/riskProfileResult.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":136,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":137,"author":{"gitId":"Daphne789"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":138,"author":{"gitId":"Daphne789"},"content":":warning: **Warning:**","lastModifiedDate":"2023-11-02"},{"lineNumber":139,"author":{"gitId":"Daphne789"},"content":"Once the risk profile label is added to the contact, it cannot be removed","lastModifiedDate":"2023-11-02"},{"lineNumber":140,"author":{"gitId":"Daphne789"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":141,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":142,"author":{"gitId":"Daphne789"},"content":"#### Precise expected outputs on failure:","lastModifiedDate":"2023-11-02"},{"lineNumber":143,"author":{"gitId":"Daphne789"},"content":"If the RESULT is empty","lastModifiedDate":"2023-11-02"},{"lineNumber":144,"author":{"gitId":"Daphne789"},"content":"* Error message shown to the user:","lastModifiedDate":"2023-11-02"},{"lineNumber":145,"author":{"gitId":"Daphne789"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":146,"author":{"gitId":"Daphne789"},"content":"Invalid command format! ","lastModifiedDate":"2023-11-02"},{"lineNumber":147,"author":{"gitId":"Daphne789"},"content":"riskprofile: Adds the risk profile of the person identified by the index number used in the last person listing. ","lastModifiedDate":"2023-11-02"},{"lineNumber":148,"author":{"gitId":"Daphne789"},"content":"Existing risk profile will be overwritten by the input.","lastModifiedDate":"2023-11-02"},{"lineNumber":149,"author":{"gitId":"Daphne789"},"content":"Parameters: INDEX (must be a positive integer) res/[RESULT]","lastModifiedDate":"2023-11-02"},{"lineNumber":150,"author":{"gitId":"Daphne789"},"content":"Example: riskprofile 1 res/a,e,b,d,c,a,d,e","lastModifiedDate":"2023-11-02"},{"lineNumber":151,"author":{"gitId":"Daphne789"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":152,"author":{"gitId":"Daphne789"},"content":"![invalid risk profile 1](images/invalidRiskProfile1.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":153,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":154,"author":{"gitId":"Daphne789"},"content":"If the RESULT is not separated by commas or not in the range of \u0027a\u0027 - \u0027e\u0027","lastModifiedDate":"2023-11-02"},{"lineNumber":155,"author":{"gitId":"Daphne789"},"content":"* Error message shown to the user:","lastModifiedDate":"2023-11-02"},{"lineNumber":156,"author":{"gitId":"Daphne789"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":157,"author":{"gitId":"Daphne789"},"content":"Result must have 8 comma-separated characters from \u0027a\u0027 to \u0027e\u0027!","lastModifiedDate":"2023-11-02"},{"lineNumber":158,"author":{"gitId":"Daphne789"},"content":"riskprofile: Adds the risk profile of the person identified by the index number used in the last person listing. ","lastModifiedDate":"2023-11-02"},{"lineNumber":159,"author":{"gitId":"Daphne789"},"content":"Existing risk profile will be overwritten by the input.","lastModifiedDate":"2023-11-02"},{"lineNumber":160,"author":{"gitId":"Daphne789"},"content":"Parameters: INDEX (must be a positive integer) res/[RESULT]","lastModifiedDate":"2023-11-02"},{"lineNumber":161,"author":{"gitId":"Daphne789"},"content":"Example: riskprofile 1 res/a,e,b,d,c,a,d,e","lastModifiedDate":"2023-11-02"},{"lineNumber":162,"author":{"gitId":"Daphne789"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":163,"author":{"gitId":"Daphne789"},"content":"![invalid risk profile 2](images/invalidRiskProfile2.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":165,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"bhnuka"},"content":"Adds a new entry to their address book for financial advisors, including personal details such as name, address, occupation, phone number and email.","lastModifiedDate":"2023-10-02"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"bhnuka"},"content":"#### Format:","lastModifiedDate":"2023-10-31"},{"lineNumber":170,"author":{"gitId":"limzhenwy"},"content":"* `add n/NAME p/PHONE_NUMBER e/EMAIL o/OCCUPATION a/ADDRESS [t/TAG] [appt/APPOINTMENT_DATE]`","lastModifiedDate":"2023-11-02"},{"lineNumber":171,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":172,"author":{"gitId":"bhnuka"},"content":"#### Example commands:","lastModifiedDate":"2023-10-31"},{"lineNumber":173,"author":{"gitId":"bhnuka"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com o/Barber a/John Street, Block 123, #01-01 appt/12-12-2023 08:30`","lastModifiedDate":"2023-11-01"},{"lineNumber":174,"author":{"gitId":"bhnuka"},"content":"* `add n/Betsy Crowe t/Friend e/betsycrowe@example.com o/Entrepreneur a/Newgate Prison p/1234567`","lastModifiedDate":"2023-11-02"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":176,"author":{"gitId":"bhnuka"},"content":"#### Acceptable values for each parameter:","lastModifiedDate":"2023-10-31"},{"lineNumber":177,"author":{"gitId":"limzhenwy"},"content":"* NAME: Valid string name","lastModifiedDate":"2023-11-02"},{"lineNumber":178,"author":{"gitId":"limzhenwy"},"content":"* ADDRESS: Valid string address (8 College Ave West)","lastModifiedDate":"2023-11-02"},{"lineNumber":179,"author":{"gitId":"limzhenwy"},"content":"* PHONE NUMBER: Valid string (Numbers only) (81234567)","lastModifiedDate":"2023-11-02"},{"lineNumber":180,"author":{"gitId":"limzhenwy"},"content":"* EMAIL ADDRESS: Valid string and email address format (johnd@example.com)","lastModifiedDate":"2023-11-02"},{"lineNumber":181,"author":{"gitId":"limzhenwy"},"content":"* OCCUPATION: Valid string occupation","lastModifiedDate":"2023-11-02"},{"lineNumber":182,"author":{"gitId":"limzhenwy"},"content":"* TAG: Valid string","lastModifiedDate":"2023-11-02"},{"lineNumber":183,"author":{"gitId":"limzhenwy"},"content":"* APPOINTMENT DATE: Only accepted in yyyy-mm-dd HH:mm, mm/dd/yyyy HH:mm or dd-mm-yyyy HH:mm format","lastModifiedDate":"2023-11-02"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"syamfarh"},"content":"![add format](images/addformat.png)","lastModifiedDate":"2023-11-01"},{"lineNumber":190,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":191,"author":{"gitId":"bhnuka"},"content":"#### Precise expected outputs on success:","lastModifiedDate":"2023-10-31"},{"lineNumber":192,"author":{"gitId":"bhnuka"},"content":"* Message shown to the user:","lastModifiedDate":"2023-11-02"},{"lineNumber":193,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":194,"author":{"gitId":"bhnuka"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":195,"author":{"gitId":"bhnuka"},"content":"New Person added: X","lastModifiedDate":"2023-11-02"},{"lineNumber":196,"author":{"gitId":"bhnuka"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":197,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":198,"author":{"gitId":"bhnuka"},"content":"where X are the details of the person added","lastModifiedDate":"2023-11-02"},{"lineNumber":199,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":200,"author":{"gitId":"limzhenwy"},"content":"* For example, for Robert Johnson (the example command), it would be:\u003cbr\u003e `New person added: Robert Johnson; Phone: 55512345; Email: robertj@email.com; Occupation: Hairdresser; Address: 789 Oak Street, Suite 10; AppointmentDate: ; Tags: `\u003cbr\u003e Please note that both Appointment Date and Tags are empty as they are not necessary for adding a person","lastModifiedDate":"2023-11-02"},{"lineNumber":201,"author":{"gitId":"bhnuka"},"content":"* The new entry is displayed in the address book GUI","lastModifiedDate":"2023-11-02"},{"lineNumber":202,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":203,"author":{"gitId":"syamfarh"},"content":"![add format](images/addresult.png)","lastModifiedDate":"2023-11-01"},{"lineNumber":204,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":205,"author":{"gitId":"bhnuka"},"content":"#### Precise expected outputs on failure:","lastModifiedDate":"2023-10-31"},{"lineNumber":206,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":207,"author":{"gitId":"limzhenwy"},"content":"If a required parameter is missing (e.g., NAME, EMAIL), an error message should specify which parameter is missing.","lastModifiedDate":"2023-11-02"},{"lineNumber":208,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":209,"author":{"gitId":"bhnuka"},"content":"* Error message shown to the user:","lastModifiedDate":"2023-11-02"},{"lineNumber":210,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":211,"author":{"gitId":"bhnuka"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":212,"author":{"gitId":"bhnuka"},"content":"Invalid command format! add: Adds a person to the address book. Parameters: n/NAME p/PHONE e/EMAIL a/ADDRESS [t/TAG]... Example: add n/John Doe p/98765432 e/johnd@example.com a/311, Clementi Ave 2, #02-25 t/friends t/owesMoney","lastModifiedDate":"2023-11-01"},{"lineNumber":213,"author":{"gitId":"bhnuka"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":214,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":215,"author":{"gitId":"syamfarh"},"content":"![add format](images/addmissingparam.png)","lastModifiedDate":"2023-11-01"},{"lineNumber":216,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":217,"author":{"gitId":"bhnuka"},"content":"If a parameter is provided in an invalid format (e.g., an invalid email address), an error message should indicate the invalid format.","lastModifiedDate":"2023-10-31"},{"lineNumber":218,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":219,"author":{"gitId":"bhnuka"},"content":"* Error message shown to the user:","lastModifiedDate":"2023-11-02"},{"lineNumber":220,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":221,"author":{"gitId":"bhnuka"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":222,"author":{"gitId":"bhnuka"},"content":"Emails should be of the format local-part@domain and adhere to the following constraints:","lastModifiedDate":"2023-11-01"},{"lineNumber":223,"author":{"gitId":"bhnuka"},"content":"1. The local-part should only contain alphanumeric characters and these special characters, excluding the parentheses, (+_.-). The local-part may not start or end with any special characters.","lastModifiedDate":"2023-11-01"},{"lineNumber":224,"author":{"gitId":"bhnuka"},"content":"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels separated by periods.","lastModifiedDate":"2023-11-01"},{"lineNumber":225,"author":{"gitId":"bhnuka"},"content":"The domain name must:","lastModifiedDate":"2023-11-01"},{"lineNumber":226,"author":{"gitId":"bhnuka"},"content":"    - end with a domain label at least 2 characters long","lastModifiedDate":"2023-11-01"},{"lineNumber":227,"author":{"gitId":"bhnuka"},"content":"    - have each domain label start and end with alphanumeric characters","lastModifiedDate":"2023-11-01"},{"lineNumber":228,"author":{"gitId":"bhnuka"},"content":"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.","lastModifiedDate":"2023-11-01"},{"lineNumber":229,"author":{"gitId":"bhnuka"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":230,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":231,"author":{"gitId":"bhnuka"},"content":"![add format](images/addinvalidemail.png)","lastModifiedDate":"2023-11-01"},{"lineNumber":232,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":233,"author":{"gitId":"bhnuka"},"content":"If a parameter is specified multiple times (e.g., --name John --name Doe), an error should indicate that the parameter can only be specified once.","lastModifiedDate":"2023-10-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"bhnuka"},"content":"* Error message shown to the user:","lastModifiedDate":"2023-11-02"},{"lineNumber":236,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":237,"author":{"gitId":"bhnuka"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":238,"author":{"gitId":"bhnuka"},"content":"Multiple values specified for the following single-valued field(s): n/","lastModifiedDate":"2023-11-01"},{"lineNumber":239,"author":{"gitId":"bhnuka"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"bhnuka"},"content":"![add format](images/addduplicateparam.png)","lastModifiedDate":"2023-11-01"},{"lineNumber":242,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":243,"author":{"gitId":"bhnuka"},"content":"### Cloning a person : `clone`","lastModifiedDate":"2023-10-23"},{"lineNumber":244,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":245,"author":{"gitId":"bhnuka"},"content":"Clones a contact from FAPro at the specified index.","lastModifiedDate":"2023-10-23"},{"lineNumber":246,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":247,"author":{"gitId":"bhnuka"},"content":"#### Format:","lastModifiedDate":"2023-10-31"},{"lineNumber":248,"author":{"gitId":"limzhenwy"},"content":"* `clone INDEX`","lastModifiedDate":"2023-11-02"},{"lineNumber":249,"author":{"gitId":"bhnuka"},"content":"* Clones the person at the specified `INDEX`","lastModifiedDate":"2023-10-31"},{"lineNumber":250,"author":{"gitId":"bhnuka"},"content":"* The index refers to the index number shown in the displayed person list","lastModifiedDate":"2023-10-31"},{"lineNumber":251,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":252,"author":{"gitId":"bhnuka"},"content":"#### Example commands:","lastModifiedDate":"2023-10-31"},{"lineNumber":253,"author":{"gitId":"limzhenwy"},"content":"After cloning, the clone is the exact same as the original, other than a suffix either being attached at the end of their name or, if a suffix is already present, the suffix at the end of their name is incremented","lastModifiedDate":"2023-11-02"},{"lineNumber":254,"author":{"gitId":"bhnuka"},"content":"* `list` followed by `clone 2` clones the 2nd person in the address book","lastModifiedDate":"2023-10-31"},{"lineNumber":255,"author":{"gitId":"bhnuka"},"content":"* `find Betsy` followed by `clone 1` clones the 1st person in the results of the `find` command","lastModifiedDate":"2023-10-31"},{"lineNumber":256,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":257,"author":{"gitId":"limzhenwy"},"content":"#### Acceptable values for each parameter:","lastModifiedDate":"2023-11-02"},{"lineNumber":258,"author":{"gitId":"limzhenwy"},"content":"* INDEX: Only accept **non-negative** int values that are less than the size of the address book. Must have at least one","lastModifiedDate":"2023-11-02"},{"lineNumber":259,"author":{"gitId":"limzhenwy"},"content":"* PERSON: If the person being cloned has a suffix at the end, the suffix cannot be 0 or 2147483647 (MAX_INT)","lastModifiedDate":"2023-11-02"},{"lineNumber":260,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":261,"author":{"gitId":"syamfarh"},"content":"![clone format](images/cloneformat.png)","lastModifiedDate":"2023-11-01"},{"lineNumber":262,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":263,"author":{"gitId":"bhnuka"},"content":"#### Precise expected outputs on success:","lastModifiedDate":"2023-10-31"},{"lineNumber":264,"author":{"gitId":"bhnuka"},"content":"* Message shown to the user:","lastModifiedDate":"2023-11-02"},{"lineNumber":265,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":266,"author":{"gitId":"bhnuka"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":267,"author":{"gitId":"bhnuka"},"content":"Cloned Person: X","lastModifiedDate":"2023-11-02"},{"lineNumber":268,"author":{"gitId":"bhnuka"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":269,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":270,"author":{"gitId":"bhnuka"},"content":"where X are the details of the person the clone is based off","lastModifiedDate":"2023-11-02"},{"lineNumber":271,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":272,"author":{"gitId":"bhnuka"},"content":"* For example, if","lastModifiedDate":"2023-10-26"},{"lineNumber":273,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":274,"author":{"gitId":"bhnuka"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":275,"author":{"gitId":"bhnuka"},"content":"Name: John Doe; Phone: 98765432; Email: johnd@example.com; Occupation: Barber; Address: Hougang Avenue 1; AppointmentDate: 2024-02-02; Tags:","lastModifiedDate":"2023-11-01"},{"lineNumber":276,"author":{"gitId":"bhnuka"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":277,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":278,"author":{"gitId":"bhnuka"},"content":"is the person being cloned, then the output is:","lastModifiedDate":"2023-11-01"},{"lineNumber":279,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":280,"author":{"gitId":"bhnuka"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":281,"author":{"gitId":"bhnuka"},"content":"Cloned Person: John Doe; Phone: 98765432; Email: johnd@example.com; Occupation: Barber; Address: Hougang Avenue 1; AppointmentDate: 2024-02-02; Tags:","lastModifiedDate":"2023-11-01"},{"lineNumber":282,"author":{"gitId":"bhnuka"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":283,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":284,"author":{"gitId":"syamfarh"},"content":"![clone format](images/cloneresult.png)","lastModifiedDate":"2023-11-01"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":286,"author":{"gitId":"bhnuka"},"content":"#### Precise expected outputs on failure:","lastModifiedDate":"2023-10-31"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":288,"author":{"gitId":"bhnuka"},"content":"If no index, 0 or a negative index is entered next to the clone command","lastModifiedDate":"2023-11-01"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":290,"author":{"gitId":"bhnuka"},"content":"* Error message shown to the user:","lastModifiedDate":"2023-11-02"},{"lineNumber":291,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":292,"author":{"gitId":"bhnuka"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":293,"author":{"gitId":"bhnuka"},"content":"Invalid command format! clone: Clones the person identified by the index number used in the displayed person list. Parameters: INDEX (must be a positive integer).","lastModifiedDate":"2023-11-01"},{"lineNumber":294,"author":{"gitId":"bhnuka"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":295,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":296,"author":{"gitId":"syamfarh"},"content":"![clone format](images/cloneinvalidindex.png)","lastModifiedDate":"2023-11-01"},{"lineNumber":297,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":298,"author":{"gitId":"bhnuka"},"content":"If the index entered is greater than the current number of contacts in the address book","lastModifiedDate":"2023-11-01"},{"lineNumber":299,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":300,"author":{"gitId":"bhnuka"},"content":"* Error message shown to the user:","lastModifiedDate":"2023-11-02"},{"lineNumber":301,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":302,"author":{"gitId":"bhnuka"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":303,"author":{"gitId":"bhnuka"},"content":"The person index provided is invalid.","lastModifiedDate":"2023-11-01"},{"lineNumber":304,"author":{"gitId":"bhnuka"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":305,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":306,"author":{"gitId":"syamfarh"},"content":"![clone format](images/clonelargeindex.png)","lastModifiedDate":"2023-11-01"},{"lineNumber":307,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":308,"author":{"gitId":"bhnuka"},"content":"If the suffix of the person being cloned is either 0 or 2147483647 (MAX_INT)","lastModifiedDate":"2023-11-01"},{"lineNumber":309,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":310,"author":{"gitId":"bhnuka"},"content":"* Error message shown to the user:","lastModifiedDate":"2023-11-02"},{"lineNumber":311,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":312,"author":{"gitId":"bhnuka"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":313,"author":{"gitId":"bhnuka"},"content":"The integer suffix of the person being cloned is out of range. Please note that the smallest possible suffix that a person can have is 1 and the largest possible suffix that a person can have is 2147483647. As such, if your suffix is 0 or 2147483647, please consider editing the names of your contacts first.","lastModifiedDate":"2023-11-01"},{"lineNumber":314,"author":{"gitId":"bhnuka"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":315,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":316,"author":{"gitId":"bhnuka"},"content":"![clone format](images/clonesuffixerror.png)","lastModifiedDate":"2023-11-01"},{"lineNumber":317,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":318,"author":{"gitId":"limzhenwy"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2023-10-27"},{"lineNumber":319,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":320,"author":{"gitId":"bhnuka"},"content":"Deletes a contact from FAPro at the specified indexes.","lastModifiedDate":"2023-10-28"},{"lineNumber":321,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":322,"author":{"gitId":"limzhenwy"},"content":"#### Format: ","lastModifiedDate":"2023-11-02"},{"lineNumber":323,"author":{"gitId":"limzhenwy"},"content":"* `delete INDEX [MORE INDEXES]`","lastModifiedDate":"2023-11-02"},{"lineNumber":324,"author":{"gitId":"limzhenwy"},"content":"* Deletes the person at `INDEX` (and the persons at other specified INDEXES)","lastModifiedDate":"2023-11-02"},{"lineNumber":325,"author":{"gitId":"bhnuka"},"content":"* The index refers to the index number shown in the displayed person list","lastModifiedDate":"2023-10-31"},{"lineNumber":326,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":327,"author":{"gitId":"limzhenwy"},"content":"#### Acceptable values for each parameter:","lastModifiedDate":"2023-11-02"},{"lineNumber":328,"author":{"gitId":"limzhenwy"},"content":"* INDEX: **Must be positive integers** (i.e 1 2 3 etc.) (less than the size of the contact list in FAPro), must have a space in between and no commas (i.e delete 1,2,3 is invalid)","lastModifiedDate":"2023-11-02"},{"lineNumber":329,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":330,"author":{"gitId":"limzhenwy"},"content":"#### Example commands:","lastModifiedDate":"2023-11-02"},{"lineNumber":331,"author":{"gitId":"bhnuka"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the address book","lastModifiedDate":"2023-10-31"},{"lineNumber":332,"author":{"gitId":"bhnuka"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command","lastModifiedDate":"2023-10-31"},{"lineNumber":333,"author":{"gitId":"bhnuka"},"content":"* `list` followed by `delete 2 5` deletes the 2nd and 5th person in the address book","lastModifiedDate":"2023-10-31"},{"lineNumber":334,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":335,"author":{"gitId":"syamfarh"},"content":"![delete format](images/delete-UG/deleteformat.png)","lastModifiedDate":"2023-11-01"},{"lineNumber":336,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":337,"author":{"gitId":"bhnuka"},"content":"#### Precise expected outputs on success:","lastModifiedDate":"2023-10-31"},{"lineNumber":338,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":339,"author":{"gitId":"bhnuka"},"content":"* Message shown to the user:","lastModifiedDate":"2023-11-02"},{"lineNumber":340,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":341,"author":{"gitId":"bhnuka"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":342,"author":{"gitId":"bhnuka"},"content":"Deleted Person(s): X","lastModifiedDate":"2023-11-02"},{"lineNumber":343,"author":{"gitId":"bhnuka"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":344,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":345,"author":{"gitId":"bhnuka"},"content":"where X are the details of the deleted persons","lastModifiedDate":"2023-11-02"},{"lineNumber":346,"author":{"gitId":"bhnuka"},"content":"* Size of address book is reduced by however many indexes were entered (i.e if you entered delete 2 3 4, as you entered 3 indexes, the size of the address book decreases by 3) ","lastModifiedDate":"2023-11-02"},{"lineNumber":347,"author":{"gitId":"bhnuka"},"content":"* GUI reflects that deleted contacts are now no longer there","lastModifiedDate":"2023-10-31"},{"lineNumber":348,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":349,"author":{"gitId":"limzhenwy"},"content":"![delete format](images/delete-UG/deleteafter.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":350,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":351,"author":{"gitId":"bhnuka"},"content":"#### Precise expected outputs on failure:","lastModifiedDate":"2023-10-31"},{"lineNumber":352,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":353,"author":{"gitId":"bhnuka"},"content":"If any of the entered indexes are invalid:","lastModifiedDate":"2023-10-31"},{"lineNumber":354,"author":{"gitId":"bhnuka"},"content":"* Error message shown to the user:","lastModifiedDate":"2023-10-28"},{"lineNumber":355,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":356,"author":{"gitId":"bhnuka"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":357,"author":{"gitId":"bhnuka"},"content":"The person index provided is invalid.","lastModifiedDate":"2023-11-02"},{"lineNumber":358,"author":{"gitId":"bhnuka"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":359,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":360,"author":{"gitId":"bhnuka"},"content":"![edit format](images/delete-UG/deletewrongindex.png)","lastModifiedDate":"2023-10-28"},{"lineNumber":361,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":362,"author":{"gitId":"bhnuka"},"content":"If no index is placed after the delete command:","lastModifiedDate":"2023-11-01"},{"lineNumber":363,"author":{"gitId":"bhnuka"},"content":"* Error message shown to the user:","lastModifiedDate":"2023-11-02"},{"lineNumber":364,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":365,"author":{"gitId":"bhnuka"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":366,"author":{"gitId":"bhnuka"},"content":"Invalid command format! ","lastModifiedDate":"2023-11-01"},{"lineNumber":367,"author":{"gitId":"bhnuka"},"content":"delete: Deletes the person(s) identified by the index number used in the displayed person list. ","lastModifiedDate":"2023-11-01"},{"lineNumber":368,"author":{"gitId":"bhnuka"},"content":"Parameters: INDEXES (must be positive integers, separated by spaces)","lastModifiedDate":"2023-11-01"},{"lineNumber":369,"author":{"gitId":"bhnuka"},"content":"Example: delete 1 3 5\"","lastModifiedDate":"2023-11-01"},{"lineNumber":370,"author":{"gitId":"bhnuka"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":371,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":372,"author":{"gitId":"bhnuka"},"content":"![delete format](images/delete-UG/deletenoindex.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":373,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":374,"author":{"gitId":"limzhenwy"},"content":"### List out all contacts : `list`","lastModifiedDate":"2023-10-27"},{"lineNumber":375,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":376,"author":{"gitId":"limzhenwy"},"content":"Shows a list of all contacts.","lastModifiedDate":"2023-11-02"},{"lineNumber":377,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":378,"author":{"gitId":"Daphne789"},"content":"#### Format: ","lastModifiedDate":"2023-11-02"},{"lineNumber":379,"author":{"gitId":"Daphne789"},"content":"* `list`","lastModifiedDate":"2023-11-02"},{"lineNumber":380,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":381,"author":{"gitId":"Daphne789"},"content":"![list format](images/listFormat.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":382,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":383,"author":{"gitId":"Daphne789"},"content":"#### Precise expected outputs on success:","lastModifiedDate":"2023-11-02"},{"lineNumber":384,"author":{"gitId":"Daphne789"},"content":"* Message shown to the user:","lastModifiedDate":"2023-11-02"},{"lineNumber":385,"author":{"gitId":"Daphne789"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":386,"author":{"gitId":"Daphne789"},"content":"Listed all persons","lastModifiedDate":"2023-11-02"},{"lineNumber":387,"author":{"gitId":"Daphne789"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":388,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":389,"author":{"gitId":"Daphne789"},"content":"* List all contacts with their details","lastModifiedDate":"2023-11-02"},{"lineNumber":390,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":391,"author":{"gitId":"Daphne789"},"content":"![list result](images/listResult.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":393,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2023-10-27"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":395,"author":{"gitId":"limzhenwy"},"content":"Edits an existing client\u0027s parameter in FAPro.","lastModifiedDate":"2023-10-27"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":397,"author":{"gitId":"limzhenwy"},"content":"#### Format:","lastModifiedDate":"2023-11-02"},{"lineNumber":398,"author":{"gitId":"syamfarh"},"content":"* `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [o/OCCUPATION] [appt/APPOINTMENTDATE] [a/ADDRESS] [t/TAG]…`","lastModifiedDate":"2023-11-03"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":400,"author":{"gitId":"limzhenwy"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …","lastModifiedDate":"2023-11-02"},{"lineNumber":401,"author":{"gitId":"limzhenwy"},"content":"* At least one of the optional fields must be provided","lastModifiedDate":"2023-11-02"},{"lineNumber":402,"author":{"gitId":"limzhenwy"},"content":"* Existing values will be updated to the input values","lastModifiedDate":"2023-11-02"},{"lineNumber":403,"author":{"gitId":"limzhenwy"},"content":"* When editing tags, the existing tags of the person will be removed i.e. adding of tags is not cumulative","lastModifiedDate":"2023-11-02"},{"lineNumber":404,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2023-10-27"},{"lineNumber":405,"author":{"gitId":"limzhenwy"},"content":"  specifying any tags after it","lastModifiedDate":"2023-11-02"},{"lineNumber":406,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":407,"author":{"gitId":"limzhenwy"},"content":"#### Acceptable values for each parameter:","lastModifiedDate":"2023-11-02"},{"lineNumber":408,"author":{"gitId":"limzhenwy"},"content":"* Refer to `add` command","lastModifiedDate":"2023-11-02"},{"lineNumber":409,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":410,"author":{"gitId":"limzhenwy"},"content":"#### Example commands:","lastModifiedDate":"2023-11-02"},{"lineNumber":411,"author":{"gitId":"limzhenwy"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively","lastModifiedDate":"2023-11-02"},{"lineNumber":412,"author":{"gitId":"limzhenwy"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags","lastModifiedDate":"2023-11-02"},{"lineNumber":413,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":414,"author":{"gitId":"syamfarh"},"content":"![edit format](images/edit-UG/editformat.png)","lastModifiedDate":"2023-11-03"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":416,"author":{"gitId":"syamfarh"},"content":"#### Precise expected outputs on success:","lastModifiedDate":"2023-11-03"},{"lineNumber":417,"author":{"gitId":"limzhenwy"},"content":"* Message shown to the user:","lastModifiedDate":"2023-11-02"},{"lineNumber":418,"author":{"gitId":"limzhenwy"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":419,"author":{"gitId":"limzhenwy"},"content":"Edited Person:[NAME], Phone Number:[PHONE_NUMBER], Email:[EMAIL], Occupation:[OCCUPATION], Address:[ADDRESS]…","lastModifiedDate":"2023-11-02"},{"lineNumber":420,"author":{"gitId":"limzhenwy"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":421,"author":{"gitId":"limzhenwy"},"content":"* The new entry is displayed in the address book GUI.","lastModifiedDate":"2023-10-27"},{"lineNumber":422,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":423,"author":{"gitId":"syamfarh"},"content":"![edit format](images/edit-UG/editresult.png)","lastModifiedDate":"2023-11-03"},{"lineNumber":424,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":425,"author":{"gitId":"syamfarh"},"content":"#### Precise expected outputs on failure:","lastModifiedDate":"2023-11-03"},{"lineNumber":426,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":427,"author":{"gitId":"syamfarh"},"content":"If a required parameter is missing (e.g., name, email), an error message should specify which parameter is missing.","lastModifiedDate":"2023-11-03"},{"lineNumber":428,"author":{"gitId":"syamfarh"},"content":"* Message shown to the user:","lastModifiedDate":"2023-11-03"},{"lineNumber":429,"author":{"gitId":"limzhenwy"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":430,"author":{"gitId":"syamfarh"},"content":"Invalid command format! ","lastModifiedDate":"2023-11-03"},{"lineNumber":431,"author":{"gitId":"syamfarh"},"content":"edit: Edits the details of the person identified by the index number used in the displayed person list. Existing values will be overwritten by the input values.","lastModifiedDate":"2023-11-03"},{"lineNumber":432,"author":{"gitId":"syamfarh"},"content":"Parameters: INDEX (must be a positive integer) [n/NAME] [p/PHONE] [e/EMAIL] [o/OCCUPATION] [a/ADDRESS] [appt/APPOINTMENTDATE] [t/TAG]...","lastModifiedDate":"2023-11-03"},{"lineNumber":433,"author":{"gitId":"syamfarh"},"content":"Example: edit 1 p/91234567 e/johndoe@example.com","lastModifiedDate":"2023-11-03"},{"lineNumber":434,"author":{"gitId":"limzhenwy"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":435,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":436,"author":{"gitId":"syamfarh"},"content":"![edit format](images/edit-UG/editfailure.png)","lastModifiedDate":"2023-11-03"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":438,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"limzhenwy"},"content":"Finds persons based on the given keywords.","lastModifiedDate":"2023-11-01"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"limzhenwy"},"content":"#### Format: ","lastModifiedDate":"2023-11-01"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"limzhenwy"},"content":"* `find n/NAME [MORE NAMES]`","lastModifiedDate":"2023-11-01"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"limzhenwy"},"content":"* `find a/ADDRESS [MORE ADDRESSES]` ","lastModifiedDate":"2023-11-01"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":448,"author":{"gitId":"limzhenwy"},"content":"* `find appt/APPOINTMENT DATE`","lastModifiedDate":"2023-11-01"},{"lineNumber":449,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":450,"author":{"gitId":"limzhenwy"},"content":"#### Example commands:","lastModifiedDate":"2023-11-01"},{"lineNumber":451,"author":{"gitId":"limzhenwy"},"content":"* `find n/John Alice`, finds all contacts whose names include \"John\" and \"Alice\"","lastModifiedDate":"2023-11-02"},{"lineNumber":452,"author":{"gitId":"limzhenwy"},"content":"* `find a/Tokyo Geylang`, finds all contacts whose address include \"Tokyo\" and \"Geylang\"","lastModifiedDate":"2023-11-02"},{"lineNumber":453,"author":{"gitId":"limzhenwy"},"content":"* `find appt/2024-01-01`, finds all contacts whose appointment date matches \"2024-01-01\"","lastModifiedDate":"2023-11-02"},{"lineNumber":454,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":455,"author":{"gitId":"limzhenwy"},"content":"#### Acceptable values for each parameter:","lastModifiedDate":"2023-11-01"},{"lineNumber":456,"author":{"gitId":"limzhenwy"},"content":"* NAME: Valid string name","lastModifiedDate":"2023-11-02"},{"lineNumber":457,"author":{"gitId":"limzhenwy"},"content":"* ADDRESS: Valid string address","lastModifiedDate":"2023-11-02"},{"lineNumber":458,"author":{"gitId":"limzhenwy"},"content":"* APPOINTMENT DATE: Valid dates (after current date), in the format of `yyyy-mm-dd`","lastModifiedDate":"2023-11-02"},{"lineNumber":459,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":460,"author":{"gitId":"limzhenwy"},"content":"#### _Name_","lastModifiedDate":"2023-11-02"},{"lineNumber":461,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":462,"author":{"gitId":"limzhenwy"},"content":"![find_name format](images/find_n0.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":463,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":464,"author":{"gitId":"limzhenwy"},"content":"#### Precise expected outputs on success:","lastModifiedDate":"2023-11-01"},{"lineNumber":465,"author":{"gitId":"limzhenwy"},"content":"* Message shown to the user: ","lastModifiedDate":"2023-11-02"},{"lineNumber":466,"author":{"gitId":"limzhenwy"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":467,"author":{"gitId":"limzhenwy"},"content":"X persons listed!","lastModifiedDate":"2023-11-02"},{"lineNumber":468,"author":{"gitId":"limzhenwy"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":469,"author":{"gitId":"limzhenwy"},"content":"where X is the number of contacts listed","lastModifiedDate":"2023-11-02"},{"lineNumber":470,"author":{"gitId":"limzhenwy"},"content":"* The list of contacts whose names contain the input name is shown","lastModifiedDate":"2023-11-02"},{"lineNumber":471,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":472,"author":{"gitId":"limzhenwy"},"content":"![find_name format](images/find_n1.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":473,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":474,"author":{"gitId":"limzhenwy"},"content":"#### Precise expected outputs on failure:","lastModifiedDate":"2023-11-02"},{"lineNumber":475,"author":{"gitId":"limzhenwy"},"content":"If no name is input after the find command, an error message explaining the error will be shown, ","lastModifiedDate":"2023-11-01"},{"lineNumber":476,"author":{"gitId":"limzhenwy"},"content":"reminding the user to follow the correct input format","lastModifiedDate":"2023-11-02"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":478,"author":{"gitId":"limzhenwy"},"content":"* Error message shown to the user:","lastModifiedDate":"2023-11-02"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"limzhenwy"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":481,"author":{"gitId":"limzhenwy"},"content":"Invalid command format! find n/: Finds all persons whose names contain any of the specified keywords (case-insensitive) and displays them as a list with index numbers.","lastModifiedDate":"2023-11-01"},{"lineNumber":482,"author":{"gitId":"limzhenwy"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":484,"author":{"gitId":"limzhenwy"},"content":"![find_name format](images/find_n2.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":486,"author":{"gitId":"limzhenwy"},"content":"#### _Address_","lastModifiedDate":"2023-11-02"},{"lineNumber":487,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":488,"author":{"gitId":"limzhenwy"},"content":"![find_add format](images/find_a0.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":489,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":490,"author":{"gitId":"limzhenwy"},"content":"#### Precise expected outputs on success:","lastModifiedDate":"2023-11-02"},{"lineNumber":491,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":492,"author":{"gitId":"limzhenwy"},"content":"* Message shown to the user:","lastModifiedDate":"2023-11-02"},{"lineNumber":493,"author":{"gitId":"limzhenwy"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":494,"author":{"gitId":"limzhenwy"},"content":"X persons listed!","lastModifiedDate":"2023-11-02"},{"lineNumber":495,"author":{"gitId":"limzhenwy"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":496,"author":{"gitId":"limzhenwy"},"content":"where X is the number of contacts listed","lastModifiedDate":"2023-11-02"},{"lineNumber":497,"author":{"gitId":"limzhenwy"},"content":"* The list of contacts whose address contain the input address is shown","lastModifiedDate":"2023-11-02"},{"lineNumber":498,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":499,"author":{"gitId":"limzhenwy"},"content":"![find_add format](images/find_a1.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":500,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":501,"author":{"gitId":"limzhenwy"},"content":"#### Precise expected outputs on failure:","lastModifiedDate":"2023-11-02"},{"lineNumber":502,"author":{"gitId":"limzhenwy"},"content":"If no address is input after the find command, an error message explaining the error will be shown,","lastModifiedDate":"2023-11-02"},{"lineNumber":503,"author":{"gitId":"limzhenwy"},"content":"reminding the user to follow the correct input format","lastModifiedDate":"2023-11-02"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"limzhenwy"},"content":"* Error message shown to the user:","lastModifiedDate":"2023-11-02"},{"lineNumber":506,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":507,"author":{"gitId":"limzhenwy"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":508,"author":{"gitId":"limzhenwy"},"content":"Invalid command format! find a/: Finds all persons whose address contain any of the specified keywords (case-insensitive) and displays them as a list with index numbers.","lastModifiedDate":"2023-11-02"},{"lineNumber":509,"author":{"gitId":"limzhenwy"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":510,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":511,"author":{"gitId":"limzhenwy"},"content":"![find_add format](images/find_a2.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":512,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":513,"author":{"gitId":"limzhenwy"},"content":"#### _Appointment Date_","lastModifiedDate":"2023-11-02"},{"lineNumber":514,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":515,"author":{"gitId":"limzhenwy"},"content":"![find_appt format](images/find_appt0.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":516,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":517,"author":{"gitId":"limzhenwy"},"content":"#### Precise expected outputs on success:","lastModifiedDate":"2023-11-02"},{"lineNumber":518,"author":{"gitId":"limzhenwy"},"content":"* Message shown to the user:","lastModifiedDate":"2023-11-02"},{"lineNumber":519,"author":{"gitId":"limzhenwy"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":520,"author":{"gitId":"limzhenwy"},"content":"X persons listed!","lastModifiedDate":"2023-11-02"},{"lineNumber":521,"author":{"gitId":"limzhenwy"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":522,"author":{"gitId":"limzhenwy"},"content":"where X is the number of contacts listed","lastModifiedDate":"2023-11-02"},{"lineNumber":523,"author":{"gitId":"limzhenwy"},"content":"* The list of contacts whose appointment date matches the input date is shown","lastModifiedDate":"2023-11-02"},{"lineNumber":524,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":525,"author":{"gitId":"limzhenwy"},"content":"![find_appt format](images/find_appt1.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":526,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":527,"author":{"gitId":"limzhenwy"},"content":"#### Precise expected outputs on failure:","lastModifiedDate":"2023-11-02"},{"lineNumber":528,"author":{"gitId":"limzhenwy"},"content":"If no date is input after the find command, an error message explaining the error will be shown,","lastModifiedDate":"2023-11-02"},{"lineNumber":529,"author":{"gitId":"limzhenwy"},"content":"reminding the user to follow the correct input format","lastModifiedDate":"2023-11-02"},{"lineNumber":530,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":531,"author":{"gitId":"limzhenwy"},"content":"* Error message shown to the user:","lastModifiedDate":"2023-11-02"},{"lineNumber":532,"author":{"gitId":"limzhenwy"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":533,"author":{"gitId":"limzhenwy"},"content":"Invalid command format! find_appt: Finds all persons whose appointment date matches the specified input date and displays them as a list with index numbers.","lastModifiedDate":"2023-11-02"},{"lineNumber":534,"author":{"gitId":"limzhenwy"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":535,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":536,"author":{"gitId":"limzhenwy"},"content":"![find_appt format](images/find_appt2.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":537,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":538,"author":{"gitId":"limzhenwy"},"content":"If an input date does not follow the accepted format, an error message explaining the error will be shown,","lastModifiedDate":"2023-11-02"},{"lineNumber":539,"author":{"gitId":"limzhenwy"},"content":"reminding the user to follow the correct input format","lastModifiedDate":"2023-11-02"},{"lineNumber":540,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":541,"author":{"gitId":"limzhenwy"},"content":"* Error message shown to the user:","lastModifiedDate":"2023-11-02"},{"lineNumber":542,"author":{"gitId":"limzhenwy"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":543,"author":{"gitId":"limzhenwy"},"content":"Appointment Date should follow the format of [mm/dd/yyyy] or [dd-mm-yyyy] or [yyyy-mm-dd].","lastModifiedDate":"2023-11-02"},{"lineNumber":544,"author":{"gitId":"limzhenwy"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":545,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":546,"author":{"gitId":"limzhenwy"},"content":"![find_appt format](images/find_appt3.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":547,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":548,"author":{"gitId":"limzhenwy"},"content":"If an input date is a past date (a date before the current date), an error message explaining the error will be shown, ","lastModifiedDate":"2023-11-02"},{"lineNumber":549,"author":{"gitId":"limzhenwy"},"content":"reminding the user to input a valid date","lastModifiedDate":"2023-11-02"},{"lineNumber":550,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":551,"author":{"gitId":"limzhenwy"},"content":"* Error message shown to the user:","lastModifiedDate":"2023-11-02"},{"lineNumber":552,"author":{"gitId":"limzhenwy"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":553,"author":{"gitId":"limzhenwy"},"content":"Appointment Date should be after the current date.","lastModifiedDate":"2023-11-02"},{"lineNumber":554,"author":{"gitId":"limzhenwy"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":555,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":556,"author":{"gitId":"limzhenwy"},"content":"![find_appt format](images/find_appt4.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":557,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":558,"author":{"gitId":"glenngnng"},"content":"### Undoing a command : `undo`","lastModifiedDate":"2023-10-26"},{"lineNumber":559,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":560,"author":{"gitId":"glenngnng"},"content":"Undoes the most recent undoable command. Undoable commands include: add, clone, delete, clear, edit.","lastModifiedDate":"2023-10-26"},{"lineNumber":561,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":562,"author":{"gitId":"glenngnng"},"content":"#### Format: ","lastModifiedDate":"2023-11-02"},{"lineNumber":563,"author":{"gitId":"limzhenwy"},"content":"* `undo`","lastModifiedDate":"2023-11-02"},{"lineNumber":564,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":565,"author":{"gitId":"glenngnng"},"content":"#### Example commands:","lastModifiedDate":"2023-11-02"},{"lineNumber":566,"author":{"gitId":"glenngnng"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com o/Barber a/John Street, Block 123, #01-01` followed by `undo` will","lastModifiedDate":"2023-10-26"},{"lineNumber":567,"author":{"gitId":"glenngnng"},"content":"  delete the added contact","lastModifiedDate":"2023-11-02"},{"lineNumber":568,"author":{"gitId":"glenngnng"},"content":"* `clone 1`, assuming there is a contact to clone, followed by `undo` will delete the cloned contact","lastModifiedDate":"2023-11-02"},{"lineNumber":569,"author":{"gitId":"glenngnng"},"content":"* `delete 1`, assuming there is a contact to delete, followed by `undo` will add the contact back","lastModifiedDate":"2023-11-02"},{"lineNumber":570,"author":{"gitId":"glenngnng"},"content":"* `clear`, assuming there is at least one contact to clear, followed by `undo` will add all cleared contacts back","lastModifiedDate":"2023-11-02"},{"lineNumber":571,"author":{"gitId":"glenngnng"},"content":"* `edit 1 p/91234567`, assuming there is a contact to edit, followed by `undo` will revert the edit of the contact","lastModifiedDate":"2023-11-02"},{"lineNumber":572,"author":{"gitId":"glenngnng"},"content":"* Assuming there are 3 contacts, `delete 1`, which deletes the first contact, followed by `clear`, which clears the","lastModifiedDate":"2023-10-26"},{"lineNumber":573,"author":{"gitId":"glenngnng"},"content":"  remaining 2 contacts, followed by `undo` will only add the 2 cleared contacts back. A subsequent `undo` will add","lastModifiedDate":"2023-10-26"},{"lineNumber":574,"author":{"gitId":"glenngnng"},"content":"  the contact deleted at the beginning back","lastModifiedDate":"2023-11-02"},{"lineNumber":575,"author":{"gitId":"glenngnng"},"content":"* `edit 1 p/91234567`, assuming there is a contact to edit, edits the first contact, followed by `delete 1`, deletes","lastModifiedDate":"2023-10-26"},{"lineNumber":576,"author":{"gitId":"glenngnng"},"content":"  the first contact. Then, `undo` will add back the deleted contact, and the next `undo` will revert the edit of the","lastModifiedDate":"2023-10-26"},{"lineNumber":577,"author":{"gitId":"glenngnng"},"content":"  contact (which was also just added back)","lastModifiedDate":"2023-11-02"},{"lineNumber":578,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":579,"author":{"gitId":"glenngnng"},"content":"#### Precise expected outputs on success:","lastModifiedDate":"2023-10-26"},{"lineNumber":580,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":581,"author":{"gitId":"glenngnng"},"content":"For undoing an add command:","lastModifiedDate":"2023-10-26"},{"lineNumber":582,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":583,"author":{"gitId":"glenngnng"},"content":"* Add a contact","lastModifiedDate":"2023-11-02"},{"lineNumber":584,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":585,"author":{"gitId":"glenngnng"},"content":"![undo format](images/undo-UG/after_add.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":586,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":587,"author":{"gitId":"glenngnng"},"content":"* Undo","lastModifiedDate":"2023-11-02"},{"lineNumber":588,"author":{"gitId":"glenngnng"},"content":"* Message shown to the user:","lastModifiedDate":"2023-11-02"},{"lineNumber":589,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":590,"author":{"gitId":"glenngnng"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":591,"author":{"gitId":"glenngnng"},"content":"Undo Successful! Deleted Person: X","lastModifiedDate":"2023-11-02"},{"lineNumber":592,"author":{"gitId":"glenngnng"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":593,"author":{"gitId":"glenngnng"},"content":"where X are the details of the person who was just added, and now deleted","lastModifiedDate":"2023-11-02"},{"lineNumber":594,"author":{"gitId":"glenngnng"},"content":"* GUI reflects that the most recently added contact is deleted","lastModifiedDate":"2023-11-02"},{"lineNumber":595,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":596,"author":{"gitId":"glenngnng"},"content":"![undo format](images/undo-UG/after_add_undo.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":597,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":598,"author":{"gitId":"glenngnng"},"content":"For undoing a clone command:","lastModifiedDate":"2023-10-26"},{"lineNumber":599,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":600,"author":{"gitId":"glenngnng"},"content":"* Clone a contact","lastModifiedDate":"2023-11-02"},{"lineNumber":601,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":602,"author":{"gitId":"glenngnng"},"content":"![undo format](images/undo-UG/after_clone_1.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":603,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":604,"author":{"gitId":"glenngnng"},"content":"* Undo","lastModifiedDate":"2023-11-02"},{"lineNumber":605,"author":{"gitId":"glenngnng"},"content":"* Message shown to the user: ","lastModifiedDate":"2023-11-02"},{"lineNumber":606,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":607,"author":{"gitId":"glenngnng"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":608,"author":{"gitId":"glenngnng"},"content":"Undo Successful! Deleted Person: X","lastModifiedDate":"2023-11-02"},{"lineNumber":609,"author":{"gitId":"glenngnng"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":610,"author":{"gitId":"glenngnng"},"content":"where X are the details of the person who was just cloned, and now deleted","lastModifiedDate":"2023-11-02"},{"lineNumber":611,"author":{"gitId":"glenngnng"},"content":"* GUI reflects that the most recently cloned contact is deleted","lastModifiedDate":"2023-11-02"},{"lineNumber":612,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":613,"author":{"gitId":"glenngnng"},"content":"![undo format](images/undo-UG/after_clone_undo.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":614,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":615,"author":{"gitId":"glenngnng"},"content":"For undoing a delete command:","lastModifiedDate":"2023-10-26"},{"lineNumber":616,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":617,"author":{"gitId":"glenngnng"},"content":"* Delete a contact","lastModifiedDate":"2023-11-02"},{"lineNumber":618,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":619,"author":{"gitId":"glenngnng"},"content":"![undo format](images/undo-UG/after_delete_1.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":620,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":621,"author":{"gitId":"glenngnng"},"content":"* Undo","lastModifiedDate":"2023-11-02"},{"lineNumber":622,"author":{"gitId":"glenngnng"},"content":"* Message shown to the user: ","lastModifiedDate":"2023-11-02"},{"lineNumber":623,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":624,"author":{"gitId":"glenngnng"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":625,"author":{"gitId":"glenngnng"},"content":"Undo Successful! Contact(s) added back: X","lastModifiedDate":"2023-11-02"},{"lineNumber":626,"author":{"gitId":"glenngnng"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":627,"author":{"gitId":"glenngnng"},"content":"where X are the details of the person who was just deleted, and now added back","lastModifiedDate":"2023-11-02"},{"lineNumber":628,"author":{"gitId":"glenngnng"},"content":"* GUI reflects that the most recently deleted contact is added back","lastModifiedDate":"2023-11-02"},{"lineNumber":629,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":630,"author":{"gitId":"glenngnng"},"content":"![undo format](images/undo-UG/after_delete_undo.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":631,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":632,"author":{"gitId":"glenngnng"},"content":"* Delete multiple contacts (In this case, 2 contacts)","lastModifiedDate":"2023-11-02"},{"lineNumber":633,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":634,"author":{"gitId":"glenngnng"},"content":"![undo format](images/undo-UG/after_delete_multiple.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":635,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":636,"author":{"gitId":"glenngnng"},"content":"* Undo","lastModifiedDate":"2023-11-02"},{"lineNumber":637,"author":{"gitId":"glenngnng"},"content":"* Message shown to the user: ","lastModifiedDate":"2023-11-02"},{"lineNumber":638,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":639,"author":{"gitId":"glenngnng"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":640,"author":{"gitId":"glenngnng"},"content":"Undo Successful! Contact(s) added back: X","lastModifiedDate":"2023-11-02"},{"lineNumber":641,"author":{"gitId":"glenngnng"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":642,"author":{"gitId":"glenngnng"},"content":"where X are the details of the persons who were just deleted, and now added back","lastModifiedDate":"2023-11-02"},{"lineNumber":643,"author":{"gitId":"glenngnng"},"content":"* GUI reflects that the most recently deleted contacts are added back","lastModifiedDate":"2023-11-02"},{"lineNumber":644,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":645,"author":{"gitId":"glenngnng"},"content":"![undo_format](images/undo-UG/after_delete_multiple_undo.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":646,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":647,"author":{"gitId":"glenngnng"},"content":"For undoing a clear command:","lastModifiedDate":"2023-10-26"},{"lineNumber":648,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":649,"author":{"gitId":"glenngnng"},"content":"* Clear all contacts","lastModifiedDate":"2023-11-02"},{"lineNumber":650,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":651,"author":{"gitId":"syamfarh"},"content":"![undo format](images/undo-UG/after_clear.png)","lastModifiedDate":"2023-11-01"},{"lineNumber":652,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":653,"author":{"gitId":"glenngnng"},"content":"* Undo","lastModifiedDate":"2023-11-02"},{"lineNumber":654,"author":{"gitId":"glenngnng"},"content":"* Message shown to the user: ","lastModifiedDate":"2023-11-02"},{"lineNumber":655,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":656,"author":{"gitId":"glenngnng"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":657,"author":{"gitId":"glenngnng"},"content":"Undo Successful! All contacts have been added back!","lastModifiedDate":"2023-11-02"},{"lineNumber":658,"author":{"gitId":"glenngnng"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":659,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":660,"author":{"gitId":"glenngnng"},"content":"* GUI reflects that all cleared contacts are added back","lastModifiedDate":"2023-11-02"},{"lineNumber":661,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":662,"author":{"gitId":"syamfarh"},"content":"![undo format](images/undo-UG/after_clear_undo.png)","lastModifiedDate":"2023-11-01"},{"lineNumber":663,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":664,"author":{"gitId":"glenngnng"},"content":"For undoing an edit command:","lastModifiedDate":"2023-10-26"},{"lineNumber":665,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":666,"author":{"gitId":"glenngnng"},"content":"* Edit a contact","lastModifiedDate":"2023-11-02"},{"lineNumber":667,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":668,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":669,"author":{"gitId":"glenngnng"},"content":"![undo format](images/undo-UG/after_edit.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":670,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":671,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":672,"author":{"gitId":"glenngnng"},"content":"* Undo","lastModifiedDate":"2023-11-02"},{"lineNumber":673,"author":{"gitId":"glenngnng"},"content":"* Message shown to the user: ","lastModifiedDate":"2023-11-02"},{"lineNumber":674,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":675,"author":{"gitId":"glenngnng"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":676,"author":{"gitId":"glenngnng"},"content":"Undo Successful! Reverted back to: X","lastModifiedDate":"2023-11-02"},{"lineNumber":677,"author":{"gitId":"glenngnng"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":678,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":679,"author":{"gitId":"glenngnng"},"content":"where X are the details of the person before the edit","lastModifiedDate":"2023-11-02"},{"lineNumber":680,"author":{"gitId":"glenngnng"},"content":"* GUI reflects that the edited contact has been reverted","lastModifiedDate":"2023-11-02"},{"lineNumber":681,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":682,"author":{"gitId":"syamfarh"},"content":"![undo format](images/undo-UG/after_edit_undo.png)","lastModifiedDate":"2023-11-01"},{"lineNumber":683,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":684,"author":{"gitId":"glenngnng"},"content":"#### Precise expected outputs on failure:","lastModifiedDate":"2023-10-26"},{"lineNumber":685,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":686,"author":{"gitId":"glenngnng"},"content":"When there is no command to undo, i.e. no previous `add`, `clone`, `delete`, `clear`, or `edit` command","lastModifiedDate":"2023-11-02"},{"lineNumber":687,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":688,"author":{"gitId":"glenngnng"},"content":"* Error message shown to the user:","lastModifiedDate":"2023-11-02"},{"lineNumber":689,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":690,"author":{"gitId":"glenngnng"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":691,"author":{"gitId":"glenngnng"},"content":"There is no command to undo!","lastModifiedDate":"2023-11-02"},{"lineNumber":692,"author":{"gitId":"glenngnng"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":693,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":694,"author":{"gitId":"syamfarh"},"content":"![undo format](images/undo-UG/undo_fail.png)","lastModifiedDate":"2023-11-01"},{"lineNumber":695,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":696,"author":{"gitId":"syamfarh"},"content":"### Sorting contacts : `sort`","lastModifiedDate":"2023-10-26"},{"lineNumber":697,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":698,"author":{"gitId":"syamfarh"},"content":"Sort contact lists by prefix name or appointment date.","lastModifiedDate":"2023-11-01"},{"lineNumber":699,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":700,"author":{"gitId":"syamfarh"},"content":"#### Format: ","lastModifiedDate":"2023-11-02"},{"lineNumber":701,"author":{"gitId":"syamfarh"},"content":"* `sort PREFIX`","lastModifiedDate":"2023-11-01"},{"lineNumber":702,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":703,"author":{"gitId":"syamfarh"},"content":"#### Example commands:","lastModifiedDate":"2023-11-02"},{"lineNumber":704,"author":{"gitId":"syamfarh"},"content":"* `sort n/`","lastModifiedDate":"2023-10-26"},{"lineNumber":705,"author":{"gitId":"syamfarh"},"content":"* `sort appt/`","lastModifiedDate":"2023-11-01"},{"lineNumber":706,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":707,"author":{"gitId":"limzhenwy"},"content":"#### Acceptable values for prefix:","lastModifiedDate":"2023-11-02"},{"lineNumber":708,"author":{"gitId":"syamfarh"},"content":"* `n/` sort by Name prefix","lastModifiedDate":"2023-11-01"},{"lineNumber":709,"author":{"gitId":"syamfarh"},"content":"* `appt/` sort by Appointment Date prefix","lastModifiedDate":"2023-11-01"},{"lineNumber":710,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":711,"author":{"gitId":"syamfarh"},"content":"![sort format](images/sort-UG/sortformat.png)","lastModifiedDate":"2023-11-01"},{"lineNumber":712,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":713,"author":{"gitId":"syamfarh"},"content":"#### Precise expected output on success:","lastModifiedDate":"2023-11-02"},{"lineNumber":714,"author":{"gitId":"limzhenwy"},"content":"* Message shown to the user:","lastModifiedDate":"2023-11-02"},{"lineNumber":715,"author":{"gitId":"limzhenwy"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":716,"author":{"gitId":"limzhenwy"},"content":"\u0027X person listed!\u0027","lastModifiedDate":"2023-11-02"},{"lineNumber":717,"author":{"gitId":"limzhenwy"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":718,"author":{"gitId":"limzhenwy"},"content":"where X is the number of clients in the address book.","lastModifiedDate":"2023-11-02"},{"lineNumber":719,"author":{"gitId":"syamfarh"},"content":"* The sorted entry is displayed in the address book GUI.","lastModifiedDate":"2023-10-26"},{"lineNumber":720,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":721,"author":{"gitId":"syamfarh"},"content":"![sort format](images/sort-UG/sortresult.png)","lastModifiedDate":"2023-11-01"},{"lineNumber":722,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":723,"author":{"gitId":"syamfarh"},"content":"Precise expected outputs on failure:","lastModifiedDate":"2023-10-26"},{"lineNumber":724,"author":{"gitId":"syamfarh"},"content":"\u003cbr\u003e If either a required parameter is missing or a parameter provided is invalid (e.g., e/), an error message should indicate the invalid format.","lastModifiedDate":"2023-11-01"},{"lineNumber":725,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":726,"author":{"gitId":"limzhenwy"},"content":"* Error message shown to the user:","lastModifiedDate":"2023-11-02"},{"lineNumber":727,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":728,"author":{"gitId":"syamfarh"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":729,"author":{"gitId":"syamfarh"},"content":"Invalid command format!","lastModifiedDate":"2023-11-01"},{"lineNumber":730,"author":{"gitId":"syamfarh"},"content":"sort: Sort all persons by name or appointmnet date.","lastModifiedDate":"2023-11-01"},{"lineNumber":731,"author":{"gitId":"syamfarh"},"content":"Parameters: KEYWORD [PREFIX n/ or appt/]","lastModifiedDate":"2023-11-01"},{"lineNumber":732,"author":{"gitId":"syamfarh"},"content":"Example: sort n/","lastModifiedDate":"2023-11-01"},{"lineNumber":733,"author":{"gitId":"syamfarh"},"content":"```","lastModifiedDate":"2023-11-01"},{"lineNumber":734,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":735,"author":{"gitId":"syamfarh"},"content":"![sort format](images/sort-UG/sortfailuremissing.png)","lastModifiedDate":"2023-11-01"},{"lineNumber":736,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":737,"author":{"gitId":"syamfarh"},"content":"### Opening calendar window : `calendar`","lastModifiedDate":"2023-11-02"},{"lineNumber":738,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":739,"author":{"gitId":"syamfarh"},"content":"Open a new calendar window.","lastModifiedDate":"2023-11-02"},{"lineNumber":740,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":741,"author":{"gitId":"syamfarh"},"content":"#### Format:","lastModifiedDate":"2023-11-02"},{"lineNumber":742,"author":{"gitId":"syamfarh"},"content":"* `calendar`","lastModifiedDate":"2023-11-02"},{"lineNumber":743,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":744,"author":{"gitId":"syamfarh"},"content":"#### Example commands:","lastModifiedDate":"2023-11-02"},{"lineNumber":745,"author":{"gitId":"syamfarh"},"content":"* `calendar`","lastModifiedDate":"2023-11-02"},{"lineNumber":746,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":747,"author":{"gitId":"syamfarh"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2023-11-02"},{"lineNumber":748,"author":{"gitId":"limzhenwy"},"content":"\u003cli\u003eYou can open calendar window by pressing f3 key","lastModifiedDate":"2023-11-02"},{"lineNumber":749,"author":{"gitId":"limzhenwy"},"content":"\u003cli\u003eArrow key navigate you to different months","lastModifiedDate":"2023-11-02"},{"lineNumber":750,"author":{"gitId":"limzhenwy"},"content":"\u003cli\u003eEnter key navigate you back to the current month","lastModifiedDate":"2023-11-02"},{"lineNumber":751,"author":{"gitId":"syamfarh"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":752,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":753,"author":{"gitId":"syamfarh"},"content":"#### Precise expected outputs on success:","lastModifiedDate":"2023-11-02"},{"lineNumber":754,"author":{"gitId":"limzhenwy"},"content":"* A pop-up of a new calendar window of the current month that indicate client\u0027s appointments in the date","lastModifiedDate":"2023-11-02"},{"lineNumber":755,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":756,"author":{"gitId":"syamfarh"},"content":"![calendar format](images/calendarWindow.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":757,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":758,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":759,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":760,"author":{"gitId":"glenngnng"},"content":"Clears all contacts in the address book.","lastModifiedDate":"2023-10-26"},{"lineNumber":761,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":762,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":763,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":764,"author":{"gitId":"glenngnng"},"content":"Example:","lastModifiedDate":"2023-10-26"},{"lineNumber":765,"author":{"gitId":"limzhenwy"},"content":"* `clear`","lastModifiedDate":"2023-11-02"},{"lineNumber":766,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":767,"author":{"gitId":"glenngnng"},"content":"Precise expected outputs on success:","lastModifiedDate":"2023-10-26"},{"lineNumber":768,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":769,"author":{"gitId":"limzhenwy"},"content":"* Message shown to the user: ","lastModifiedDate":"2023-11-02"},{"lineNumber":770,"author":{"gitId":"limzhenwy"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":771,"author":{"gitId":"limzhenwy"},"content":"Address book has been cleared!","lastModifiedDate":"2023-11-02"},{"lineNumber":772,"author":{"gitId":"limzhenwy"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":773,"author":{"gitId":"limzhenwy"},"content":"* GUI reflects that there are 0 contacts left","lastModifiedDate":"2023-11-02"},{"lineNumber":774,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":775,"author":{"gitId":"syamfarh"},"content":"![clear format](images/clear-UG/clear_success.png)","lastModifiedDate":"2023-11-01"},{"lineNumber":776,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":777,"author":{"gitId":"glenngnng"},"content":"Precise expected outputs on failure:","lastModifiedDate":"2023-10-26"},{"lineNumber":778,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":779,"author":{"gitId":"limzhenwy"},"content":"* Error message shown to the user:","lastModifiedDate":"2023-11-02"},{"lineNumber":780,"author":{"gitId":"limzhenwy"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":781,"author":{"gitId":"limzhenwy"},"content":"Address book is empty. There is nothing to clear.","lastModifiedDate":"2023-11-02"},{"lineNumber":782,"author":{"gitId":"limzhenwy"},"content":"```","lastModifiedDate":"2023-11-02"},{"lineNumber":783,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":784,"author":{"gitId":"syamfarh"},"content":"![clear format](images/clear-UG/clear_failure.png)","lastModifiedDate":"2023-11-01"},{"lineNumber":785,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":786,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":787,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":788,"author":{"gitId":"limzhenwy"},"content":"Exits the application.","lastModifiedDate":"2023-11-02"},{"lineNumber":789,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":790,"author":{"gitId":"Daphne789"},"content":"#### Format: ","lastModifiedDate":"2023-11-02"},{"lineNumber":791,"author":{"gitId":"Daphne789"},"content":"* `exit`","lastModifiedDate":"2023-11-02"},{"lineNumber":792,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":793,"author":{"gitId":"Daphne789"},"content":"#### Precise expected outcome on success:","lastModifiedDate":"2023-11-02"},{"lineNumber":794,"author":{"gitId":"Daphne789"},"content":"* The FAPro application will be closed","lastModifiedDate":"2023-11-02"},{"lineNumber":795,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":796,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":797,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":798,"author":{"gitId":"bhnuka"},"content":"FAPro data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-10-03"},{"lineNumber":799,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":800,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":801,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":802,"author":{"gitId":"limzhenwy"},"content":"FAPro data is saved automatically as a JSON file `[JAR file location]/data/fapro.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-10-04"},{"lineNumber":803,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":804,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":805,"author":{"gitId":"bhnuka"},"content":"If your changes to the data file makes its format invalid, FAPro will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.","lastModifiedDate":"2023-10-03"},{"lineNumber":806,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":807,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":808,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":809,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":810,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":811,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":812,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":813,"author":{"gitId":"bhnuka"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous FAPro home folder.","lastModifiedDate":"2023-10-03"},{"lineNumber":814,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":815,"author":{"gitId":"Daphne789"},"content":"**Q**: How do I view the main commands and refer to the FAPro’s User Guide?\u003cbr\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":816,"author":{"gitId":"Daphne789"},"content":"**A**: Click the Help tab or type the `help` in the command box.","lastModifiedDate":"2023-11-02"},{"lineNumber":817,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":818,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":819,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":820,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":821,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":822,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":823,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":824,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":825,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":826,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":827,"author":{"gitId":"limzhenwy"},"content":"                                                                                                                                         ","lastModifiedDate":"2023-11-02"},{"lineNumber":828,"author":{"gitId":"Daphne789"},"content":"| Action              | Format, Examples                                                                                                                                                                        |","lastModifiedDate":"2023-10-03"},{"lineNumber":829,"author":{"gitId":"limzhenwy"},"content":"|---------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-11-02"},{"lineNumber":830,"author":{"gitId":"limzhenwy"},"content":"| **Add**             | `add n/NAME p/PHONE_NUMBER e/EMAIL o/OCCUPATION a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g. `add n/James Ho p/22224444 e/jamesho@example.com o/SWE, a/123, Clementi Rd, 1234665 t/friend t/colleague` |","lastModifiedDate":"2023-11-02"},{"lineNumber":831,"author":{"gitId":"syamfarh"},"content":"| **Calendar**        | `calendar`                                                                                                                                                                              |","lastModifiedDate":"2023-11-02"},{"lineNumber":832,"author":{"gitId":"limzhenwy"},"content":"| **Clone**           | `clone INDEX`\u003cbr\u003e e.g. `clone 3`                                                                                                                                                        |","lastModifiedDate":"2023-11-02"},{"lineNumber":833,"author":{"gitId":"Daphne789"},"content":"| **Clear**           | `clear`                                                                                                                                                                                 |","lastModifiedDate":"2023-10-03"},{"lineNumber":834,"author":{"gitId":"bhnuka"},"content":"| **Delete**          | `delete INDEXES`\u003cbr\u003e e.g., `delete 1 2 3`                                                                                                                                               |","lastModifiedDate":"2023-10-31"},{"lineNumber":835,"author":{"gitId":"limzhenwy"},"content":"| **Edit**            | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [o/OCCUPATION] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.`edit 2 n/James Lee e/jameslee@example.com`                                               |","lastModifiedDate":"2023-11-02"},{"lineNumber":836,"author":{"gitId":"glenngnng"},"content":"| **Undo**            | `undo`                                                                                                                                                                                  |","lastModifiedDate":"2023-11-02"},{"lineNumber":837,"author":{"gitId":"limzhenwy"},"content":"| **Find**            | `find PREFIX KEYWORD` \u003cbr\u003e e.g. `find n/ James Jake`, `find a/Tokyo Geylang`, `find appt/2040-01-01`                                                                                    |","lastModifiedDate":"2023-11-02"},{"lineNumber":838,"author":{"gitId":"Daphne789"},"content":"| **List**            | `list`                                                                                                                                                                                  |","lastModifiedDate":"2023-10-03"},{"lineNumber":839,"author":{"gitId":"Daphne789"},"content":"| **Help**            | `help`                                                                                                                                                                                  |","lastModifiedDate":"2023-10-03"},{"lineNumber":840,"author":{"gitId":"Daphne789"},"content":"| **Questionnaire**   | `questionnaire`                                                                                                                                                                         |","lastModifiedDate":"2023-11-02"},{"lineNumber":841,"author":{"gitId":"syamfarh"},"content":"| **Sort**            | `sort PREFIX` \u003cbr\u003e e.g. `sort appt/` `sort n/`                                                                                                                                          |","lastModifiedDate":"2023-11-01"},{"lineNumber":842,"author":{"gitId":"Daphne789"},"content":"| **Risk Profile**    | `riskprofile 3 res/a,b,c,d,e,e,b,c`                                                                                                                                                     |","lastModifiedDate":"2023-11-02"},{"lineNumber":843,"author":{"gitId":"Daphne789"},"content":"| **Exit**            | `exit`                                                                                                                                                                                  |","lastModifiedDate":"2023-11-02"},{"lineNumber":844,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":845,"author":{"gitId":"syamfarh"},"content":"## Glossary","lastModifiedDate":"2023-11-02"},{"lineNumber":846,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":847,"author":{"gitId":"syamfarh"},"content":"| Word                | Meaning                                                                                                                                                                                 |","lastModifiedDate":"2023-11-02"},{"lineNumber":848,"author":{"gitId":"bhnuka"},"content":"|---------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-11-02"},{"lineNumber":849,"author":{"gitId":"syamfarh"},"content":"| **Parameter**       | values inputted by the user.\u003cbr/\u003ee.g. NAME, OCCUPATION, ADDRESS                                                                                                                         |","lastModifiedDate":"2023-11-02"},{"lineNumber":850,"author":{"gitId":"syamfarh"},"content":"| **Prefix**          | word that is added in front of parameter.\u003cbr/\u003ee.g. n/, o/, a/                                                                                                                           |","lastModifiedDate":"2023-11-02"},{"lineNumber":851,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"limzhenwy":228,"Daphne789":125,"glenngnng":136,"bhnuka":154,"syamfarh":83,"-":125}},{"path":"docs/diagrams/Clone0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bhnuka"},"content":"@startuml","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"bhnuka"},"content":"!include style.puml","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"bhnuka"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"bhnuka"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"bhnuka"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"bhnuka"},"content":"title Initial state","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"bhnuka"},"content":"package AddressBook {","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"bhnuka"},"content":"    class State1 as \"\u003cu\u003eJohn:Person\u003c/u\u003e\"","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"bhnuka"},"content":"    class State2 as \"\u003cu\u003eJames:Person\u003c/u\u003e\"","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"bhnuka"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"bhnuka"},"content":"hide State2","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"bhnuka"},"content":"@end","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"bhnuka":16}},{"path":"docs/diagrams/Clone1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bhnuka"},"content":"@startuml","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"bhnuka"},"content":"!include style.puml","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"bhnuka"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"bhnuka"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"bhnuka"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"bhnuka"},"content":"title After command \"clone 1\"","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"bhnuka"},"content":"package AddressBook {","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"bhnuka"},"content":"    class State1 as \"\u003cu\u003eJohn:Person\u003c/u\u003e\"","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"bhnuka"},"content":"    class State2 as \"\u003cu\u003eJames:Person\u003c/u\u003e\"","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"bhnuka"},"content":"    class State3 as \"\u003cu\u003eJohn1:Person\u003c/u\u003e\"","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"bhnuka"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"bhnuka"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"bhnuka"},"content":"hide State2","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"bhnuka"},"content":"hide State3","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"bhnuka"},"content":"@end","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"bhnuka":19}},{"path":"docs/diagrams/CloneActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bhnuka"},"content":"@startuml","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"bhnuka"},"content":"skin rose","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"bhnuka"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"bhnuka"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"bhnuka"},"content":"start","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"bhnuka"},"content":":User executes clone;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"bhnuka"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"bhnuka"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"bhnuka"},"content":"if () then ([index is valid] \u0026\u0026 [person has not been cloned before])","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"bhnuka"},"content":"    :Clone person;","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"bhnuka"},"content":"else ([else])","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"bhnuka"},"content":"endif","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"bhnuka"},"content":"stop","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"bhnuka"},"content":"@enduml","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"bhnuka":16}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"bhnuka"},"content":"title: FAPro","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"bhnuka"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-W09-1/tp/actions)","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"bhnuka"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://app.codecov.io/gh/AY2324S1-CS2103T-W09-1/tp)","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"bhnuka"},"content":"**FApro seeks to improve the quality of life of financial advisors (FAs). It allows FAs to keep track of large numbers of contacts**. While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"bhnuka"},"content":"## Problem Addressed","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"bhnuka"},"content":"* A lot of contacts","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"bhnuka"},"content":"* Hard to track which clients have existing products and which products","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"bhnuka"},"content":"* Possibly volatile contacts as need to keep up with them over long periods of time","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"bhnuka"},"content":"* Do analytics","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"bhnuka"},"content":"* Provides them with an overview of all possible clients (big-picture)","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"bhnuka"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5), [CalendarFX](https://github.com/dlsc-software-consulting-gmbh/CalendarFX)","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"bhnuka":11,"-":12}},{"path":"docs/team/bhnuka.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bhnuka"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"bhnuka"},"content":"layout: page","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"bhnuka"},"content":"title: Bhanuka Bandara Ekanayake\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"bhnuka"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"bhnuka"},"content":"### Project: FAPro","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"bhnuka"},"content":"FApro seeks to improve the quality of life of financial advisors (FAs). It allows FAs to keep track of large numbers of contacts. It allows FAs to have a one-stop platform to manage their contacts and conduct financial analytics while providing a big-picture view of their clientele as a whole.","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"bhnuka"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"bhnuka"},"content":"* **New Parameter**: Added occupation parameter","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"bhnuka"},"content":"  * What it does: Allows the store the occupation of as person when adding the contact ","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"bhnuka"},"content":"  * Justification: As Financial Advisors, users may wish to store the Occupation of their clients, so as to get a better gauge on their clients overall financial profile and what investment plans might be more suitable for them.","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"bhnuka"},"content":"  * Highlights: As this was my first significant contribution to the groups code, it was initially rather daunting, considering that adding a parameter entails changing many classes (every class that has to do with Person), and additionally meant I had to update all the test cases. However, overall it was a smooth process of coding and deployment.","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"bhnuka"},"content":"* **New Feature**: Added the ability to clone contacts","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"bhnuka"},"content":"  * What it does: Allows the user to clone contacts if they want to add a similar contact ","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"bhnuka"},"content":"  * Justification: Users may have to add multiple similar contacts at one time (i.e people from the same household. As such, the clone feature provides and alternative should the user not wish to type out all the details to add a contact.","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"bhnuka"},"content":"  * Highlights: This enhancement was manageable in it\u0027s implementation. One difficulty faced was how to clone a command while ensuring that duplicate contacts still could not be held in the addressbook. This difficulty was overcome by adding an integer to the end of the name, so as to make the contacts dissimilar and hence, not duplicates of one another. ","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"bhnuka"},"content":"* **Code contributed**: [RepoSense link] (https://nus-cs2103-ay2324s1.github.io/tp-dashboard/#/widget/?search\u003dbhnuka\u0026breakdown\u003dfalse\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026chartGroupIndex\u003d0\u0026chartIndex\u003d0\" frameBorder\u003d\"0\" width\u003d\"800px\" height\u003d\"142px\")","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"bhnuka"},"content":"* **Project management**:","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"bhnuka"},"content":"  * To be added","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"bhnuka"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"bhnuka"},"content":"  * Updated the GUI Colour Scheme and aesthetics (Pull request [\\#65]())","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"bhnuka"},"content":"  * Updated Add Command to take in occupation as a parameter (Pull request [\\#49]())","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"bhnuka"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"bhnuka"},"content":"  * User Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"bhnuka"},"content":"    * Added documentation on \u0027add\u0027 and \u0027clone\u0027","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"bhnuka"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"bhnuka"},"content":"    * Did implementation of the \u0027clone\u0027 feature","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"bhnuka"},"content":"* **Community**:","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"bhnuka"},"content":"  * PRs reviewed (with non-trivial review comments): (Pull request [\\#43](), Pull request [\\#50](), Pull request [\\#66](), )","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"bhnuka"},"content":"* **Tools**:","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"bhnuka":40}},{"path":"docs/team/daphne789.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Daphne789"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"Daphne789"},"content":"layout: page","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"Daphne789"},"content":"title: Daphne Shaine Wilhelmina\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"Daphne789"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"Daphne789"},"content":"### Project: FAPro","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"Daphne789"},"content":"FApro seeks to improve the quality of life of financial advisors (FAs). It allows FAs to keep track of large numbers of ","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"Daphne789"},"content":"contacts. It allows FAs to have a one-stop platform to manage their contacts and conduct financial analytics while providing a big-picture view of their clientele as a whole.","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"Daphne789"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"Daphne789"},"content":"* **New Feature**: _to be added soon_","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"Daphne789"},"content":"    * What it does: _to be added soon_","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"Daphne789"},"content":"    * Justification: _to be added soon_","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"Daphne789"},"content":"    * Highlights: _to be added soon_","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"Daphne789"},"content":"    * Credits: _to be added soon_","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"Daphne789"},"content":"* **New Feature**: _to be added soon_","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"Daphne789"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003ddaphne789\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"Daphne789"},"content":"* **Project management**:","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"Daphne789"},"content":"    * _to be added soon_","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"Daphne789"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"Daphne789"},"content":"    * _to be added soon_","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"Daphne789"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"Daphne789"},"content":"    * User Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"Daphne789"},"content":"        * _to be added soon_","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"Daphne789"},"content":"    * Developer Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"Daphne789"},"content":"        * _to be added soon_","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"Daphne789"},"content":"* **Community**:","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"Daphne789"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#16](https://github.com/AY2324S1-CS2103T-W09-1/tp/pull/16)","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"Daphne789"},"content":"    * _more to be added soon_","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"Daphne789"},"content":"* **Tools**:","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"Daphne789"},"content":"    * _to be added soon_","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"Daphne789":40}},{"path":"docs/team/glenngnng.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"glenngnng"},"content":"### Project: FApro","lastModifiedDate":"2023-10-01"},{"lineNumber":2,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":3,"author":{"gitId":"glenngnng"},"content":"**Overview**:","lastModifiedDate":"2023-10-01"},{"lineNumber":4,"author":{"gitId":"glenngnng"},"content":"FApro seeks to improve the quality of life of financial advisors (FAs). It allows FAs to keep track of large numbers of contacts. It allows FAs to have a one-stop platform to manage their contacts and conduct financial analytics while providing a big-picture view of their clientele as a whole.","lastModifiedDate":"2023-10-01"},{"lineNumber":5,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":6,"author":{"gitId":"glenngnng"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-01"},{"lineNumber":7,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":8,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":9,"author":{"gitId":"glenngnng"},"content":"* **New Feature**: ","lastModifiedDate":"2023-10-01"},{"lineNumber":10,"author":{"gitId":"glenngnng"},"content":"    * What it does: ","lastModifiedDate":"2023-10-01"},{"lineNumber":11,"author":{"gitId":"glenngnng"},"content":"    * Justification: ","lastModifiedDate":"2023-10-01"},{"lineNumber":12,"author":{"gitId":"glenngnng"},"content":"    * Highlights: ","lastModifiedDate":"2023-10-01"},{"lineNumber":13,"author":{"gitId":"glenngnng"},"content":"    * Credits: ","lastModifiedDate":"2023-10-01"},{"lineNumber":14,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":15,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":16,"author":{"gitId":"glenngnng"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dglenngnng\u0026breakdown\u003dfalse\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos)","lastModifiedDate":"2023-10-01"},{"lineNumber":17,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":18,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":19,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":20,"author":{"gitId":"glenngnng"},"content":"* **Project management**:","lastModifiedDate":"2023-10-01"},{"lineNumber":21,"author":{"gitId":"glenngnng"},"content":"  * (fill in later)","lastModifiedDate":"2023-10-01"},{"lineNumber":22,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":23,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":24,"author":{"gitId":"glenngnng"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-01"},{"lineNumber":25,"author":{"gitId":"glenngnng"},"content":"  * (fill in later)","lastModifiedDate":"2023-10-01"},{"lineNumber":26,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":27,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":28,"author":{"gitId":"glenngnng"},"content":"* **Documentation**: ","lastModifiedDate":"2023-10-01"},{"lineNumber":29,"author":{"gitId":"glenngnng"},"content":"  * User Guide:","lastModifiedDate":"2023-10-01"},{"lineNumber":30,"author":{"gitId":"glenngnng"},"content":"    * (fill in later)","lastModifiedDate":"2023-10-01"},{"lineNumber":31,"author":{"gitId":"glenngnng"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-01"},{"lineNumber":32,"author":{"gitId":"glenngnng"},"content":"    * (fill in later)","lastModifiedDate":"2023-10-01"},{"lineNumber":33,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":34,"author":{"gitId":"glenngnng"},"content":"* **Community**:","lastModifiedDate":"2023-10-01"},{"lineNumber":35,"author":{"gitId":"glenngnng"},"content":"  * (fill in later)","lastModifiedDate":"2023-10-01"},{"lineNumber":36,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":37,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":38,"author":{"gitId":"glenngnng"},"content":"    ","lastModifiedDate":"2023-10-01"},{"lineNumber":39,"author":{"gitId":"glenngnng"},"content":"    ","lastModifiedDate":"2023-10-01"},{"lineNumber":40,"author":{"gitId":"glenngnng"},"content":"    ","lastModifiedDate":"2023-10-01"}],"authorContributionMap":{"glenngnng":40}},{"path":"docs/team/limzhenwy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"limzhenwy"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"limzhenwy"},"content":"layout: page","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"limzhenwy"},"content":"title: Lim Zhen Wy\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"limzhenwy"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"limzhenwy"},"content":"### Project: FAPro","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"limzhenwy"},"content":"FApro seeks to improve the quality of life of financial advisors (FAs). It allows FAs to keep track of large numbers of contacts. It allows FAs to have a one-stop platform to manage their contacts and conduct financial analytics while providing a big-picture view of their clientele as a whole.","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"limzhenwy"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"limzhenwy"},"content":"* **New Feature**: To be added soon.","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"limzhenwy"},"content":"  * What it does: To be added soon.","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"limzhenwy"},"content":"  * Justification: To be added soon.","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"limzhenwy"},"content":"  * Highlights: To be added soon.","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"limzhenwy"},"content":"  * Credits: To be added soon.","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"limzhenwy"},"content":"* **New Feature**: To be added soon.","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"limzhenwy"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dlimzhenwy\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code\u0026since\u003d2023-09-22)","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"limzhenwy"},"content":"* **Project management**: ","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"limzhenwy"},"content":"  * To be added soon.","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"limzhenwy"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"limzhenwy"},"content":"  * To be added soon.","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"limzhenwy"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"limzhenwy"},"content":"  * User Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"limzhenwy"},"content":"    * To be added soon.","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"limzhenwy"},"content":"  * Developer Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"limzhenwy"},"content":"    * To be added soon.","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"limzhenwy"},"content":"* **Community**:","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"limzhenwy"},"content":"  * PRs reviewed (with non-trivial review comments): To be added soon.","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"limzhenwy"},"content":"  * Contributed to forum discussions: To be added soon.","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"limzhenwy"},"content":"  * Reported bugs and suggestions for other teams in the class: To be added soon. ","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"limzhenwy"},"content":"  * Some parts of the history feature I added was adopted by several other class mates: To be added soon.","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"limzhenwy"},"content":"* **Tools**:","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"limzhenwy"},"content":"  * To be added soon.","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"limzhenwy":41}},{"path":"docs/team/syamfarh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"layout: page","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"title: Syam Farhan\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"### Project: FAPro","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":"FApro seeks to improve the quality of life of financial advisors (FAs). It allows FAs to keep track of large numbers of contacts. It allows FAs to have a one-stop platform to manage their contacts and conduct financial analytics while providing a big-picture view of their clientele as a whole.","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":"* **New Parameter**: Added Appointment Date parameter","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":"  * What it does: Allows the store of appointment date of a client","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":"  * Justification: Users may wish to store the Appointment Date of their clients, to remind them of their next appointment with their client ","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":"  * Highlights: As the value inputted is in String datatype, creating a date parser can be hard as there are many ways to format the date without creating bugs. Overall, a proper planning should have been done before going straight to coding. ","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":"* **New Feature**: Added the ability to sort contacts","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"  * What it does: Allows the user to sort the contact list by Name or Appointment Date parameter.","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":"  * Justification: Users may wish to have an organized contact lists to find the contacts easily or to find the earliest appointment date to remind them of their next appointment.","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":"  * Highlights: Slightly difficult as the list is saved in an immutable list. Circumvented by returning a new sorted list each time the function is called. Overall,  manageable to implement.","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"syamfarh"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dsyamfarh\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code\u0026since\u003d2023-09-22)","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"syamfarh"},"content":"* **Project management**:","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"syamfarh"},"content":"    * To be added soon","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"syamfarh"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"syamfarh"},"content":"  * Fix edit function to work with Occupation parameter","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"syamfarh"},"content":"  ","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"syamfarh"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"syamfarh"},"content":"    * User Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"syamfarh"},"content":"        * Added documentation on `edit` and `sort`","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"syamfarh"},"content":"    * Developer Guide:","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"syamfarh"},"content":"        * Added use case for `sort`","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"syamfarh"},"content":"* **Community**:","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"syamfarh"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#11](https://github.com/AY2324S1-CS2103T-W09-1/tp/pull/11), [\\#15](https://github.com/AY2324S1-CS2103T-W09-1/tp/pull/15), [\\#65](https://github.com/AY2324S1-CS2103T-W09-1/tp/pull/65), [\\#78](https://github.com/AY2324S1-CS2103T-W09-1/tp/pull/78), ","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"syamfarh":38}},{"path":"src/main/java/seedu/address/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"bhnuka"},"content":"public class Index implements Comparable\u003cIndex\u003e {","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!(other instanceof Index)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Index otherIndex \u003d (Index) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return zeroBasedIndex \u003d\u003d otherIndex.zeroBasedIndex;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"bhnuka"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":66,"author":{"gitId":"bhnuka"},"content":"    public int compareTo(Index other) {","lastModifiedDate":"2023-10-29"},{"lineNumber":67,"author":{"gitId":"bhnuka"},"content":"        return Integer.compare(zeroBasedIndex, other.zeroBasedIndex);","lastModifiedDate":"2023-10-29"},{"lineNumber":68,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":69,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"zeroBasedIndex\", zeroBasedIndex).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"bhnuka":6,"-":68}},{"path":"src/main/java/seedu/address/commons/util/CalendarUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"import com.calendarfx.model.Entry;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"import com.calendarfx.model.Interval;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"/**","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":" * Helper function for handling calendar entry.","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":" */","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":"public class CalendarUtil {","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":"     * Return {@code Entry} with {@code Person} appointment date.","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":"     * @param person","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":"    public static Entry createNewEntry(Person person) {","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":"        requireNonNull(person);","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"        Interval interval \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"syamfarh"},"content":"                new Interval(person.getApptDate().valueInLocalDateTime,","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"syamfarh"},"content":"                        person.getApptDate().valueInLocalDateTime.plusHours(1));","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"syamfarh"},"content":"        Entry entry \u003d new Entry(person.getName().toString(), interval, person.getName().toString());","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"syamfarh"},"content":"        return entry;","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"syamfarh"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"syamfarh":27}},{"path":"src/main/java/seedu/address/commons/util/ComparatorUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":" * A class that store comparator for sorting Person class.","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"public class ComparatorUtil {","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":"    public static final Comparator\u003cPerson\u003e APPTCOMPARATOR \u003d new Comparator\u003cPerson\u003e() {","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":"        public int compare(Person o1, Person o2) {","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":"            return o1.getApptDate().compareTo(o2.getApptDate());","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":"    };","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"    public static final Comparator\u003cPerson\u003e NAMECOMPARATOR \u003d new Comparator\u003cPerson\u003e() {","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":"        public int compare(Person o1, Person o2) {","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"            return o1.getName().compareTo(o2.getName());","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"syamfarh"},"content":"    };","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"syamfarh"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"syamfarh":24}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"bhnuka"},"content":"import java.util.List;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"bhnuka"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command.\";","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"bhnuka"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid.\";","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"limzhenwy"},"content":"    public static final String MESSAGE_NO_MULTIPLE_PREFIXES \u003d \"You are not allowed to search up multiple prefixes!\\n\"","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"limzhenwy"},"content":"            + \"Please search for either name or address or appointment date at a time.\";","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"bhnuka"},"content":"    public static final String MESSAGE_PERSON_SUFFIX_OUT_OF_RANGE \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"bhnuka"},"content":"        \"The integer suffix of the person being cloned is out of range. Please note that the smallest possible suffix\"","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"bhnuka"},"content":"        + \" that a person can have is 1 and the largest possible suffix that a person can have is 2147483647. As such,\"","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"bhnuka"},"content":"        + \" if your suffix is 0 or 2147483647, please consider editing the names of your contacts first.\";","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"limzhenwy"},"content":"    public static final String MESSAGE_WRONG_DATE_FORMAT \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"limzhenwy"},"content":"            \"Appointment Date should follow the format of \"","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"limzhenwy"},"content":"                    + \"[mm/dd/yyyy] or [dd-mm-yyyy] or [yyyy-mm-dd].\";","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"limzhenwy"},"content":"    public static final String MESSAGE_INVALID_INPUT_DATE \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"limzhenwy"},"content":"            \"Appointment Date should be after the current date.\";","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"limzhenwy"},"content":"    public static String getErrorMessageForMultiplePrefixes() {","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"limzhenwy"},"content":"        return MESSAGE_NO_MULTIPLE_PREFIXES;","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"limzhenwy"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"syamfarh"},"content":"                .append(\"; Occupation: \")","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"bhnuka"},"content":"                .append(person.getOccupation())","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"syamfarh"},"content":"                .append(\"; AppointmentDate: \")","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"syamfarh"},"content":"                .append(person.getApptDate())","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"bhnuka"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"bhnuka"},"content":"     * Formats the list of persons for display to the user.","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"bhnuka"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"bhnuka"},"content":"    public static String formatPersons(List\u003cPerson\u003e personList) {","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"bhnuka"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"bhnuka"},"content":"        for (Person person : personList) {","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"bhnuka"},"content":"            builder.append(\"\\n\")","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"bhnuka"},"content":"                    .append(person.getName())","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"bhnuka"},"content":"                    .append(\"; Phone: \").append(person.getPhone())","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"bhnuka"},"content":"                    .append(\"; Email: \").append(person.getEmail())","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"bhnuka"},"content":"                    .append(\"; Occupation: \").append(person.getOccupation())","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"bhnuka"},"content":"                    .append(\"; Address: \").append(person.getAddress())","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"bhnuka"},"content":"                    .append(\"; AppointmentDate: \").append(person.getApptDate())","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"bhnuka"},"content":"                    .append(\"; Tags: \");","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"bhnuka"},"content":"            person.getTags().forEach(builder::append);","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"bhnuka"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"bhnuka"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"limzhenwy":12,"bhnuka":30,"syamfarh":3,"-":50}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"glenngnng"},"content":"        model.storePreviousUndoableCommand(COMMAND_WORD);","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"glenngnng":1,"-":84}},{"path":"src/main/java/seedu/address/logic/commands/CalendarCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":" * Opens Calendar window.","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":"public class CalendarCommand extends Command {","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"    public static final String COMMAND_WORD \u003d \"calendar\";","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows calendar.\\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":"    public static final String SHOWING_CALENDAR_MESSAGE \u003d \"Opened calendar window.\";","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"        return new CommandResult(SHOWING_CALENDAR_MESSAGE, false, false,","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":"                true, false);","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"syamfarh":21}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"glenngnng"},"content":"import java.util.List;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"glenngnng"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"glenngnng"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"glenngnng"},"content":"    public static final String MESSAGE_FAILURE \u003d \"Address book is empty. There is nothing to clear.\";","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"glenngnng"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"glenngnng"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"glenngnng"},"content":"        if (model.getAddressBookSize() \u003d\u003d 0) {","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"glenngnng"},"content":"            throw new CommandException(MESSAGE_FAILURE);","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"glenngnng"},"content":"        while (model.getAddressBookSize() \u003e 0) {","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"glenngnng"},"content":"            int targetIndex \u003d model.getAddressBookSize() - 1;","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"glenngnng"},"content":"            Person personToDelete \u003d lastShownList.get(targetIndex);","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"glenngnng"},"content":"            model.deletePerson(personToDelete);","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"glenngnng"},"content":"        model.storePreviousUndoableCommand(COMMAND_WORD);","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"glenngnng":18,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/CloneCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bhnuka"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"bhnuka"},"content":"import java.util.List;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"bhnuka"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"bhnuka"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"bhnuka"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"bhnuka"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"bhnuka"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"bhnuka"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"bhnuka"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"bhnuka"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"bhnuka"},"content":"/**","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"bhnuka"},"content":" * Clones a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"bhnuka"},"content":" */","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"bhnuka"},"content":"public class CloneCommand extends Command {","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"bhnuka"},"content":"    public static final String COMMAND_WORD \u003d \"clone\";","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"bhnuka"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"bhnuka"},"content":"            + \": Clones the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"bhnuka"},"content":"            + \"Parameters: INDEX (must be a positive integer).\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"bhnuka"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"bhnuka"},"content":"    public static final String MESSAGE_CLONE_PERSON_SUCCESS \u003d \"Cloned Person: %1$s\";","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"bhnuka"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"bhnuka"},"content":"    public CloneCommand(Index targetIndex) {","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"bhnuka"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"bhnuka"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"bhnuka"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"bhnuka"},"content":"        assert model !\u003d null : \"Assertion Error: model is null.\";","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"bhnuka"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"bhnuka"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"bhnuka"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"bhnuka"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"bhnuka"},"content":"        Person personToClone \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"bhnuka"},"content":"        Person clonedPerson \u003d clonePerson(personToClone);","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"bhnuka"},"content":"        while (true) {","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"bhnuka"},"content":"            try {","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"bhnuka"},"content":"                model.addPerson(clonedPerson);","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"glenngnng"},"content":"                model.storePreviousUndoableCommand(COMMAND_WORD);","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"bhnuka"},"content":"                return new CommandResult(String.format(MESSAGE_CLONE_PERSON_SUCCESS, Messages.format(personToClone)));","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"bhnuka"},"content":"            } catch (DuplicatePersonException e) {","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"bhnuka"},"content":"                clonedPerson \u003d clonePerson(clonedPerson);","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"bhnuka"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"bhnuka"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"bhnuka"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"bhnuka"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"bhnuka"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"bhnuka"},"content":"            return true;","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"bhnuka"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":63,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"bhnuka"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"bhnuka"},"content":"        if (!(other instanceof CloneCommand)) {","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"bhnuka"},"content":"            return false;","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"bhnuka"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"bhnuka"},"content":"        CloneCommand otherCloneCommand \u003d (CloneCommand) other;","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"bhnuka"},"content":"        return targetIndex.equals(otherCloneCommand.targetIndex);","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":72,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":73,"author":{"gitId":"bhnuka"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"bhnuka"},"content":"    public String toString() {","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"bhnuka"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-20"},{"lineNumber":76,"author":{"gitId":"bhnuka"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-10-20"},{"lineNumber":77,"author":{"gitId":"bhnuka"},"content":"                .toString();","lastModifiedDate":"2023-10-20"},{"lineNumber":78,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":79,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":80,"author":{"gitId":"bhnuka"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":81,"author":{"gitId":"bhnuka"},"content":"     * Creates a cloned Person object with an incremented numeric suffix in the name.","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"bhnuka"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":83,"author":{"gitId":"bhnuka"},"content":"     * @param personToClone The original Person object to be cloned.","lastModifiedDate":"2023-10-23"},{"lineNumber":84,"author":{"gitId":"bhnuka"},"content":"     * @return A new Person object with the name having an incremented numeric suffix.","lastModifiedDate":"2023-10-23"},{"lineNumber":85,"author":{"gitId":"bhnuka"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":86,"author":{"gitId":"bhnuka"},"content":"    public static Person clonePerson(Person personToClone) throws CommandException {","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"bhnuka"},"content":"        String originalName \u003d personToClone.getName().toString();","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"bhnuka"},"content":"        String[] parts \u003d splitStringAtLastSpace(originalName);","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"bhnuka"},"content":"        int numericSuffix;","lastModifiedDate":"2023-10-23"},{"lineNumber":90,"author":{"gitId":"bhnuka"},"content":"        String updatedName \u003d null;","lastModifiedDate":"2023-10-28"},{"lineNumber":91,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"bhnuka"},"content":"        if (parts[1].isEmpty()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"bhnuka"},"content":"            // Case 1: name has no spaces","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"bhnuka"},"content":"            numericSuffix \u003d 1; // Add a default numeric suffix of 1","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"bhnuka"},"content":"            updatedName \u003d parts[0] + \" \" + numericSuffix;","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"bhnuka"},"content":"        } else if (!parts[1].matches(\"\\\\d+\")) {","lastModifiedDate":"2023-10-28"},{"lineNumber":97,"author":{"gitId":"bhnuka"},"content":"            // Case 2: name has spaces but suffix is not only integers","lastModifiedDate":"2023-10-28"},{"lineNumber":98,"author":{"gitId":"bhnuka"},"content":"            numericSuffix \u003d 1; // Add a default numeric suffix of 1","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"bhnuka"},"content":"            updatedName \u003d parts[0] + \" \" + parts[1] + \" \" + numericSuffix;","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"bhnuka"},"content":"        } else if (parts[1].matches(\"\\\\d+\")) {","lastModifiedDate":"2023-10-28"},{"lineNumber":101,"author":{"gitId":"bhnuka"},"content":"            // Case 3: name has spaces and suffix is only an integer","lastModifiedDate":"2023-10-28"},{"lineNumber":102,"author":{"gitId":"bhnuka"},"content":"            numericSuffix \u003d Integer.parseInt(parts[1].trim());","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"bhnuka"},"content":"            // Check if the numeric suffix is within a valid range","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"bhnuka"},"content":"            if (0 \u003c numericSuffix \u0026\u0026 numericSuffix \u003c Integer.MAX_VALUE) {","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"bhnuka"},"content":"                numericSuffix++;","lastModifiedDate":"2023-11-01"},{"lineNumber":107,"author":{"gitId":"bhnuka"},"content":"                updatedName \u003d parts[0] + \" \" + numericSuffix;","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"bhnuka"},"content":"            } else {","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"bhnuka"},"content":"                throw new CommandException(Messages.MESSAGE_PERSON_SUFFIX_OUT_OF_RANGE);","lastModifiedDate":"2023-11-01"},{"lineNumber":110,"author":{"gitId":"bhnuka"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":111,"author":{"gitId":"bhnuka"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":112,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"bhnuka"},"content":"        Name clonedName \u003d new Name(updatedName);","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"bhnuka"},"content":"        Person clonedPerson \u003d new Person(clonedName, personToClone.getPhone(), personToClone.getEmail(),","lastModifiedDate":"2023-10-23"},{"lineNumber":115,"author":{"gitId":"bhnuka"},"content":"                personToClone.getOccupation(), personToClone.getAddress(), personToClone.getApptDate(),","lastModifiedDate":"2023-10-20"},{"lineNumber":116,"author":{"gitId":"Daphne789"},"content":"                personToClone.getRiskProfile(), personToClone.getTags());","lastModifiedDate":"2023-10-27"},{"lineNumber":117,"author":{"gitId":"bhnuka"},"content":"        return clonedPerson;","lastModifiedDate":"2023-10-20"},{"lineNumber":118,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":119,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"bhnuka"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"bhnuka"},"content":"     * Splits a given string into two substrings using the last space as the delimiter.","lastModifiedDate":"2023-10-26"},{"lineNumber":122,"author":{"gitId":"bhnuka"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"bhnuka"},"content":"     * @param input The input string to be split.","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"bhnuka"},"content":"     * @return An array of two strings. The first element contains the characters before the last space,","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"bhnuka"},"content":"     *         and the second element contains the characters after the last space. If there are no spaces","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"bhnuka"},"content":"     *         in the input string, the first element contains the original string, and the second element","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"bhnuka"},"content":"     *         is an empty string.","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"bhnuka"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"bhnuka"},"content":"    public static String[] splitStringAtLastSpace(String input) {","lastModifiedDate":"2023-10-28"},{"lineNumber":130,"author":{"gitId":"bhnuka"},"content":"        int lastIndex \u003d input.lastIndexOf(\" \");","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"bhnuka"},"content":"        if (lastIndex \u003e\u003d 0) {","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"bhnuka"},"content":"            String part1 \u003d input.substring(0, lastIndex);","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"bhnuka"},"content":"            String part2 \u003d input.substring(lastIndex + 1);","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"bhnuka"},"content":"            return new String[]{part1, part2};","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"bhnuka"},"content":"        } else {","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"bhnuka"},"content":"            // Handle the case where there are no spaces in the string","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"bhnuka"},"content":"            return new String[]{input, \"\"};","lastModifiedDate":"2023-10-26"},{"lineNumber":138,"author":{"gitId":"bhnuka"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":140,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"glenngnng":1,"Daphne789":1,"bhnuka":138}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"Daphne789"},"content":"    /** Risk Assessment Questionnaire  should be shown to the user. */","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"Daphne789"},"content":"    private final boolean showQuestionnaire;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"    /** Calendar should be shown to the user. */","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"syamfarh"},"content":"    private final boolean showCalendar;","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"syamfarh"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean showQuestionnaire, boolean showCalendar,","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"syamfarh"},"content":"                         boolean exit) {","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"Daphne789"},"content":"        this.showQuestionnaire \u003d showQuestionnaire;","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"syamfarh"},"content":"        this.showCalendar \u003d showCalendar;","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"syamfarh"},"content":"        this(feedbackToUser, false, false,","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"syamfarh"},"content":"                false, false);","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"Daphne789"},"content":"    public boolean isShowQuestionnaire() {","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"Daphne789"},"content":"        return showQuestionnaire;","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"syamfarh"},"content":"    public boolean isShowCalendar() {","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"syamfarh"},"content":"        return showCalendar;","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"Daphne789"},"content":"                \u0026\u0026 showQuestionnaire \u003d\u003d otherCommandResult.showQuestionnaire","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"syamfarh"},"content":"                \u0026\u0026 showCalendar \u003d\u003d otherCommandResult.showCalendar","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"syamfarh"},"content":"        return Objects.hash(feedbackToUser, showHelp, showQuestionnaire, showCalendar, exit);","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                .add(\"feedbackToUser\", feedbackToUser)","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                .add(\"showHelp\", showHelp)","lastModifiedDate":"2019-02-23"},{"lineNumber":97,"author":{"gitId":"Daphne789"},"content":"                .add(\"showQuestionnaire\", showQuestionnaire)","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"syamfarh"},"content":"                .add(\"showCalendar\", showCalendar)","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                .add(\"exit\", exit)","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Daphne789":10,"syamfarh":14,"-":79}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"bhnuka"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"bhnuka"},"content":"            + \": Deletes the person(s) identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"bhnuka"},"content":"            + \"Parameters: INDEXES (must be positive integers, separated by spaces)\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"bhnuka"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 3 5\";","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"bhnuka"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person(s): %1$s\";","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"bhnuka"},"content":"    private final List\u003cIndex\u003e targetIndexes;","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"bhnuka"},"content":"    public DeleteCommand(List\u003cIndex\u003e targetIndexes) {","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"bhnuka"},"content":"        this.targetIndexes \u003d targetIndexes;","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"bhnuka"},"content":"        List\u003cPerson\u003e deletedPersons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"bhnuka"},"content":"        int currentIndex \u003d 0; // Initialize the current index","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"bhnuka"},"content":"        for (Index targetIndex : targetIndexes) {","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"bhnuka"},"content":"            int zeroBasedIndex \u003d targetIndex.getZeroBased() - currentIndex; // Decrement the index","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"bhnuka"},"content":"            if (zeroBasedIndex \u003e\u003d lastShownList.size() || zeroBasedIndex \u003c 0) {","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"bhnuka"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"bhnuka"},"content":"        for (Index targetIndex : targetIndexes) {","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"bhnuka"},"content":"            int zeroBasedIndex \u003d targetIndex.getZeroBased() - currentIndex;","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"bhnuka"},"content":"            Person personToDelete \u003d lastShownList.get(zeroBasedIndex);","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"glenngnng"},"content":"            model.storePreviousUndoableCommand(COMMAND_WORD);","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"bhnuka"},"content":"            deletedPersons.add(personToDelete);","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"bhnuka"},"content":"            currentIndex++;","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"bhnuka"},"content":"        model.storeDeletedNumberList(targetIndexes.size());","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"bhnuka"},"content":"        String resultMessage \u003d String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.formatPersons(deletedPersons));","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"bhnuka"},"content":"        return new CommandResult(resultMessage);","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"bhnuka"},"content":"        return targetIndexes.equals(otherDeleteCommand.targetIndexes);","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"bhnuka"},"content":"                .add(\"targetIndex\", targetIndexes)","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"glenngnng":1,"bhnuka":25,"-":60}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENTDATE;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"bhnuka"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OCCUPATION;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"syamfarh"},"content":"import seedu.address.model.person.AppointmentDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"bhnuka"},"content":"import seedu.address.model.person.Occupation;","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"Daphne789"},"content":"import seedu.address.model.person.RiskProfile;","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"bhnuka"},"content":"            + \"[\" + PREFIX_OCCUPATION + \"OCCUPATION] \"","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"syamfarh"},"content":"            + \"[\" + PREFIX_APPOINTMENTDATE + \"APPOINTMENTDATE] \"","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"syamfarh"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Client: %1$s\";","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":94,"author":{"gitId":"glenngnng"},"content":"        model.storeEditedPersonsPair(editedPerson, personToEdit);","lastModifiedDate":"2023-10-23"},{"lineNumber":95,"author":{"gitId":"glenngnng"},"content":"        model.storePreviousUndoableCommand(COMMAND_WORD);","lastModifiedDate":"2023-10-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":110,"author":{"gitId":"bhnuka"},"content":"        Occupation updatedOccupation \u003d editPersonDescriptor.getOccupation().orElse(personToEdit.getOccupation());","lastModifiedDate":"2023-10-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":112,"author":{"gitId":"syamfarh"},"content":"        AppointmentDate updatedApptDate \u003d editPersonDescriptor.getAppointmentDate().orElse(personToEdit.getApptDate());","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"Daphne789"},"content":"        RiskProfile updatedRiskProfile \u003d personToEdit.getRiskProfile();","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":116,"author":{"gitId":"syamfarh"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedOccupation, updatedAddress, updatedApptDate,","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"Daphne789"},"content":"                updatedRiskProfile, updatedTags);","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":152,"author":{"gitId":"bhnuka"},"content":"        private Occupation occupation;","lastModifiedDate":"2023-10-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":154,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":155,"author":{"gitId":"syamfarh"},"content":"        private AppointmentDate apptDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":156,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":169,"author":{"gitId":"bhnuka"},"content":"            setOccupation(toCopy.occupation);","lastModifiedDate":"2023-10-02"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":171,"author":{"gitId":"syamfarh"},"content":"            setAppointmentDate(toCopy.apptDate);","lastModifiedDate":"2023-10-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"syamfarh"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, occupation, address, apptDate, tags);","lastModifiedDate":"2023-10-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"bhnuka"},"content":"        public void setOccupation(Occupation occupation) {","lastModifiedDate":"2023-10-02"},{"lineNumber":207,"author":{"gitId":"bhnuka"},"content":"            this.occupation \u003d occupation;","lastModifiedDate":"2023-10-02"},{"lineNumber":208,"author":{"gitId":"bhnuka"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":209,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":210,"author":{"gitId":"bhnuka"},"content":"        public Optional\u003cOccupation\u003e getOccupation() {","lastModifiedDate":"2023-10-02"},{"lineNumber":211,"author":{"gitId":"bhnuka"},"content":"            return Optional.ofNullable(occupation);","lastModifiedDate":"2023-10-02"},{"lineNumber":212,"author":{"gitId":"bhnuka"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":213,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":222,"author":{"gitId":"syamfarh"},"content":"        public void setAppointmentDate(AppointmentDate apptDate) {","lastModifiedDate":"2023-10-15"},{"lineNumber":223,"author":{"gitId":"syamfarh"},"content":"            this.apptDate \u003d apptDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":224,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":225,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":226,"author":{"gitId":"syamfarh"},"content":"        public Optional\u003cAppointmentDate\u003e getAppointmentDate() {","lastModifiedDate":"2023-10-15"},{"lineNumber":227,"author":{"gitId":"syamfarh"},"content":"            return Optional.ofNullable(apptDate);","lastModifiedDate":"2023-10-15"},{"lineNumber":228,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":229,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":230,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":232,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":233,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":234,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":240,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":241,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":242,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":243,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":251,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":256,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":257,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":261,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":262,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":263,"author":{"gitId":"bhnuka"},"content":"                    \u0026\u0026 Objects.equals(occupation, otherEditPersonDescriptor.occupation)","lastModifiedDate":"2023-10-02"},{"lineNumber":264,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":265,"author":{"gitId":"syamfarh"},"content":"                    \u0026\u0026 Objects.equals(apptDate, otherEditPersonDescriptor.apptDate)","lastModifiedDate":"2023-10-15"},{"lineNumber":266,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":275,"author":{"gitId":"bhnuka"},"content":"                    .add(\"occupation\", occupation)","lastModifiedDate":"2023-10-02"},{"lineNumber":276,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":277,"author":{"gitId":"syamfarh"},"content":"                    .add(\"appointment Date\", apptDate)","lastModifiedDate":"2023-10-15"},{"lineNumber":278,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":281,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":283,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"Daphne789":3,"glenngnng":2,"bhnuka":17,"syamfarh":22,"-":239}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, false,","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":"                false, true);","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"syamfarh":2,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/FindAddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limzhenwy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"limzhenwy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"limzhenwy"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"limzhenwy"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"limzhenwy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"limzhenwy"},"content":"import seedu.address.model.person.AddressContainsKeywordsPredicate;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"limzhenwy"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"limzhenwy"},"content":" * Finds and lists all persons in address book whose address contains any of the argument keywords.","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"limzhenwy"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"limzhenwy"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"limzhenwy"},"content":"public class FindAddCommand extends Command {","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"limzhenwy"},"content":"    public static final String COMMAND_WORD \u003d \"find a/\";","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"limzhenwy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose address contain any of \"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"limzhenwy"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"limzhenwy"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"limzhenwy"},"content":"            + \"Example: \" + COMMAND_WORD + \" block 123\";","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"limzhenwy"},"content":"    private final AddressContainsKeywordsPredicate predicate;","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"limzhenwy"},"content":"    public FindAddCommand(AddressContainsKeywordsPredicate predicate) {","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"limzhenwy"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"limzhenwy"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"limzhenwy"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"limzhenwy"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"limzhenwy"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"limzhenwy"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"limzhenwy"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"limzhenwy"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"limzhenwy"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"limzhenwy"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"limzhenwy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"limzhenwy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"limzhenwy"},"content":"            return true;","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"limzhenwy"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"limzhenwy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"limzhenwy"},"content":"        if (!(other instanceof FindAddCommand)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"limzhenwy"},"content":"            return false;","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"limzhenwy"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"limzhenwy"},"content":"        FindAddCommand otherFindCommand \u003d (FindAddCommand) other;","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"limzhenwy"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"limzhenwy"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"limzhenwy"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"limzhenwy"},"content":"    public String toString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"limzhenwy"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"limzhenwy"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"limzhenwy"},"content":"                .toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"limzhenwy"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"limzhenwy"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"limzhenwy":58}},{"path":"src/main/java/seedu/address/logic/commands/FindApptCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limzhenwy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"limzhenwy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"limzhenwy"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"limzhenwy"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"limzhenwy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"limzhenwy"},"content":"import seedu.address.model.person.CalendarContainsKeywordsPredicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"limzhenwy"},"content":"/**","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"limzhenwy"},"content":" * Finds and lists all persons in address book whose appointment date contains any of the argument keywords.","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"limzhenwy"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"limzhenwy"},"content":" */","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":"public class FindApptCommand extends Command {","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"limzhenwy"},"content":"    public static final String COMMAND_WORD \u003d \"find appt/\";","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"limzhenwy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose appointment date matches \"","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"limzhenwy"},"content":"            + \"the specified input date and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"limzhenwy"},"content":"            + \"Parameters: KEYWORD\\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"limzhenwy"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2023-12-12\";","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"limzhenwy"},"content":"    private final CalendarContainsKeywordsPredicate predicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"syamfarh"},"content":"    public FindApptCommand(CalendarContainsKeywordsPredicate predicate) {","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"limzhenwy"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"limzhenwy"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"limzhenwy"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"limzhenwy"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"limzhenwy"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"limzhenwy"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"limzhenwy"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"limzhenwy"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"limzhenwy"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"limzhenwy"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"limzhenwy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"limzhenwy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"limzhenwy"},"content":"            return true;","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"limzhenwy"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"limzhenwy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"syamfarh"},"content":"        if (!(other instanceof FindApptCommand)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"limzhenwy"},"content":"            return false;","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"limzhenwy"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"syamfarh"},"content":"        FindApptCommand otherCalCommand \u003d (FindApptCommand) other;","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"limzhenwy"},"content":"        return predicate.equals(otherCalCommand.predicate);","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"limzhenwy"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"limzhenwy"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"limzhenwy"},"content":"    public String toString() {","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"limzhenwy"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"limzhenwy"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"limzhenwy"},"content":"                .toString();","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"limzhenwy"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"limzhenwy"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"limzhenwy":54,"syamfarh":4}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"limzhenwy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"limzhenwy"},"content":" * Finds and lists all persons in address book whose name or address contains any of the argument keywords.","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"limzhenwy"},"content":" * Name or address searched depends on prefix in user input.","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"limzhenwy"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"limzhenwy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names/addresses/\"","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"limzhenwy"},"content":"            + \"appointment dates contain \"","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"limzhenwy"},"content":"            + \"any of the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"limzhenwy"},"content":"            + \"Parameters: n/ or a/ or appt/ KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"limzhenwy"},"content":"            + \"Note: You can only search for either name or address or appointment date at one time.\\n\"","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"limzhenwy"},"content":"            + \"Example 1: \" + COMMAND_WORD + \" n/ alice bob\\n\"","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"limzhenwy"},"content":"            + \"Example 2: \" + COMMAND_WORD + \" a/ tokyo geylang\\n\"","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"limzhenwy"},"content":"            + \"Example 3: \" + COMMAND_WORD + \" appt/ 2023-10-31\";","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"limzhenwy"},"content":"    // main functionality of finding either by name or address lies within the individual find features","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"limzhenwy"},"content":"    // themselves, this method has no functionality","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"limzhenwy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"limzhenwy"},"content":"        throw new CommandException(\"This method is not meant to be called!\");","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"limzhenwy":17,"-":13}},{"path":"src/main/java/seedu/address/logic/commands/FindNameCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"limzhenwy"},"content":"public class FindNameCommand extends Command {","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"limzhenwy"},"content":"    public static final String COMMAND_WORD \u003d \"find n/\";","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"limzhenwy"},"content":"    public FindNameCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"limzhenwy"},"content":"        if (!(other instanceof FindNameCommand)) {","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"limzhenwy"},"content":"        FindNameCommand otherFindCommand \u003d (FindNameCommand) other;","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"limzhenwy":5,"-":53}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false,","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":"                false, false);","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"syamfarh":2,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/QuestionnaireCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Daphne789"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"Daphne789"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"Daphne789"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"Daphne789"},"content":" * Opens Questionnaire window.","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"Daphne789"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"Daphne789"},"content":"public class QuestionnaireCommand extends Command {","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"Daphne789"},"content":"    public static final String COMMAND_WORD \u003d \"questionnaire\";","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"Daphne789"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows risk assessment questionnaire.\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"Daphne789"},"content":"        + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"Daphne789"},"content":"    public static final String SHOWING_QUESTIONNAIRE_MESSAGE \u003d \"Opened questionnaire window.\";","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"Daphne789"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"Daphne789"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"        return new CommandResult(SHOWING_QUESTIONNAIRE_MESSAGE, false, true, false,","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":"                false);","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"Daphne789"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"Daphne789":19,"syamfarh":2}},{"path":"src/main/java/seedu/address/logic/commands/RiskProfileCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Daphne789"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"Daphne789"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"Daphne789"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RISKPROFILE;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"Daphne789"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"Daphne789"},"content":"import java.util.List;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"Daphne789"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"Daphne789"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"Daphne789"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"Daphne789"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"Daphne789"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"Daphne789"},"content":"import seedu.address.model.person.RiskProfile;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"Daphne789"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"Daphne789"},"content":" * Adds the risk profile of a person identified by the index number.","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"Daphne789"},"content":" * Existing risk profile will be overwritten by the input.","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"Daphne789"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"Daphne789"},"content":"public class RiskProfileCommand extends Command {","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"Daphne789"},"content":"    public static final String COMMAND_WORD \u003d \"riskprofile\";","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"Daphne789"},"content":"    public static final String MESSAGE_ADD_RISKPROFILE_SUCCESS \u003d \"Added risk profile to Person: %1$s; Phone: %2$s; \"","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"Daphne789"},"content":"        + \"Email: %3$s; Occupation: %4$s; Address: %5$s; \"","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"Daphne789"},"content":"        + \"Appointment Date: %6$s; Risk Profile: %7$s; Tags: %8$s\";","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"Daphne789"},"content":"    public static final String MESSAGE_INVALID_RESULT \u003d \"Result must have 8 comma-separated characters from \u0027a\u0027 to \u0027e\u0027!\"","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"Daphne789"},"content":"        + \"\\n%1$s\";","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"Daphne789"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds the risk profile of the person identified \"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"Daphne789"},"content":"        + \"by the index number used in the last person listing. \"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"Daphne789"},"content":"        + \"Existing risk profile will be overwritten by the input.\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"Daphne789"},"content":"        + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"Daphne789"},"content":"        + PREFIX_RISKPROFILE + \"[RESULT]\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"Daphne789"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"Daphne789"},"content":"        + PREFIX_RISKPROFILE + \"a,e,b,d,c,a,d,e\";","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"Daphne789"},"content":"    private final Index personToEdit;","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"Daphne789"},"content":"    private final RiskProfile result;","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"Daphne789"},"content":"     * @param index of the person in the filtered person list to edit the risk profile","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"Daphne789"},"content":"     * @param result of the person\u0027s quiz which will be generated into risk profile to be updated to","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"Daphne789"},"content":"    public RiskProfileCommand(Index index, RiskProfile result) {","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"Daphne789"},"content":"        requireAllNonNull(index, result);","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"Daphne789"},"content":"        this.personToEdit \u003d index;","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"Daphne789"},"content":"        this.result \u003d result;","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"Daphne789"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"Daphne789"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"Daphne789"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"Daphne789"},"content":"        if (personToEdit.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"Daphne789"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"Daphne789"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"Daphne789"},"content":"        if (!isValidResult(result.value)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"Daphne789"},"content":"            throw new CommandException(String.format(MESSAGE_INVALID_RESULT, MESSAGE_USAGE));","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"Daphne789"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"Daphne789"},"content":"        int totalScore \u003d calculateTotalScore(result.value);","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"Daphne789"},"content":"        String riskLevel \u003d calculateRiskLevel(totalScore);","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"Daphne789"},"content":"        RiskProfile riskProfile \u003d new RiskProfile(riskLevel);","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"Daphne789"},"content":"        Person personToEdit \u003d lastShownList.get(this.personToEdit.getZeroBased());","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"Daphne789"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"Daphne789"},"content":"            personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(), personToEdit.getOccupation(),","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"Daphne789"},"content":"            personToEdit.getAddress(), personToEdit.getApptDate(), riskProfile, personToEdit.getTags());","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"Daphne789"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"Daphne789"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"Daphne789"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"Daphne789"},"content":"     * Generates a command execution success message when","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"Daphne789"},"content":"     * the risk profile is added.","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"Daphne789"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"Daphne789"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"Daphne789"},"content":"        return String.format(MESSAGE_ADD_RISKPROFILE_SUCCESS,","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"Daphne789"},"content":"            personToEdit.getName(),","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"Daphne789"},"content":"            personToEdit.getPhone(),","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"Daphne789"},"content":"            personToEdit.getEmail(),","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"Daphne789"},"content":"            personToEdit.getOccupation(),","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"Daphne789"},"content":"            personToEdit.getAddress(),","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"Daphne789"},"content":"            personToEdit.getApptDate(),","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"Daphne789"},"content":"            personToEdit.getRiskProfile(),","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"Daphne789"},"content":"            personToEdit.getTags());","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"Daphne789"},"content":"     * Calculates the total score from the result.","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"Daphne789"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"Daphne789"},"content":"     * @param result The result of risk profile.","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"Daphne789"},"content":"     * @return The total score calculated from the result.","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"Daphne789"},"content":"    public static int calculateTotalScore(String result) {","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"Daphne789"},"content":"        int countA \u003d 0;","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"Daphne789"},"content":"        int countB \u003d 0;","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"Daphne789"},"content":"        int countC \u003d 0;","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"Daphne789"},"content":"        int countD \u003d 0;","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"Daphne789"},"content":"        int countE \u003d 0;","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"Daphne789"},"content":"        for (char ch : result.toCharArray()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"Daphne789"},"content":"            switch (ch) {","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"Daphne789"},"content":"            case \u0027a\u0027:","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"Daphne789"},"content":"                countA++;","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"Daphne789"},"content":"                break;","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"Daphne789"},"content":"            case \u0027b\u0027:","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"Daphne789"},"content":"                countB++;","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"Daphne789"},"content":"                break;","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"Daphne789"},"content":"            case \u0027c\u0027:","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"Daphne789"},"content":"                countC++;","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"Daphne789"},"content":"                break;","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"Daphne789"},"content":"            case \u0027d\u0027:","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"Daphne789"},"content":"                countD++;","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"Daphne789"},"content":"                break;","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"Daphne789"},"content":"            case \u0027e\u0027:","lastModifiedDate":"2023-10-26"},{"lineNumber":122,"author":{"gitId":"Daphne789"},"content":"                countE++;","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"Daphne789"},"content":"                break;","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"Daphne789"},"content":"            default:","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"Daphne789"},"content":"                break;","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"Daphne789"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"Daphne789"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"Daphne789"},"content":"        return countA + countB * 2 + countC * 3 + countD * 4 + countE * 5;","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"Daphne789"},"content":"     * Calculates the risk level based on the total score.","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"Daphne789"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"Daphne789"},"content":"     * @param totalScore The total score calculated from the result.","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"Daphne789"},"content":"     * @return The risk level determined from the total score.","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":138,"author":{"gitId":"Daphne789"},"content":"    public static String calculateRiskLevel(int totalScore) {","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"Daphne789"},"content":"        String result;","lastModifiedDate":"2023-10-26"},{"lineNumber":140,"author":{"gitId":"Daphne789"},"content":"        if (totalScore \u003e\u003d 1 \u0026\u0026 totalScore \u003c\u003d 8) {","lastModifiedDate":"2023-10-27"},{"lineNumber":141,"author":{"gitId":"Daphne789"},"content":"            result \u003d \"Low\";","lastModifiedDate":"2023-10-26"},{"lineNumber":142,"author":{"gitId":"Daphne789"},"content":"        } else if (totalScore \u003e 8 \u0026\u0026 totalScore \u003c\u003d 16) {","lastModifiedDate":"2023-10-27"},{"lineNumber":143,"author":{"gitId":"Daphne789"},"content":"            result \u003d \"Moderately Low\";","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"Daphne789"},"content":"        } else if (totalScore \u003e 16 \u0026\u0026 totalScore \u003c\u003d 24) {","lastModifiedDate":"2023-10-27"},{"lineNumber":145,"author":{"gitId":"Daphne789"},"content":"            result \u003d \"Moderate\";","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"Daphne789"},"content":"        } else if (totalScore \u003e 24 \u0026\u0026 totalScore \u003c\u003d 32) {","lastModifiedDate":"2023-10-27"},{"lineNumber":147,"author":{"gitId":"Daphne789"},"content":"            result \u003d \"Moderately High\";","lastModifiedDate":"2023-10-26"},{"lineNumber":148,"author":{"gitId":"Daphne789"},"content":"        } else if (totalScore \u003e 32 \u0026\u0026 totalScore \u003c\u003d 40) {","lastModifiedDate":"2023-10-27"},{"lineNumber":149,"author":{"gitId":"Daphne789"},"content":"            result \u003d \"High\";","lastModifiedDate":"2023-10-26"},{"lineNumber":150,"author":{"gitId":"Daphne789"},"content":"        } else {","lastModifiedDate":"2023-10-27"},{"lineNumber":151,"author":{"gitId":"Daphne789"},"content":"            result \u003d \"\";","lastModifiedDate":"2023-10-26"},{"lineNumber":152,"author":{"gitId":"Daphne789"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":153,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":154,"author":{"gitId":"Daphne789"},"content":"        return result;","lastModifiedDate":"2023-10-26"},{"lineNumber":155,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":156,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":157,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":158,"author":{"gitId":"Daphne789"},"content":"     * Checks if the given input is a valid result.","lastModifiedDate":"2023-10-27"},{"lineNumber":159,"author":{"gitId":"Daphne789"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":160,"author":{"gitId":"Daphne789"},"content":"     * @param result Result to be validated.","lastModifiedDate":"2023-10-27"},{"lineNumber":161,"author":{"gitId":"Daphne789"},"content":"     * @return {@code true} if the input is a valid result, {@code false} otherwise.","lastModifiedDate":"2023-10-27"},{"lineNumber":162,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":163,"author":{"gitId":"Daphne789"},"content":"    public static boolean isValidResult(String result) {","lastModifiedDate":"2023-10-27"},{"lineNumber":164,"author":{"gitId":"Daphne789"},"content":"        String[] characters \u003d result.split(\",\");","lastModifiedDate":"2023-10-27"},{"lineNumber":165,"author":{"gitId":"Daphne789"},"content":"        if (characters.length !\u003d 8) {","lastModifiedDate":"2023-10-27"},{"lineNumber":166,"author":{"gitId":"Daphne789"},"content":"            return false;","lastModifiedDate":"2023-10-27"},{"lineNumber":167,"author":{"gitId":"Daphne789"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":168,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":169,"author":{"gitId":"Daphne789"},"content":"        for (String character : characters) {","lastModifiedDate":"2023-10-27"},{"lineNumber":170,"author":{"gitId":"Daphne789"},"content":"            if (!character.matches(\"[abcde]\")) {","lastModifiedDate":"2023-10-27"},{"lineNumber":171,"author":{"gitId":"Daphne789"},"content":"                return false;","lastModifiedDate":"2023-10-27"},{"lineNumber":172,"author":{"gitId":"Daphne789"},"content":"            }","lastModifiedDate":"2023-10-27"},{"lineNumber":173,"author":{"gitId":"Daphne789"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":174,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":175,"author":{"gitId":"Daphne789"},"content":"        return true;","lastModifiedDate":"2023-10-27"},{"lineNumber":176,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":177,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":178,"author":{"gitId":"Daphne789"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":179,"author":{"gitId":"Daphne789"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-26"},{"lineNumber":180,"author":{"gitId":"Daphne789"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-26"},{"lineNumber":181,"author":{"gitId":"Daphne789"},"content":"            return true;","lastModifiedDate":"2023-10-26"},{"lineNumber":182,"author":{"gitId":"Daphne789"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":183,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":184,"author":{"gitId":"Daphne789"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-26"},{"lineNumber":185,"author":{"gitId":"Daphne789"},"content":"        if (!(other instanceof RiskProfileCommand)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":186,"author":{"gitId":"Daphne789"},"content":"            return false;","lastModifiedDate":"2023-10-26"},{"lineNumber":187,"author":{"gitId":"Daphne789"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":188,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":189,"author":{"gitId":"Daphne789"},"content":"        RiskProfileCommand e \u003d (RiskProfileCommand) other;","lastModifiedDate":"2023-10-26"},{"lineNumber":190,"author":{"gitId":"Daphne789"},"content":"        return personToEdit.equals(e.personToEdit)","lastModifiedDate":"2023-10-31"},{"lineNumber":191,"author":{"gitId":"Daphne789"},"content":"            \u0026\u0026 result.equals(e.result);","lastModifiedDate":"2023-10-26"},{"lineNumber":192,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":193,"author":{"gitId":"Daphne789"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"Daphne789":193}},{"path":"src/main/java/seedu/address/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":" * Sort all persons in address book by the parameter.","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sort all persons by name or appointment date.\\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"            + \"Parameters: KEYWORD [PREFIX n/ or appt/]\\n\"","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"syamfarh"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/\";","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"syamfarh"},"content":"    private final Comparator\u003cPerson\u003e sortComparator;","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"syamfarh"},"content":"    public SortCommand(Comparator\u003cPerson\u003e sortComparator) {","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"syamfarh"},"content":"        this.sortComparator \u003d sortComparator;","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"syamfarh"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"syamfarh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"syamfarh"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"syamfarh"},"content":"        model.updateSortComparator(sortComparator);","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"syamfarh"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"syamfarh"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"syamfarh"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"syamfarh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"syamfarh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"syamfarh"},"content":"            return true;","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"syamfarh"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"syamfarh"},"content":"        if (!(other instanceof SortCommand)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"syamfarh"},"content":"            return false;","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"syamfarh"},"content":"        SortCommand otherFindCommand \u003d (SortCommand) other;","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"syamfarh"},"content":"        return sortComparator.equals(otherFindCommand.sortComparator);","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"syamfarh"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"syamfarh"},"content":"    public String toString() {","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"syamfarh"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"syamfarh"},"content":"                .add(\"comparator\", sortComparator)","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"syamfarh"},"content":"                .toString();","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"syamfarh"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"syamfarh":59}},{"path":"src/main/java/seedu/address/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"glenngnng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"glenngnng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"bhnuka"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"glenngnng"},"content":"import java.util.List;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"glenngnng"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"glenngnng"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"glenngnng"},"content":"import javafx.util.Pair;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"glenngnng"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"glenngnng"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"glenngnng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"glenngnng"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"glenngnng"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"glenngnng"},"content":" * Undoes the most recent undoable command. Undoable commands are: delete, clear, add, clone, edit.","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"glenngnng"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"glenngnng"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"glenngnng"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"glenngnng"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"glenngnng"},"content":"            + \": Undoes the most recent undoable command. Undoable commands are: delete, clear, add, edit.\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"glenngnng"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"glenngnng"},"content":"    public static final String MESSAGE_FAILURE_UNDO_WITH_NO_UNDOABLE_COMMANDS \u003d \"There is no command to undo!\";","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"bhnuka"},"content":"    public static final String MESSAGE_UNDO_DELETE_SUCCESS \u003d \"Undo Successful! Contact(s) added back: %1$s\";","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"bhnuka"},"content":"    public static final String MESSAGE_UNDO_DELETE_FAILURE \u003d \"Undo Failure.\";","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"glenngnng"},"content":"    public static final String MESSAGE_UNDO_CLEAR_SUCCESS \u003d \"Undo Successful! All contacts have been added back!\";","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"glenngnng"},"content":"    public static final String MESSAGE_UNDO_ADD_SUCCESS \u003d \"Undo Successful! Deleted Person: %1$s\";","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"glenngnng"},"content":"    public static final String MESSAGE_UNDO_EDIT_SUCCESS \u003d \"Undo Successful! Reverted back to: %1$s\";","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"glenngnng"},"content":"    private static Logger logger \u003d Logger.getLogger(\"UndoCommand\");","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"glenngnng"},"content":"     * Constructor for UndoCommand is empty.","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"glenngnng"},"content":"    public UndoCommand() {};","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"glenngnng"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"glenngnng"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"glenngnng"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"glenngnng"},"content":"        if (model.getPreviousUndoableCommandsSize() \u003d\u003d 0) {","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"glenngnng"},"content":"            throw new CommandException(MESSAGE_FAILURE_UNDO_WITH_NO_UNDOABLE_COMMANDS);","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"glenngnng"},"content":"        switch(model.getPreviousUndoableCommand()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"glenngnng"},"content":"        case \"delete\":","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"glenngnng"},"content":"            logger.log(Level.INFO, \"case: delete\");","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"glenngnng"},"content":"            return executeUndoDelete(model);","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"glenngnng"},"content":"        case \"clear\":","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"glenngnng"},"content":"            logger.log(Level.INFO, \"case: clear\");","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"glenngnng"},"content":"            return executeUndoClear(model);","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"glenngnng"},"content":"        case \"add\":","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"glenngnng"},"content":"        case \"clone\":","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"glenngnng"},"content":"            logger.log(Level.INFO, \"case: add\");","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"glenngnng"},"content":"            return executeUndoAdd(model);","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"glenngnng"},"content":"        case \"edit\":","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"glenngnng"},"content":"            logger.log(Level.INFO, \"case: edit\");","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"glenngnng"},"content":"            return executeUndoEdit(model);","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"glenngnng"},"content":"        default:","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"glenngnng"},"content":"            throw new AssertionError(\"Not an undoable command! There is an error!\");","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"glenngnng"},"content":"     * Undoes a delete command.","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"glenngnng"},"content":"     * @return returns CommandResult of the message when the undo is a success.","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"glenngnng"},"content":"    public CommandResult executeUndoDelete(Model model) {","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"bhnuka"},"content":"        ArrayList\u003cPerson\u003e deletedPersons \u003d model.getDeletedPersons();","lastModifiedDate":"2023-10-28"},{"lineNumber":76,"author":{"gitId":"bhnuka"},"content":"        int numberOfDeletes \u003d model.getLastDeletedNumber();","lastModifiedDate":"2023-10-28"},{"lineNumber":77,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"glenngnng"},"content":"        // Make a new list containing only the persons deleted from the previous delete command.","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"bhnuka"},"content":"        List\u003cPerson\u003e undoDeletedPersons \u003d new ArrayList\u003c\u003e(deletedPersons.subList(deletedPersons.size()","lastModifiedDate":"2023-10-28"},{"lineNumber":80,"author":{"gitId":"bhnuka"},"content":"            - numberOfDeletes, deletedPersons.size()));","lastModifiedDate":"2023-10-28"},{"lineNumber":81,"author":{"gitId":"glenngnng"},"content":"        //can catch errors here. should assert first that deletedPersons is not empty.","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"glenngnng"},"content":"        // also possible to check if deletedPersons.size() \u003d\u003d sum of model.getLastdeletednumber()","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"bhnuka"},"content":"        String deletedPersonsDetails \u003d Messages.formatPersons(undoDeletedPersons);","lastModifiedDate":"2023-10-28"},{"lineNumber":85,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"bhnuka"},"content":"        if (deletedPersons.isEmpty() || model.getDeletedNumberList().isEmpty()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"bhnuka"},"content":"            return new CommandResult(MESSAGE_UNDO_DELETE_FAILURE);","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"bhnuka"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"glenngnng"},"content":"        // Undo the deletion of each person deleted from a single command.","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"bhnuka"},"content":"        for (Person deletedPerson : undoDeletedPersons) {","lastModifiedDate":"2023-10-28"},{"lineNumber":92,"author":{"gitId":"glenngnng"},"content":"            model.undoDelete(deletedPerson);","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"glenngnng"},"content":"            model.removePreviousUndoableCommand();","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"bhnuka"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"bhnuka"},"content":"        // Remove the corresponding number of deletes","lastModifiedDate":"2023-10-28"},{"lineNumber":97,"author":{"gitId":"glenngnng"},"content":"        model.removeLastDeletedNumber();","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"bhnuka"},"content":"        String resultMessage \u003d String.format(MESSAGE_UNDO_DELETE_SUCCESS, deletedPersonsDetails);","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"bhnuka"},"content":"        return new CommandResult(resultMessage);","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"glenngnng"},"content":"     * Undoes a clear command.","lastModifiedDate":"2023-10-24"},{"lineNumber":106,"author":{"gitId":"glenngnng"},"content":"     * @return returns CommandResult of the message when the undo is a success.","lastModifiedDate":"2023-10-24"},{"lineNumber":107,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":108,"author":{"gitId":"glenngnng"},"content":"    public CommandResult executeUndoClear(Model model) {","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":110,"author":{"gitId":"glenngnng"},"content":"        int numberOfPreviousDeleteCommands \u003d model.getNumberOfPreviousDeleteCommands();","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"glenngnng"},"content":"        // Undo each individual delete command","lastModifiedDate":"2023-10-31"},{"lineNumber":113,"author":{"gitId":"glenngnng"},"content":"        while (model.getDeletedPersonsSize() \u003e numberOfPreviousDeleteCommands) {","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"glenngnng"},"content":"            model.undoDelete();","lastModifiedDate":"2023-10-23"},{"lineNumber":115,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":116,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":117,"author":{"gitId":"glenngnng"},"content":"        // Remove \u0027clear\u0027 from the list of previous undoable commands.","lastModifiedDate":"2023-10-31"},{"lineNumber":118,"author":{"gitId":"glenngnng"},"content":"        model.removePreviousUndoableCommand();","lastModifiedDate":"2023-10-23"},{"lineNumber":119,"author":{"gitId":"glenngnng"},"content":"        return new CommandResult(String.format(MESSAGE_UNDO_CLEAR_SUCCESS));","lastModifiedDate":"2023-10-23"},{"lineNumber":120,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":121,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":122,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":123,"author":{"gitId":"glenngnng"},"content":"     * Undoes an add command.","lastModifiedDate":"2023-10-24"},{"lineNumber":124,"author":{"gitId":"glenngnng"},"content":"     * @return returns CommandResult of the message when the undo is a success.","lastModifiedDate":"2023-10-24"},{"lineNumber":125,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":126,"author":{"gitId":"glenngnng"},"content":"    public CommandResult executeUndoAdd(Model model) {","lastModifiedDate":"2023-10-23"},{"lineNumber":127,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"glenngnng"},"content":"        Person personToDelete \u003d model.getAddedPerson();","lastModifiedDate":"2023-10-31"},{"lineNumber":129,"author":{"gitId":"glenngnng"},"content":"        model.undoAdd();","lastModifiedDate":"2023-10-31"},{"lineNumber":130,"author":{"gitId":"bhnuka"},"content":"        model.removePreviousUndoableCommand();","lastModifiedDate":"2023-10-27"},{"lineNumber":131,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":132,"author":{"gitId":"glenngnng"},"content":"        return new CommandResult(String.format(MESSAGE_UNDO_ADD_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2023-10-23"},{"lineNumber":133,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":134,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":135,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":136,"author":{"gitId":"glenngnng"},"content":"     * Undoes an edit command.","lastModifiedDate":"2023-10-24"},{"lineNumber":137,"author":{"gitId":"glenngnng"},"content":"     * @return returns CommandResult of the message when the undo is a success.","lastModifiedDate":"2023-10-24"},{"lineNumber":138,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":139,"author":{"gitId":"glenngnng"},"content":"    public CommandResult executeUndoEdit(Model model) {","lastModifiedDate":"2023-10-23"},{"lineNumber":140,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":141,"author":{"gitId":"glenngnng"},"content":"        Pair\u003cPerson, Person\u003e pairToRestore \u003d model.getEditedPersonsPair();","lastModifiedDate":"2023-10-23"},{"lineNumber":142,"author":{"gitId":"glenngnng"},"content":"        Person originalPerson \u003d pairToRestore.getValue();","lastModifiedDate":"2023-10-23"},{"lineNumber":143,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":144,"author":{"gitId":"glenngnng"},"content":"        model.undoEdit();","lastModifiedDate":"2023-10-31"},{"lineNumber":145,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":146,"author":{"gitId":"glenngnng"},"content":"        model.removePreviousUndoableCommand();","lastModifiedDate":"2023-10-23"},{"lineNumber":147,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":148,"author":{"gitId":"glenngnng"},"content":"        return new CommandResult(String.format(MESSAGE_UNDO_EDIT_SUCCESS, Messages.format(originalPerson)));","lastModifiedDate":"2023-10-23"},{"lineNumber":149,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":150,"author":{"gitId":"glenngnng"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"glenngnng":129,"bhnuka":21}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENTDATE;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"bhnuka"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OCCUPATION;","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"import seedu.address.model.person.AppointmentDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"bhnuka"},"content":"import seedu.address.model.person.Occupation;","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"Daphne789"},"content":"import seedu.address.model.person.RiskProfile;","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"bhnuka"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_OCCUPATION,","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"syamfarh"},"content":"                    PREFIX_ADDRESS, PREFIX_TAG, PREFIX_APPOINTMENTDATE);","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"bhnuka"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_OCCUPATION)","lastModifiedDate":"2023-10-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"bhnuka"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_OCCUPATION,","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"bhnuka"},"content":"            PREFIX_ADDRESS);","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"bhnuka"},"content":"        Occupation occupation \u003d ParserUtil.parseOccupation(argMultimap.getValue(PREFIX_OCCUPATION).get());","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"Daphne789"},"content":"        RiskProfile riskProfile \u003d new RiskProfile(\"\");","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"syamfarh"},"content":"        AppointmentDate apptDate \u003d ParserUtil.parseAppointmentDates(argMultimap.getAllValues(PREFIX_APPOINTMENTDATE));","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"Daphne789"},"content":"        Person person \u003d new Person(name, phone, email, occupation, address, apptDate, riskProfile, tagList);","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Daphne789":3,"bhnuka":7,"syamfarh":4,"-":57}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":"import seedu.address.logic.commands.CalendarCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"bhnuka"},"content":"import seedu.address.logic.commands.CloneCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"Daphne789"},"content":"import seedu.address.logic.commands.QuestionnaireCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"Daphne789"},"content":"import seedu.address.logic.commands.RiskProfileCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"syamfarh"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"glenngnng"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2023-10-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":77,"author":{"gitId":"bhnuka"},"content":"        case CloneCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-20"},{"lineNumber":78,"author":{"gitId":"bhnuka"},"content":"            return new CloneCommandParser().parse(arguments);","lastModifiedDate":"2023-10-20"},{"lineNumber":79,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":89,"author":{"gitId":"Daphne789"},"content":"        case QuestionnaireCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"Daphne789"},"content":"            return new QuestionnaireCommand();","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"syamfarh"},"content":"        case CalendarCommand.COMMAND_WORD:","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"syamfarh"},"content":"            return new CalendarCommand();","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"Daphne789"},"content":"        case RiskProfileCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"Daphne789"},"content":"            return new RiskProfileCommandParser().parse(arguments);","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"glenngnng"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"glenngnng"},"content":"            return new UndoCommand();","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"syamfarh"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"syamfarh"},"content":"            return new SortCommandParser().parse(arguments);","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Daphne789":8,"glenngnng":4,"bhnuka":4,"syamfarh":7,"-":86}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"bhnuka"},"content":"    public static final Prefix PREFIX_OCCUPATION \u003d new Prefix(\"o/\");","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":"    public static final Prefix PREFIX_APPOINTMENTDATE \u003d new Prefix(\"appt/\");","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"Daphne789"},"content":"    public static final Prefix PREFIX_RISKPROFILE \u003d new Prefix(\"res/\");","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Daphne789":1,"bhnuka":1,"syamfarh":1,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/CloneCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bhnuka"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"bhnuka"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"bhnuka"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"bhnuka"},"content":"import seedu.address.logic.commands.CloneCommand;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"bhnuka"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"bhnuka"},"content":"/**","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"bhnuka"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"bhnuka"},"content":" */","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"bhnuka"},"content":"public class CloneCommandParser implements Parser\u003cCloneCommand\u003e {","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"bhnuka"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"bhnuka"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"bhnuka"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"bhnuka"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"bhnuka"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"bhnuka"},"content":"    public CloneCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"bhnuka"},"content":"        try {","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"bhnuka"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"bhnuka"},"content":"            return new CloneCommand(index);","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"bhnuka"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"bhnuka"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"bhnuka"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, CloneCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"bhnuka"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"bhnuka":28}},{"path":"src/main/java/seedu/address/logic/parser/DateParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limzhenwy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"limzhenwy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"limzhenwy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"limzhenwy"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"limzhenwy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"limzhenwy"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"limzhenwy"},"content":" * Parses input arguments and convert to LocalDate object.","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"limzhenwy"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"limzhenwy"},"content":"public class DateParser {","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"limzhenwy"},"content":"    public static final DateTimeFormatterBuilder STRING_TO_DATE \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"limzhenwy"},"content":"            .append(DateTimeFormatter.ofPattern(\"[MM/dd/yyyy]\" + \"[dd-MM-yyyy]\" + \"[yyyy-MM-dd]\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"limzhenwy"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"limzhenwy"},"content":"     * Parses the given {@code String} of arguments","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"limzhenwy"},"content":"     * and returns a LocalDate object.","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"limzhenwy"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"limzhenwy"},"content":"    public static LocalDate convertDate(String date) {","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"limzhenwy"},"content":"        DateTimeFormatter dateFormatter \u003d STRING_TO_DATE.toFormatter();","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"limzhenwy"},"content":"        return LocalDate.parse(date, dateFormatter);","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"limzhenwy"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"limzhenwy"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"limzhenwy"},"content":"     * Returns true if input date is after current date.","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"limzhenwy"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"limzhenwy"},"content":"    public static boolean isValidCurrentDate(String input) {","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"limzhenwy"},"content":"        LocalDate date \u003d convertDate(input);","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"limzhenwy"},"content":"        return date.isAfter(LocalDate.now());","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"limzhenwy"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"limzhenwy"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"limzhenwy"},"content":"     * Returns true if input date is of acceptable format.","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"limzhenwy"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"limzhenwy"},"content":"    public static boolean isValidFormat(String input) {","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"limzhenwy"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"limzhenwy"},"content":"            convertDate(input);","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"limzhenwy"},"content":"            return true;","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"limzhenwy"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"limzhenwy"},"content":"            return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"limzhenwy"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"limzhenwy"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"limzhenwy"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"limzhenwy":45}},{"path":"src/main/java/seedu/address/logic/parser/DateTimeParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":" * Parses input arguments and convert to LocalDate object.","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":"public class DateTimeParser {","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":"    public static final DateTimeFormatterBuilder STRINGTODATETIME \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":"            .append(DateTimeFormatter.ofPattern(\"[MM/dd/yyyy HH:mm]\" + \"[dd-MM-yyyy HH:mm]\" + \"[yyyy-MM-dd HH:mm]\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":"    public static final DateTimeFormatterBuilder DATETIMETOSTRING \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"            .append(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"     * Parses the given {@code String} of arguments","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"syamfarh"},"content":"     * and returns a LocalDate object.","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"syamfarh"},"content":"    public static LocalDateTime convertDate(String date) {","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"syamfarh"},"content":"        DateTimeFormatter dateTimeFormatter \u003d STRINGTODATETIME.toFormatter();","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"limzhenwy"},"content":"        LocalDateTime.parse(date, dateTimeFormatter);","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"syamfarh"},"content":"        return LocalDateTime.parse(date, dateTimeFormatter);","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"syamfarh"},"content":"     * Returns true if a given string is a more than current date.","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"syamfarh"},"content":"    public static boolean isValidCurrentDateTime(String date) {","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"syamfarh"},"content":"        LocalDateTime inputDate \u003d convertDate(date);","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"syamfarh"},"content":"        return inputDate.isAfter(LocalDateTime.now());","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"syamfarh"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"limzhenwy":2,"syamfarh":35}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"bhnuka"},"content":"import static seedu.address.logic.parser.ParserUtil.parseIndexes;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"bhnuka"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"bhnuka"},"content":"import java.util.List;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"bhnuka"},"content":"            List\u003cIndex\u003e indexes \u003d parseIndexes(args);","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"bhnuka"},"content":"            Collections.sort(indexes);","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"bhnuka"},"content":"            return new DeleteCommand(indexes);","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"bhnuka":7,"-":27}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENTDATE;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"bhnuka"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OCCUPATION;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"bhnuka"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_OCCUPATION,","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"syamfarh"},"content":"                PREFIX_ADDRESS, PREFIX_APPOINTMENTDATE, PREFIX_TAG);","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"bhnuka"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_OCCUPATION,","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"syamfarh"},"content":"             PREFIX_ADDRESS, PREFIX_APPOINTMENTDATE);","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"bhnuka"},"content":"        if (argMultimap.getValue(PREFIX_OCCUPATION).isPresent()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"bhnuka"},"content":"            editPersonDescriptor.setOccupation(ParserUtil.parseOccupation(argMultimap.getValue(PREFIX_OCCUPATION)","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"bhnuka"},"content":"                .get()));","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"bhnuka"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"syamfarh"},"content":"        if (argMultimap.getValue(PREFIX_APPOINTMENTDATE).isPresent()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"syamfarh"},"content":"            editPersonDescriptor","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"syamfarh"},"content":"                    .setAppointmentDate(ParserUtil.parseAppointmentDate(argMultimap","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"syamfarh"},"content":"                            .getValue(PREFIX_APPOINTMENTDATE).get()));","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"bhnuka":8,"syamfarh":9,"-":83}},{"path":"src/main/java/seedu/address/logic/parser/FindAddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limzhenwy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"limzhenwy"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"limzhenwy"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"limzhenwy"},"content":"import seedu.address.logic.commands.FindAddCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"limzhenwy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"limzhenwy"},"content":"import seedu.address.model.person.AddressContainsKeywordsPredicate;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"limzhenwy"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"limzhenwy"},"content":" * Parses input arguments and creates a new FindAddCommand object","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"limzhenwy"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"limzhenwy"},"content":"public class FindAddCommandParser implements Parser\u003cFindAddCommand\u003e {","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"limzhenwy"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"limzhenwy"},"content":"     * Parses the given {@code String} of arguments in the context of the FindAddCommand","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"limzhenwy"},"content":"     * and returns a FindAddCommand object for execution.","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"limzhenwy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"limzhenwy"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"limzhenwy"},"content":"    public FindAddCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"limzhenwy"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"limzhenwy"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"limzhenwy"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"limzhenwy"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"limzhenwy"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"limzhenwy"},"content":"        String[] addressKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"limzhenwy"},"content":"        return new FindAddCommand(new AddressContainsKeywordsPredicate(Arrays.asList(addressKeywords)));","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"limzhenwy"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"limzhenwy"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"limzhenwy":33}},{"path":"src/main/java/seedu/address/logic/parser/FindApptCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limzhenwy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"limzhenwy"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"limzhenwy"},"content":"import static seedu.address.logic.parser.DateParser.isValidCurrentDate;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"limzhenwy"},"content":"import static seedu.address.logic.parser.DateParser.isValidFormat;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"limzhenwy"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"limzhenwy"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"import seedu.address.logic.commands.FindApptCommand;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"limzhenwy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"limzhenwy"},"content":"import seedu.address.model.person.CalendarContainsKeywordsPredicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"limzhenwy"},"content":"/**","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":" * Parses input arguments and creates a new FindApptCommand object","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"limzhenwy"},"content":" */","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":"public class FindApptCommandParser implements Parser\u003cFindApptCommand\u003e {","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"limzhenwy"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":"     * Parses the given {@code String} of arguments in the context of the FindApptCommand","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"     * and returns a FindApptCommand object for execution.","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"limzhenwy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"limzhenwy"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"syamfarh"},"content":"    public FindApptCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"limzhenwy"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"limzhenwy"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"limzhenwy"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"syamfarh"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindApptCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"limzhenwy"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"limzhenwy"},"content":"        if (!isValidFormat(trimmedArgs)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"limzhenwy"},"content":"            throw new ParseException(Messages.MESSAGE_WRONG_DATE_FORMAT);","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"limzhenwy"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"limzhenwy"},"content":"        if (!isValidCurrentDate(trimmedArgs)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"limzhenwy"},"content":"            throw new ParseException(Messages.MESSAGE_INVALID_INPUT_DATE);","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"limzhenwy"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"limzhenwy"},"content":"        String[] calendarKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"syamfarh"},"content":"        return new FindApptCommand(new CalendarContainsKeywordsPredicate(Arrays.asList(calendarKeywords)));","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"limzhenwy"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"limzhenwy"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"limzhenwy":35,"syamfarh":8}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"limzhenwy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"limzhenwy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENTDATE;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"limzhenwy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"limzhenwy"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"limzhenwy"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"limzhenwy"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"limzhenwy"},"content":" * Parses the input arguments and creates a new FindCommand or FindAddCommand depending on user input prefix","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"limzhenwy"},"content":"public class FindCommandParser implements Parser\u003cCommand\u003e {","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"limzhenwy"},"content":"     * Parses the given {@code String} of arguments in the context of the UFindCommand","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"limzhenwy"},"content":"     * and returns a FindCommand or FindAddCommand object for execution.","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"limzhenwy"},"content":"     * @param args User input","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"limzhenwy"},"content":"     * @return FindCommand or FindAddCommand depending on prefix user specified","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"limzhenwy"},"content":"     * @throws ParseException if the user input does not conform with the expected format","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"limzhenwy"},"content":"    public Command parse(String args) throws ParseException {","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"limzhenwy"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"limzhenwy"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_APPOINTMENTDATE);","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"limzhenwy"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME) \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_ADDRESS)","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"limzhenwy"},"content":"                \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_APPOINTMENTDATE)) {","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"limzhenwy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"limzhenwy"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_ADDRESS, PREFIX_APPOINTMENTDATE);","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"limzhenwy"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"limzhenwy"},"content":"                \u0026\u0026 argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"limzhenwy"},"content":"            throw new ParseException(Messages.getErrorMessageForMultiplePrefixes());","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"limzhenwy"},"content":"        } else if (argMultimap.getValue(PREFIX_NAME).isPresent()","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"limzhenwy"},"content":"                \u0026\u0026 argMultimap.getValue(PREFIX_APPOINTMENTDATE).isPresent()) {","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"limzhenwy"},"content":"            throw new ParseException(Messages.getErrorMessageForMultiplePrefixes());","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"limzhenwy"},"content":"        } else if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"limzhenwy"},"content":"                \u0026\u0026 argMultimap.getValue(PREFIX_APPOINTMENTDATE).isPresent()) {","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"limzhenwy"},"content":"            throw new ParseException(Messages.getErrorMessageForMultiplePrefixes());","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"limzhenwy"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"limzhenwy"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"limzhenwy"},"content":"            return new FindNameCommandParser().parse(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-10-29"},{"lineNumber":51,"author":{"gitId":"limzhenwy"},"content":"        } else if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"limzhenwy"},"content":"            return new FindAddCommandParser().parse(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"limzhenwy"},"content":"        } else {","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"syamfarh"},"content":"            return new FindApptCommandParser().parse(argMultimap.getValue(PREFIX_APPOINTMENTDATE).get());","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"limzhenwy"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"limzhenwy"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"limzhenwy"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"limzhenwy"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"limzhenwy"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"limzhenwy"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"limzhenwy"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"limzhenwy"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"limzhenwy":45,"syamfarh":1,"-":19}},{"path":"src/main/java/seedu/address/logic/parser/FindNameCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"limzhenwy"},"content":"import seedu.address.logic.commands.FindNameCommand;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"limzhenwy"},"content":"public class FindNameCommandParser implements Parser\u003cFindNameCommand\u003e {","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"limzhenwy"},"content":"    public FindNameCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"limzhenwy"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindNameCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"limzhenwy"},"content":"        return new FindNameCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"limzhenwy":5,"-":28}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"bhnuka"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"bhnuka"},"content":"import java.util.List;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":"import seedu.address.model.person.AppointmentDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"bhnuka"},"content":"import seedu.address.model.person.Occupation;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"bhnuka"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"bhnuka"},"content":"     * Parses a space-separated list of index strings and returns a list of Index objects.","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"bhnuka"},"content":"     * @param indexesString The space-separated index strings.","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"bhnuka"},"content":"     * @return List of Index objects.","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"bhnuka"},"content":"     * @throws ParseException if any of the specified indexes is invalid (not a non-zero unsigned integer).","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"bhnuka"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"bhnuka"},"content":"    public static List\u003cIndex\u003e parseIndexes(String indexesString) throws ParseException {","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"bhnuka"},"content":"        String[] indexStrings \u003d indexesString.trim().split(\"\\\\s+\");","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"bhnuka"},"content":"        List\u003cIndex\u003e indexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"bhnuka"},"content":"        for (String indexStr : indexStrings) {","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"bhnuka"},"content":"            String trimmedIndex \u003d indexStr.trim();","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"bhnuka"},"content":"            if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"bhnuka"},"content":"                throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"bhnuka"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"bhnuka"},"content":"            indexes.add(Index.fromOneBased(Integer.parseInt(trimmedIndex)));","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"bhnuka"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"bhnuka"},"content":"        return indexes;","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"bhnuka"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":124,"author":{"gitId":"bhnuka"},"content":"     * Parses a {@code String occupation} into a {@code Occupation}.","lastModifiedDate":"2023-10-02"},{"lineNumber":125,"author":{"gitId":"bhnuka"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-02"},{"lineNumber":126,"author":{"gitId":"bhnuka"},"content":"     *","lastModifiedDate":"2023-10-02"},{"lineNumber":127,"author":{"gitId":"bhnuka"},"content":"     * @throws ParseException if the given {@code occupation} is invalid.","lastModifiedDate":"2023-10-02"},{"lineNumber":128,"author":{"gitId":"bhnuka"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":129,"author":{"gitId":"bhnuka"},"content":"    public static Occupation parseOccupation(String occupation) throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":130,"author":{"gitId":"bhnuka"},"content":"        requireNonNull(occupation);","lastModifiedDate":"2023-10-02"},{"lineNumber":131,"author":{"gitId":"bhnuka"},"content":"        String trimmedOccupation \u003d occupation.trim();","lastModifiedDate":"2023-10-02"},{"lineNumber":132,"author":{"gitId":"bhnuka"},"content":"        if (!Occupation.isValidOccupation(trimmedOccupation)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":133,"author":{"gitId":"bhnuka"},"content":"            throw new ParseException(Occupation.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"bhnuka"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":135,"author":{"gitId":"bhnuka"},"content":"        return new Occupation(trimmedOccupation);","lastModifiedDate":"2023-10-13"},{"lineNumber":136,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":137,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":138,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":139,"author":{"gitId":"syamfarh"},"content":"     * Parses a {@code String date} into a {@code AppointmentDate}.","lastModifiedDate":"2023-10-15"},{"lineNumber":140,"author":{"gitId":"syamfarh"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-15"},{"lineNumber":141,"author":{"gitId":"syamfarh"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":142,"author":{"gitId":"syamfarh"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2023-10-15"},{"lineNumber":143,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":144,"author":{"gitId":"syamfarh"},"content":"    public static AppointmentDate parseAppointmentDate(String date) throws ParseException {","lastModifiedDate":"2023-10-15"},{"lineNumber":145,"author":{"gitId":"syamfarh"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-10-15"},{"lineNumber":146,"author":{"gitId":"syamfarh"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2023-10-15"},{"lineNumber":147,"author":{"gitId":"syamfarh"},"content":"        if (date.isEmpty()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":148,"author":{"gitId":"syamfarh"},"content":"            return new AppointmentDate(\"\");","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":150,"author":{"gitId":"syamfarh"},"content":"        if (!AppointmentDate.isValidFormat(trimmedDate)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":151,"author":{"gitId":"syamfarh"},"content":"            throw new ParseException(AppointmentDate.MESSAGE_CONSTRAINTS_FORMAT);","lastModifiedDate":"2023-10-16"},{"lineNumber":152,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":153,"author":{"gitId":"syamfarh"},"content":"        if (!AppointmentDate.isValidCurrentDate(trimmedDate)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":154,"author":{"gitId":"syamfarh"},"content":"            throw new ParseException(AppointmentDate.MESSAGE_CONSTRAINTS_CURRENTDATE);","lastModifiedDate":"2023-10-16"},{"lineNumber":155,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":156,"author":{"gitId":"syamfarh"},"content":"        return new AppointmentDate(DateTimeParser.convertDate(date));","lastModifiedDate":"2023-10-26"},{"lineNumber":157,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":158,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":159,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":160,"author":{"gitId":"syamfarh"},"content":"     * Parses {@code Collection\u003cString\u003e appointmentDate} into a {@code AppointmentDate}.","lastModifiedDate":"2023-10-27"},{"lineNumber":161,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":162,"author":{"gitId":"syamfarh"},"content":"    public static AppointmentDate parseAppointmentDates(Collection\u003cString\u003e appt) throws ParseException {","lastModifiedDate":"2023-10-27"},{"lineNumber":163,"author":{"gitId":"syamfarh"},"content":"        requireNonNull(appt);","lastModifiedDate":"2023-10-27"},{"lineNumber":164,"author":{"gitId":"syamfarh"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-27"},{"lineNumber":165,"author":{"gitId":"syamfarh"},"content":"        for (String tagName : appt) {","lastModifiedDate":"2023-10-27"},{"lineNumber":166,"author":{"gitId":"syamfarh"},"content":"            return parseAppointmentDate(tagName);","lastModifiedDate":"2023-10-27"},{"lineNumber":167,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":168,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":169,"author":{"gitId":"syamfarh"},"content":"        return parseAppointmentDate(\"\");","lastModifiedDate":"2023-10-27"},{"lineNumber":170,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":171,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"bhnuka":39,"syamfarh":35,"-":124}},{"path":"src/main/java/seedu/address/logic/parser/RiskProfileCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Daphne789"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"Daphne789"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"Daphne789"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"Daphne789"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RISKPROFILE;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"Daphne789"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"Daphne789"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"Daphne789"},"content":"import seedu.address.logic.commands.RiskProfileCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"Daphne789"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"Daphne789"},"content":"import seedu.address.model.person.RiskProfile;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"Daphne789"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"Daphne789"},"content":" * Parses input arguments and creates a new {@code RiskProfileCommand} object","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"Daphne789"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"Daphne789"},"content":"public class RiskProfileCommandParser implements Parser\u003cRiskProfileCommand\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"Daphne789"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code RiskProfileCommand}","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"Daphne789"},"content":"     * and returns a {@code RiskProfileCommand} object for execution.","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"Daphne789"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"Daphne789"},"content":"    public RiskProfileCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"Daphne789"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"Daphne789"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_RISKPROFILE);","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"Daphne789"},"content":"        Index index;","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"Daphne789"},"content":"        try {","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"Daphne789"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"Daphne789"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"Daphne789"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RiskProfileCommand.MESSAGE_USAGE),","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"Daphne789"},"content":"                ive);","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"Daphne789"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"Daphne789"},"content":"        String result \u003d argMultimap.getValue(PREFIX_RISKPROFILE).orElse(\"\");","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"Daphne789"},"content":"        if (result.isEmpty()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"Daphne789"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RiskProfileCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"Daphne789"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"Daphne789"},"content":"        return new RiskProfileCommand(index, new RiskProfile(result));","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"Daphne789"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"Daphne789":42}},{"path":"src/main/java/seedu/address/logic/parser/SortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"import static seedu.address.commons.util.ComparatorUtil.APPTCOMPARATOR;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"import static seedu.address.commons.util.ComparatorUtil.NAMECOMPARATOR;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENTDATE;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":" * Parses input arguments and creates a new SortCommand object","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":"public class SortCommandParser implements Parser\u003cSortCommand\u003e {","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"     * Parses the given {@code String} of arguments in the context of the SortCommand","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":"     * and returns a SortCommand object for execution.","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"syamfarh"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"syamfarh"},"content":"    public SortCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"syamfarh"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"syamfarh"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"syamfarh"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"syamfarh"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"syamfarh"},"content":"        if (trimmedArgs.equals(PREFIX_NAME.getPrefix())) {","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"syamfarh"},"content":"            return new SortCommand(NAMECOMPARATOR);","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"syamfarh"},"content":"        } else if (trimmedArgs.equals(PREFIX_APPOINTMENTDATE.getPrefix())) {","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"syamfarh"},"content":"            return new SortCommand(APPTCOMPARATOR);","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"syamfarh"},"content":"        } else {","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"syamfarh"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"syamfarh"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"syamfarh"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"syamfarh":39}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return persons.equals(otherAddressBook.persons);","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":131,"author":{"gitId":"glenngnng"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":132,"author":{"gitId":"glenngnng"},"content":"    public int getSize() {","lastModifiedDate":"2023-10-23"},{"lineNumber":133,"author":{"gitId":"glenngnng"},"content":"        return persons.asUnmodifiableObservableList().size();","lastModifiedDate":"2023-10-23"},{"lineNumber":134,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"glenngnng":5,"-":130}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"bhnuka"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":9,"author":{"gitId":"glenngnng"},"content":"import javafx.util.Pair;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"syamfarh"},"content":"     * Updates the comparator of the filtered person list to sort by the given {@code comparator}.","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"syamfarh"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"syamfarh"},"content":"    void updateSortComparator(Comparator\u003cPerson\u003e comparator);","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"glenngnng"},"content":"    int getAddedPersonsSize();","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"glenngnng"},"content":"     * Updates and stores the most recently deleted person in the deletedPersons ArrayList.","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"glenngnng"},"content":"     * @param deletedPerson","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"glenngnng"},"content":"    void storeDeletedPerson(Person deletedPerson);","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"glenngnng"},"content":"     * Returns the most recently deleted person in the deletedPersons ArrayList.","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"glenngnng"},"content":"    Person getDeletedPerson();","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":113,"author":{"gitId":"glenngnng"},"content":"     * Removes the most recently deleted person from the deletedPersons ArrayList.","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":115,"author":{"gitId":"glenngnng"},"content":"    void removeDeletedPerson();","lastModifiedDate":"2023-10-23"},{"lineNumber":116,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":117,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"glenngnng"},"content":"     * Returns the size of the deletedPersons ArrayList.","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"glenngnng"},"content":"    int getDeletedPersonsSize();","lastModifiedDate":"2023-10-23"},{"lineNumber":121,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":122,"author":{"gitId":"bhnuka"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"bhnuka"},"content":"     * Returns a list of persons that have been previously deleted.","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"bhnuka"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"bhnuka"},"content":"     * @return A list of Person objects representing previously deleted persons.","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"bhnuka"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"bhnuka"},"content":"    ArrayList\u003cPerson\u003e getDeletedPersons();","lastModifiedDate":"2023-10-27"},{"lineNumber":128,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"glenngnng"},"content":"     * Returns the number of undoable commands in the previousUndoableCommands ArrayList.","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"glenngnng"},"content":"    int getPreviousUndoableCommandsSize();","lastModifiedDate":"2023-10-23"},{"lineNumber":133,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":134,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"glenngnng"},"content":"     * Returns the number of delete commands in the previousUndoableCommands ArrayList.","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"glenngnng"},"content":"    int getNumberOfPreviousDeleteCommands();","lastModifiedDate":"2023-10-25"},{"lineNumber":138,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":139,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":140,"author":{"gitId":"glenngnng"},"content":"     * Undoes the most recent delete command.","lastModifiedDate":"2023-10-26"},{"lineNumber":141,"author":{"gitId":"glenngnng"},"content":"     * This method should only be invoked when the previous command is a delete command.","lastModifiedDate":"2023-10-31"},{"lineNumber":142,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"glenngnng"},"content":"    void undoDelete();","lastModifiedDate":"2023-10-23"},{"lineNumber":144,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":145,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":146,"author":{"gitId":"glenngnng"},"content":"     * Overloaded method of undoDelete(). This undoes the delete command with a specific person to add back in the","lastModifiedDate":"2023-10-31"},{"lineNumber":147,"author":{"gitId":"glenngnng"},"content":"     * address book.","lastModifiedDate":"2023-10-31"},{"lineNumber":148,"author":{"gitId":"glenngnng"},"content":"     * @param deletedPerson","lastModifiedDate":"2023-10-31"},{"lineNumber":149,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":150,"author":{"gitId":"glenngnng"},"content":"    void undoDelete(Person deletedPerson);","lastModifiedDate":"2023-10-31"},{"lineNumber":151,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":152,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":153,"author":{"gitId":"glenngnng"},"content":"     * Undoes the most recent add command.","lastModifiedDate":"2023-10-31"},{"lineNumber":154,"author":{"gitId":"glenngnng"},"content":"     * This method should only be invoked when the previous command is an add command.","lastModifiedDate":"2023-10-31"},{"lineNumber":155,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":156,"author":{"gitId":"glenngnng"},"content":"    void undoAdd();","lastModifiedDate":"2023-10-31"},{"lineNumber":157,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":158,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":159,"author":{"gitId":"glenngnng"},"content":"     * Undoes the most recent edit command.","lastModifiedDate":"2023-10-31"},{"lineNumber":160,"author":{"gitId":"glenngnng"},"content":"     * This method should only be invoked when the previous command is an edit command.","lastModifiedDate":"2023-10-31"},{"lineNumber":161,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":162,"author":{"gitId":"glenngnng"},"content":"    void undoEdit();","lastModifiedDate":"2023-10-31"},{"lineNumber":163,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":164,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":165,"author":{"gitId":"glenngnng"},"content":"     * Stores the command as a String into the previousUndoableCommands ArrayList.","lastModifiedDate":"2023-10-26"},{"lineNumber":166,"author":{"gitId":"glenngnng"},"content":"     * @param s the command as a String","lastModifiedDate":"2023-10-26"},{"lineNumber":167,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":168,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":169,"author":{"gitId":"glenngnng"},"content":"    void storePreviousUndoableCommand(String s);","lastModifiedDate":"2023-10-23"},{"lineNumber":170,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":171,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":172,"author":{"gitId":"glenngnng"},"content":"     * Returns the most recent undoable command as a String from the previousUndoableCommands ArrayList.","lastModifiedDate":"2023-10-26"},{"lineNumber":173,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":174,"author":{"gitId":"glenngnng"},"content":"    String getPreviousUndoableCommand();","lastModifiedDate":"2023-10-23"},{"lineNumber":175,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":176,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":177,"author":{"gitId":"glenngnng"},"content":"     * Removes the most recent command from the previousUndoableCommands ArrayList.","lastModifiedDate":"2023-10-26"},{"lineNumber":178,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":179,"author":{"gitId":"glenngnng"},"content":"    void removePreviousUndoableCommand();","lastModifiedDate":"2023-10-23"},{"lineNumber":180,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":181,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":182,"author":{"gitId":"glenngnng"},"content":"     * Returns the size of the address book, which is the number of contacts in the address book.","lastModifiedDate":"2023-10-26"},{"lineNumber":183,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":184,"author":{"gitId":"glenngnng"},"content":"    int getAddressBookSize();","lastModifiedDate":"2023-10-23"},{"lineNumber":185,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":186,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":187,"author":{"gitId":"glenngnng"},"content":"     * Stores a pair of persons, editedPerson and originalPerson, in the editedPersons ArrayList.","lastModifiedDate":"2023-10-26"},{"lineNumber":188,"author":{"gitId":"glenngnng"},"content":"     * @param editedPerson The already edited person.","lastModifiedDate":"2023-10-26"},{"lineNumber":189,"author":{"gitId":"glenngnng"},"content":"     * @param originalPerson The original person before edit.","lastModifiedDate":"2023-10-26"},{"lineNumber":190,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":191,"author":{"gitId":"glenngnng"},"content":"    void storeEditedPersonsPair(Person editedPerson, Person originalPerson);","lastModifiedDate":"2023-10-23"},{"lineNumber":192,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":193,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":194,"author":{"gitId":"glenngnng"},"content":"     * Returns the most recently added pair of persons, editedPerson and originalPerson,","lastModifiedDate":"2023-10-26"},{"lineNumber":195,"author":{"gitId":"glenngnng"},"content":"     * from the editedPersons ArrayList.","lastModifiedDate":"2023-10-26"},{"lineNumber":196,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":197,"author":{"gitId":"glenngnng"},"content":"    Pair\u003cPerson, Person\u003e getEditedPersonsPair();","lastModifiedDate":"2023-10-23"},{"lineNumber":198,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":199,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":200,"author":{"gitId":"glenngnng"},"content":"     * Removes the most recently added pair of persons, editedPerson and originalPerson,","lastModifiedDate":"2023-10-26"},{"lineNumber":201,"author":{"gitId":"glenngnng"},"content":"     * from the editedPersons ArrayList.","lastModifiedDate":"2023-10-26"},{"lineNumber":202,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":203,"author":{"gitId":"glenngnng"},"content":"    void removeEditedPersonsPair();","lastModifiedDate":"2023-10-23"},{"lineNumber":204,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":205,"author":{"gitId":"glenngnng"},"content":"    int getEditedPersonsSize();","lastModifiedDate":"2023-10-31"},{"lineNumber":206,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":207,"author":{"gitId":"bhnuka"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":208,"author":{"gitId":"glenngnng"},"content":"     * Stores the number of deletes associated with a delete command in a queue.","lastModifiedDate":"2023-10-31"},{"lineNumber":209,"author":{"gitId":"bhnuka"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":210,"author":{"gitId":"bhnuka"},"content":"    void storeDeletedNumberList(int deletedNumber);","lastModifiedDate":"2023-10-27"},{"lineNumber":211,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":212,"author":{"gitId":"bhnuka"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":213,"author":{"gitId":"glenngnng"},"content":"     * Returns the number associated with the last delete command.","lastModifiedDate":"2023-10-31"},{"lineNumber":214,"author":{"gitId":"bhnuka"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":215,"author":{"gitId":"bhnuka"},"content":"    Integer getLastDeletedNumber();","lastModifiedDate":"2023-10-27"},{"lineNumber":216,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":217,"author":{"gitId":"bhnuka"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":218,"author":{"gitId":"glenngnng"},"content":"     * Returns the deleted number list.","lastModifiedDate":"2023-10-31"},{"lineNumber":219,"author":{"gitId":"bhnuka"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":220,"author":{"gitId":"bhnuka"},"content":"    ArrayList\u003cInteger\u003e getDeletedNumberList();","lastModifiedDate":"2023-10-27"},{"lineNumber":221,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":222,"author":{"gitId":"bhnuka"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":223,"author":{"gitId":"glenngnng"},"content":"     * Removes the last number from the number list.","lastModifiedDate":"2023-10-31"},{"lineNumber":224,"author":{"gitId":"bhnuka"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":225,"author":{"gitId":"glenngnng"},"content":"    void removeLastDeletedNumber();","lastModifiedDate":"2023-10-31"},{"lineNumber":226,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":227,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":228,"author":{"gitId":"glenngnng"},"content":"     * Updates and stores the most recently added person in the addedPersons ArrayList.","lastModifiedDate":"2023-10-31"},{"lineNumber":229,"author":{"gitId":"glenngnng"},"content":"     * Note that this method is invoked for a clone command too, since a clone will still add a person.","lastModifiedDate":"2023-10-31"},{"lineNumber":230,"author":{"gitId":"glenngnng"},"content":"     * @param addedPerson the person that was most recently added.","lastModifiedDate":"2023-10-31"},{"lineNumber":231,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":232,"author":{"gitId":"glenngnng"},"content":"    void storeAddedPerson(Person addedPerson);","lastModifiedDate":"2023-10-31"},{"lineNumber":233,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":234,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":235,"author":{"gitId":"glenngnng"},"content":"     * Returns the most recently added person in the addedPersons ArrayList.","lastModifiedDate":"2023-10-31"},{"lineNumber":236,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":237,"author":{"gitId":"glenngnng"},"content":"    Person getAddedPerson();","lastModifiedDate":"2023-10-31"},{"lineNumber":238,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":239,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":240,"author":{"gitId":"glenngnng"},"content":"     * Removes the most recently added person from the addedPersons ArrayList.","lastModifiedDate":"2023-10-31"},{"lineNumber":241,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":242,"author":{"gitId":"glenngnng"},"content":"    void removeAddedPerson();","lastModifiedDate":"2023-10-31"},{"lineNumber":243,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":244,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"glenngnng":128,"bhnuka":23,"syamfarh":7,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"import static seedu.address.commons.util.ComparatorUtil.APPTCOMPARATOR;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"glenngnng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"glenngnng"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":16,"author":{"gitId":"glenngnng"},"content":"import javafx.util.Pair;","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"glenngnng"},"content":"    private final ArrayList\u003cPerson\u003e addedPersons;","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"glenngnng"},"content":"    private final ArrayList\u003cPerson\u003e deletedPersons;","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"glenngnng"},"content":"    private final ArrayList\u003cPair\u003cPerson, Person\u003e\u003e editedPersons;","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"glenngnng"},"content":"    private ArrayList\u003cString\u003e previousUndoableCommands;","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"bhnuka"},"content":"    private ArrayList\u003cInteger\u003e deletedNumberList;","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"syamfarh"},"content":"    private Comparator\u003cPerson\u003e sortComparator;","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"glenngnng"},"content":"        addedPersons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"glenngnng"},"content":"        deletedPersons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"glenngnng"},"content":"        editedPersons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"glenngnng"},"content":"        previousUndoableCommands \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"bhnuka"},"content":"        deletedNumberList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"syamfarh"},"content":"        sortComparator \u003d APPTCOMPARATOR;","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"glenngnng"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"glenngnng"},"content":"     * Default constructor for ModelManager","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"glenngnng"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"glenngnng"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"glenngnng"},"content":"    public void storeAddedPerson(Person addedPerson) {","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"glenngnng"},"content":"        this.addedPersons.add(addedPerson);","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"glenngnng"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"glenngnng"},"content":"    public Person getAddedPerson() {","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"glenngnng"},"content":"        int lastIndex \u003d addedPersons.size() - 1;","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"glenngnng"},"content":"        return this.addedPersons.get(lastIndex);","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"glenngnng"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"glenngnng"},"content":"    public void removeAddedPerson() {","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"glenngnng"},"content":"        int lastIndex \u003d addedPersons.size() - 1;","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"glenngnng"},"content":"        this.addedPersons.remove(lastIndex);","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"glenngnng"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"glenngnng"},"content":"    public int getAddedPersonsSize() {","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"glenngnng"},"content":"        return this.addedPersons.size();","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"glenngnng"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"glenngnng"},"content":"    public void storeDeletedPerson(Person deletedPerson) {","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"glenngnng"},"content":"        this.deletedPersons.add(deletedPerson);","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"glenngnng"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"glenngnng"},"content":"    public Person getDeletedPerson() {","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"glenngnng"},"content":"        int lastIndex \u003d deletedPersons.size() - 1;","lastModifiedDate":"2023-10-23"},{"lineNumber":94,"author":{"gitId":"glenngnng"},"content":"        return this.deletedPersons.get(lastIndex);","lastModifiedDate":"2023-10-23"},{"lineNumber":95,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":96,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":97,"author":{"gitId":"glenngnng"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":98,"author":{"gitId":"glenngnng"},"content":"    public void removeDeletedPerson() {","lastModifiedDate":"2023-10-23"},{"lineNumber":99,"author":{"gitId":"glenngnng"},"content":"        int lastIndex \u003d this.deletedPersons.size() - 1;","lastModifiedDate":"2023-10-23"},{"lineNumber":100,"author":{"gitId":"glenngnng"},"content":"        this.deletedPersons.remove(lastIndex);","lastModifiedDate":"2023-10-23"},{"lineNumber":101,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"bhnuka"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"bhnuka"},"content":"    public ArrayList\u003cPerson\u003e getDeletedPersons() {","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"bhnuka"},"content":"        return this.deletedPersons;","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"glenngnng"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":109,"author":{"gitId":"glenngnng"},"content":"    public int getDeletedPersonsSize() {","lastModifiedDate":"2023-10-23"},{"lineNumber":110,"author":{"gitId":"glenngnng"},"content":"        return this.deletedPersons.size();","lastModifiedDate":"2023-10-23"},{"lineNumber":111,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":112,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":113,"author":{"gitId":"glenngnng"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":114,"author":{"gitId":"glenngnng"},"content":"    public int getPreviousUndoableCommandsSize() {","lastModifiedDate":"2023-10-23"},{"lineNumber":115,"author":{"gitId":"glenngnng"},"content":"        return this.previousUndoableCommands.size();","lastModifiedDate":"2023-10-23"},{"lineNumber":116,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":117,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":118,"author":{"gitId":"glenngnng"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"glenngnng"},"content":"    public int getNumberOfPreviousDeleteCommands() {","lastModifiedDate":"2023-10-25"},{"lineNumber":120,"author":{"gitId":"glenngnng"},"content":"        int occurrences \u003d Collections.frequency(previousUndoableCommands, \"delete\");","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"glenngnng"},"content":"        return occurrences;","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":123,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":124,"author":{"gitId":"glenngnng"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":125,"author":{"gitId":"glenngnng"},"content":"    public void storePreviousUndoableCommand(String command) {","lastModifiedDate":"2023-10-23"},{"lineNumber":126,"author":{"gitId":"glenngnng"},"content":"        this.previousUndoableCommands.add(command);","lastModifiedDate":"2023-10-23"},{"lineNumber":127,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":128,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":129,"author":{"gitId":"glenngnng"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":130,"author":{"gitId":"glenngnng"},"content":"    public String getPreviousUndoableCommand() {","lastModifiedDate":"2023-10-23"},{"lineNumber":131,"author":{"gitId":"glenngnng"},"content":"        int lastIndex \u003d this.getPreviousUndoableCommandsSize() - 1;","lastModifiedDate":"2023-10-23"},{"lineNumber":132,"author":{"gitId":"glenngnng"},"content":"        return this.previousUndoableCommands.get(lastIndex);","lastModifiedDate":"2023-10-23"},{"lineNumber":133,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":134,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":135,"author":{"gitId":"glenngnng"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":136,"author":{"gitId":"glenngnng"},"content":"    public void removePreviousUndoableCommand() {","lastModifiedDate":"2023-10-23"},{"lineNumber":137,"author":{"gitId":"glenngnng"},"content":"        int lastIndex \u003d this.getPreviousUndoableCommandsSize() - 1;","lastModifiedDate":"2023-10-23"},{"lineNumber":138,"author":{"gitId":"glenngnng"},"content":"        this.previousUndoableCommands.remove(lastIndex);","lastModifiedDate":"2023-10-23"},{"lineNumber":139,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":140,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":141,"author":{"gitId":"glenngnng"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":142,"author":{"gitId":"glenngnng"},"content":"    public void storeEditedPersonsPair(Person editedPerson, Person originalPerson) {","lastModifiedDate":"2023-10-23"},{"lineNumber":143,"author":{"gitId":"glenngnng"},"content":"        Pair\u003cPerson, Person\u003e toStore \u003d new Pair\u003c\u003e(editedPerson, originalPerson);","lastModifiedDate":"2023-10-23"},{"lineNumber":144,"author":{"gitId":"glenngnng"},"content":"        editedPersons.add(toStore);","lastModifiedDate":"2023-10-23"},{"lineNumber":145,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":146,"author":{"gitId":"glenngnng"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":147,"author":{"gitId":"glenngnng"},"content":"    public Pair\u003cPerson, Person\u003e getEditedPersonsPair() {","lastModifiedDate":"2023-10-31"},{"lineNumber":148,"author":{"gitId":"glenngnng"},"content":"        int lastIndex \u003d editedPersons.size() - 1;","lastModifiedDate":"2023-10-31"},{"lineNumber":149,"author":{"gitId":"glenngnng"},"content":"        return editedPersons.get(lastIndex);","lastModifiedDate":"2023-10-31"},{"lineNumber":150,"author":{"gitId":"glenngnng"},"content":"    };","lastModifiedDate":"2023-10-31"},{"lineNumber":151,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":152,"author":{"gitId":"glenngnng"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":153,"author":{"gitId":"glenngnng"},"content":"    public void removeEditedPersonsPair() {","lastModifiedDate":"2023-10-31"},{"lineNumber":154,"author":{"gitId":"glenngnng"},"content":"        int lastIndex \u003d editedPersons.size() - 1;","lastModifiedDate":"2023-10-31"},{"lineNumber":155,"author":{"gitId":"glenngnng"},"content":"        editedPersons.remove(lastIndex);","lastModifiedDate":"2023-10-31"},{"lineNumber":156,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":157,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":158,"author":{"gitId":"glenngnng"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":159,"author":{"gitId":"glenngnng"},"content":"    public int getEditedPersonsSize() {","lastModifiedDate":"2023-10-31"},{"lineNumber":160,"author":{"gitId":"glenngnng"},"content":"        return this.editedPersons.size();","lastModifiedDate":"2023-10-31"},{"lineNumber":161,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":162,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":163,"author":{"gitId":"bhnuka"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":164,"author":{"gitId":"bhnuka"},"content":"    public void storeDeletedNumberList(int deletedNumber) {","lastModifiedDate":"2023-10-27"},{"lineNumber":165,"author":{"gitId":"bhnuka"},"content":"        this.deletedNumberList.add(deletedNumber);","lastModifiedDate":"2023-10-27"},{"lineNumber":166,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":167,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":168,"author":{"gitId":"bhnuka"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":169,"author":{"gitId":"bhnuka"},"content":"    public Integer getLastDeletedNumber() {","lastModifiedDate":"2023-10-27"},{"lineNumber":170,"author":{"gitId":"bhnuka"},"content":"        return this.deletedNumberList.get(this.deletedNumberList.size() - 1);","lastModifiedDate":"2023-10-27"},{"lineNumber":171,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":172,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":173,"author":{"gitId":"bhnuka"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":174,"author":{"gitId":"bhnuka"},"content":"    public ArrayList\u003cInteger\u003e getDeletedNumberList() {","lastModifiedDate":"2023-10-27"},{"lineNumber":175,"author":{"gitId":"bhnuka"},"content":"        return this.deletedNumberList;","lastModifiedDate":"2023-10-27"},{"lineNumber":176,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":177,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":178,"author":{"gitId":"bhnuka"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":179,"author":{"gitId":"glenngnng"},"content":"    public void removeLastDeletedNumber() {","lastModifiedDate":"2023-10-31"},{"lineNumber":180,"author":{"gitId":"bhnuka"},"content":"        this.deletedNumberList.remove(this.deletedNumberList.size() - 1);","lastModifiedDate":"2023-10-27"},{"lineNumber":181,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":182,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":183,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":184,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":185,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":186,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":243,"author":{"gitId":"glenngnng"},"content":"        storeDeletedPerson(target);","lastModifiedDate":"2023-10-15"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":249,"author":{"gitId":"glenngnng"},"content":"        storeAddedPerson(person);","lastModifiedDate":"2023-10-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":259,"author":{"gitId":"glenngnng"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":260,"author":{"gitId":"glenngnng"},"content":"    public void undoDelete() {","lastModifiedDate":"2023-10-23"},{"lineNumber":261,"author":{"gitId":"glenngnng"},"content":"        addressBook.addPerson(getDeletedPerson());","lastModifiedDate":"2023-10-15"},{"lineNumber":262,"author":{"gitId":"glenngnng"},"content":"        this.removeDeletedPerson();","lastModifiedDate":"2023-10-23"},{"lineNumber":263,"author":{"gitId":"glenngnng"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-15"},{"lineNumber":264,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":265,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":266,"author":{"gitId":"glenngnng"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":267,"author":{"gitId":"glenngnng"},"content":"    public void undoDelete(Person person) {","lastModifiedDate":"2023-10-31"},{"lineNumber":268,"author":{"gitId":"glenngnng"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2023-10-31"},{"lineNumber":269,"author":{"gitId":"glenngnng"},"content":"        this.removeDeletedPerson();","lastModifiedDate":"2023-10-31"},{"lineNumber":270,"author":{"gitId":"glenngnng"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-31"},{"lineNumber":271,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":272,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":273,"author":{"gitId":"glenngnng"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":274,"author":{"gitId":"glenngnng"},"content":"    public void undoAdd() {","lastModifiedDate":"2023-10-31"},{"lineNumber":275,"author":{"gitId":"glenngnng"},"content":"        addressBook.removePerson(getAddedPerson());","lastModifiedDate":"2023-10-31"},{"lineNumber":276,"author":{"gitId":"glenngnng"},"content":"        this.removeAddedPerson();","lastModifiedDate":"2023-10-31"},{"lineNumber":277,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":278,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":279,"author":{"gitId":"glenngnng"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":280,"author":{"gitId":"glenngnng"},"content":"    public void undoEdit() {","lastModifiedDate":"2023-10-31"},{"lineNumber":281,"author":{"gitId":"glenngnng"},"content":"        Pair\u003cPerson, Person\u003e pairToRestore \u003d this.getEditedPersonsPair();","lastModifiedDate":"2023-10-31"},{"lineNumber":282,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":283,"author":{"gitId":"glenngnng"},"content":"        Person editedPerson \u003d pairToRestore.getKey();","lastModifiedDate":"2023-10-31"},{"lineNumber":284,"author":{"gitId":"glenngnng"},"content":"        Person originalPerson \u003d pairToRestore.getValue();","lastModifiedDate":"2023-10-31"},{"lineNumber":285,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":286,"author":{"gitId":"glenngnng"},"content":"        this.setPerson(editedPerson, originalPerson);","lastModifiedDate":"2023-10-31"},{"lineNumber":287,"author":{"gitId":"glenngnng"},"content":"        this.removeEditedPersonsPair();","lastModifiedDate":"2023-10-31"},{"lineNumber":288,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":289,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":290,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":291,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":292,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":293,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":297,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":298,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":299,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":302,"author":{"gitId":"syamfarh"},"content":"        return filteredPersons.sorted(sortComparator);","lastModifiedDate":"2023-10-19"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":311,"author":{"gitId":"syamfarh"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":312,"author":{"gitId":"syamfarh"},"content":"    public void updateSortComparator(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2023-10-19"},{"lineNumber":313,"author":{"gitId":"syamfarh"},"content":"        requireNonNull(comparator);","lastModifiedDate":"2023-10-19"},{"lineNumber":314,"author":{"gitId":"syamfarh"},"content":"        sortComparator \u003d comparator;","lastModifiedDate":"2023-10-19"},{"lineNumber":315,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":316,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":320,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":325,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":330,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":331,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":334,"author":{"gitId":"glenngnng"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":335,"author":{"gitId":"glenngnng"},"content":"    public int getAddressBookSize() {","lastModifiedDate":"2023-10-23"},{"lineNumber":336,"author":{"gitId":"glenngnng"},"content":"        return addressBook.getSize();","lastModifiedDate":"2023-10-23"},{"lineNumber":337,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":338,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"glenngnng":156,"bhnuka":26,"syamfarh":11,"-":146}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"glenngnng"},"content":"    int getSize();","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"glenngnng":2,"-":17}},{"path":"src/main/java/seedu/address/model/person/AddressContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limzhenwy"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"limzhenwy"},"content":"import java.util.List;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"limzhenwy"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"limzhenwy"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"limzhenwy"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"limzhenwy"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"limzhenwy"},"content":" * Tests that a {@code Person}\u0027s {@code Address} matches any of the keywords given.","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"limzhenwy"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"limzhenwy"},"content":"public class AddressContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"limzhenwy"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"limzhenwy"},"content":"    public AddressContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"limzhenwy"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"limzhenwy"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"limzhenwy"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"limzhenwy"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"limzhenwy"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"limzhenwy"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getAddress().value, keyword));","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"limzhenwy"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"limzhenwy"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"limzhenwy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"limzhenwy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"limzhenwy"},"content":"            return true;","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"limzhenwy"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"limzhenwy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"limzhenwy"},"content":"        if (!(other instanceof AddressContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"limzhenwy"},"content":"            return false;","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"limzhenwy"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"limzhenwy"},"content":"        AddressContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (AddressContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"limzhenwy"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"limzhenwy"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"limzhenwy"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"limzhenwy"},"content":"    public String toString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"limzhenwy"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"limzhenwy"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"limzhenwy"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"limzhenwy":44}},{"path":"src/main/java/seedu/address/model/person/AppointmentDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"import static seedu.address.logic.parser.DateTimeParser.DATETIMETOSTRING;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"import seedu.address.logic.parser.DateTimeParser;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":" * Represents a Person\u0027s appointment Date in the address book.","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidFormat(String)}}","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":"public class AppointmentDate implements Comparable\u003cAppointmentDate\u003e {","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":"    public static final String MESSAGE_CONSTRAINTS_FORMAT \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"            \"Appointment Date should follow the format of \"","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":"                    + \"[mm/dd/yyyy HH:mm] or [dd-mm-yyyy HH:mm] or [yyyy-mm-dd HH:mm]\";","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"    public static final String MESSAGE_CONSTRAINTS_CURRENTDATE \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"syamfarh"},"content":"            \"Appointment Date should be after the current date\";","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"syamfarh"},"content":"    public final String value;","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"syamfarh"},"content":"    public final LocalDateTime valueInLocalDateTime;","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"syamfarh"},"content":"     * Constructs an {@code AppointmentDate}.","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"syamfarh"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"syamfarh"},"content":"     * @param date A valid appointment Date in String type.","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"syamfarh"},"content":"    public AppointmentDate(String date) {","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"syamfarh"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"syamfarh"},"content":"        value \u003d date;","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"syamfarh"},"content":"        if (date.equals(\"\")) {","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"syamfarh"},"content":"            valueInLocalDateTime \u003d LocalDateTime.now().plusYears(50);","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"syamfarh"},"content":"        } else {","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"syamfarh"},"content":"            valueInLocalDateTime \u003d DateTimeParser.convertDate(date);","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"syamfarh"},"content":"     * Constructs an {@code AppointmentDate}.","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"syamfarh"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"syamfarh"},"content":"     * @param date A valid appointment Date in LocalDate type.","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"syamfarh"},"content":"    public AppointmentDate(LocalDateTime date) {","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"syamfarh"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"syamfarh"},"content":"        valueInLocalDateTime \u003d date;","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"syamfarh"},"content":"        value \u003d date.format(DATETIMETOSTRING.toFormatter());","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"syamfarh"},"content":"     * Returns true if a given string is a valid format date.","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"syamfarh"},"content":"    public static boolean isValidFormat(String test) {","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"syamfarh"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"syamfarh"},"content":"            DateTimeParser.convertDate(test);","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"syamfarh"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"syamfarh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"syamfarh"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"syamfarh"},"content":"     * Returns true if a given string is a valid date compare to current date.","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"syamfarh"},"content":"    public static boolean isValidCurrentDate(String test) {","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"syamfarh"},"content":"        try {","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"syamfarh"},"content":"            return DateTimeParser.isValidCurrentDateTime(test);","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"syamfarh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"syamfarh"},"content":"            return false;","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"syamfarh"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"syamfarh"},"content":"    public String toString() {","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"syamfarh"},"content":"        return value;","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"syamfarh"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"syamfarh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"syamfarh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"syamfarh"},"content":"                || (other instanceof AppointmentDate // instanceof handles nulls","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"syamfarh"},"content":"                \u0026\u0026 value.equals(((AppointmentDate) other).value)); // state check","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"syamfarh"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"syamfarh"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"syamfarh"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"syamfarh"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"syamfarh"},"content":"    public int compareTo(AppointmentDate o) {","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"syamfarh"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"syamfarh"},"content":"            return 0;","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"syamfarh"},"content":"        if (valueInLocalDateTime.isEqual(o.valueInLocalDateTime)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":103,"author":{"gitId":"syamfarh"},"content":"            return 0;","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"syamfarh"},"content":"        } else if (valueInLocalDateTime.isAfter(o.valueInLocalDateTime)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":105,"author":{"gitId":"syamfarh"},"content":"            return 1;","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"syamfarh"},"content":"        } else if (valueInLocalDateTime.isBefore(o.valueInLocalDateTime)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":107,"author":{"gitId":"syamfarh"},"content":"            return -1;","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"syamfarh"},"content":"        return 0;","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"syamfarh"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"syamfarh":112}},{"path":"src/main/java/seedu/address/model/person/CalendarContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limzhenwy"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"limzhenwy"},"content":"import java.util.List;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"limzhenwy"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"limzhenwy"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"limzhenwy"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"limzhenwy"},"content":"/**","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"limzhenwy"},"content":" * Tests that a {@code Person}\u0027s {@code AppointmentDate} matches any of the keywords given.","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"limzhenwy"},"content":" */","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"limzhenwy"},"content":"public class CalendarContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"limzhenwy"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"limzhenwy"},"content":"    public CalendarContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"limzhenwy"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"limzhenwy"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"limzhenwy"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"limzhenwy"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"limzhenwy"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"limzhenwy"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getApptDate().value, keyword));","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"limzhenwy"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"limzhenwy"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"limzhenwy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"limzhenwy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"limzhenwy"},"content":"            return true;","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"limzhenwy"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"limzhenwy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"limzhenwy"},"content":"        if (!(other instanceof CalendarContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"limzhenwy"},"content":"            return false;","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"limzhenwy"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"limzhenwy"},"content":"        CalendarContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"limzhenwy"},"content":"                (CalendarContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"limzhenwy"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"limzhenwy"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"limzhenwy"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"limzhenwy"},"content":"    public String toString() {","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"limzhenwy"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"limzhenwy"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"limzhenwy"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"limzhenwy":44}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"public class Name implements Comparable\u003cName\u003e {","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return fullName.equals(otherName.fullName);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"syamfarh"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"syamfarh"},"content":"    public int compareTo(Name o) {","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"syamfarh"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"syamfarh"},"content":"            return 0;","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"syamfarh"},"content":"        int compare \u003d this.fullName.compareToIgnoreCase(o.fullName);","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"syamfarh"},"content":"        if (compare \u003d\u003d 0) {","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"syamfarh"},"content":"            return 0;","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"syamfarh"},"content":"        } else if (compare \u003c 0) {","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"syamfarh"},"content":"            return -1;","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"syamfarh"},"content":"        } else {","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"syamfarh"},"content":"            return 1;","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"syamfarh":15,"-":66}},{"path":"src/main/java/seedu/address/model/person/Occupation.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bhnuka"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"bhnuka"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"bhnuka"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"bhnuka"},"content":"/**","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"bhnuka"},"content":" * Represents a Person\u0027s occupation in the address book.","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"bhnuka"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidOccupation(String)}","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"bhnuka"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"bhnuka"},"content":"public class Occupation {","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"bhnuka"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"bhnuka"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"bhnuka"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"bhnuka"},"content":"     * The first character of the occupation must not be a whitespace,","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"bhnuka"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"bhnuka"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"bhnuka"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"bhnuka"},"content":"    public final String fullOccupation;","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"bhnuka"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"bhnuka"},"content":"     * Constructs a {@code Occupation}.","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"bhnuka"},"content":"     *","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"bhnuka"},"content":"     * @param occupation A valid occupation.","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"bhnuka"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"bhnuka"},"content":"    public Occupation(String occupation) {","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"bhnuka"},"content":"        requireNonNull(occupation);","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"bhnuka"},"content":"        checkArgument(isValidOccupation(occupation), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"bhnuka"},"content":"        fullOccupation \u003d occupation;","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"bhnuka"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"bhnuka"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"bhnuka"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"bhnuka"},"content":"    public static boolean isValidOccupation(String test) {","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"bhnuka"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":42,"author":{"gitId":"bhnuka"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":43,"author":{"gitId":"bhnuka"},"content":"    public String toString() {","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"bhnuka"},"content":"        return fullOccupation;","lastModifiedDate":"2023-10-02"},{"lineNumber":45,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":46,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":47,"author":{"gitId":"bhnuka"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":48,"author":{"gitId":"bhnuka"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-02"},{"lineNumber":49,"author":{"gitId":"bhnuka"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-02"},{"lineNumber":50,"author":{"gitId":"bhnuka"},"content":"            return true;","lastModifiedDate":"2023-10-02"},{"lineNumber":51,"author":{"gitId":"bhnuka"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":52,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":53,"author":{"gitId":"bhnuka"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-02"},{"lineNumber":54,"author":{"gitId":"bhnuka"},"content":"        if (!(other instanceof Occupation)) {","lastModifiedDate":"2023-10-02"},{"lineNumber":55,"author":{"gitId":"bhnuka"},"content":"            return false;","lastModifiedDate":"2023-10-02"},{"lineNumber":56,"author":{"gitId":"bhnuka"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":57,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":58,"author":{"gitId":"bhnuka"},"content":"        Occupation otherOccupation \u003d (Occupation) other;","lastModifiedDate":"2023-10-02"},{"lineNumber":59,"author":{"gitId":"bhnuka"},"content":"        return fullOccupation.equals(otherOccupation.fullOccupation);","lastModifiedDate":"2023-10-02"},{"lineNumber":60,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":61,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":62,"author":{"gitId":"bhnuka"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":63,"author":{"gitId":"bhnuka"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-02"},{"lineNumber":64,"author":{"gitId":"bhnuka"},"content":"        return fullOccupation.hashCode();","lastModifiedDate":"2023-10-02"},{"lineNumber":65,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":66,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":67,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"bhnuka":67}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"bhnuka"},"content":"    private final Occupation occupation;","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"syamfarh"},"content":"    private final AppointmentDate apptDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"Daphne789"},"content":"    private final RiskProfile riskProfile;","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"syamfarh"},"content":"    public Person(Name name, Phone phone, Email email, Occupation occupation, Address address,","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"Daphne789"},"content":"                  AppointmentDate apptDate, RiskProfile result, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"bhnuka"},"content":"        requireAllNonNull(name, phone, email, occupation, address, tags);","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"bhnuka"},"content":"        this.occupation \u003d occupation;","lastModifiedDate":"2023-10-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"syamfarh"},"content":"        this.apptDate \u003d apptDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"Daphne789"},"content":"        this.riskProfile \u003d result;","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"bhnuka"},"content":"    public Occupation getOccupation() {","lastModifiedDate":"2023-10-02"},{"lineNumber":62,"author":{"gitId":"bhnuka"},"content":"        return occupation;","lastModifiedDate":"2023-10-02"},{"lineNumber":63,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":64,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":69,"author":{"gitId":"syamfarh"},"content":"    public AppointmentDate getApptDate() {","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"syamfarh"},"content":"        return apptDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":73,"author":{"gitId":"Daphne789"},"content":"    public RiskProfile getRiskProfile() {","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"Daphne789"},"content":"        return riskProfile;","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":117,"author":{"gitId":"bhnuka"},"content":"                \u0026\u0026 occupation.equals(otherPerson.occupation)","lastModifiedDate":"2023-10-02"},{"lineNumber":118,"author":{"gitId":"syamfarh"},"content":"                \u0026\u0026 apptDate.equals(otherPerson.apptDate)","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"syamfarh"},"content":"        return Objects.hash(name, phone, email, occupation, address, apptDate, tags);","lastModifiedDate":"2023-10-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":135,"author":{"gitId":"bhnuka"},"content":"                .add(\"occupation\", occupation)","lastModifiedDate":"2023-10-02"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":137,"author":{"gitId":"syamfarh"},"content":"                .add(\"appointmentDate\", apptDate)","lastModifiedDate":"2023-10-15"},{"lineNumber":138,"author":{"gitId":"Daphne789"},"content":"                .add(\"riskProfile\", riskProfile)","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Daphne789":7,"bhnuka":10,"syamfarh":12,"-":114}},{"path":"src/main/java/seedu/address/model/person/RiskProfile.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Daphne789"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"Daphne789"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"Daphne789"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"Daphne789"},"content":" * Represents a Person\u0027s risk profile in the address book.","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"Daphne789"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"Daphne789"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"Daphne789"},"content":"public class RiskProfile {","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"Daphne789"},"content":"    public final String value;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"Daphne789"},"content":"     * Constructs a {@code RiskProfile} object with the given result.","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"Daphne789"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"Daphne789"},"content":"     * @param result The result for risk profile.","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"Daphne789"},"content":"    public RiskProfile(String result) {","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"Daphne789"},"content":"        requireNonNull(result);","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"Daphne789"},"content":"        value \u003d result;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"Daphne789"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"Daphne789"},"content":"    public String toString() {","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"Daphne789"},"content":"        return value;","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"Daphne789"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"Daphne789"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"Daphne789"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"Daphne789"},"content":"            || (other instanceof RiskProfile // instanceof handles nulls","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"Daphne789"},"content":"            \u0026\u0026 value.equals(((RiskProfile) other).value)); // state check","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"Daphne789"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"Daphne789"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"Daphne789"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"Daphne789"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"Daphne789":38}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"import seedu.address.model.person.AppointmentDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"bhnuka"},"content":"import seedu.address.model.person.Occupation;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"Daphne789"},"content":"import seedu.address.model.person.RiskProfile;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"Daphne789"},"content":"    public static final RiskProfile EMPTY_RISKPROFILE \u003d new RiskProfile(\"\");","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"bhnuka"},"content":"                new Occupation(\"Software Engineer\"), new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"Daphne789"},"content":"                    new AppointmentDate(\"\"), EMPTY_RISKPROFILE, getTagSet(\"friends\")),","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"bhnuka"},"content":"                new Occupation(\"Violinist\"), new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"Daphne789"},"content":"                    new AppointmentDate(\"\"), EMPTY_RISKPROFILE, getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"bhnuka"},"content":"                new Occupation(\"Gardener\"), new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"Daphne789"},"content":"                    new AppointmentDate(\"\"), EMPTY_RISKPROFILE, getTagSet(\"neighbours\")),","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"bhnuka"},"content":"                new Occupation(\"Prison Warden\"), new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"Daphne789"},"content":"                    new AppointmentDate(\"\"), EMPTY_RISKPROFILE, getTagSet(\"family\")),","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"bhnuka"},"content":"                new Occupation(\"University Lecturer\"), new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"Daphne789"},"content":"                    new AppointmentDate(\"\"), EMPTY_RISKPROFILE, getTagSet(\"classmates\")),","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"bhnuka"},"content":"                new Occupation(\"Fish Monger\"), new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"Daphne789"},"content":"                    new AppointmentDate(\"\"), EMPTY_RISKPROFILE, getTagSet(\"colleagues\"))","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"Daphne789":8,"bhnuka":7,"syamfarh":1,"-":48}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":"import seedu.address.model.person.AppointmentDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"bhnuka"},"content":"import seedu.address.model.person.Occupation;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"Daphne789"},"content":"import seedu.address.model.person.RiskProfile;","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"bhnuka"},"content":"    private final String occupation;","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"syamfarh"},"content":"    private final String appointmentDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"Daphne789"},"content":"    private final String riskProfile;","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"bhnuka"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"occupation\") String occupation,","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"syamfarh"},"content":"            @JsonProperty(\"address\") String address, @JsonProperty(\"appointmentDate\") String appointmentDate,","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"Daphne789"},"content":"            @JsonProperty(\"riskProfile\") String result, @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"bhnuka"},"content":"        this.occupation \u003d occupation;","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"syamfarh"},"content":"        this.appointmentDate \u003d appointmentDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"Daphne789"},"content":"        this.riskProfile \u003d result;","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"bhnuka"},"content":"        occupation \u003d source.getOccupation().fullOccupation;","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"syamfarh"},"content":"        appointmentDate \u003d source.getApptDate().value;","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"Daphne789"},"content":"        riskProfile \u003d source.getRiskProfile().value;","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"bhnuka"},"content":"        if (occupation \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"bhnuka"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"bhnuka"},"content":"                    Occupation.class.getSimpleName()));","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"bhnuka"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"bhnuka"},"content":"        if (!Occupation.isValidOccupation(occupation)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"bhnuka"},"content":"            throw new IllegalValueException(Occupation.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"bhnuka"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"bhnuka"},"content":"        final Occupation modelOccupation \u003d new Occupation(occupation);","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"syamfarh"},"content":"        final AppointmentDate modelAppointmentDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":130,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":131,"author":{"gitId":"syamfarh"},"content":"        if (appointmentDate.equals(\"\")) {","lastModifiedDate":"2023-10-15"},{"lineNumber":132,"author":{"gitId":"syamfarh"},"content":"            modelAppointmentDate \u003d new AppointmentDate(\"\");","lastModifiedDate":"2023-10-15"},{"lineNumber":133,"author":{"gitId":"syamfarh"},"content":"        } else if (!AppointmentDate.isValidFormat(appointmentDate)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"syamfarh"},"content":"            throw new IllegalValueException(AppointmentDate.MESSAGE_CONSTRAINTS_FORMAT);","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"syamfarh"},"content":"        } else if (!AppointmentDate.isValidCurrentDate(appointmentDate)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"syamfarh"},"content":"            modelAppointmentDate \u003d new AppointmentDate(\"\");","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"syamfarh"},"content":"        } else {","lastModifiedDate":"2023-10-15"},{"lineNumber":138,"author":{"gitId":"syamfarh"},"content":"            modelAppointmentDate \u003d new AppointmentDate(appointmentDate);","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":140,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":141,"author":{"gitId":"Daphne789"},"content":"        if (riskProfile \u003d\u003d null) {","lastModifiedDate":"2023-10-26"},{"lineNumber":142,"author":{"gitId":"Daphne789"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"Daphne789"},"content":"                RiskProfile.class.getSimpleName()));","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"Daphne789"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"Daphne789"},"content":"        final RiskProfile modelRiskProfile \u003d new RiskProfile(riskProfile);","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"syamfarh"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelOccupation, modelAddress,","lastModifiedDate":"2023-10-15"},{"lineNumber":149,"author":{"gitId":"Daphne789"},"content":"                modelAppointmentDate, modelRiskProfile, modelTags);","lastModifiedDate":"2023-10-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Daphne789":12,"bhnuka":14,"syamfarh":20,"-":106}},{"path":"src/main/java/seedu/address/ui/CalendarWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"import com.calendarfx.model.Calendar;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":"import com.calendarfx.model.CalendarSource;","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"import com.calendarfx.view.CalendarView;","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":"import javafx.event.EventHandler;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":"import seedu.address.commons.util.CalendarUtil;","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"syamfarh"},"content":"/**","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"syamfarh"},"content":" * Displays the Calendar.","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"syamfarh"},"content":" * It contains appointment date of clients.","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"syamfarh"},"content":" */","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"syamfarh"},"content":"public class CalendarWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"syamfarh"},"content":"    private static final String FXML \u003d \"CalendarWindow.fxml\";","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"syamfarh"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(CalendarWindow.class);","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"syamfarh"},"content":"    private Calendar clients;","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"syamfarh"},"content":"    private Logic logic;","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"syamfarh"},"content":"    private Thread updateTimeThread;","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"syamfarh"},"content":"    private CalendarView calendarView;","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"syamfarh"},"content":"    private EventHandler\u003cKeyEvent\u003e keyNavigator \u003d new EventHandler\u003cKeyEvent\u003e() {","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"syamfarh"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"syamfarh"},"content":"        public void handle(KeyEvent event) {","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"syamfarh"},"content":"            switch (event.getCode()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"syamfarh"},"content":"            case LEFT:","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"syamfarh"},"content":"                calendarView.getMonthPage().goBack();","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"syamfarh"},"content":"                break;","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"syamfarh"},"content":"            case RIGHT:","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"syamfarh"},"content":"                calendarView.getMonthPage().goForward();","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"syamfarh"},"content":"                break;","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"syamfarh"},"content":"            case ENTER:","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"syamfarh"},"content":"                calendarView.getMonthPage().goToday();","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"syamfarh"},"content":"                break;","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"syamfarh"},"content":"            default:","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"syamfarh"},"content":"                break;","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"syamfarh"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"syamfarh"},"content":"    };","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"syamfarh"},"content":"     * Creates a new CalendarWindow.","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"syamfarh"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"syamfarh"},"content":"     * @param root Stage to use as the root of the CalendarWindow.","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"syamfarh"},"content":"    public CalendarWindow(Stage root) {","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"syamfarh"},"content":"        super(FXML, root);","lastModifiedDate":"2023-10-28"},{"lineNumber":66,"author":{"gitId":"syamfarh"},"content":"        //configure calendar view","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"syamfarh"},"content":"        calendarView \u003d new CalendarView();","lastModifiedDate":"2023-10-28"},{"lineNumber":68,"author":{"gitId":"syamfarh"},"content":"        clients \u003d new Calendar(\"Clients\");","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"syamfarh"},"content":"        CalendarSource myCalendarSource \u003d new CalendarSource(\"My Calendars\");","lastModifiedDate":"2023-10-28"},{"lineNumber":70,"author":{"gitId":"syamfarh"},"content":"        myCalendarSource.getCalendars().addAll(clients);","lastModifiedDate":"2023-10-28"},{"lineNumber":71,"author":{"gitId":"syamfarh"},"content":"        calendarView.getCalendarSources().addAll(myCalendarSource);","lastModifiedDate":"2023-10-28"},{"lineNumber":72,"author":{"gitId":"syamfarh"},"content":"        clients.setStyle(Calendar.Style.STYLE1);","lastModifiedDate":"2023-10-28"},{"lineNumber":73,"author":{"gitId":"syamfarh"},"content":"        calendarView.setRequestedTime(LocalTime.now());","lastModifiedDate":"2023-10-28"},{"lineNumber":74,"author":{"gitId":"syamfarh"},"content":"        //prevent adding events directly to calendar window","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"syamfarh"},"content":"        calendarView.getMonthPage().getMonthView().setDisable(true);","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"syamfarh"},"content":"        updateTimeThread \u003d new Thread(\"Calendar: Update Time Thread\") {","lastModifiedDate":"2023-10-28"},{"lineNumber":77,"author":{"gitId":"syamfarh"},"content":"            @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":78,"author":{"gitId":"syamfarh"},"content":"            public void run() {","lastModifiedDate":"2023-10-28"},{"lineNumber":79,"author":{"gitId":"syamfarh"},"content":"                while (true) {","lastModifiedDate":"2023-10-28"},{"lineNumber":80,"author":{"gitId":"syamfarh"},"content":"                    Platform.runLater(() -\u003e {","lastModifiedDate":"2023-10-28"},{"lineNumber":81,"author":{"gitId":"syamfarh"},"content":"                        calendarView.setToday(LocalDate.now());","lastModifiedDate":"2023-10-28"},{"lineNumber":82,"author":{"gitId":"syamfarh"},"content":"                        calendarView.setTime(LocalTime.now());","lastModifiedDate":"2023-10-28"},{"lineNumber":83,"author":{"gitId":"syamfarh"},"content":"                    });","lastModifiedDate":"2023-10-28"},{"lineNumber":84,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":85,"author":{"gitId":"syamfarh"},"content":"                    try {","lastModifiedDate":"2023-10-28"},{"lineNumber":86,"author":{"gitId":"syamfarh"},"content":"                        // update every 10 seconds","lastModifiedDate":"2023-10-28"},{"lineNumber":87,"author":{"gitId":"syamfarh"},"content":"                        sleep(10000);","lastModifiedDate":"2023-10-28"},{"lineNumber":88,"author":{"gitId":"syamfarh"},"content":"                    } catch (InterruptedException e) {","lastModifiedDate":"2023-10-28"},{"lineNumber":89,"author":{"gitId":"syamfarh"},"content":"                        e.printStackTrace();","lastModifiedDate":"2023-10-28"},{"lineNumber":90,"author":{"gitId":"syamfarh"},"content":"                    }","lastModifiedDate":"2023-10-28"},{"lineNumber":91,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":92,"author":{"gitId":"syamfarh"},"content":"                }","lastModifiedDate":"2023-10-28"},{"lineNumber":93,"author":{"gitId":"syamfarh"},"content":"            }","lastModifiedDate":"2023-10-28"},{"lineNumber":94,"author":{"gitId":"syamfarh"},"content":"        };","lastModifiedDate":"2023-10-28"},{"lineNumber":95,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":96,"author":{"gitId":"syamfarh"},"content":"        updateTimeThread.setPriority(Thread.MIN_PRIORITY);","lastModifiedDate":"2023-10-28"},{"lineNumber":97,"author":{"gitId":"syamfarh"},"content":"        updateTimeThread.setDaemon(true);","lastModifiedDate":"2023-10-28"},{"lineNumber":98,"author":{"gitId":"syamfarh"},"content":"        updateTimeThread.start();","lastModifiedDate":"2023-10-28"},{"lineNumber":99,"author":{"gitId":"syamfarh"},"content":"        //set calendar view in scene","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"syamfarh"},"content":"        Scene scene \u003d new Scene(calendarView.getMonthPage());","lastModifiedDate":"2023-10-28"},{"lineNumber":101,"author":{"gitId":"syamfarh"},"content":"        //add eventHandler for navigating calendar window to different month page","lastModifiedDate":"2023-11-02"},{"lineNumber":102,"author":{"gitId":"syamfarh"},"content":"        scene.addEventFilter(KeyEvent.KEY_PRESSED, keyNavigator);","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"syamfarh"},"content":"        root.setScene(scene);","lastModifiedDate":"2023-10-28"},{"lineNumber":104,"author":{"gitId":"syamfarh"},"content":"        root.setResizable(true);","lastModifiedDate":"2023-10-28"},{"lineNumber":105,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":106,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":107,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":108,"author":{"gitId":"syamfarh"},"content":"     * Creates a new CalendarWindow.","lastModifiedDate":"2023-10-28"},{"lineNumber":109,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":110,"author":{"gitId":"syamfarh"},"content":"    public CalendarWindow(Logic logic) {","lastModifiedDate":"2023-10-28"},{"lineNumber":111,"author":{"gitId":"syamfarh"},"content":"        this(new Stage());","lastModifiedDate":"2023-10-28"},{"lineNumber":112,"author":{"gitId":"syamfarh"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2023-10-28"},{"lineNumber":113,"author":{"gitId":"syamfarh"},"content":"        // Configure the window size","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"syamfarh"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":116,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":117,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":118,"author":{"gitId":"syamfarh"},"content":"     * Shows the calendar window.","lastModifiedDate":"2023-10-28"},{"lineNumber":119,"author":{"gitId":"syamfarh"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2023-10-28"},{"lineNumber":120,"author":{"gitId":"syamfarh"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":121,"author":{"gitId":"syamfarh"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":122,"author":{"gitId":"syamfarh"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2023-10-28"},{"lineNumber":123,"author":{"gitId":"syamfarh"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":124,"author":{"gitId":"syamfarh"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":125,"author":{"gitId":"syamfarh"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2023-10-28"},{"lineNumber":126,"author":{"gitId":"syamfarh"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":127,"author":{"gitId":"syamfarh"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":128,"author":{"gitId":"syamfarh"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2023-10-28"},{"lineNumber":129,"author":{"gitId":"syamfarh"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":130,"author":{"gitId":"syamfarh"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":131,"author":{"gitId":"syamfarh"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2023-10-28"},{"lineNumber":132,"author":{"gitId":"syamfarh"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":133,"author":{"gitId":"syamfarh"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":134,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":135,"author":{"gitId":"syamfarh"},"content":"    public void show() {","lastModifiedDate":"2023-10-28"},{"lineNumber":136,"author":{"gitId":"syamfarh"},"content":"        logger.fine(\"Showing Calendar page.\");","lastModifiedDate":"2023-10-28"},{"lineNumber":137,"author":{"gitId":"syamfarh"},"content":"        assert !isShowing() : \"Calendar page is already showing\";","lastModifiedDate":"2023-10-28"},{"lineNumber":138,"author":{"gitId":"syamfarh"},"content":"        update();","lastModifiedDate":"2023-10-28"},{"lineNumber":139,"author":{"gitId":"syamfarh"},"content":"        getRoot().show();","lastModifiedDate":"2023-10-28"},{"lineNumber":140,"author":{"gitId":"syamfarh"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2023-10-28"},{"lineNumber":141,"author":{"gitId":"syamfarh"},"content":"        assert isShowing() : \"Calendar page is not showing after show()\";","lastModifiedDate":"2023-10-28"},{"lineNumber":142,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":143,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":144,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":145,"author":{"gitId":"syamfarh"},"content":"     * Returns true if the questionnaire window is currently being shown.","lastModifiedDate":"2023-10-28"},{"lineNumber":146,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":147,"author":{"gitId":"syamfarh"},"content":"    public boolean isShowing() {","lastModifiedDate":"2023-10-28"},{"lineNumber":148,"author":{"gitId":"syamfarh"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2023-10-28"},{"lineNumber":149,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":150,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":151,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":152,"author":{"gitId":"syamfarh"},"content":"     * Hides the questionnaire window.","lastModifiedDate":"2023-10-28"},{"lineNumber":153,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":154,"author":{"gitId":"syamfarh"},"content":"    public void hide() {","lastModifiedDate":"2023-10-28"},{"lineNumber":155,"author":{"gitId":"syamfarh"},"content":"        getRoot().hide();","lastModifiedDate":"2023-10-28"},{"lineNumber":156,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":157,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":158,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":159,"author":{"gitId":"syamfarh"},"content":"     * Focuses on the questionnaire window.","lastModifiedDate":"2023-10-28"},{"lineNumber":160,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":161,"author":{"gitId":"syamfarh"},"content":"    public void focus() {","lastModifiedDate":"2023-10-28"},{"lineNumber":162,"author":{"gitId":"syamfarh"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2023-10-28"},{"lineNumber":163,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":164,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":165,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":166,"author":{"gitId":"syamfarh"},"content":"     * Update the list of entries in the calendar.","lastModifiedDate":"2023-10-28"},{"lineNumber":167,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":168,"author":{"gitId":"syamfarh"},"content":"    public void update() {","lastModifiedDate":"2023-10-28"},{"lineNumber":169,"author":{"gitId":"syamfarh"},"content":"        ObservableList\u003cPerson\u003e lists \u003d logic.getFilteredPersonList();","lastModifiedDate":"2023-10-28"},{"lineNumber":170,"author":{"gitId":"syamfarh"},"content":"        clients.clear();","lastModifiedDate":"2023-10-28"},{"lineNumber":171,"author":{"gitId":"syamfarh"},"content":"        for (Person p : lists) {","lastModifiedDate":"2023-10-28"},{"lineNumber":172,"author":{"gitId":"syamfarh"},"content":"            clients.addEntry(CalendarUtil.createNewEntry(p));","lastModifiedDate":"2023-10-28"},{"lineNumber":173,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":174,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":175,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":176,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":177,"author":{"gitId":"syamfarh"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2023-11-02"},{"lineNumber":178,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":179,"author":{"gitId":"syamfarh"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2023-11-02"},{"lineNumber":180,"author":{"gitId":"syamfarh"},"content":"        getRoot().setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2023-11-02"},{"lineNumber":181,"author":{"gitId":"syamfarh"},"content":"        getRoot().setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2023-11-02"},{"lineNumber":182,"author":{"gitId":"syamfarh"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2023-11-02"},{"lineNumber":183,"author":{"gitId":"syamfarh"},"content":"            getRoot().setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2023-11-02"},{"lineNumber":184,"author":{"gitId":"syamfarh"},"content":"            getRoot().setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2023-11-02"},{"lineNumber":185,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":186,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":187,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":188,"author":{"gitId":"syamfarh"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"syamfarh":188}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"Daphne789"},"content":"    public static final String SINGLE_NEWLINE \u003d \"\\n\";","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"Daphne789"},"content":"    public static final String DOUBLE_NEWLINE \u003d \"\\n\\n\";","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"Daphne789"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s1-cs2103t-w09-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"Daphne789"},"content":"    public static final String ADD_COMMAND_GUIDE \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"Daphne789"},"content":"            \"1. ADD\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"Daphne789"},"content":"            + \"Adds a contact to the address book.\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"Daphne789"},"content":"            + \"Format: add n/NAME p/PHONE_NUMBER e/EMAIL o/OCCUPATION a/ADDRESS [t/TAG]…\\u200B\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"Daphne789"},"content":"            + \"Example: add n/John Doe, p/+65 98765432, e/johnd@example.com, o/Software Engineer, \"","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"Daphne789"},"content":"            + \"a/John Street, Block 123, 138123, t/New Client\";","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"Daphne789"},"content":"    public static final String DELETE_COMMAND_GUIDE \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"Daphne789"},"content":"            \"2. DELETE\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"Daphne789"},"content":"            + \"Deletes a contact from the address book.\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"Daphne789"},"content":"            + \"Format: delete INDEX\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"Daphne789"},"content":"            + \"⚫Deletes the contact at the specified INDEX, must be a positive integer\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"Daphne789"},"content":"            + \"⚫The index refers to the index number shown in the displayed person list.\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"Daphne789"},"content":"            + \"Example: delete 3 -\u003e deletes the 3rd contact in the address book.\";","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"Daphne789"},"content":"    public static final String UNDO_COMMAND_GUIDE \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"Daphne789"},"content":"            \"3. UNDO\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"Daphne789"},"content":"            + \"Undoes a single delete done previously.\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"Daphne789"},"content":"            + \"Format: undo\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"Daphne789"},"content":"            + \"Example: undo -\u003e the contact has been deleted and undo it.\";","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"Daphne789"},"content":"    public static final String FIND_NAME_COMMAND_GUIDE \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"Daphne789"},"content":"            \"4. FIND by NAME\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"Daphne789"},"content":"            + \"Finds contacts whose names contain any of the given keywords.\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"Daphne789"},"content":"            + \"Format: find NAME\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"Daphne789"},"content":"            + \"Example: find Jackson -\u003e attempts to find a contact name containing \u0027Jackson\u0027.\";","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"Daphne789"},"content":"    public static final String FIND_ADDRESS_COMMAND_GUIDE \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"Daphne789"},"content":"            \"5. FIND by ADDRESS\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"Daphne789"},"content":"            + \"Finds contacts whose address contain any of the given keywords.\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"Daphne789"},"content":"            + \"Format: find_add ADDRESS\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"Daphne789"},"content":"            + \"Example: find_add geylang -\u003e returns all contacts whose addresses contain \u0027geylang\u0027.\";","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"Daphne789"},"content":"    public static final String EDIT_COMMAND_GUIDE \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"Daphne789"},"content":"            \"6. EDIT\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"Daphne789"},"content":"            + \"Edits an existing contact in the address book.\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"Daphne789"},"content":"            + \"Format: edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [o/OCCUPATION] \"","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"Daphne789"},"content":"            + \"[a/ADDRESS] [t/TAG]…\\u200B [appt/APPOINTMENTDATE]\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"Daphne789"},"content":"            + \"⚫Edits the person at the specified INDEX. \" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"Daphne789"},"content":"            + \"⚫At least one of the optional fields must be provided.\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"Daphne789"},"content":"            + \"Example: edit 1 appt/ 2023-11-15 -\u003e Edits the appointment date of the 1st person to be 2023-11-15.\";","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"Daphne789"},"content":"    public static final String HELP_MESSAGE \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"Daphne789"},"content":"            ADD_COMMAND_GUIDE + DOUBLE_NEWLINE","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"Daphne789"},"content":"            + DELETE_COMMAND_GUIDE + DOUBLE_NEWLINE","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"Daphne789"},"content":"            + UNDO_COMMAND_GUIDE + DOUBLE_NEWLINE","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"Daphne789"},"content":"            + FIND_NAME_COMMAND_GUIDE + DOUBLE_NEWLINE","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"Daphne789"},"content":"            + FIND_ADDRESS_COMMAND_GUIDE + DOUBLE_NEWLINE","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"Daphne789"},"content":"            + EDIT_COMMAND_GUIDE + DOUBLE_NEWLINE","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"Daphne789"},"content":"            + \"For more details, please visit our website: \" + USERGUIDE_URL;","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"Daphne789"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"Daphne789"},"content":"    private Label website;","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":90,"author":{"gitId":"Daphne789"},"content":"        assert helpMessage !\u003d null : \"helpMessage must be initialized\";","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Daphne789":56,"-":100}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"Daphne789"},"content":"    private QuestionnaireWindow questionnaireWindow;","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"syamfarh"},"content":"    private CalendarWindow calendarWindow;","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"Daphne789"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"Daphne789"},"content":"    private MenuItem questionnaireMenuItem;","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"syamfarh"},"content":"    @FXML","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"syamfarh"},"content":"    private MenuItem calendarMenuItem;","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"Daphne789"},"content":"        questionnaireWindow \u003d new QuestionnaireWindow();","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"syamfarh"},"content":"        calendarWindow \u003d new CalendarWindow(logic);","lastModifiedDate":"2023-10-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"Daphne789"},"content":"        setAccelerator(questionnaireMenuItem, KeyCombination.valueOf(\"F2\"));","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"syamfarh"},"content":"        setAccelerator(calendarMenuItem, KeyCombination.valueOf(\"F3\"));","lastModifiedDate":"2023-10-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":165,"author":{"gitId":"Daphne789"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2023-10-26"},{"lineNumber":166,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":167,"author":{"gitId":"Daphne789"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":168,"author":{"gitId":"Daphne789"},"content":"    public void handleQuestionnaire() {","lastModifiedDate":"2023-10-26"},{"lineNumber":169,"author":{"gitId":"Daphne789"},"content":"        if (!questionnaireWindow.isShowing()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":170,"author":{"gitId":"Daphne789"},"content":"            questionnaireWindow.show();","lastModifiedDate":"2023-10-26"},{"lineNumber":171,"author":{"gitId":"Daphne789"},"content":"        } else {","lastModifiedDate":"2023-10-26"},{"lineNumber":172,"author":{"gitId":"Daphne789"},"content":"            questionnaireWindow.focus();","lastModifiedDate":"2023-10-26"},{"lineNumber":173,"author":{"gitId":"Daphne789"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":174,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":175,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":176,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":177,"author":{"gitId":"syamfarh"},"content":"     * Opens the calendar window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2023-10-28"},{"lineNumber":178,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":179,"author":{"gitId":"syamfarh"},"content":"    @FXML","lastModifiedDate":"2023-10-28"},{"lineNumber":180,"author":{"gitId":"syamfarh"},"content":"    public void handleCalendar() {","lastModifiedDate":"2023-10-28"},{"lineNumber":181,"author":{"gitId":"syamfarh"},"content":"        if (!calendarWindow.isShowing()) {","lastModifiedDate":"2023-10-28"},{"lineNumber":182,"author":{"gitId":"syamfarh"},"content":"            calendarWindow.show();","lastModifiedDate":"2023-10-28"},{"lineNumber":183,"author":{"gitId":"syamfarh"},"content":"        } else {","lastModifiedDate":"2023-10-28"},{"lineNumber":184,"author":{"gitId":"syamfarh"},"content":"            calendarWindow.focus();","lastModifiedDate":"2023-10-28"},{"lineNumber":185,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":186,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":187,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":188,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":202,"author":{"gitId":"Daphne789"},"content":"        questionnaireWindow.hide();","lastModifiedDate":"2023-10-26"},{"lineNumber":203,"author":{"gitId":"syamfarh"},"content":"        calendarWindow.hide();","lastModifiedDate":"2023-11-02"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"syamfarh"},"content":"            personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2023-10-19"},{"lineNumber":222,"author":{"gitId":"syamfarh"},"content":"            personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2023-10-19"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":227,"author":{"gitId":"Daphne789"},"content":"            if (commandResult.isShowQuestionnaire()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":228,"author":{"gitId":"Daphne789"},"content":"                handleQuestionnaire();","lastModifiedDate":"2023-10-26"},{"lineNumber":229,"author":{"gitId":"Daphne789"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":230,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":231,"author":{"gitId":"syamfarh"},"content":"            if (commandResult.isShowCalendar()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":232,"author":{"gitId":"syamfarh"},"content":"                handleCalendar();","lastModifiedDate":"2023-11-02"},{"lineNumber":233,"author":{"gitId":"syamfarh"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":234,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":246,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Daphne789":24,"syamfarh":26,"-":196}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"bhnuka"},"content":"    private Label occupation;","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"bhnuka"},"content":"    @FXML","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"syamfarh"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"syamfarh"},"content":"    private Label appointmentDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"Daphne789"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"Daphne789"},"content":"    private Label riskProfile;","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"bhnuka"},"content":"        occupation.setText(person.getOccupation().fullOccupation);","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"syamfarh"},"content":"        appointmentDate.setText(\"Appointment Date: \" + person.getApptDate().toString());","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"Daphne789"},"content":"        setRiskProfileText(person.getRiskProfile().value);","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":70,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"Daphne789"},"content":"    private void setRiskProfileText(String riskProfileText) {","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"Daphne789"},"content":"        if (isRiskProfileNotEmpty(riskProfileText)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"Daphne789"},"content":"            riskProfile.setText(riskProfileText);","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"Daphne789"},"content":"            applyRiskProfileStyles(riskProfileText);","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"Daphne789"},"content":"        } else {","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"Daphne789"},"content":"            riskProfile.setVisible(false);","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"Daphne789"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"Daphne789"},"content":"    private void applyRiskProfileStyles(String riskProfileText) {","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"Daphne789"},"content":"        switch (riskProfileText) {","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"Daphne789"},"content":"        case \"Low\":","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"Daphne789"},"content":"            riskProfile.getStyleClass().addAll(\"riskProfile\", \"lowRisk\");","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"Daphne789"},"content":"            break;","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"Daphne789"},"content":"        case \"Moderately Low\":","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"Daphne789"},"content":"            riskProfile.getStyleClass().addAll(\"riskProfile\", \"moderatelyLowRisk\");","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"Daphne789"},"content":"            break;","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"Daphne789"},"content":"        case \"Moderate\":","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"Daphne789"},"content":"            riskProfile.getStyleClass().addAll(\"riskProfile\", \"moderateRisk\");","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"Daphne789"},"content":"            break;","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"Daphne789"},"content":"        case \"Moderately High\":","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"Daphne789"},"content":"            riskProfile.getStyleClass().addAll(\"riskProfile\", \"moderatelyHighRisk\");","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"Daphne789"},"content":"            break;","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"Daphne789"},"content":"        case \"High\":","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"Daphne789"},"content":"            riskProfile.getStyleClass().addAll(\"riskProfile\", \"highRisk\");","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"Daphne789"},"content":"            break;","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"Daphne789"},"content":"        default:","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"Daphne789"},"content":"            riskProfile.setVisible(false);","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"Daphne789"},"content":"            break;","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"Daphne789"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"Daphne789"},"content":"    private static boolean isRiskProfileNotEmpty(String riskProfile) {","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"Daphne789"},"content":"        return riskProfile !\u003d null \u0026\u0026 !riskProfile.isEmpty();","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Daphne789":39,"bhnuka":3,"syamfarh":5,"-":59}},{"path":"src/main/java/seedu/address/ui/QuestionnaireWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Daphne789"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"Daphne789"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"Daphne789"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"Daphne789"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"Daphne789"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"Daphne789"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"Daphne789"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"Daphne789"},"content":" * Displays the Risk Assessment Questionnaire.","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"Daphne789"},"content":" * It contains questions and risk category information.","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"Daphne789"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"Daphne789"},"content":"public class QuestionnaireWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"Daphne789"},"content":"    public static final String SINGLE_NEWLINE \u003d \"\\n\";","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"Daphne789"},"content":"    public static final String DOUBLE_NEWLINE \u003d \"\\n\\n\";","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"Daphne789"},"content":"    public static final String MARKS \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"Daphne789"},"content":"        \"Marks → a: 1 pts   b: 2 pts   c: 3 pts   d: 4 pts   e: 5 pts\";","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"Daphne789"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(QuestionnaireWindow.class);","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"Daphne789"},"content":"    private static final String FXML \u003d \"QuestionnaireWindow.fxml\";","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"Daphne789"},"content":"    public static final String QUESTION_1 \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"Daphne789"},"content":"        \"1) What is the main goal for your investments?\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"Daphne789"},"content":"        + \"a. Preservation of current assets\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"Daphne789"},"content":"        + \"b. Conservative generation of income\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"Daphne789"},"content":"        + \"c. Balanced portfolio between growth and income\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"Daphne789"},"content":"        + \"d. Growth of assets\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"Daphne789"},"content":"        + \"e. Aggressive growth of assets\";","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"Daphne789"},"content":"    public static final String QUESTION_2 \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"Daphne789"},"content":"        \"2) I expect to pull money from my investments in:\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"Daphne789"},"content":"            + \"a. Less than 1 year\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"Daphne789"},"content":"            + \"b. 1-4 years\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"Daphne789"},"content":"            + \"c. 5-10 years\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"Daphne789"},"content":"            + \"d. 11-20 years\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"Daphne789"},"content":"            + \"e. Over 20 years\";","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"Daphne789"},"content":"    public static final String QUESTION_3 \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"Daphne789"},"content":"        \"3) Select your current net worth (excluding primary residence):\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"Daphne789"},"content":"            + \"a. Under $100,000\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"Daphne789"},"content":"            + \"b. $100,000 - $500,000\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"Daphne789"},"content":"            + \"c. $500,000 - $1,000,000\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"Daphne789"},"content":"            + \"d. $1,000,000 - $3,000,000\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"Daphne789"},"content":"            + \"e. Over $3,000,000\";","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"Daphne789"},"content":"    public static final String QUESTION_4 \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"Daphne789"},"content":"        \"4) Please indicate your current annual household income:\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"Daphne789"},"content":"            + \"a. Under $75,000\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"Daphne789"},"content":"            + \"b. $75,001 - $125,000\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"Daphne789"},"content":"            + \"c. $125,001 - $200,000\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"Daphne789"},"content":"            + \"d. $200,001 - $350,000\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"Daphne789"},"content":"            + \"e. $350,000+\";","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"Daphne789"},"content":"    public static final String QUESTION_5 \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"Daphne789"},"content":"        \"5) What is the most complex investment you have owned, or would be comfortable owning?\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"Daphne789"},"content":"            + \"a. Money Markets/CDs\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"Daphne789"},"content":"            + \"b. Mutual Funds/ETFs\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"Daphne789"},"content":"            + \"c. Individual Stocks or Bonds\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"Daphne789"},"content":"            + \"d. Hard Assets (gold, art, etc.)\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"Daphne789"},"content":"            + \"e. Options, Futures or Unlisted Securities\";","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"Daphne789"},"content":"    public static final String QUESTION_6 \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"Daphne789"},"content":"        \"6) Which best describes your tolerance to risk:\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"Daphne789"},"content":"            + \"a. Seek stable investments to preserve my principal\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"Daphne789"},"content":"            + \"b. Pursue modest increases in my investments, with low risk of loss\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"Daphne789"},"content":"            + \"c. Aim for investment growth, accepting moderate risk of loss\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"Daphne789"},"content":"            + \"d. Seek above-average growth in investments, accepting above average risk of loss\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"Daphne789"},"content":"            + \"e. Reach for maximum returns, accepting significant risk of loss\";","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"Daphne789"},"content":"    public static final String QUESTION_7 \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"Daphne789"},"content":"        \"7) Imagine that an investment you own lost 30% of its value in 3 days. What would you do?\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"Daphne789"},"content":"            + \"a. I don’t know\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"Daphne789"},"content":"            + \"b. Sell all of my shares\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"Daphne789"},"content":"            + \"c. Sell a portion of my shares\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"Daphne789"},"content":"            + \"d. Do nothing\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"Daphne789"},"content":"            + \"e. Buy more shares\";","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"Daphne789"},"content":"    public static final String QUESTION_8 \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"Daphne789"},"content":"        \"8) You make an investment, planning to hold it for 5 years. It then loses 20% in its first year. \"","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"Daphne789"},"content":"            + \"How do you react?\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"Daphne789"},"content":"            + \"a. I would sell my investment because of my concerns\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"Daphne789"},"content":"            + \"b. I would consider selling part of my investment\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"Daphne789"},"content":"            + \"c. I would wait to see how it continues to perform\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"Daphne789"},"content":"            + \"d. I wouldn’t sell my investment, but would be concerned\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"Daphne789"},"content":"            + \"e. I would buy more of the investment because of the discount\";","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"Daphne789"},"content":"    public static final String QUESTIONNAIRE_MESSAGE \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"Daphne789"},"content":"        QUESTION_1 + DOUBLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"Daphne789"},"content":"        + QUESTION_2 + DOUBLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"Daphne789"},"content":"        + QUESTION_3 + DOUBLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"Daphne789"},"content":"        + QUESTION_4 + DOUBLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"Daphne789"},"content":"        + QUESTION_5 + DOUBLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"Daphne789"},"content":"        + QUESTION_6 + DOUBLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"Daphne789"},"content":"        + QUESTION_7 + DOUBLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"Daphne789"},"content":"        + QUESTION_8 + DOUBLE_NEWLINE;","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"Daphne789"},"content":"    public static final String RISK_CATEGORY \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"Daphne789"},"content":"        \"Risk Category\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"Daphne789"},"content":"        + \"Low: 1 - 8 pts\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"Daphne789"},"content":"        + \"Moderately Low: 9 - 16 pts\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"Daphne789"},"content":"        + \"Moderate: 17 - 24 pts\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"Daphne789"},"content":"        + \"Moderately High: 25 - 32 pts\" + SINGLE_NEWLINE","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"Daphne789"},"content":"        + \"High: 33 - 40 pts\";","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"Daphne789"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"Daphne789"},"content":"    private Label marks;","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"Daphne789"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"Daphne789"},"content":"    private Label questionnaireMessage;","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"Daphne789"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"Daphne789"},"content":"    private Label riskCategory;","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"Daphne789"},"content":"     * Creates a new QuestionnaireWindow.","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"Daphne789"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"Daphne789"},"content":"     * @param root Stage to use as the root of the QuestionnaireWindow.","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"Daphne789"},"content":"    public QuestionnaireWindow(Stage root) {","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"Daphne789"},"content":"        super(FXML, root);","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"Daphne789"},"content":"        assert marks !\u003d null : \"Marks label cannot be null\";","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"Daphne789"},"content":"        assert questionnaireMessage !\u003d null : \"Questionnaire message label cannot be null\";","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"Daphne789"},"content":"        assert riskCategory !\u003d null : \"Risk category label cannot be null\";","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"Daphne789"},"content":"        marks.setText(MARKS);","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"Daphne789"},"content":"        questionnaireMessage.setText(QUESTIONNAIRE_MESSAGE);","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"Daphne789"},"content":"        riskCategory.setText(RISK_CATEGORY);","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":122,"author":{"gitId":"Daphne789"},"content":"     * Creates a new QuestionnaireWindow.","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"Daphne789"},"content":"    public QuestionnaireWindow() {","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"Daphne789"},"content":"        this(new Stage());","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"Daphne789"},"content":"     * Shows the questionnaire window.","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"Daphne789"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"Daphne789"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"Daphne789"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"Daphne789"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"Daphne789"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"Daphne789"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"Daphne789"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"Daphne789"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":138,"author":{"gitId":"Daphne789"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"Daphne789"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2023-10-26"},{"lineNumber":140,"author":{"gitId":"Daphne789"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":141,"author":{"gitId":"Daphne789"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":142,"author":{"gitId":"Daphne789"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"Daphne789"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"Daphne789"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"Daphne789"},"content":"    public void show() {","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"Daphne789"},"content":"        logger.fine(\"Showing Risk Assessment Questionnaire page.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":148,"author":{"gitId":"Daphne789"},"content":"        assert !isShowing() : \"Questionnaire window is already showing\";","lastModifiedDate":"2023-10-26"},{"lineNumber":149,"author":{"gitId":"Daphne789"},"content":"        getRoot().show();","lastModifiedDate":"2023-10-26"},{"lineNumber":150,"author":{"gitId":"Daphne789"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2023-10-26"},{"lineNumber":151,"author":{"gitId":"Daphne789"},"content":"        assert isShowing() : \"Questionnaire window is not showing after show()\";","lastModifiedDate":"2023-10-26"},{"lineNumber":152,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":153,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":154,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":155,"author":{"gitId":"Daphne789"},"content":"     * Returns true if the questionnaire window is currently being shown.","lastModifiedDate":"2023-10-26"},{"lineNumber":156,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":157,"author":{"gitId":"Daphne789"},"content":"    public boolean isShowing() {","lastModifiedDate":"2023-10-26"},{"lineNumber":158,"author":{"gitId":"Daphne789"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2023-10-26"},{"lineNumber":159,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":160,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":161,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":162,"author":{"gitId":"Daphne789"},"content":"     * Hides the questionnaire window.","lastModifiedDate":"2023-10-26"},{"lineNumber":163,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":164,"author":{"gitId":"Daphne789"},"content":"    public void hide() {","lastModifiedDate":"2023-10-26"},{"lineNumber":165,"author":{"gitId":"Daphne789"},"content":"        getRoot().hide();","lastModifiedDate":"2023-10-26"},{"lineNumber":166,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":167,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":168,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":169,"author":{"gitId":"Daphne789"},"content":"     * Focuses on the questionnaire window.","lastModifiedDate":"2023-10-26"},{"lineNumber":170,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":171,"author":{"gitId":"Daphne789"},"content":"    public void focus() {","lastModifiedDate":"2023-10-26"},{"lineNumber":172,"author":{"gitId":"Daphne789"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2023-10-26"},{"lineNumber":173,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":174,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":175,"author":{"gitId":"Daphne789"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"Daphne789":175}},{"path":"src/main/java/seedu/address/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":"     * Constructs a {@code ResultDisplay} with the FXML.","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"syamfarh"},"content":"        resultDisplay.setWrapText(true);","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"syamfarh":4,"-":28}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"bhnuka"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/fapro.png\";","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"bhnuka"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DefaultTheme.css\");","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"bhnuka":2,"-":86}},{"path":"src/main/resources/view/CalendarWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"\u003c?import com.calendarfx.view.MonthView?\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Calendar\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"    \u003cicons\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":"        \u003cImage url\u003d\"@/images/calendar2.png\" /\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":"    \u003cscene\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":"        \u003cScene\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":"            \u003cVBox fx:id\u003d\"calendarContainer\"\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":"                \u003cScrollPane maxHeight\u003d\"600\"\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":"                    \u003cVBox spacing\u003d\"10\"\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"                        \u003cMonthView/\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":"                \u003c/ScrollPane\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"syamfarh"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"syamfarh"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"syamfarh"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"syamfarh":24}},{"path":"src/main/resources/view/DefaultTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bhnuka"},"content":".rectangle {","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"bhnuka"},"content":"    -fx-background-radius: 20; /* Adjust the radius as needed */","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"bhnuka"},"content":"    -fx-border-radius: 20; /* Adjust the radius as needed */","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"bhnuka"},"content":".background {","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"bhnuka"},"content":"    -fx-background-color: #f2f2f2;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"bhnuka"},"content":"    background-color: #ffffff; /* Used in the default.html file */","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"bhnuka"},"content":".label {","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"bhnuka"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"bhnuka"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"bhnuka"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"bhnuka"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"bhnuka"},"content":".label-bright {","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"bhnuka"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"bhnuka"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"bhnuka"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"bhnuka"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"bhnuka"},"content":".label-header {","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"bhnuka"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"bhnuka"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"bhnuka"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"bhnuka"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"bhnuka"},"content":".text-field {","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"bhnuka"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"bhnuka"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"bhnuka"},"content":".tab-pane {","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"bhnuka"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"bhnuka"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"bhnuka"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"bhnuka"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"bhnuka"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"bhnuka"},"content":".table-view {","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"bhnuka"},"content":"    -fx-base: #f2f2f2;","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"bhnuka"},"content":"    -fx-control-inner-background: #f2f2f2;","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"bhnuka"},"content":"    -fx-background-color: #f2f2f2;","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"bhnuka"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"bhnuka"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"bhnuka"},"content":"    -fx-padding: 5;","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"bhnuka"},"content":".table-view .column-header-background {","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"bhnuka"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"bhnuka"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"bhnuka"},"content":"    -fx-size: 35;","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"bhnuka"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"bhnuka"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"bhnuka"},"content":"    -fx-border-color:","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"bhnuka"},"content":"        transparent","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"bhnuka"},"content":"        transparent","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"bhnuka"},"content":"        #f2f2f2","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"bhnuka"},"content":"        transparent;","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"bhnuka"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"bhnuka"},"content":".table-view .column-header .label {","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"bhnuka"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"bhnuka"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"bhnuka"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"bhnuka"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"bhnuka"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"bhnuka"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"bhnuka"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"bhnuka"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"bhnuka"},"content":"    -fx-background-color: #f2f2f2;","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"bhnuka"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"bhnuka"},"content":".split-pane {","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"bhnuka"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"bhnuka"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"bhnuka"},"content":"    -fx-background-color: #f2f2f2;","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"bhnuka"},"content":".list-view {","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"bhnuka"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"bhnuka"},"content":"    -fx-padding: 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"bhnuka"},"content":"    -fx-background-color: #f2f2f2;","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"bhnuka"},"content":".list-cell {","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"bhnuka"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"bhnuka"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"bhnuka"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"bhnuka"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"bhnuka"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"bhnuka"},"content":".list-cell:filled:even {","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"bhnuka"},"content":"    -fx-background-color: #b9e5df;","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"bhnuka"},"content":".list-cell:filled:odd {","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"bhnuka"},"content":"    -fx-background-color: #ececec;","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"bhnuka"},"content":".list-cell:filled:selected {","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"bhnuka"},"content":"    -fx-background-color: #95dece;","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"bhnuka"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"bhnuka"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"bhnuka"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"bhnuka"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"bhnuka"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"bhnuka"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"bhnuka"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"bhnuka"},"content":".list-cell .label {","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"bhnuka"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"bhnuka"},"content":".cell_big_label {","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"bhnuka"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"bhnuka"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"bhnuka"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"bhnuka"},"content":".cell_small_label {","lastModifiedDate":"2023-10-18"},{"lineNumber":141,"author":{"gitId":"bhnuka"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2023-10-18"},{"lineNumber":142,"author":{"gitId":"bhnuka"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"bhnuka"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":146,"author":{"gitId":"bhnuka"},"content":".stack-pane {","lastModifiedDate":"2023-10-18"},{"lineNumber":147,"author":{"gitId":"bhnuka"},"content":"     -fx-background-color: #f2f2f2;","lastModifiedDate":"2023-10-18"},{"lineNumber":148,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":149,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":150,"author":{"gitId":"bhnuka"},"content":".pane-with-border {","lastModifiedDate":"2023-10-18"},{"lineNumber":151,"author":{"gitId":"bhnuka"},"content":"     -fx-background-color: #f2f2f2;","lastModifiedDate":"2023-10-18"},{"lineNumber":152,"author":{"gitId":"bhnuka"},"content":"     -fx-border-color: #f2f2f2;","lastModifiedDate":"2023-10-18"},{"lineNumber":153,"author":{"gitId":"bhnuka"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2023-10-18"},{"lineNumber":154,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":155,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"bhnuka"},"content":".status-bar {","lastModifiedDate":"2023-10-18"},{"lineNumber":157,"author":{"gitId":"bhnuka"},"content":"    -fx-background-color: #f2f2f2;","lastModifiedDate":"2023-10-18"},{"lineNumber":158,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":159,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":160,"author":{"gitId":"bhnuka"},"content":".result-display {","lastModifiedDate":"2023-10-18"},{"lineNumber":161,"author":{"gitId":"bhnuka"},"content":"    -fx-background-color: #transparent;","lastModifiedDate":"2023-10-18"},{"lineNumber":162,"author":{"gitId":"bhnuka"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-18"},{"lineNumber":163,"author":{"gitId":"bhnuka"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2023-10-18"},{"lineNumber":164,"author":{"gitId":"bhnuka"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-18"},{"lineNumber":165,"author":{"gitId":"bhnuka"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2023-10-18"},{"lineNumber":166,"author":{"gitId":"bhnuka"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2023-10-18"},{"lineNumber":167,"author":{"gitId":"bhnuka"},"content":"    -fx-border-color: #f2f2f2;","lastModifiedDate":"2023-10-18"},{"lineNumber":168,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":169,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":170,"author":{"gitId":"bhnuka"},"content":".result-display .label {","lastModifiedDate":"2023-10-18"},{"lineNumber":171,"author":{"gitId":"bhnuka"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2023-10-18"},{"lineNumber":172,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":173,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":174,"author":{"gitId":"bhnuka"},"content":".status-bar .label {","lastModifiedDate":"2023-10-18"},{"lineNumber":175,"author":{"gitId":"bhnuka"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2023-10-18"},{"lineNumber":176,"author":{"gitId":"bhnuka"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-18"},{"lineNumber":177,"author":{"gitId":"bhnuka"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2023-10-18"},{"lineNumber":178,"author":{"gitId":"bhnuka"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2023-10-18"},{"lineNumber":179,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":180,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":181,"author":{"gitId":"bhnuka"},"content":".status-bar-with-border {","lastModifiedDate":"2023-10-18"},{"lineNumber":182,"author":{"gitId":"bhnuka"},"content":"    -fx-background-color: #f2f2f2;","lastModifiedDate":"2023-10-18"},{"lineNumber":183,"author":{"gitId":"bhnuka"},"content":"    -fx-border-color: #f2f2f2;","lastModifiedDate":"2023-10-18"},{"lineNumber":184,"author":{"gitId":"bhnuka"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-10-18"},{"lineNumber":185,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":186,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":187,"author":{"gitId":"bhnuka"},"content":".status-bar-with-border .label {","lastModifiedDate":"2023-10-18"},{"lineNumber":188,"author":{"gitId":"bhnuka"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-18"},{"lineNumber":189,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":190,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":191,"author":{"gitId":"bhnuka"},"content":".grid-pane {","lastModifiedDate":"2023-10-18"},{"lineNumber":192,"author":{"gitId":"bhnuka"},"content":"    -fx-background-color: #f2f2f2;","lastModifiedDate":"2023-10-18"},{"lineNumber":193,"author":{"gitId":"bhnuka"},"content":"    -fx-border-color: #f2f2f2;","lastModifiedDate":"2023-10-18"},{"lineNumber":194,"author":{"gitId":"bhnuka"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-10-18"},{"lineNumber":195,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":196,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":197,"author":{"gitId":"bhnuka"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2023-10-18"},{"lineNumber":198,"author":{"gitId":"bhnuka"},"content":"    -fx-background-color: #f2f2f2;","lastModifiedDate":"2023-10-18"},{"lineNumber":199,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":200,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":201,"author":{"gitId":"bhnuka"},"content":".context-menu {","lastModifiedDate":"2023-10-18"},{"lineNumber":202,"author":{"gitId":"bhnuka"},"content":"    -fx-background-color: #f2f2f2;","lastModifiedDate":"2023-10-18"},{"lineNumber":203,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":204,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":205,"author":{"gitId":"bhnuka"},"content":".context-menu .label {","lastModifiedDate":"2023-10-18"},{"lineNumber":206,"author":{"gitId":"bhnuka"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-18"},{"lineNumber":207,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":208,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":209,"author":{"gitId":"bhnuka"},"content":".menu-bar {","lastModifiedDate":"2023-10-18"},{"lineNumber":210,"author":{"gitId":"bhnuka"},"content":"    -fx-background-color: #f2f2f2;","lastModifiedDate":"2023-10-18"},{"lineNumber":211,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":212,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":213,"author":{"gitId":"bhnuka"},"content":".menu-bar .label {","lastModifiedDate":"2023-10-18"},{"lineNumber":214,"author":{"gitId":"bhnuka"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2023-10-18"},{"lineNumber":215,"author":{"gitId":"bhnuka"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-18"},{"lineNumber":216,"author":{"gitId":"bhnuka"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-18"},{"lineNumber":217,"author":{"gitId":"bhnuka"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2023-10-18"},{"lineNumber":218,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":219,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":220,"author":{"gitId":"bhnuka"},"content":".menu .left-container {","lastModifiedDate":"2023-10-18"},{"lineNumber":221,"author":{"gitId":"bhnuka"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-10-18"},{"lineNumber":222,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":223,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":224,"author":{"gitId":"bhnuka"},"content":".button {","lastModifiedDate":"2023-10-18"},{"lineNumber":225,"author":{"gitId":"bhnuka"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2023-10-18"},{"lineNumber":226,"author":{"gitId":"bhnuka"},"content":"    -fx-border-color: #666666;","lastModifiedDate":"2023-10-18"},{"lineNumber":227,"author":{"gitId":"bhnuka"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2023-10-18"},{"lineNumber":228,"author":{"gitId":"bhnuka"},"content":"    -fx-background-color: #f2f2f2;","lastModifiedDate":"2023-10-18"},{"lineNumber":229,"author":{"gitId":"bhnuka"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2023-10-18"},{"lineNumber":230,"author":{"gitId":"bhnuka"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-10-18"},{"lineNumber":231,"author":{"gitId":"bhnuka"},"content":"    -fx-text-fill: #333333;","lastModifiedDate":"2023-10-18"},{"lineNumber":232,"author":{"gitId":"bhnuka"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2023-10-18"},{"lineNumber":233,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":234,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":235,"author":{"gitId":"bhnuka"},"content":".button:hover {","lastModifiedDate":"2023-10-18"},{"lineNumber":236,"author":{"gitId":"bhnuka"},"content":"    -fx-background-color: #e0e0e0;","lastModifiedDate":"2023-10-18"},{"lineNumber":237,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":238,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":239,"author":{"gitId":"bhnuka"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2023-10-18"},{"lineNumber":240,"author":{"gitId":"bhnuka"},"content":"  -fx-background-color: black;","lastModifiedDate":"2023-10-18"},{"lineNumber":241,"author":{"gitId":"bhnuka"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2023-10-18"},{"lineNumber":242,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":243,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":244,"author":{"gitId":"bhnuka"},"content":".button:focused {","lastModifiedDate":"2023-10-18"},{"lineNumber":245,"author":{"gitId":"bhnuka"},"content":"    -fx-border-color: black, black;","lastModifiedDate":"2023-10-18"},{"lineNumber":246,"author":{"gitId":"bhnuka"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2023-10-18"},{"lineNumber":247,"author":{"gitId":"bhnuka"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2023-10-18"},{"lineNumber":248,"author":{"gitId":"bhnuka"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":249,"author":{"gitId":"bhnuka"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":250,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":251,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":252,"author":{"gitId":"bhnuka"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2023-10-18"},{"lineNumber":253,"author":{"gitId":"bhnuka"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2023-10-18"},{"lineNumber":254,"author":{"gitId":"bhnuka"},"content":"    -fx-background-color: #f2f2f2;","lastModifiedDate":"2023-10-18"},{"lineNumber":255,"author":{"gitId":"bhnuka"},"content":"    -fx-text-fill: #666666;","lastModifiedDate":"2023-10-18"},{"lineNumber":256,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":257,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":258,"author":{"gitId":"bhnuka"},"content":".button:default {","lastModifiedDate":"2023-10-18"},{"lineNumber":259,"author":{"gitId":"bhnuka"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2023-10-18"},{"lineNumber":260,"author":{"gitId":"bhnuka"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2023-10-18"},{"lineNumber":261,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":262,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":263,"author":{"gitId":"bhnuka"},"content":".button:default:hover {","lastModifiedDate":"2023-10-18"},{"lineNumber":264,"author":{"gitId":"bhnuka"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2023-10-18"},{"lineNumber":265,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":266,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":267,"author":{"gitId":"bhnuka"},"content":".dialog-pane {","lastModifiedDate":"2023-10-18"},{"lineNumber":268,"author":{"gitId":"bhnuka"},"content":"    -fx-background-color: #f2f2f2;","lastModifiedDate":"2023-10-18"},{"lineNumber":269,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":270,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":271,"author":{"gitId":"bhnuka"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2023-10-18"},{"lineNumber":272,"author":{"gitId":"bhnuka"},"content":"    -fx-background-color: #f2f2f2;","lastModifiedDate":"2023-10-18"},{"lineNumber":273,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":274,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":275,"author":{"gitId":"bhnuka"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2023-10-18"},{"lineNumber":276,"author":{"gitId":"bhnuka"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2023-10-18"},{"lineNumber":277,"author":{"gitId":"bhnuka"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-10-18"},{"lineNumber":278,"author":{"gitId":"bhnuka"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-18"},{"lineNumber":279,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":280,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":281,"author":{"gitId":"bhnuka"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2023-10-18"},{"lineNumber":282,"author":{"gitId":"bhnuka"},"content":"    -fx-background-color: #f2f2f2;","lastModifiedDate":"2023-10-18"},{"lineNumber":283,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":284,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":285,"author":{"gitId":"bhnuka"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2023-10-18"},{"lineNumber":286,"author":{"gitId":"bhnuka"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2023-10-18"},{"lineNumber":287,"author":{"gitId":"bhnuka"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2023-10-18"},{"lineNumber":288,"author":{"gitId":"bhnuka"},"content":"    -fx-fill: black;","lastModifiedDate":"2023-10-18"},{"lineNumber":289,"author":{"gitId":"bhnuka"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-18"},{"lineNumber":290,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":291,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":292,"author":{"gitId":"bhnuka"},"content":".scroll-bar {","lastModifiedDate":"2023-10-18"},{"lineNumber":293,"author":{"gitId":"bhnuka"},"content":"    -fx-background-color: #f2f2f2;","lastModifiedDate":"2023-10-18"},{"lineNumber":294,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":295,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":296,"author":{"gitId":"bhnuka"},"content":".scroll-bar .thumb {","lastModifiedDate":"2023-10-18"},{"lineNumber":297,"author":{"gitId":"bhnuka"},"content":"    -fx-background-color: #cccccc;","lastModifiedDate":"2023-10-18"},{"lineNumber":298,"author":{"gitId":"bhnuka"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2023-10-18"},{"lineNumber":299,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":300,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":301,"author":{"gitId":"bhnuka"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2023-10-18"},{"lineNumber":302,"author":{"gitId":"bhnuka"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-10-18"},{"lineNumber":303,"author":{"gitId":"bhnuka"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":304,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":305,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":306,"author":{"gitId":"bhnuka"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2023-10-18"},{"lineNumber":307,"author":{"gitId":"bhnuka"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2023-10-18"},{"lineNumber":308,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":309,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":310,"author":{"gitId":"bhnuka"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2023-10-18"},{"lineNumber":311,"author":{"gitId":"bhnuka"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2023-10-18"},{"lineNumber":312,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":313,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":314,"author":{"gitId":"bhnuka"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2023-10-18"},{"lineNumber":315,"author":{"gitId":"bhnuka"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2023-10-18"},{"lineNumber":316,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":317,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":318,"author":{"gitId":"bhnuka"},"content":"#cardPane {","lastModifiedDate":"2023-10-18"},{"lineNumber":319,"author":{"gitId":"bhnuka"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-10-18"},{"lineNumber":320,"author":{"gitId":"bhnuka"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":321,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":322,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":323,"author":{"gitId":"bhnuka"},"content":"#commandTypeLabel {","lastModifiedDate":"2023-10-18"},{"lineNumber":324,"author":{"gitId":"bhnuka"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2023-10-18"},{"lineNumber":325,"author":{"gitId":"bhnuka"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2023-10-18"},{"lineNumber":326,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":327,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":328,"author":{"gitId":"bhnuka"},"content":"#commandTextField {","lastModifiedDate":"2023-10-18"},{"lineNumber":329,"author":{"gitId":"bhnuka"},"content":"    -fx-background-color: white white white white;","lastModifiedDate":"2023-10-18"},{"lineNumber":330,"author":{"gitId":"bhnuka"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":331,"author":{"gitId":"bhnuka"},"content":"    -fx-border-color: #f2f2f2 #f2f2f2 #f2f2f2 #f2f2f2;","lastModifiedDate":"2023-10-18"},{"lineNumber":332,"author":{"gitId":"bhnuka"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":333,"author":{"gitId":"bhnuka"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-10-18"},{"lineNumber":334,"author":{"gitId":"bhnuka"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-18"},{"lineNumber":335,"author":{"gitId":"bhnuka"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2023-10-18"},{"lineNumber":336,"author":{"gitId":"bhnuka"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-18"},{"lineNumber":337,"author":{"gitId":"bhnuka"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2023-10-18"},{"lineNumber":338,"author":{"gitId":"bhnuka"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2023-10-18"},{"lineNumber":339,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":340,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":341,"author":{"gitId":"bhnuka"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2023-10-18"},{"lineNumber":342,"author":{"gitId":"bhnuka"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2023-10-18"},{"lineNumber":343,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":344,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":345,"author":{"gitId":"bhnuka"},"content":"#resultDisplay .content {","lastModifiedDate":"2023-10-18"},{"lineNumber":346,"author":{"gitId":"bhnuka"},"content":"    -fx-background-color: transparent, #ececec, transparent, #ececec;","lastModifiedDate":"2023-10-18"},{"lineNumber":347,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":348,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":349,"author":{"gitId":"bhnuka"},"content":"#tags {","lastModifiedDate":"2023-10-18"},{"lineNumber":350,"author":{"gitId":"bhnuka"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2023-10-18"},{"lineNumber":351,"author":{"gitId":"bhnuka"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2023-10-18"},{"lineNumber":352,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":353,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":354,"author":{"gitId":"bhnuka"},"content":"#tags .label {","lastModifiedDate":"2023-10-18"},{"lineNumber":355,"author":{"gitId":"bhnuka"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-18"},{"lineNumber":356,"author":{"gitId":"bhnuka"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2023-10-18"},{"lineNumber":357,"author":{"gitId":"bhnuka"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-10-18"},{"lineNumber":358,"author":{"gitId":"bhnuka"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-10-18"},{"lineNumber":359,"author":{"gitId":"bhnuka"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-10-18"},{"lineNumber":360,"author":{"gitId":"bhnuka"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2023-10-18"},{"lineNumber":361,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":362,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":363,"author":{"gitId":"Daphne789"},"content":"#cardPane #riskProfile{","lastModifiedDate":"2023-10-26"},{"lineNumber":364,"author":{"gitId":"Daphne789"},"content":"    -fx-padding: 2px;","lastModifiedDate":"2023-10-26"},{"lineNumber":365,"author":{"gitId":"Daphne789"},"content":"    -fx-background-radius: 3px;","lastModifiedDate":"2023-10-26"},{"lineNumber":366,"author":{"gitId":"Daphne789"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-26"},{"lineNumber":367,"author":{"gitId":"Daphne789"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-10-26"},{"lineNumber":368,"author":{"gitId":"Daphne789"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":369,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":370,"author":{"gitId":"Daphne789"},"content":"#cardPane .lowRisk {","lastModifiedDate":"2023-10-26"},{"lineNumber":371,"author":{"gitId":"Daphne789"},"content":"     -fx-background-color: #4CAF50;","lastModifiedDate":"2023-10-26"},{"lineNumber":372,"author":{"gitId":"Daphne789"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":373,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":374,"author":{"gitId":"Daphne789"},"content":"#cardPane .moderatelyLowRisk {","lastModifiedDate":"2023-10-26"},{"lineNumber":375,"author":{"gitId":"Daphne789"},"content":"     -fx-background-color: #2196F3;","lastModifiedDate":"2023-10-26"},{"lineNumber":376,"author":{"gitId":"Daphne789"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":377,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":378,"author":{"gitId":"Daphne789"},"content":"#cardPane .moderateRisk {","lastModifiedDate":"2023-10-26"},{"lineNumber":379,"author":{"gitId":"Daphne789"},"content":"     -fx-background-color: #FFC107;","lastModifiedDate":"2023-10-26"},{"lineNumber":380,"author":{"gitId":"Daphne789"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":381,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":382,"author":{"gitId":"Daphne789"},"content":"#cardPane .moderatelyHighRisk {","lastModifiedDate":"2023-10-26"},{"lineNumber":383,"author":{"gitId":"Daphne789"},"content":"     -fx-background-color: #FF6600;","lastModifiedDate":"2023-10-26"},{"lineNumber":384,"author":{"gitId":"Daphne789"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":385,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":386,"author":{"gitId":"Daphne789"},"content":"#cardPane .highRisk {","lastModifiedDate":"2023-10-26"},{"lineNumber":387,"author":{"gitId":"Daphne789"},"content":"     -fx-background-color: #F44336;","lastModifiedDate":"2023-10-26"},{"lineNumber":388,"author":{"gitId":"Daphne789"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":389,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":390,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":391,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":392,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":393,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":394,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":395,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":396,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":397,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":398,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":399,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"Daphne789":38,"bhnuka":361}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"bhnuka"},"content":"    -fx-background: #f2f2f2;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bhnuka":1,"-":19}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#copyButton, #helpMessage {","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"bhnuka"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"#copyButton {","lastModifiedDate":"2022-01-02"},{"lineNumber":6,"author":{"gitId":"bhnuka"},"content":"    -fx-background-color: lightgray;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"#copyButton:hover {","lastModifiedDate":"2022-01-02"},{"lineNumber":10,"author":{"gitId":"bhnuka"},"content":"    -fx-background-color: silver;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"#copyButton:armed {","lastModifiedDate":"2022-01-02"},{"lineNumber":14,"author":{"gitId":"bhnuka"},"content":"    -fx-background-color: gainsboro;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"#helpMessageContainer {","lastModifiedDate":"2022-01-02"},{"lineNumber":18,"author":{"gitId":"bhnuka"},"content":"    -fx-background-color: derive(white, 20%);","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"bhnuka":5,"-":14}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"Daphne789"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"Daphne789"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"Daphne789"},"content":"      \u003cVBox alignment\u003d\"CENTER_LEFT\" fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":43,"author":{"gitId":"Daphne789"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"Daphne789":4,"-":42}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"bhnuka"},"content":"\u003c?import javafx.scene.shape.Rectangle?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":16,"author":{"gitId":"bhnuka"},"content":"         title\u003d\"FAPro\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"bhnuka"},"content":"    \u003cImage url\u003d\"@/images/fapro.png\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"bhnuka"},"content":"        \u003cURL value\u003d\"@DefaultTheme.css\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"Daphne789"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Questionnaire\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"Daphne789"},"content":"            \u003cMenuItem fx:id\u003d\"questionnaireMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleQuestionnaire\" text\u003d\"Questionnaire\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"Daphne789"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"syamfarh"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Calendar\"\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"syamfarh"},"content":"            \u003cMenuItem fx:id\u003d\"calendarMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleCalendar\" text\u003d\"Calendar\" /\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"syamfarh"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Daphne789":3,"bhnuka":4,"syamfarh":3,"-":57}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"bhnuka"},"content":"      \u003cLabel fx:id\u003d\"occupation\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$occupation\" /\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"syamfarh"},"content":"      \u003cLabel fx:id\u003d\"appointmentDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$appointmentDate\" /\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"Daphne789"},"content":"      \u003cLabel fx:id\u003d\"riskProfile\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$riskProfile\"/\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Daphne789":1,"bhnuka":1,"syamfarh":1,"-":36}},{"path":"src/main/resources/view/PersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"bhnuka"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \u003cListView fx:id\u003d\"personListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bhnuka":1,"-":7}},{"path":"src/main/resources/view/QuestionnaireWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Daphne789"},"content":"#questionnaireMessage {","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"Daphne789"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"Daphne789"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"Daphne789"},"content":"#questionnaireMessageMessageContainer {","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"Daphne789"},"content":"    -fx-background-color: derive(white, 20%);","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"Daphne789"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"Daphne789":7}},{"path":"src/main/resources/view/QuestionnaireWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Daphne789"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"Daphne789"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"Daphne789"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"Daphne789"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"Daphne789"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"Daphne789"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"Daphne789"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"Daphne789"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"Daphne789"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"Daphne789"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Risk Assessment Questionnaire\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"Daphne789"},"content":"    \u003cicons\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"Daphne789"},"content":"        \u003cImage url\u003d\"@/images/questionnaire_icon.png\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"Daphne789"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"Daphne789"},"content":"    \u003cscene\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"Daphne789"},"content":"        \u003cScene\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"Daphne789"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"Daphne789"},"content":"                \u003cURL value\u003d\"@QuestionnaireWindow.css\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"Daphne789"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"Daphne789"},"content":"            \u003cVBox alignment\u003d\"CENTER_LEFT\" fx:id\u003d\"questionnaireMessageContainer\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"Daphne789"},"content":"                \u003cScrollPane maxHeight\u003d\"600\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"Daphne789"},"content":"                    \u003cVBox spacing\u003d\"10\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"Daphne789"},"content":"                        \u003cLabel fx:id\u003d\"marks\" text\u003d\"Label\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"Daphne789"},"content":"                            \u003cHBox.margin\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"Daphne789"},"content":"                                \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"Daphne789"},"content":"                            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"Daphne789"},"content":"                        \u003c/Label\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"Daphne789"},"content":"                        \u003cLabel fx:id\u003d\"questionnaireMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"Daphne789"},"content":"                            \u003cHBox.margin\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"Daphne789"},"content":"                                \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"Daphne789"},"content":"                            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"Daphne789"},"content":"                        \u003c/Label\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"Daphne789"},"content":"                        \u003cLabel fx:id\u003d\"riskCategory\" text\u003d\"Label\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"Daphne789"},"content":"                            \u003cHBox.margin\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"Daphne789"},"content":"                                \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"Daphne789"},"content":"                            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"Daphne789"},"content":"                        \u003c/Label\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"Daphne789"},"content":"                        \u003copaqueInsets\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"Daphne789"},"content":"                            \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"Daphne789"},"content":"                        \u003c/opaqueInsets\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"Daphne789"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"Daphne789"},"content":"                            \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"Daphne789"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"Daphne789"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"Daphne789"},"content":"                \u003c/ScrollPane\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"Daphne789"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"Daphne789"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"Daphne789"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"Daphne789"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"Daphne789":51}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"bhnuka"},"content":"        assertNotNull(AppUtil.getImage(\"/images/fapro.png\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"bhnuka":1,"-":35}},{"path":"src/test/java/seedu/address/commons/util/CalendarUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":"import com.calendarfx.model.Entry;","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":"import com.calendarfx.model.Interval;","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":"class CalendarUtilTest {","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":"    public void createNewEntry_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"        assertThrows(NullPointerException.class, () -\u003e CalendarUtil.createNewEntry(null));","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"syamfarh"},"content":"    public void createNewEntry_success() {","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"syamfarh"},"content":"        Interval intervalAlice \u003d new Interval(ALICE.getApptDate().valueInLocalDateTime,","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"syamfarh"},"content":"                ALICE.getApptDate().valueInLocalDateTime.plusHours(1));","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"syamfarh"},"content":"        Entry expectedEntryAlice \u003d new Entry(ALICE.getName().toString(), intervalAlice, ALICE.getName().toString());","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"syamfarh"},"content":"        assertEquals(expectedEntryAlice, CalendarUtil.createNewEntry(ALICE));","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"syamfarh"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"syamfarh"},"content":"    public void createNewEntry_difference() {","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"syamfarh"},"content":"        Interval intervalAlice \u003d new Interval(ALICE.getApptDate().valueInLocalDateTime,","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"syamfarh"},"content":"                ALICE.getApptDate().valueInLocalDateTime.plusHours(1));","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"syamfarh"},"content":"        Entry expectedEntryAlice \u003d new Entry(ALICE.getName().toString(), intervalAlice, ALICE.getName().toString());","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"syamfarh"},"content":"        assertFalse(expectedEntryAlice.equals(CalendarUtil.createNewEntry(BENSON)));","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"syamfarh"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"syamfarh":43}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"bhnuka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.OCCUPATION_DESC_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"bhnuka"},"content":"                + EMAIL_DESC_AMY + OCCUPATION_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"bhnuka":2,"-":174}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"glenngnng"},"content":"import javafx.util.Pair;","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"glenngnng"},"content":"     * A default model stub that has all of the methods failing.","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":164,"author":{"gitId":"syamfarh"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":165,"author":{"gitId":"syamfarh"},"content":"        public void updateSortComparator(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2023-10-19"},{"lineNumber":166,"author":{"gitId":"syamfarh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":167,"author":{"gitId":"syamfarh"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":168,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":169,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":170,"author":{"gitId":"glenngnng"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":171,"author":{"gitId":"glenngnng"},"content":"        public void storeDeletedPerson(Person deletedPerson) {","lastModifiedDate":"2023-10-15"},{"lineNumber":172,"author":{"gitId":"glenngnng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-15"},{"lineNumber":173,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":174,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":175,"author":{"gitId":"glenngnng"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":176,"author":{"gitId":"glenngnng"},"content":"        public Person getDeletedPerson() {","lastModifiedDate":"2023-10-15"},{"lineNumber":177,"author":{"gitId":"glenngnng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-15"},{"lineNumber":178,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":179,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":180,"author":{"gitId":"bhnuka"},"content":"        @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":181,"author":{"gitId":"bhnuka"},"content":"        public ArrayList\u003cPerson\u003e getDeletedPersons() {","lastModifiedDate":"2023-10-27"},{"lineNumber":182,"author":{"gitId":"bhnuka"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-27"},{"lineNumber":183,"author":{"gitId":"bhnuka"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":184,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":185,"author":{"gitId":"glenngnng"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":186,"author":{"gitId":"glenngnng"},"content":"        public void removeDeletedPerson() {","lastModifiedDate":"2023-10-24"},{"lineNumber":187,"author":{"gitId":"glenngnng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":188,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":189,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":190,"author":{"gitId":"glenngnng"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":191,"author":{"gitId":"glenngnng"},"content":"        public int getDeletedPersonsSize() {","lastModifiedDate":"2023-10-24"},{"lineNumber":192,"author":{"gitId":"glenngnng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":193,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":194,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":195,"author":{"gitId":"glenngnng"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":196,"author":{"gitId":"glenngnng"},"content":"        public int getPreviousUndoableCommandsSize() {","lastModifiedDate":"2023-10-24"},{"lineNumber":197,"author":{"gitId":"glenngnng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":198,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":199,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":200,"author":{"gitId":"bhnuka"},"content":"        @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":201,"author":{"gitId":"glenngnng"},"content":"        public void removeLastDeletedNumber() {","lastModifiedDate":"2023-10-31"},{"lineNumber":202,"author":{"gitId":"bhnuka"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-27"},{"lineNumber":203,"author":{"gitId":"bhnuka"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":204,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":205,"author":{"gitId":"bhnuka"},"content":"        @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":206,"author":{"gitId":"bhnuka"},"content":"        public ArrayList\u003cInteger\u003e getDeletedNumberList() {","lastModifiedDate":"2023-10-27"},{"lineNumber":207,"author":{"gitId":"bhnuka"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-27"},{"lineNumber":208,"author":{"gitId":"bhnuka"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":209,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":210,"author":{"gitId":"bhnuka"},"content":"        @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":211,"author":{"gitId":"bhnuka"},"content":"        public Integer getLastDeletedNumber() {","lastModifiedDate":"2023-10-27"},{"lineNumber":212,"author":{"gitId":"bhnuka"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-27"},{"lineNumber":213,"author":{"gitId":"bhnuka"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":214,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":215,"author":{"gitId":"glenngnng"},"content":"        @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":216,"author":{"gitId":"glenngnng"},"content":"        public int getNumberOfPreviousDeleteCommands() {","lastModifiedDate":"2023-10-25"},{"lineNumber":217,"author":{"gitId":"glenngnng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":218,"author":{"gitId":"bhnuka"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":219,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":220,"author":{"gitId":"bhnuka"},"content":"        @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":221,"author":{"gitId":"bhnuka"},"content":"        public void storeDeletedNumberList(int deletedNumber) {","lastModifiedDate":"2023-10-27"},{"lineNumber":222,"author":{"gitId":"bhnuka"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-27"},{"lineNumber":223,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":224,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":225,"author":{"gitId":"glenngnng"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":226,"author":{"gitId":"glenngnng"},"content":"        public void undoDelete() {","lastModifiedDate":"2023-10-23"},{"lineNumber":227,"author":{"gitId":"glenngnng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-15"},{"lineNumber":228,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":229,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":230,"author":{"gitId":"glenngnng"},"content":"        @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":231,"author":{"gitId":"glenngnng"},"content":"        public void undoDelete(Person deletedPerson) {","lastModifiedDate":"2023-10-31"},{"lineNumber":232,"author":{"gitId":"glenngnng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-31"},{"lineNumber":233,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":234,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":235,"author":{"gitId":"glenngnng"},"content":"        @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":236,"author":{"gitId":"glenngnng"},"content":"        public void undoAdd() {","lastModifiedDate":"2023-10-31"},{"lineNumber":237,"author":{"gitId":"glenngnng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-31"},{"lineNumber":238,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":239,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":240,"author":{"gitId":"glenngnng"},"content":"        @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":241,"author":{"gitId":"glenngnng"},"content":"        public void undoEdit() {","lastModifiedDate":"2023-10-31"},{"lineNumber":242,"author":{"gitId":"glenngnng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-31"},{"lineNumber":243,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":244,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":245,"author":{"gitId":"glenngnng"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":246,"author":{"gitId":"glenngnng"},"content":"        public void storePreviousUndoableCommand(String s) {","lastModifiedDate":"2023-10-24"},{"lineNumber":247,"author":{"gitId":"glenngnng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":248,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":249,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":250,"author":{"gitId":"glenngnng"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":251,"author":{"gitId":"glenngnng"},"content":"        public String getPreviousUndoableCommand() {","lastModifiedDate":"2023-10-24"},{"lineNumber":252,"author":{"gitId":"glenngnng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":253,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":254,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":255,"author":{"gitId":"glenngnng"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":256,"author":{"gitId":"glenngnng"},"content":"        public void removePreviousUndoableCommand() {","lastModifiedDate":"2023-10-24"},{"lineNumber":257,"author":{"gitId":"glenngnng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":258,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":259,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":260,"author":{"gitId":"glenngnng"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":261,"author":{"gitId":"glenngnng"},"content":"        public int getAddressBookSize() {","lastModifiedDate":"2023-10-24"},{"lineNumber":262,"author":{"gitId":"glenngnng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":263,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":264,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":265,"author":{"gitId":"glenngnng"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":266,"author":{"gitId":"glenngnng"},"content":"        public void storeEditedPersonsPair(Person editedPerson, Person originalPerson) {","lastModifiedDate":"2023-10-24"},{"lineNumber":267,"author":{"gitId":"glenngnng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":268,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":269,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":270,"author":{"gitId":"glenngnng"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":271,"author":{"gitId":"glenngnng"},"content":"        public Pair\u003cPerson, Person\u003e getEditedPersonsPair() {","lastModifiedDate":"2023-10-24"},{"lineNumber":272,"author":{"gitId":"glenngnng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":273,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":274,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":275,"author":{"gitId":"glenngnng"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":276,"author":{"gitId":"glenngnng"},"content":"        public void removeEditedPersonsPair() {","lastModifiedDate":"2023-10-24"},{"lineNumber":277,"author":{"gitId":"glenngnng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":278,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":279,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":280,"author":{"gitId":"glenngnng"},"content":"        @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":281,"author":{"gitId":"glenngnng"},"content":"        public int getEditedPersonsSize() {","lastModifiedDate":"2023-10-31"},{"lineNumber":282,"author":{"gitId":"glenngnng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-31"},{"lineNumber":283,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":284,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":285,"author":{"gitId":"glenngnng"},"content":"        @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":286,"author":{"gitId":"glenngnng"},"content":"        public void storeAddedPerson(Person person) {","lastModifiedDate":"2023-10-31"},{"lineNumber":287,"author":{"gitId":"glenngnng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-31"},{"lineNumber":288,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":289,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":290,"author":{"gitId":"glenngnng"},"content":"        @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":291,"author":{"gitId":"glenngnng"},"content":"        public Person getAddedPerson() {","lastModifiedDate":"2023-10-31"},{"lineNumber":292,"author":{"gitId":"glenngnng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-31"},{"lineNumber":293,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":294,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":295,"author":{"gitId":"glenngnng"},"content":"        @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":296,"author":{"gitId":"glenngnng"},"content":"        public void removeAddedPerson() {","lastModifiedDate":"2023-10-31"},{"lineNumber":297,"author":{"gitId":"glenngnng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-31"},{"lineNumber":298,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":299,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":300,"author":{"gitId":"glenngnng"},"content":"        @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":301,"author":{"gitId":"glenngnng"},"content":"        public int getAddedPersonsSize() {","lastModifiedDate":"2023-10-31"},{"lineNumber":302,"author":{"gitId":"glenngnng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-31"},{"lineNumber":303,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":307,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":308,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":313,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":314,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":315,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":317,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":319,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":320,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":325,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":326,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":329,"author":{"gitId":"glenngnng"},"content":"        final ArrayList\u003cString\u003e previousUndoableCommands \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-24"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":331,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":333,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":334,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":339,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":340,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":343,"author":{"gitId":"glenngnng"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":344,"author":{"gitId":"glenngnng"},"content":"        public void storePreviousUndoableCommand(String command) {","lastModifiedDate":"2023-10-24"},{"lineNumber":345,"author":{"gitId":"glenngnng"},"content":"            previousUndoableCommands.add(command);","lastModifiedDate":"2023-10-24"},{"lineNumber":346,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":347,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":350,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":354,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"glenngnng":122,"bhnuka":23,"syamfarh":6,"-":203}},{"path":"src/test/java/seedu/address/logic/commands/CalendarCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"import static seedu.address.logic.commands.CalendarCommand.SHOWING_CALENDAR_MESSAGE;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":"class CalendarCommandTest {","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":"    public void execute_calendar_success() {","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"        CommandResult expectedCommandResult \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":"                new CommandResult(SHOWING_CALENDAR_MESSAGE, false, false,","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":"                        true, false);","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"        assertCommandSuccess(new CalendarCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"syamfarh"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"syamfarh":23}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"glenngnng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"glenngnng"},"content":"    public void execute_emptyAddressBook_throwsCommandException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"glenngnng"},"content":"        assertCommandFailure(new ClearCommand(), model, ClearCommand.MESSAGE_FAILURE);","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"glenngnng":3,"-":29}},{"path":"src/test/java/seedu/address/logic/commands/CloneCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bhnuka"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"bhnuka"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"bhnuka"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"bhnuka"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"bhnuka"},"content":"import static seedu.address.logic.commands.CloneCommand.MESSAGE_CLONE_PERSON_SUCCESS;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"bhnuka"},"content":"import static seedu.address.logic.commands.CloneCommand.clonePerson;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"bhnuka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"bhnuka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"bhnuka"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"bhnuka"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_NINTH_PERSON;","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"bhnuka"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"bhnuka"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_TENTH_PERSON;","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"bhnuka"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_TWELFTH_PERSON;","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"bhnuka"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"bhnuka"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"bhnuka"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"bhnuka"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"bhnuka"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"bhnuka"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"bhnuka"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"bhnuka"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"bhnuka"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"bhnuka"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"bhnuka"},"content":"public class CloneCommandTest {","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"bhnuka"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"bhnuka"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"bhnuka"},"content":"    public void execute_validIndexUnfilteredListSpacesNoSuffix_success() throws CommandException {","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"bhnuka"},"content":"        Person personToClone \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"bhnuka"},"content":"        CloneCommand cloneCommand \u003d new CloneCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"bhnuka"},"content":"        // Creating the expected cloned person","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"bhnuka"},"content":"        Person expectedClonedPerson \u003d clonePerson(personToClone);","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"bhnuka"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"bhnuka"},"content":"        builder.append(personToClone.getName())","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"bhnuka"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"bhnuka"},"content":"                .append(expectedClonedPerson.getPhone())","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"bhnuka"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"bhnuka"},"content":"                .append(expectedClonedPerson.getEmail())","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"bhnuka"},"content":"                .append(\"; Occupation: \")","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"bhnuka"},"content":"                .append(expectedClonedPerson.getOccupation())","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"bhnuka"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"bhnuka"},"content":"                .append(expectedClonedPerson.getAddress())","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"bhnuka"},"content":"                .append(\"; AppointmentDate: \")","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"bhnuka"},"content":"                .append(expectedClonedPerson.getApptDate())","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"bhnuka"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"bhnuka"},"content":"        expectedClonedPerson.getTags().forEach(builder::append);","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"bhnuka"},"content":"        String expectedClonedPersonS \u003d builder.toString();","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"bhnuka"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CLONE_PERSON_SUCCESS,","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"bhnuka"},"content":"            expectedClonedPersonS); // Only compare the name","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"bhnuka"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"bhnuka"},"content":"        expectedModel.addPerson(expectedClonedPerson);","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"bhnuka"},"content":"        assertCommandSuccess(cloneCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":66,"author":{"gitId":"bhnuka"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":67,"author":{"gitId":"bhnuka"},"content":"    public void execute_validIndexUnfilteredListNoSpacesNoSuffix_success() throws CommandException {","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"bhnuka"},"content":"        Person personToClone \u003d model.getFilteredPersonList().get(INDEX_NINTH_PERSON.getZeroBased());","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"bhnuka"},"content":"        CloneCommand cloneCommand \u003d new CloneCommand(INDEX_NINTH_PERSON);","lastModifiedDate":"2023-10-28"},{"lineNumber":70,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":71,"author":{"gitId":"bhnuka"},"content":"        // Creating the expected cloned person","lastModifiedDate":"2023-10-28"},{"lineNumber":72,"author":{"gitId":"bhnuka"},"content":"        Person expectedClonedPerson \u003d clonePerson(personToClone);","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":74,"author":{"gitId":"bhnuka"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-28"},{"lineNumber":75,"author":{"gitId":"bhnuka"},"content":"        builder.append(personToClone.getName())","lastModifiedDate":"2023-10-28"},{"lineNumber":76,"author":{"gitId":"bhnuka"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2023-10-28"},{"lineNumber":77,"author":{"gitId":"bhnuka"},"content":"                .append(expectedClonedPerson.getPhone())","lastModifiedDate":"2023-10-28"},{"lineNumber":78,"author":{"gitId":"bhnuka"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2023-10-28"},{"lineNumber":79,"author":{"gitId":"bhnuka"},"content":"                .append(expectedClonedPerson.getEmail())","lastModifiedDate":"2023-10-28"},{"lineNumber":80,"author":{"gitId":"bhnuka"},"content":"                .append(\"; Occupation: \")","lastModifiedDate":"2023-10-28"},{"lineNumber":81,"author":{"gitId":"bhnuka"},"content":"                .append(expectedClonedPerson.getOccupation())","lastModifiedDate":"2023-10-28"},{"lineNumber":82,"author":{"gitId":"bhnuka"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2023-10-28"},{"lineNumber":83,"author":{"gitId":"bhnuka"},"content":"                .append(expectedClonedPerson.getAddress())","lastModifiedDate":"2023-10-28"},{"lineNumber":84,"author":{"gitId":"bhnuka"},"content":"                .append(\"; AppointmentDate: \")","lastModifiedDate":"2023-10-28"},{"lineNumber":85,"author":{"gitId":"bhnuka"},"content":"                .append(expectedClonedPerson.getApptDate())","lastModifiedDate":"2023-10-28"},{"lineNumber":86,"author":{"gitId":"bhnuka"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2023-10-28"},{"lineNumber":87,"author":{"gitId":"bhnuka"},"content":"        expectedClonedPerson.getTags().forEach(builder::append);","lastModifiedDate":"2023-10-28"},{"lineNumber":88,"author":{"gitId":"bhnuka"},"content":"        String expectedClonedPersonS \u003d builder.toString();","lastModifiedDate":"2023-10-28"},{"lineNumber":89,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":90,"author":{"gitId":"bhnuka"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CLONE_PERSON_SUCCESS,","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"bhnuka"},"content":"                expectedClonedPersonS); // Only compare the name","lastModifiedDate":"2023-10-28"},{"lineNumber":92,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":93,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":94,"author":{"gitId":"bhnuka"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-28"},{"lineNumber":95,"author":{"gitId":"bhnuka"},"content":"        expectedModel.addPerson(expectedClonedPerson);","lastModifiedDate":"2023-10-28"},{"lineNumber":96,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":97,"author":{"gitId":"bhnuka"},"content":"        assertCommandSuccess(cloneCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-28"},{"lineNumber":98,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":99,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":100,"author":{"gitId":"bhnuka"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":101,"author":{"gitId":"bhnuka"},"content":"    public void execute_validIndexUnfilteredCloneInList_success() throws CommandException {","lastModifiedDate":"2023-11-01"},{"lineNumber":102,"author":{"gitId":"bhnuka"},"content":"        Person personToClone \u003d model.getFilteredPersonList().get(INDEX_TENTH_PERSON.getZeroBased());","lastModifiedDate":"2023-10-28"},{"lineNumber":103,"author":{"gitId":"bhnuka"},"content":"        CloneCommand cloneCommand \u003d new CloneCommand(INDEX_TENTH_PERSON);","lastModifiedDate":"2023-10-28"},{"lineNumber":104,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":105,"author":{"gitId":"bhnuka"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":107,"author":{"gitId":"bhnuka"},"content":"        Person expectedClonedPerson \u003d new PersonBuilder().withName(\"Lenny David 2\").withAddress(\"6th Street\")","lastModifiedDate":"2023-11-01"},{"lineNumber":108,"author":{"gitId":"bhnuka"},"content":"            .withEmail(\"lenny@example.com\").withPhone(\"94932143\").withOccupation(\"Fisherman\")","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"bhnuka"},"content":"            .withAppointmentDate(\"2023-12-21 08:30\").withRiskProfile(\"\").withTags(\"friends\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":110,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":111,"author":{"gitId":"bhnuka"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CLONE_PERSON_SUCCESS, Messages.format(personToClone));","lastModifiedDate":"2023-11-01"},{"lineNumber":112,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":113,"author":{"gitId":"bhnuka"},"content":"        expectedModel.addPerson(expectedClonedPerson);","lastModifiedDate":"2023-10-20"},{"lineNumber":114,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":115,"author":{"gitId":"bhnuka"},"content":"        assertCommandSuccess(cloneCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-20"},{"lineNumber":116,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":117,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":118,"author":{"gitId":"bhnuka"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":119,"author":{"gitId":"bhnuka"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":120,"author":{"gitId":"bhnuka"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-10-20"},{"lineNumber":121,"author":{"gitId":"bhnuka"},"content":"        CloneCommand cloneCommand \u003d new CloneCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-20"},{"lineNumber":122,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":123,"author":{"gitId":"bhnuka"},"content":"        assertCommandFailure(cloneCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-20"},{"lineNumber":124,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":125,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":126,"author":{"gitId":"bhnuka"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":127,"author":{"gitId":"bhnuka"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":128,"author":{"gitId":"bhnuka"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-10-21"},{"lineNumber":129,"author":{"gitId":"bhnuka"},"content":"        // Try to clone the first person in the filtered list","lastModifiedDate":"2023-10-21"},{"lineNumber":130,"author":{"gitId":"bhnuka"},"content":"        CloneCommand cloneCommand \u003d new CloneCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-20"},{"lineNumber":131,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":132,"author":{"gitId":"bhnuka"},"content":"        assertCommandFailure(cloneCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-21"},{"lineNumber":133,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":134,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":135,"author":{"gitId":"bhnuka"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":136,"author":{"gitId":"bhnuka"},"content":"    public void equals() {","lastModifiedDate":"2023-10-20"},{"lineNumber":137,"author":{"gitId":"bhnuka"},"content":"        CloneCommand cloneFirstCommand \u003d new CloneCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-20"},{"lineNumber":138,"author":{"gitId":"bhnuka"},"content":"        CloneCommand cloneSecondCommand \u003d new CloneCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-10-21"},{"lineNumber":139,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":140,"author":{"gitId":"bhnuka"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-20"},{"lineNumber":141,"author":{"gitId":"bhnuka"},"content":"        assertTrue(cloneFirstCommand.equals(cloneFirstCommand));","lastModifiedDate":"2023-10-20"},{"lineNumber":142,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":143,"author":{"gitId":"bhnuka"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-20"},{"lineNumber":144,"author":{"gitId":"bhnuka"},"content":"        CloneCommand cloneFirstCommandCopy \u003d new CloneCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-20"},{"lineNumber":145,"author":{"gitId":"bhnuka"},"content":"        assertTrue(cloneFirstCommand.equals(cloneFirstCommandCopy));","lastModifiedDate":"2023-10-20"},{"lineNumber":146,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":147,"author":{"gitId":"bhnuka"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":148,"author":{"gitId":"bhnuka"},"content":"        assertFalse(cloneFirstCommand.equals(1));","lastModifiedDate":"2023-10-20"},{"lineNumber":149,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":150,"author":{"gitId":"bhnuka"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":151,"author":{"gitId":"bhnuka"},"content":"        assertFalse(cloneFirstCommand.equals(null));","lastModifiedDate":"2023-10-20"},{"lineNumber":152,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":153,"author":{"gitId":"bhnuka"},"content":"        // different indexes -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":154,"author":{"gitId":"bhnuka"},"content":"        assertFalse(cloneFirstCommand.equals(cloneSecondCommand));","lastModifiedDate":"2023-10-20"},{"lineNumber":155,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":156,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":157,"author":{"gitId":"bhnuka"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":158,"author":{"gitId":"bhnuka"},"content":"    public void execute_validIndexUnfilteredListInvalidSuffix_throwsCommandException() {","lastModifiedDate":"2023-11-01"},{"lineNumber":159,"author":{"gitId":"bhnuka"},"content":"        // Create a scenario where the name has an invalid numeric suffix","lastModifiedDate":"2023-11-01"},{"lineNumber":160,"author":{"gitId":"bhnuka"},"content":"        Person personToClone \u003d model.getFilteredPersonList().get(INDEX_TWELFTH_PERSON.getZeroBased());","lastModifiedDate":"2023-11-01"},{"lineNumber":161,"author":{"gitId":"bhnuka"},"content":"        CloneCommand cloneCommand \u003d new CloneCommand(INDEX_TWELFTH_PERSON);","lastModifiedDate":"2023-11-01"},{"lineNumber":162,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":163,"author":{"gitId":"bhnuka"},"content":"        assertCommandFailure(cloneCommand, model, Messages.MESSAGE_PERSON_SUFFIX_OUT_OF_RANGE);","lastModifiedDate":"2023-11-01"},{"lineNumber":164,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":165,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":166,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":167,"author":{"gitId":"bhnuka"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":168,"author":{"gitId":"bhnuka"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-20"},{"lineNumber":169,"author":{"gitId":"bhnuka"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-20"},{"lineNumber":170,"author":{"gitId":"bhnuka"},"content":"        CloneCommand cloneCommand \u003d new CloneCommand(targetIndex);","lastModifiedDate":"2023-10-20"},{"lineNumber":171,"author":{"gitId":"bhnuka"},"content":"        String expected \u003d CloneCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2023-10-20"},{"lineNumber":172,"author":{"gitId":"bhnuka"},"content":"        assertEquals(expected, cloneCommand.toString());","lastModifiedDate":"2023-10-20"},{"lineNumber":173,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":174,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":175,"author":{"gitId":"bhnuka"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":176,"author":{"gitId":"bhnuka"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2023-10-20"},{"lineNumber":177,"author":{"gitId":"bhnuka"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":178,"author":{"gitId":"bhnuka"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2023-10-20"},{"lineNumber":179,"author":{"gitId":"bhnuka"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2023-10-20"},{"lineNumber":180,"author":{"gitId":"bhnuka"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2023-10-20"},{"lineNumber":181,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":182,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"bhnuka":182}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false,","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"                false, false)));","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"syamfarh"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false,","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"syamfarh"},"content":"                false, false)));","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"Daphne789"},"content":"        // different showQuestionnaire value -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"syamfarh"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true,","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"syamfarh"},"content":"                false, false)));","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"syamfarh"},"content":"        // different showCalendar value -\u003e returns false","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"syamfarh"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, false,","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"syamfarh"},"content":"                true, false)));","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"syamfarh"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, false,","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"syamfarh"},"content":"                false, true)));","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"syamfarh"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true,","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"syamfarh"},"content":"                false, false, false).hashCode());","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"Daphne789"},"content":"        // different showQuestionnaire value -\u003e returns different hashcode","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"syamfarh"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false,","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"syamfarh"},"content":"                true, false, false).hashCode());","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"syamfarh"},"content":"        // different showCalendar value -\u003e returns different hashcode","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"syamfarh"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false,","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"syamfarh"},"content":"                false, true, false).hashCode());","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"syamfarh"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false,","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"syamfarh"},"content":"                false, false, true).hashCode());","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String expected \u003d CommandResult.class.getCanonicalName() + \"{feedbackToUser\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                + commandResult.getFeedbackToUser() + \", showHelp\u003d\" + commandResult.isShowHelp()","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"Daphne789"},"content":"                + \", showQuestionnaire\u003d\" + commandResult.isShowQuestionnaire()","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"syamfarh"},"content":"                + \", showCalendar\u003d\" + commandResult.isShowCalendar()","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                + \", exit\u003d\" + commandResult.isExit() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(expected, commandResult.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"Daphne789":5,"syamfarh":23,"-":58}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENTDATE;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"bhnuka"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OCCUPATION;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"limzhenwy"},"content":"    public static final String VALID_NAME_JOHN \u003d \"John Doe\";","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"limzhenwy"},"content":"    public static final String VALID_PHONE_JOHN \u003d \"33333333\";","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"limzhenwy"},"content":"    public static final String VALID_EMAIL_JOHN \u003d \"john@example.com\";","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"bhnuka"},"content":"    public static final String VALID_OCCUPATION_AMY \u003d \"Barber\";","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"bhnuka"},"content":"    public static final String VALID_OCCUPATION_BOB \u003d \"Software Engineer\";","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"limzhenwy"},"content":"    public static final String VALID_OCCUPATION_JOHN \u003d \"Chef\";","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"limzhenwy"},"content":"    public static final String VALID_ADDRESS_JOHN \u003d \"Block 222, John Street 2\";","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"syamfarh"},"content":"    public static final String VALID_APPOINTMENTDATE_AMY \u003d \"2023-11-20 08:30\";","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"syamfarh"},"content":"    public static final String VALID_APPOINTMENTDATE_BOB \u003d \"2023-11-21 08:30\";","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"syamfarh"},"content":"    public static final String VALID_APPOINTMENTDATE_JOHN \u003d \"2023-12-12 08:30\";","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"Daphne789"},"content":"    public static final String VALID_RISKPROFILE_AMY \u003d \"a,a,b,b,b,d,e,c\";","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"Daphne789"},"content":"    public static final String VALID_RISKPROFILE_BOB \u003d \"b,c,d,a,a,e,c,c\";","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"bhnuka"},"content":"    public static final String OCCUPATION_DESC_AMY \u003d \" \" + PREFIX_OCCUPATION + VALID_OCCUPATION_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"bhnuka"},"content":"    public static final String OCCUPATION_DESC_BOB \u003d \" \" + PREFIX_OCCUPATION + VALID_OCCUPATION_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"syamfarh"},"content":"    public static final String APPOINTMENT_DESC_AMY \u003d \" \" + PREFIX_APPOINTMENTDATE + VALID_APPOINTMENTDATE_AMY;","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"syamfarh"},"content":"    public static final String APPOINTMENT_DESC_BOB \u003d \" \" + PREFIX_APPOINTMENTDATE + VALID_APPOINTMENTDATE_BOB;","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"bhnuka"},"content":"    public static final String INVALID_OCCUPATION_DESC \u003d \" \" + PREFIX_OCCUPATION + \"B@rber\";","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"bhnuka"},"content":"    // \u0027@\u0027 not allowed in occupations","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"bhnuka"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withOccupation(VALID_OCCUPATION_AMY)","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"bhnuka"},"content":"                .withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"bhnuka"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withOccupation(VALID_OCCUPATION_BOB)","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"bhnuka"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"limzhenwy":7,"Daphne789":2,"bhnuka":11,"syamfarh":8,"-":124}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":9,"author":{"gitId":"bhnuka"},"content":"import static seedu.address.testutil.TypicalIndexes.FIRST_INDEXES;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"bhnuka"},"content":"import static seedu.address.testutil.TypicalIndexes.SECOND_INDEXES;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"bhnuka"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"bhnuka"},"content":"import java.util.List;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"bhnuka"},"content":"    public void execute_validIndexesUnfilteredList_success() {","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"bhnuka"},"content":"        List\u003cPerson\u003e personsToDelete \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"bhnuka"},"content":"        List\u003cIndex\u003e indexesToDelete \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"bhnuka"},"content":"        for (Index targetIndex : FIRST_INDEXES) {","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"bhnuka"},"content":"            Person personToDelete \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"bhnuka"},"content":"            personsToDelete.add(personToDelete);","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"bhnuka"},"content":"            indexesToDelete.add(targetIndex);","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"bhnuka"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"bhnuka"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(indexesToDelete);","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"bhnuka"},"content":"            Messages.formatPersons(personsToDelete));","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"bhnuka"},"content":"        for (Person personToDelete : personsToDelete) {","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"bhnuka"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"bhnuka"},"content":"    public void execute_invalidIndexesUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"bhnuka"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(List.of(outOfBoundIndex));","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"bhnuka"},"content":"    public void execute_invalidIndexesFilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"bhnuka"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(List.of(outOfBoundIndex));","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"bhnuka"},"content":"        List\u003cIndex\u003e firstIndexes \u003d new ArrayList\u003c\u003e(FIRST_INDEXES);","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"bhnuka"},"content":"        List\u003cIndex\u003e secondIndexes \u003d new ArrayList\u003c\u003e(SECOND_INDEXES);","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"bhnuka"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(firstIndexes);","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"bhnuka"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(secondIndexes);","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"bhnuka"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(firstIndexes);","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"bhnuka"},"content":"        // different indexes -\u003e returns false","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"bhnuka"},"content":"        List\u003cIndex\u003e targetIndexes \u003d new ArrayList\u003c\u003e(FIRST_INDEXES);","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"bhnuka"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndexes);","lastModifiedDate":"2023-10-27"},{"lineNumber":109,"author":{"gitId":"bhnuka"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndexes + \"}\";","lastModifiedDate":"2023-10-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"bhnuka":33,"-":88}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"bhnuka"},"content":"                + editPersonDescriptor.getOccupation().orElse(null) + \", occupation\u003d\"","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"syamfarh"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \", appointment Date\u003d\"","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"syamfarh"},"content":"                + editPersonDescriptor.getAppointmentDate().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"bhnuka":1,"syamfarh":2,"-":70}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"Daphne789"},"content":"        CommandResult expectedCommandResult \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"                new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, false,","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":"                        false, true);","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Daphne789":1,"syamfarh":2,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/FindAddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"limzhenwy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"limzhenwy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"limzhenwy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"limzhenwy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"limzhenwy"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"limzhenwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"limzhenwy"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"limzhenwy"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"limzhenwy"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"limzhenwy"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"limzhenwy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"limzhenwy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"limzhenwy"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"limzhenwy"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"limzhenwy"},"content":"import seedu.address.model.person.AddressContainsKeywordsPredicate;","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"limzhenwy"},"content":"public class FindAddCommandTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"limzhenwy"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"limzhenwy"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"limzhenwy"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"limzhenwy"},"content":"    public void equals() {","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"limzhenwy"},"content":"        AddressContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"limzhenwy"},"content":"                new AddressContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"limzhenwy"},"content":"        AddressContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"limzhenwy"},"content":"                new AddressContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"limzhenwy"},"content":"        FindAddCommand findAddFirstCommand \u003d new FindAddCommand(firstPredicate);","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"limzhenwy"},"content":"        FindAddCommand findAddSecondCommand \u003d new FindAddCommand(secondPredicate);","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"limzhenwy"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"limzhenwy"},"content":"        assertTrue(findAddFirstCommand.equals(findAddFirstCommand));","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"limzhenwy"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"limzhenwy"},"content":"        FindAddCommand findFirstCommandCopy \u003d new FindAddCommand(firstPredicate);","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"limzhenwy"},"content":"        assertTrue(findAddFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"limzhenwy"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"limzhenwy"},"content":"        assertFalse(findAddFirstCommand.equals(1));","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"limzhenwy"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"limzhenwy"},"content":"        assertFalse(findAddFirstCommand.equals(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"limzhenwy"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"limzhenwy"},"content":"        assertFalse(findAddFirstCommand.equals(findAddSecondCommand));","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"limzhenwy"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"limzhenwy"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"limzhenwy"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"limzhenwy"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"limzhenwy"},"content":"        AddressContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"limzhenwy"},"content":"        FindAddCommand command \u003d new FindAddCommand(predicate);","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"limzhenwy"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"limzhenwy"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"limzhenwy"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"limzhenwy"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"limzhenwy"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"limzhenwy"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"limzhenwy"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"limzhenwy"},"content":"        AddressContainsKeywordsPredicate predicate \u003d preparePredicate(\"little tokyo\");","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"limzhenwy"},"content":"        FindAddCommand command \u003d new FindAddCommand(predicate);","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"limzhenwy"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"limzhenwy"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"limzhenwy"},"content":"        assertEquals(Collections.singletonList(FIONA), model.getFilteredPersonList());","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"limzhenwy"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"limzhenwy"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"limzhenwy"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"limzhenwy"},"content":"        AddressContainsKeywordsPredicate predicate \u003d new AddressContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2023-10-29"},{"lineNumber":75,"author":{"gitId":"limzhenwy"},"content":"        FindAddCommand findCommand \u003d new FindAddCommand(predicate);","lastModifiedDate":"2023-10-29"},{"lineNumber":76,"author":{"gitId":"limzhenwy"},"content":"        String expected \u003d FindAddCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2023-10-29"},{"lineNumber":77,"author":{"gitId":"limzhenwy"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"limzhenwy"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"limzhenwy"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"limzhenwy"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"limzhenwy"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"limzhenwy"},"content":"    private AddressContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"limzhenwy"},"content":"        return new AddressContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"limzhenwy"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"limzhenwy"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"limzhenwy":86}},{"path":"src/test/java/seedu/address/logic/commands/FindApptCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"limzhenwy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"limzhenwy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"limzhenwy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"limzhenwy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"limzhenwy"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"limzhenwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"limzhenwy"},"content":"import static seedu.address.testutil.TypicalPersons.JOHN;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"limzhenwy"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"limzhenwy"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"limzhenwy"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"limzhenwy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"limzhenwy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"limzhenwy"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"limzhenwy"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"limzhenwy"},"content":"import seedu.address.model.person.CalendarContainsKeywordsPredicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"public class FindApptCommandTest {","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"limzhenwy"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"limzhenwy"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"limzhenwy"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"limzhenwy"},"content":"    public void equals() {","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"limzhenwy"},"content":"        CalendarContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"limzhenwy"},"content":"                new CalendarContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"limzhenwy"},"content":"        CalendarContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"limzhenwy"},"content":"                new CalendarContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"syamfarh"},"content":"        FindApptCommand calendarFirstCommand \u003d new FindApptCommand(firstPredicate);","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"syamfarh"},"content":"        FindApptCommand calendarSecondCommand \u003d new FindApptCommand(secondPredicate);","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"limzhenwy"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"limzhenwy"},"content":"        assertTrue(calendarFirstCommand.equals(calendarFirstCommand));","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"limzhenwy"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"syamfarh"},"content":"        FindApptCommand calendarFirstCommandCopy \u003d new FindApptCommand(firstPredicate);","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"limzhenwy"},"content":"        assertTrue(calendarFirstCommand.equals(calendarFirstCommandCopy));","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"limzhenwy"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"limzhenwy"},"content":"        assertFalse(calendarFirstCommand.equals(1));","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"limzhenwy"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"limzhenwy"},"content":"        assertFalse(calendarFirstCommand.equals(null));","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"limzhenwy"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"limzhenwy"},"content":"        assertFalse(calendarFirstCommand.equals(calendarSecondCommand));","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"limzhenwy"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"limzhenwy"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"limzhenwy"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"limzhenwy"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"limzhenwy"},"content":"        CalendarContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"syamfarh"},"content":"        FindApptCommand command \u003d new FindApptCommand(predicate);","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"limzhenwy"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"limzhenwy"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"limzhenwy"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"limzhenwy"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":63,"author":{"gitId":"limzhenwy"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"limzhenwy"},"content":"    public void execute_onePersonFound() {","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"limzhenwy"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"limzhenwy"},"content":"        CalendarContainsKeywordsPredicate predicate \u003d preparePredicate(\"2023-12-12\");","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"syamfarh"},"content":"        FindApptCommand command \u003d new FindApptCommand(predicate);","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"limzhenwy"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"limzhenwy"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"limzhenwy"},"content":"        assertEquals(Collections.singletonList(JOHN), model.getFilteredPersonList());","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"limzhenwy"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":72,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":73,"author":{"gitId":"limzhenwy"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"limzhenwy"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"limzhenwy"},"content":"        CalendarContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":76,"author":{"gitId":"limzhenwy"},"content":"                new CalendarContainsKeywordsPredicate(Arrays.asList(\"2023-12-12\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":77,"author":{"gitId":"syamfarh"},"content":"        FindApptCommand findApptCommand \u003d new FindApptCommand(predicate);","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"syamfarh"},"content":"        String expected \u003d FindApptCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"syamfarh"},"content":"        assertEquals(expected, findApptCommand.toString());","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"limzhenwy"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":81,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":82,"author":{"gitId":"limzhenwy"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":83,"author":{"gitId":"limzhenwy"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2023-10-20"},{"lineNumber":84,"author":{"gitId":"limzhenwy"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":85,"author":{"gitId":"limzhenwy"},"content":"    private CalendarContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2023-10-20"},{"lineNumber":86,"author":{"gitId":"limzhenwy"},"content":"        return new CalendarContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-10-20"},{"lineNumber":87,"author":{"gitId":"limzhenwy"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":88,"author":{"gitId":"limzhenwy"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"limzhenwy":79,"syamfarh":9}},{"path":"src/test/java/seedu/address/logic/commands/FindNameCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"limzhenwy"},"content":"public class FindNameCommandTest {","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"limzhenwy"},"content":"        FindNameCommand findNameFirstCommand \u003d new FindNameCommand(firstPredicate);","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"limzhenwy"},"content":"        FindNameCommand findNameSecondCommand \u003d new FindNameCommand(secondPredicate);","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"limzhenwy"},"content":"        assertTrue(findNameFirstCommand.equals(findNameFirstCommand));","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"limzhenwy"},"content":"        FindNameCommand findNameFirstCommandCopy \u003d new FindNameCommand(firstPredicate);","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"limzhenwy"},"content":"        assertTrue(findNameFirstCommand.equals(findNameFirstCommandCopy));","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"limzhenwy"},"content":"        assertFalse(findNameFirstCommand.equals(1));","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"limzhenwy"},"content":"        assertFalse(findNameFirstCommand.equals(null));","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"limzhenwy"},"content":"        assertFalse(findNameFirstCommand.equals(findNameSecondCommand));","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"limzhenwy"},"content":"        FindNameCommand command \u003d new FindNameCommand(predicate);","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"limzhenwy"},"content":"        FindNameCommand command \u003d new FindNameCommand(predicate);","lastModifiedDate":"2023-10-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"limzhenwy"},"content":"        FindNameCommand findCommand \u003d new FindNameCommand(predicate);","lastModifiedDate":"2023-10-29"},{"lineNumber":81,"author":{"gitId":"limzhenwy"},"content":"        String expected \u003d FindNameCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2023-10-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"limzhenwy":13,"-":78}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true,","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"                false, false, false);","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"syamfarh":2,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/QuestionnaireCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Daphne789"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"Daphne789"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"Daphne789"},"content":"import static seedu.address.logic.commands.QuestionnaireCommand.SHOWING_QUESTIONNAIRE_MESSAGE;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"Daphne789"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"Daphne789"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"Daphne789"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"Daphne789"},"content":"public class QuestionnaireCommandTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"Daphne789"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"Daphne789"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"Daphne789"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"Daphne789"},"content":"    public void execute_questionnaire_success() {","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"Daphne789"},"content":"        CommandResult expectedCommandResult \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"                new CommandResult(SHOWING_QUESTIONNAIRE_MESSAGE, false, true, false,","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":"                        false);","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"Daphne789"},"content":"        assertCommandSuccess(new QuestionnaireCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"Daphne789"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"Daphne789":20,"syamfarh":2}},{"path":"src/test/java/seedu/address/logic/commands/RiskProfileCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Daphne789"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"Daphne789"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"Daphne789"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"Daphne789"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"Daphne789"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"Daphne789"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RISKPROFILE_AMY;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"Daphne789"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RISKPROFILE_BOB;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"Daphne789"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"Daphne789"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"Daphne789"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"Daphne789"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"Daphne789"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"Daphne789"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"Daphne789"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"Daphne789"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"Daphne789"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"Daphne789"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"Daphne789"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"Daphne789"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"Daphne789"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"Daphne789"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"Daphne789"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"Daphne789"},"content":"import seedu.address.model.person.RiskProfile;","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"Daphne789"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"Daphne789"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"Daphne789"},"content":" * Contains integration tests (interaction with the Model) and unit tests for Risk Profile Command.","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"Daphne789"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"Daphne789"},"content":"public class RiskProfileCommandTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"Daphne789"},"content":"    private final String riskProfileStub \u003d \"a,a,b,c,c,d,d,e\";","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"Daphne789"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"Daphne789"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"Daphne789"},"content":"    void execute_addRiskProfileUnfilteredList_success() {","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"Daphne789"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"Daphne789"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withRiskProfile(riskProfileStub).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"Daphne789"},"content":"        RiskProfileCommand riskProfileCommand \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"Daphne789"},"content":"            new RiskProfileCommand(INDEX_FIRST_PERSON, new RiskProfile(editedPerson.getRiskProfile().value));","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"Daphne789"},"content":"        int totalScore \u003d RiskProfileCommand.calculateTotalScore(riskProfileStub);","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"Daphne789"},"content":"        String expectedRiskLevel \u003d RiskProfileCommand.calculateRiskLevel(totalScore);","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"Daphne789"},"content":"        String expectedMessage \u003d String.format(RiskProfileCommand.MESSAGE_ADD_RISKPROFILE_SUCCESS,","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"Daphne789"},"content":"            editedPerson.getName(), editedPerson.getPhone(), editedPerson.getEmail(),","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"Daphne789"},"content":"            editedPerson.getOccupation(), editedPerson.getAddress(), editedPerson.getApptDate(),","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"Daphne789"},"content":"            expectedRiskLevel, editedPerson.getTags());","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"Daphne789"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"Daphne789"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"Daphne789"},"content":"        assertCommandSuccess(riskProfileCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"Daphne789"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"Daphne789"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"Daphne789"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"Daphne789"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"Daphne789"},"content":"        Person editedPerson \u003d new PersonBuilder(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()))","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"Daphne789"},"content":"            .withRiskProfile(riskProfileStub).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"Daphne789"},"content":"        RiskProfileCommand riskProfileCommand \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"Daphne789"},"content":"            new RiskProfileCommand(INDEX_FIRST_PERSON, new RiskProfile(editedPerson.getRiskProfile().value));","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"Daphne789"},"content":"        int totalScore \u003d RiskProfileCommand.calculateTotalScore(riskProfileStub);","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"Daphne789"},"content":"        String expectedRiskLevel \u003d RiskProfileCommand.calculateRiskLevel(totalScore);","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"Daphne789"},"content":"        String expectedMessage \u003d String.format(RiskProfileCommand.MESSAGE_ADD_RISKPROFILE_SUCCESS,","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"Daphne789"},"content":"            editedPerson.getName(), editedPerson.getPhone(), editedPerson.getEmail(),","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"Daphne789"},"content":"            editedPerson.getOccupation(), editedPerson.getAddress(), editedPerson.getApptDate(),","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"Daphne789"},"content":"            expectedRiskLevel, editedPerson.getTags());","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"Daphne789"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"Daphne789"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"Daphne789"},"content":"        assertCommandSuccess(riskProfileCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"Daphne789"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"Daphne789"},"content":"    void execute_invalidResultInput_failure() {","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"Daphne789"},"content":"        String invalidResultInput \u003d \"abcd,e,f,a,b\";","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"Daphne789"},"content":"        RiskProfileCommand riskProfileCommand \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"Daphne789"},"content":"            new RiskProfileCommand(INDEX_FIRST_PERSON, new RiskProfile(invalidResultInput));","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"Daphne789"},"content":"        CommandException exception \u003d assertThrows(CommandException.class, () -\u003e riskProfileCommand.execute(model));","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"Daphne789"},"content":"        assertEquals(String.format(RiskProfileCommand.MESSAGE_INVALID_RESULT, RiskProfileCommand.MESSAGE_USAGE),","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"Daphne789"},"content":"            exception.getMessage());","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"Daphne789"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":98,"author":{"gitId":"Daphne789"},"content":"    public void calculateRiskLevel_boundaryTotalScore_success() {","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"Daphne789"},"content":"        assertEquals(\"Low\", RiskProfileCommand.calculateRiskLevel(8));","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"Daphne789"},"content":"        assertEquals(\"Moderately Low\", RiskProfileCommand.calculateRiskLevel(16));","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"Daphne789"},"content":"        assertEquals(\"Moderate\", RiskProfileCommand.calculateRiskLevel(24));","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"Daphne789"},"content":"        assertEquals(\"Moderately High\", RiskProfileCommand.calculateRiskLevel(32));","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"Daphne789"},"content":"        assertEquals(\"High\", RiskProfileCommand.calculateRiskLevel(40));","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"Daphne789"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":107,"author":{"gitId":"Daphne789"},"content":"    public void calculateRiskLevel_invalidTotalScore_returnsEmptyString() {","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"Daphne789"},"content":"        assertEquals(\"\", RiskProfileCommand.calculateRiskLevel(0));","lastModifiedDate":"2023-10-27"},{"lineNumber":109,"author":{"gitId":"Daphne789"},"content":"        assertEquals(\"\", RiskProfileCommand.calculateRiskLevel(41));","lastModifiedDate":"2023-10-27"},{"lineNumber":110,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":111,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":112,"author":{"gitId":"Daphne789"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":113,"author":{"gitId":"Daphne789"},"content":"    public void isValidResult_invalidResultLength_failure() {","lastModifiedDate":"2023-10-27"},{"lineNumber":114,"author":{"gitId":"Daphne789"},"content":"        assertFalse(RiskProfileCommand.isValidResult(\"a,b,c,d\"));","lastModifiedDate":"2023-10-27"},{"lineNumber":115,"author":{"gitId":"Daphne789"},"content":"        assertFalse(RiskProfileCommand.isValidResult(\"a,b,c,d,e,d,b,c,a\"));","lastModifiedDate":"2023-10-27"},{"lineNumber":116,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":117,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":118,"author":{"gitId":"Daphne789"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":119,"author":{"gitId":"Daphne789"},"content":"    public void isValidResult_invalidResultCharacter_failure() {","lastModifiedDate":"2023-10-27"},{"lineNumber":120,"author":{"gitId":"Daphne789"},"content":"        assertFalse(RiskProfileCommand.isValidResult(\"a,b,c,d,e,f,g,h\"));","lastModifiedDate":"2023-10-27"},{"lineNumber":121,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":122,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":123,"author":{"gitId":"Daphne789"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"Daphne789"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"Daphne789"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"Daphne789"},"content":"        RiskProfileCommand riskProfileCommand \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"Daphne789"},"content":"            new RiskProfileCommand(outOfBoundIndex, new RiskProfile(VALID_RISKPROFILE_BOB));","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"Daphne789"},"content":"        assertCommandFailure(riskProfileCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"Daphne789"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"Daphne789"},"content":"     * but smaller than size of address book","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"Daphne789"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"Daphne789"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2023-10-26"},{"lineNumber":138,"author":{"gitId":"Daphne789"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"Daphne789"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-26"},{"lineNumber":140,"author":{"gitId":"Daphne789"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-10-26"},{"lineNumber":141,"author":{"gitId":"Daphne789"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2023-10-26"},{"lineNumber":142,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"Daphne789"},"content":"        RiskProfileCommand riskProfileCommand \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"Daphne789"},"content":"            new RiskProfileCommand(outOfBoundIndex, new RiskProfile(VALID_RISKPROFILE_BOB));","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"Daphne789"},"content":"        assertCommandFailure(riskProfileCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":148,"author":{"gitId":"Daphne789"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":149,"author":{"gitId":"Daphne789"},"content":"    public void equals() {","lastModifiedDate":"2023-10-26"},{"lineNumber":150,"author":{"gitId":"Daphne789"},"content":"        final RiskProfileCommand standardCommand \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":151,"author":{"gitId":"Daphne789"},"content":"            new RiskProfileCommand(INDEX_FIRST_PERSON, new RiskProfile(VALID_RISKPROFILE_AMY));","lastModifiedDate":"2023-10-26"},{"lineNumber":152,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":153,"author":{"gitId":"Daphne789"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":154,"author":{"gitId":"Daphne789"},"content":"        RiskProfileCommand commandWithSameValues \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":155,"author":{"gitId":"Daphne789"},"content":"            new RiskProfileCommand(INDEX_FIRST_PERSON, new RiskProfile(VALID_RISKPROFILE_AMY));","lastModifiedDate":"2023-10-26"},{"lineNumber":156,"author":{"gitId":"Daphne789"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-10-26"},{"lineNumber":157,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":158,"author":{"gitId":"Daphne789"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":159,"author":{"gitId":"Daphne789"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-10-26"},{"lineNumber":160,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":161,"author":{"gitId":"Daphne789"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":162,"author":{"gitId":"Daphne789"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-10-26"},{"lineNumber":163,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":164,"author":{"gitId":"Daphne789"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":165,"author":{"gitId":"Daphne789"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-10-26"},{"lineNumber":166,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":167,"author":{"gitId":"Daphne789"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":168,"author":{"gitId":"Daphne789"},"content":"        assertFalse(standardCommand.equals(new RiskProfileCommand(INDEX_SECOND_PERSON,","lastModifiedDate":"2023-10-26"},{"lineNumber":169,"author":{"gitId":"Daphne789"},"content":"            new RiskProfile(VALID_RISKPROFILE_AMY))));","lastModifiedDate":"2023-10-26"},{"lineNumber":170,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":171,"author":{"gitId":"Daphne789"},"content":"        // different risk profile -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":172,"author":{"gitId":"Daphne789"},"content":"        assertFalse(standardCommand.equals(new RiskProfileCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-26"},{"lineNumber":173,"author":{"gitId":"Daphne789"},"content":"            new RiskProfile(VALID_RISKPROFILE_BOB))));","lastModifiedDate":"2023-10-26"},{"lineNumber":174,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":175,"author":{"gitId":"Daphne789"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"Daphne789":175}},{"path":"src/test/java/seedu/address/logic/commands/SortCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"import static seedu.address.commons.util.ComparatorUtil.APPTCOMPARATOR;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"import static seedu.address.commons.util.ComparatorUtil.NAMECOMPARATOR;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":" * Contains integration tests (interaction with the Model) for {@code SortCommand}.","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":"class SortCommandTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"syamfarh"},"content":"    private Model model;","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"syamfarh"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"syamfarh"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"syamfarh"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"syamfarh"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"syamfarh"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"syamfarh"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"syamfarh"},"content":"    public void testEquals() {","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"syamfarh"},"content":"        SortCommand sortCommandAppt \u003d new SortCommand(APPTCOMPARATOR);","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"syamfarh"},"content":"        SortCommand sortCommandName \u003d new SortCommand(NAMECOMPARATOR);","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"syamfarh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"syamfarh"},"content":"        assertTrue(sortCommandAppt.equals(sortCommandAppt));","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"syamfarh"},"content":"        SortCommand sortCommandApptCopy \u003d new SortCommand(APPTCOMPARATOR);","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"syamfarh"},"content":"        // same comparator -\u003e returns true","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"syamfarh"},"content":"        assertTrue(sortCommandAppt.equals(sortCommandApptCopy));","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"syamfarh"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"syamfarh"},"content":"        assertFalse(sortCommandAppt.equals(1));","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"syamfarh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"syamfarh"},"content":"        assertFalse(sortCommandAppt.equals(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"syamfarh"},"content":"        // different comparator -\u003e returns false","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"syamfarh"},"content":"        assertFalse(sortCommandAppt.equals(sortCommandName));","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"syamfarh"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"syamfarh"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"syamfarh"},"content":"        SortCommand sortCommandAppt \u003d new SortCommand(APPTCOMPARATOR);","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"syamfarh"},"content":"        String expected \u003d SortCommand.class.getCanonicalName() + \"{comparator\u003d\" + APPTCOMPARATOR + \"}\";","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"syamfarh"},"content":"        assertEquals(expected, sortCommandAppt.toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"syamfarh"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"syamfarh":62}},{"path":"src/test/java/seedu/address/logic/commands/UndoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"glenngnng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"glenngnng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"glenngnng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"glenngnng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"glenngnng"},"content":"import static seedu.address.logic.commands.UndoCommand.MESSAGE_FAILURE_UNDO_WITH_NO_UNDOABLE_COMMANDS;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"glenngnng"},"content":"import static seedu.address.logic.commands.UndoCommand.MESSAGE_UNDO_ADD_SUCCESS;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"glenngnng"},"content":"import static seedu.address.logic.commands.UndoCommand.MESSAGE_UNDO_CLEAR_SUCCESS;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"glenngnng"},"content":"import static seedu.address.logic.commands.UndoCommand.MESSAGE_UNDO_DELETE_SUCCESS;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"glenngnng"},"content":"import static seedu.address.logic.commands.UndoCommand.MESSAGE_UNDO_EDIT_SUCCESS;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"bhnuka"},"content":"import static seedu.address.testutil.TypicalIndexes.FIRST_INDEXES;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"glenngnng"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"glenngnng"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"bhnuka"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"bhnuka"},"content":"import java.util.List;","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"glenngnng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"bhnuka"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"glenngnng"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"glenngnng"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"glenngnng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"glenngnng"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"glenngnng"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"glenngnng"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"glenngnng"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"glenngnng"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"glenngnng"},"content":"public class UndoCommandTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"glenngnng"},"content":"    private static final Person TEST \u003d new PersonBuilder().withName(\"Test Best\").withPhone(\"9482442\")","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"glenngnng"},"content":"            .withAppointmentDate(\"\").withEmail(\"Test@example.com\").withOccupation(\"Test\")","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"glenngnng"},"content":"            .withAddress(\"4th Test\").build();","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"glenngnng"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"glenngnng"},"content":"    private UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"glenngnng"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"bhnuka"},"content":"    public void execute_undoDelete_success() throws CommandException {","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"glenngnng"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"bhnuka"},"content":"        List\u003cPerson\u003e personsToDelete \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"bhnuka"},"content":"        List\u003cIndex\u003e indexesToDelete \u003d FIRST_INDEXES;","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"bhnuka"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(indexesToDelete);","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"bhnuka"},"content":"        for (Index targetIndex : FIRST_INDEXES) {","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"bhnuka"},"content":"            Person personToDelete \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"bhnuka"},"content":"            personsToDelete.add(personToDelete);","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"bhnuka"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"bhnuka"},"content":"        String expectedResult \u003d String.format(MESSAGE_UNDO_DELETE_SUCCESS, Messages.formatPersons(personsToDelete));","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"bhnuka"},"content":"        deleteCommand.execute(expectedModel);","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"bhnuka"},"content":"        for (Person deletedPerson : personsToDelete) {","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"bhnuka"},"content":"            expectedModel.addPerson(deletedPerson);","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"bhnuka"},"content":"            expectedModel.removeDeletedPerson();","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"bhnuka"},"content":"            expectedModel.removePreviousUndoableCommand();","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"bhnuka"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"glenngnng"},"content":"        expectedModel.removeLastDeletedNumber();","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"bhnuka"},"content":"        deleteCommand.execute(model);","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"glenngnng"},"content":"        assertCommandSuccess(undoCommand, model, expectedResult, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"glenngnng"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"glenngnng"},"content":"    public void execute_undoClear_success() throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"glenngnng"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"glenngnng"},"content":"        ClearCommand clearCommand \u003d new ClearCommand();","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"glenngnng"},"content":"        String expectedResult \u003d String.format(MESSAGE_UNDO_CLEAR_SUCCESS);","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"glenngnng"},"content":"        clearCommand.execute(expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":78,"author":{"gitId":"glenngnng"},"content":"        while (expectedModel.getDeletedPersonsSize() \u003e expectedModel.getNumberOfPreviousDeleteCommands()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"glenngnng"},"content":"            expectedModel.undoDelete();","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"glenngnng"},"content":"        clearCommand.execute(model);","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"glenngnng"},"content":"        model.storePreviousUndoableCommand(\"clear\");","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"glenngnng"},"content":"        assertCommandSuccess(undoCommand, model, expectedResult, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"glenngnng"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"glenngnng"},"content":"    public void execute_undoAdd_success() {","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"glenngnng"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"glenngnng"},"content":"        String expectedResult \u003d String.format(MESSAGE_UNDO_ADD_SUCCESS, Messages.format(TEST));","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"glenngnng"},"content":"        expectedModel.addPerson(TEST);","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"glenngnng"},"content":"        expectedModel.deletePerson(TEST);","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"glenngnng"},"content":"        model.addPerson(TEST);","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"glenngnng"},"content":"        model.storePreviousUndoableCommand(\"add\");","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"glenngnng"},"content":"        assertCommandSuccess(undoCommand, model, expectedResult, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"glenngnng"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"glenngnng"},"content":"    public void execute_undoEdit_success() throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"glenngnng"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"glenngnng"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"glenngnng"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"glenngnng"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"glenngnng"},"content":"        Person originalPersonBeforeEdit \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"glenngnng"},"content":"        String expectedResult \u003d String.format(MESSAGE_UNDO_EDIT_SUCCESS, Messages.format(originalPersonBeforeEdit));","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"glenngnng"},"content":"        editCommand.execute(model);","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"glenngnng"},"content":"        model.storePreviousUndoableCommand(\"edit\");","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"glenngnng"},"content":"        assertCommandSuccess(undoCommand, model, expectedResult, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"glenngnng"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"glenngnng"},"content":"    public void execute_noPreviousUndoableCommands_throwsCommandException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":118,"author":{"gitId":"glenngnng"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"glenngnng"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"glenngnng"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"glenngnng"},"content":"        //Do a simple delete and undo. Hence, there should be no previous undoable commands.","lastModifiedDate":"2023-10-25"},{"lineNumber":123,"author":{"gitId":"glenngnng"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"glenngnng"},"content":"        model.storePreviousUndoableCommand(\"delete\");","lastModifiedDate":"2023-10-24"},{"lineNumber":125,"author":{"gitId":"glenngnng"},"content":"        model.undoDelete();","lastModifiedDate":"2023-10-23"},{"lineNumber":126,"author":{"gitId":"glenngnng"},"content":"        model.removePreviousUndoableCommand();","lastModifiedDate":"2023-10-25"},{"lineNumber":127,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":128,"author":{"gitId":"glenngnng"},"content":"        //Trying to undo when there are 0 previous undoable commands, there is a CommandFailure.","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"glenngnng"},"content":"        assertCommandFailure(undoCommand, model, MESSAGE_FAILURE_UNDO_WITH_NO_UNDOABLE_COMMANDS);","lastModifiedDate":"2023-10-25"},{"lineNumber":130,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":131,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":132,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"glenngnng"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"glenngnng":104,"bhnuka":29}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"bhnuka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_OCCUPATION_DESC;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"bhnuka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.OCCUPATION_DESC_AMY;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"bhnuka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.OCCUPATION_DESC_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"bhnuka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_OCCUPATION_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"bhnuka"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OCCUPATION;","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"bhnuka"},"content":"import seedu.address.model.person.Occupation;","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"bhnuka"},"content":"                + OCCUPATION_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"bhnuka"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + OCCUPATION_DESC_BOB","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"bhnuka"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"bhnuka"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + OCCUPATION_DESC_BOB","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"bhnuka"},"content":"        // multiple occupations","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"bhnuka"},"content":"        assertParseFailure(parser, OCCUPATION_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"bhnuka"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_OCCUPATION));","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"bhnuka"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + OCCUPATION_DESC_AMY","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"bhnuka"},"content":"                        + ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"bhnuka"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_ADDRESS, PREFIX_EMAIL, PREFIX_PHONE,","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"bhnuka"},"content":"                PREFIX_OCCUPATION));","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"bhnuka"},"content":"        // invalid occupation","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"bhnuka"},"content":"        assertParseFailure(parser, INVALID_OCCUPATION_DESC + validExpectedPersonString,","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"bhnuka"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_OCCUPATION));","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":143,"author":{"gitId":"bhnuka"},"content":"        // invalid occupation","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"bhnuka"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_OCCUPATION_DESC,","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"bhnuka"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_OCCUPATION));","lastModifiedDate":"2023-10-13"},{"lineNumber":146,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":156,"author":{"gitId":"bhnuka"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + OCCUPATION_DESC_AMY","lastModifiedDate":"2023-10-13"},{"lineNumber":157,"author":{"gitId":"bhnuka"},"content":"             + ADDRESS_DESC_AMY, new AddCommand(expectedPerson));","lastModifiedDate":"2023-10-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"bhnuka"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + OCCUPATION_DESC_BOB","lastModifiedDate":"2023-10-13"},{"lineNumber":166,"author":{"gitId":"bhnuka"},"content":"             + ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-10-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":169,"author":{"gitId":"bhnuka"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + OCCUPATION_DESC_BOB","lastModifiedDate":"2023-10-13"},{"lineNumber":170,"author":{"gitId":"bhnuka"},"content":"             + ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-10-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":173,"author":{"gitId":"bhnuka"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + OCCUPATION_DESC_BOB","lastModifiedDate":"2023-10-13"},{"lineNumber":174,"author":{"gitId":"bhnuka"},"content":"             + ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-10-13"},{"lineNumber":175,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":176,"author":{"gitId":"bhnuka"},"content":"        // missing occupation prefix","lastModifiedDate":"2023-10-13"},{"lineNumber":177,"author":{"gitId":"bhnuka"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + PHONE_DESC_BOB + VALID_OCCUPATION_BOB","lastModifiedDate":"2023-10-13"},{"lineNumber":178,"author":{"gitId":"bhnuka"},"content":"             + ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-10-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":181,"author":{"gitId":"bhnuka"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + OCCUPATION_DESC_BOB","lastModifiedDate":"2023-10-13"},{"lineNumber":182,"author":{"gitId":"bhnuka"},"content":"             + VALID_ADDRESS_BOB, expectedMessage);","lastModifiedDate":"2023-10-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":185,"author":{"gitId":"bhnuka"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_OCCUPATION_BOB","lastModifiedDate":"2023-10-13"},{"lineNumber":186,"author":{"gitId":"bhnuka"},"content":"             + VALID_ADDRESS_BOB, expectedMessage);","lastModifiedDate":"2023-10-13"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":192,"author":{"gitId":"bhnuka"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + OCCUPATION_DESC_BOB","lastModifiedDate":"2023-10-13"},{"lineNumber":193,"author":{"gitId":"bhnuka"},"content":"              + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":196,"author":{"gitId":"bhnuka"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + OCCUPATION_DESC_BOB","lastModifiedDate":"2023-10-13"},{"lineNumber":197,"author":{"gitId":"bhnuka"},"content":"              + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":200,"author":{"gitId":"bhnuka"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + OCCUPATION_DESC_BOB","lastModifiedDate":"2023-10-13"},{"lineNumber":201,"author":{"gitId":"bhnuka"},"content":"              + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":202,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":203,"author":{"gitId":"bhnuka"},"content":"        // invalid occupation","lastModifiedDate":"2023-10-13"},{"lineNumber":204,"author":{"gitId":"bhnuka"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_OCCUPATION_DESC","lastModifiedDate":"2023-10-13"},{"lineNumber":205,"author":{"gitId":"bhnuka"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Occupation.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":208,"author":{"gitId":"bhnuka"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + OCCUPATION_DESC_BOB","lastModifiedDate":"2023-10-13"},{"lineNumber":209,"author":{"gitId":"bhnuka"},"content":"              + INVALID_ADDRESS_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":212,"author":{"gitId":"bhnuka"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + OCCUPATION_DESC_BOB","lastModifiedDate":"2023-10-13"},{"lineNumber":213,"author":{"gitId":"bhnuka"},"content":"              + ADDRESS_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":216,"author":{"gitId":"bhnuka"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + OCCUPATION_DESC_BOB","lastModifiedDate":"2023-10-13"},{"lineNumber":217,"author":{"gitId":"bhnuka"},"content":"                + INVALID_ADDRESS_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":221,"author":{"gitId":"bhnuka"},"content":"                + OCCUPATION_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"bhnuka":59,"-":165}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENTDATE;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"Daphne789"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RISKPROFILE;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"bhnuka"},"content":"import static seedu.address.testutil.TypicalIndexes.FIRST_INDEXES;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"bhnuka"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"bhnuka"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"syamfarh"},"content":"import seedu.address.logic.commands.CalendarCommand;","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"limzhenwy"},"content":"import seedu.address.logic.commands.FindAddCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"syamfarh"},"content":"import seedu.address.logic.commands.FindApptCommand;","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"limzhenwy"},"content":"import seedu.address.logic.commands.FindNameCommand;","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"Daphne789"},"content":"import seedu.address.logic.commands.QuestionnaireCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"Daphne789"},"content":"import seedu.address.logic.commands.RiskProfileCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"syamfarh"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"limzhenwy"},"content":"import seedu.address.model.person.AddressContainsKeywordsPredicate;","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"limzhenwy"},"content":"import seedu.address.model.person.CalendarContainsKeywordsPredicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"Daphne789"},"content":"import seedu.address.model.person.RiskProfile;","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"bhnuka"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased() + \" \"","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"bhnuka"},"content":"                     + INDEX_SECOND_PERSON.getOneBased() + \" \" + INDEX_THIRD_PERSON.getOneBased());","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"bhnuka"},"content":"        assertEquals(new DeleteCommand(FIRST_INDEXES), command);","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"syamfarh"},"content":"    public void parseCommand_sort() throws Exception {","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"syamfarh"},"content":"        assertTrue(parser.parseCommand(","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"syamfarh"},"content":"                SortCommand.COMMAND_WORD + \" \" + PREFIX_APPOINTMENTDATE.getPrefix()) instanceof SortCommand);","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"Daphne789"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"Daphne789"},"content":"    public void parseCommand_questionnaire() throws Exception {","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"Daphne789"},"content":"        assertTrue(parser.parseCommand(QuestionnaireCommand.COMMAND_WORD) instanceof QuestionnaireCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"Daphne789"},"content":"        assertTrue(parser.parseCommand(QuestionnaireCommand.COMMAND_WORD + \" 3\") instanceof QuestionnaireCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"syamfarh"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"syamfarh"},"content":"    public void parseCommand_calendar() throws Exception {","lastModifiedDate":"2023-11-02"},{"lineNumber":107,"author":{"gitId":"syamfarh"},"content":"        assertTrue(parser.parseCommand(CalendarCommand.COMMAND_WORD) instanceof CalendarCommand);","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"syamfarh"},"content":"        assertTrue(parser.parseCommand(CalendarCommand.COMMAND_WORD + \" 3\") instanceof CalendarCommand);","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":111,"author":{"gitId":"Daphne789"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"Daphne789"},"content":"    public void parseCommand_riskprofile() throws Exception {","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"Daphne789"},"content":"        final RiskProfile result \u003d new RiskProfile(\"a,a,b,c,c,d,d,e\");","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"Daphne789"},"content":"        RiskProfileCommand command \u003d (RiskProfileCommand) parser.parseCommand(RiskProfileCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"Daphne789"},"content":"            + INDEX_FIRST_PERSON.getOneBased() + \" \" + PREFIX_RISKPROFILE + result.value);","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"Daphne789"},"content":"        assertEquals(new RiskProfileCommand(INDEX_FIRST_PERSON, result), command);","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"limzhenwy"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":126,"author":{"gitId":"limzhenwy"},"content":"    public void parseCommand_find_returnFindName() throws Exception {","lastModifiedDate":"2023-10-29"},{"lineNumber":127,"author":{"gitId":"limzhenwy"},"content":"        List\u003cString\u003e findKeywords \u003d Arrays.asList(\"n/\", \"alice\", \"bobby\");","lastModifiedDate":"2023-10-29"},{"lineNumber":128,"author":{"gitId":"limzhenwy"},"content":"        List\u003cString\u003e findNameKeywords \u003d Arrays.asList(\"alice\", \"bobby\");","lastModifiedDate":"2023-10-29"},{"lineNumber":129,"author":{"gitId":"limzhenwy"},"content":"        FindNameCommand command \u003d (FindNameCommand) parser.parseCommand(","lastModifiedDate":"2023-10-29"},{"lineNumber":130,"author":{"gitId":"limzhenwy"},"content":"                FindCommand.COMMAND_WORD + \" \" + findKeywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-10-29"},{"lineNumber":131,"author":{"gitId":"limzhenwy"},"content":"        assertEquals(new FindNameCommand(new NameContainsKeywordsPredicate(findNameKeywords)), command);","lastModifiedDate":"2023-10-29"},{"lineNumber":132,"author":{"gitId":"limzhenwy"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":133,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":134,"author":{"gitId":"limzhenwy"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":135,"author":{"gitId":"limzhenwy"},"content":"    public void parseCommand_find_returnFindAdd() throws Exception {","lastModifiedDate":"2023-10-29"},{"lineNumber":136,"author":{"gitId":"limzhenwy"},"content":"        List\u003cString\u003e findKeywords \u003d Arrays.asList(\"a/\", \"tokyo\", \"geylang\");","lastModifiedDate":"2023-10-29"},{"lineNumber":137,"author":{"gitId":"limzhenwy"},"content":"        List\u003cString\u003e findAddKeywords \u003d Arrays.asList(\"tokyo\", \"geylang\");","lastModifiedDate":"2023-10-28"},{"lineNumber":138,"author":{"gitId":"limzhenwy"},"content":"        FindAddCommand command \u003d (FindAddCommand) parser.parseCommand(","lastModifiedDate":"2023-10-28"},{"lineNumber":139,"author":{"gitId":"limzhenwy"},"content":"                FindCommand.COMMAND_WORD + \" \" + findKeywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-10-29"},{"lineNumber":140,"author":{"gitId":"limzhenwy"},"content":"        assertEquals(new FindAddCommand(new AddressContainsKeywordsPredicate(findAddKeywords)), command);","lastModifiedDate":"2023-10-28"},{"lineNumber":141,"author":{"gitId":"limzhenwy"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":142,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":143,"author":{"gitId":"limzhenwy"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":144,"author":{"gitId":"limzhenwy"},"content":"    public void parseCommand_find_returnsCalendar() throws Exception {","lastModifiedDate":"2023-10-29"},{"lineNumber":145,"author":{"gitId":"limzhenwy"},"content":"        List\u003cString\u003e findKeywords \u003d Arrays.asList(\"appt/\", \"2023-12-12\");","lastModifiedDate":"2023-10-29"},{"lineNumber":146,"author":{"gitId":"limzhenwy"},"content":"        List\u003cString\u003e calendarKeywords \u003d List.of(\"2023-12-12\");","lastModifiedDate":"2023-10-29"},{"lineNumber":147,"author":{"gitId":"syamfarh"},"content":"        FindApptCommand command \u003d (FindApptCommand) parser.parseCommand(","lastModifiedDate":"2023-11-01"},{"lineNumber":148,"author":{"gitId":"limzhenwy"},"content":"                FindCommand.COMMAND_WORD + \" \" + findKeywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-10-29"},{"lineNumber":149,"author":{"gitId":"syamfarh"},"content":"        assertEquals(new FindApptCommand(new CalendarContainsKeywordsPredicate(calendarKeywords)), command);","lastModifiedDate":"2023-11-01"},{"lineNumber":150,"author":{"gitId":"limzhenwy"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":151,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"Daphne789":18,"limzhenwy":29,"bhnuka":6,"syamfarh":15,"-":94}},{"path":"src/test/java/seedu/address/logic/parser/CloneCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bhnuka"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"bhnuka"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"bhnuka"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"bhnuka"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"bhnuka"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"bhnuka"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"bhnuka"},"content":"import seedu.address.logic.commands.CloneCommand;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"bhnuka"},"content":"/**","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"bhnuka"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"bhnuka"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"bhnuka"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"bhnuka"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"bhnuka"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"bhnuka"},"content":" */","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"bhnuka"},"content":"public class CloneCommandParserTest {","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"bhnuka"},"content":"    private CloneCommandParser parser \u003d new CloneCommandParser();","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"bhnuka"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"bhnuka"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"bhnuka"},"content":"        assertParseSuccess(parser, \"1\", new CloneCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"bhnuka"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"bhnuka"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"bhnuka"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, CloneCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"bhnuka":33}},{"path":"src/test/java/seedu/address/logic/parser/DateParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"limzhenwy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"limzhenwy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"limzhenwy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"limzhenwy"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"limzhenwy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"limzhenwy"},"content":"public class DateParserTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"limzhenwy"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"limzhenwy"},"content":"    void convertDate_validArgs() {","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"limzhenwy"},"content":"        String date1 \u003d \"2023-12-12\";","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"limzhenwy"},"content":"        String date2 \u003d \"12-12-2023\";","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"limzhenwy"},"content":"        LocalDate localDate1 \u003d DateParser.convertDate(date1);","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"limzhenwy"},"content":"        LocalDate localDate2 \u003d DateParser.convertDate(date2);","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"limzhenwy"},"content":"        assertEquals(localDate1, localDate2);","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"limzhenwy"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"limzhenwy"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"limzhenwy"},"content":"    void invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"limzhenwy"},"content":"        assertFalse(DateParser.isValidCurrentDate(\"1999-01-01\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"limzhenwy"},"content":"        assertFalse(DateParser.isValidFormat(\"hello this is not a date\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"limzhenwy"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"limzhenwy"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"limzhenwy":26}},{"path":"src/test/java/seedu/address/logic/parser/DateTimeParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":"class DateTimeParserTest {","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":"    void convertDate_validValue() {","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":"        assertEquals(LocalDateTime.parse(\"2020-11-20 23:00\", DateTimeParser.STRINGTODATETIME.toFormatter()),","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":"                DateTimeParser.convertDate(\"2020-11-20 23:00\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"        assertEquals(LocalDateTime.parse(\"2000-11-20 23:00\", DateTimeParser.STRINGTODATETIME.toFormatter()),","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":"                DateTimeParser.convertDate(\"11/20/2000 23:00\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"        assertEquals(LocalDateTime.parse(\"2000-11-20 23:00\", DateTimeParser.STRINGTODATETIME.toFormatter()),","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"syamfarh"},"content":"                DateTimeParser.convertDate(\"20-11-2000 23:00\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"syamfarh"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"syamfarh"},"content":"    void isValidCurrentDate() {","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"syamfarh"},"content":"        assertFalse(DateTimeParser.isValidCurrentDateTime(\"2023-10-23 14:00\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"syamfarh"},"content":"        assertFalse(DateTimeParser.isValidCurrentDateTime(\"2021-11-20 23:00\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"syamfarh"},"content":"        assertTrue(DateTimeParser.isValidCurrentDateTime(\"2023-11-20 23:00\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"syamfarh"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"syamfarh":33}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"bhnuka"},"content":"import static seedu.address.testutil.TypicalIndexes.FIRST_INDEXES;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"bhnuka"},"content":"        assertParseSuccess(parser, \"1 2 3\", new DeleteCommand(FIRST_INDEXES));","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"bhnuka"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"bhnuka"},"content":"    public void parse_emptyArgs_throwsParseException() {","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"bhnuka"},"content":"        assertParseFailure(parser, \"\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"bhnuka":7,"-":31}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.APPOINTMENT_DESC_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENTDATE_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"syamfarh"},"content":"        // address","lastModifiedDate":"2023-10-16"},{"lineNumber":162,"author":{"gitId":"syamfarh"},"content":"        userInput \u003d targetIndex.getOneBased() + APPOINTMENT_DESC_AMY;","lastModifiedDate":"2023-10-16"},{"lineNumber":163,"author":{"gitId":"syamfarh"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAppointmentDate(VALID_APPOINTMENTDATE_AMY).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":164,"author":{"gitId":"syamfarh"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-16"},{"lineNumber":165,"author":{"gitId":"syamfarh"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-16"},{"lineNumber":166,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-07-14"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"syamfarh":8,"-":208}},{"path":"src/test/java/seedu/address/logic/parser/FindAddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"limzhenwy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"limzhenwy"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"limzhenwy"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"limzhenwy"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"limzhenwy"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"limzhenwy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"limzhenwy"},"content":"import seedu.address.logic.commands.FindAddCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"limzhenwy"},"content":"import seedu.address.model.person.AddressContainsKeywordsPredicate;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"limzhenwy"},"content":"public class FindAddCommandParserTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"limzhenwy"},"content":"    private FindAddCommandParser parser \u003d new FindAddCommandParser();","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"limzhenwy"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"limzhenwy"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"limzhenwy"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"limzhenwy"},"content":"                FindAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"limzhenwy"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"limzhenwy"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"limzhenwy"},"content":"    public void parse_validArgs_returnsFindAddCommand() {","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"limzhenwy"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"limzhenwy"},"content":"        FindAddCommand expectedFindAddCommand \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"limzhenwy"},"content":"                new FindAddCommand(new AddressContainsKeywordsPredicate(Arrays.asList(\"geylang\", \"Tokyo\")));","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"limzhenwy"},"content":"        assertParseSuccess(parser, \"geylang Tokyo\", expectedFindAddCommand);","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"limzhenwy"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"limzhenwy"},"content":"        assertParseSuccess(parser, \" \\n geylang \\n \\t Tokyo  \\t\", expectedFindAddCommand);","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"limzhenwy"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"limzhenwy"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"limzhenwy":33}},{"path":"src/test/java/seedu/address/logic/parser/FindApptCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"limzhenwy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"limzhenwy"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"limzhenwy"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"limzhenwy"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"limzhenwy"},"content":"import java.util.List;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"limzhenwy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"limzhenwy"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":"import seedu.address.logic.commands.FindApptCommand;","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"limzhenwy"},"content":"import seedu.address.model.person.CalendarContainsKeywordsPredicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":"public class FindApptCommandParserTest {","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":"    private FindApptCommandParser parser \u003d new FindApptCommandParser();","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"limzhenwy"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"limzhenwy"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"limzhenwy"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"                FindApptCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"limzhenwy"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"limzhenwy"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"limzhenwy"},"content":"    public void parse_validArgs_returnsCalendarCommand() {","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"limzhenwy"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"syamfarh"},"content":"        FindApptCommand expectedFindApptCommand \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"syamfarh"},"content":"                new FindApptCommand(new CalendarContainsKeywordsPredicate(List.of(\"2023-12-12\")));","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"syamfarh"},"content":"        assertParseSuccess(parser, \"2023-12-12\", expectedFindApptCommand);","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"limzhenwy"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"limzhenwy"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"limzhenwy"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"limzhenwy"},"content":"        assertParseFailure(parser, \"hello\", String.format(Messages.MESSAGE_WRONG_DATE_FORMAT));","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"limzhenwy"},"content":"        assertParseFailure(parser, \"1999-10-10\", String.format(Messages.MESSAGE_INVALID_INPUT_DATE));","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"limzhenwy"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"limzhenwy"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"limzhenwy":30,"syamfarh":7}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"limzhenwy"},"content":"import static seedu.address.logic.Messages.getErrorMessageForMultiplePrefixes;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"limzhenwy"},"content":"import seedu.address.logic.commands.FindAddCommand;","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":"import seedu.address.logic.commands.FindApptCommand;","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"limzhenwy"},"content":"import seedu.address.logic.commands.FindNameCommand;","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"limzhenwy"},"content":"import seedu.address.model.person.AddressContainsKeywordsPredicate;","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"limzhenwy"},"content":"import seedu.address.model.person.CalendarContainsKeywordsPredicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"limzhenwy"},"content":"        FindNameCommand expectedFindNameCommand \u003d","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"limzhenwy"},"content":"                new FindNameCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"limzhenwy"},"content":"        assertParseSuccess(parser, \" n/Alice Bob\", expectedFindNameCommand);","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"limzhenwy"},"content":"        assertParseSuccess(parser, \" n/ \\n Alice \\n \\t Bob  \\t\", expectedFindNameCommand);","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"limzhenwy"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"limzhenwy"},"content":"    public void parse_validArgs_returnsFindAddCommand() {","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"limzhenwy"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"limzhenwy"},"content":"        FindAddCommand expectedFindAddCommand \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"limzhenwy"},"content":"                new FindAddCommand(new AddressContainsKeywordsPredicate(Arrays.asList(\"geylang\", \"Tokyo\")));","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"limzhenwy"},"content":"        assertParseSuccess(parser, \" a/geylang Tokyo\", expectedFindAddCommand);","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"limzhenwy"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"limzhenwy"},"content":"        assertParseSuccess(parser, \" a/ \\n geylang \\n \\t Tokyo  \\t\", expectedFindAddCommand);","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"limzhenwy"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"limzhenwy"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"limzhenwy"},"content":"    public void parse_validArgs_returnsCalendarCommand() {","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"limzhenwy"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"syamfarh"},"content":"        FindApptCommand expectedFindApptCommand \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"syamfarh"},"content":"                new FindApptCommand(new CalendarContainsKeywordsPredicate(Arrays.asList(\"2023-12-12\")));","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"syamfarh"},"content":"        assertParseSuccess(parser, \" appt/2023-12-12\", expectedFindApptCommand);","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"limzhenwy"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"syamfarh"},"content":"        assertParseSuccess(parser, \" appt/ \\n 2023-12-12\", expectedFindApptCommand);","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"limzhenwy"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":61,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"limzhenwy"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"limzhenwy"},"content":"    public void parse_multiplePrefix_throwsParseException() {","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"limzhenwy"},"content":"        assertParseFailure(parser, \" n/Alice a/geylang\", getErrorMessageForMultiplePrefixes());","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"limzhenwy"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"limzhenwy":31,"syamfarh":5,"-":30}},{"path":"src/test/java/seedu/address/logic/parser/FindNameCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"limzhenwy"},"content":"import seedu.address.logic.commands.FindNameCommand;","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"limzhenwy"},"content":"public class FindNameCommandParserTest {","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"limzhenwy"},"content":"    private FindNameCommandParser parser \u003d new FindNameCommandParser();","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"limzhenwy"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"limzhenwy"},"content":"                FindNameCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"limzhenwy"},"content":"        FindNameCommand expectedFindNameCommand \u003d","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"limzhenwy"},"content":"                new FindNameCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"limzhenwy"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindNameCommand);","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"limzhenwy"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindNameCommand);","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"limzhenwy":9,"-":26}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"import seedu.address.model.person.AppointmentDate;","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"syamfarh"},"content":"    private static final String INVALID_APPOINTMENTDATE_FORMAT \u003d \"20/11/2000\";","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"syamfarh"},"content":"    private static final String INVALID_APPOINTMENTDATE_CURRENTDATE \u003d \"2000-11-20\";","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"syamfarh"},"content":"    private static final String INVALID_APPOINTMENTDATE_CURRENTDATE2 \u003d \"2000-11-20 23:00\";","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"syamfarh"},"content":"    private static final String VALID_APPOINTMENTDATE_FORMAT \u003d \"2023-11-20 23:00\";","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"syamfarh"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":157,"author":{"gitId":"syamfarh"},"content":"    public void parseAppointmentDate_validValue_returnsAppointmentDate() throws Exception {","lastModifiedDate":"2023-10-27"},{"lineNumber":158,"author":{"gitId":"syamfarh"},"content":"        AppointmentDate actualApptDate \u003d ParserUtil.parseAppointmentDates(Arrays.asList(VALID_APPOINTMENTDATE_FORMAT));","lastModifiedDate":"2023-10-27"},{"lineNumber":159,"author":{"gitId":"syamfarh"},"content":"        AppointmentDate expectedApptDate \u003d new AppointmentDate(VALID_APPOINTMENTDATE_FORMAT);","lastModifiedDate":"2023-10-27"},{"lineNumber":160,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":161,"author":{"gitId":"syamfarh"},"content":"        assertEquals(expectedApptDate, actualApptDate);","lastModifiedDate":"2023-10-27"},{"lineNumber":162,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":164,"author":{"gitId":"syamfarh"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":165,"author":{"gitId":"syamfarh"},"content":"    public void parseAppointmentDate_invalidDateFormat_throwsParseException() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":166,"author":{"gitId":"syamfarh"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAppointmentDate(INVALID_APPOINTMENTDATE_FORMAT));","lastModifiedDate":"2023-10-16"},{"lineNumber":167,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":168,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":169,"author":{"gitId":"syamfarh"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":170,"author":{"gitId":"syamfarh"},"content":"    public void parseAppointmentDate_invalidCurrentDate_throwsParseException() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":171,"author":{"gitId":"syamfarh"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAppointmentDate(INVALID_APPOINTMENTDATE_CURRENTDATE));","lastModifiedDate":"2023-10-16"},{"lineNumber":172,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":173,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":174,"author":{"gitId":"syamfarh"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":175,"author":{"gitId":"syamfarh"},"content":"    public void parseAppointmentDate_invalidCurrentDate2_throwsParseException() throws Exception {","lastModifiedDate":"2023-10-27"},{"lineNumber":176,"author":{"gitId":"syamfarh"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAppointmentDate(INVALID_APPOINTMENTDATE_CURRENTDATE2));","lastModifiedDate":"2023-10-27"},{"lineNumber":177,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"syamfarh":27,"-":197}},{"path":"src/test/java/seedu/address/logic/parser/RiskProfileCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Daphne789"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"Daphne789"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"Daphne789"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RISKPROFILE;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"Daphne789"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"Daphne789"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"Daphne789"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"Daphne789"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"Daphne789"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"Daphne789"},"content":"import seedu.address.logic.commands.RiskProfileCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"Daphne789"},"content":"import seedu.address.model.person.RiskProfile;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"Daphne789"},"content":"public class RiskProfileCommandParserTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"Daphne789"},"content":"    private RiskProfileCommandParser parser \u003d new RiskProfileCommandParser();","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"Daphne789"},"content":"    private final String nonEmptyResult \u003d \"a,a,b,c,c,d,d,e\";","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"Daphne789"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"Daphne789"},"content":"    public void parse_indexSpecified_success() {","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"Daphne789"},"content":"        // have result","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"Daphne789"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"Daphne789"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_RISKPROFILE + nonEmptyResult;","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"Daphne789"},"content":"        RiskProfileCommand expectedCommand \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"Daphne789"},"content":"            new RiskProfileCommand(INDEX_FIRST_PERSON, new RiskProfile(nonEmptyResult));","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"Daphne789"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"Daphne789"},"content":"        // no result","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"Daphne789"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_RISKPROFILE;","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"Daphne789"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"Daphne789"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, RiskProfileCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"Daphne789"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"Daphne789"},"content":"    public void parse_missingCompulsoryField_failure() {","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"Daphne789"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, RiskProfileCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"Daphne789"},"content":"        // no parameters","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"Daphne789"},"content":"        assertParseFailure(parser, RiskProfileCommand.COMMAND_WORD, expectedMessage);","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"Daphne789"},"content":"        // no index","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"Daphne789"},"content":"        assertParseFailure(parser, RiskProfileCommand.COMMAND_WORD + \" \" + nonEmptyResult, expectedMessage);","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"Daphne789"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"Daphne789":44}},{"path":"src/test/java/seedu/address/logic/parser/SortCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"import static seedu.address.commons.util.ComparatorUtil.APPTCOMPARATOR;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"import static seedu.address.commons.util.ComparatorUtil.NAMECOMPARATOR;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENTDATE;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OCCUPATION;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":"class SortCommandParserTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"    private SortCommandParser parser \u003d new SortCommandParser();","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"syamfarh"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"syamfarh"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"syamfarh"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"syamfarh"},"content":"    public void parse_validPrefix_returnsSortCommand() {","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"syamfarh"},"content":"        SortCommand expectedSortCommandAppt \u003d new SortCommand(APPTCOMPARATOR);","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"syamfarh"},"content":"        SortCommand expectedSortCommandName \u003d new SortCommand(NAMECOMPARATOR);","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"syamfarh"},"content":"        // valid prefix","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"syamfarh"},"content":"        assertParseSuccess(parser, PREFIX_APPOINTMENTDATE.getPrefix(), expectedSortCommandAppt);","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"syamfarh"},"content":"        assertParseSuccess(parser, PREFIX_NAME.getPrefix(), expectedSortCommandName);","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"syamfarh"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"syamfarh"},"content":"    public void parse_invalidPrefix_returnsSortCommand() {","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"syamfarh"},"content":"        SortCommand expectedSortCommandAppt \u003d new SortCommand(APPTCOMPARATOR);","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"syamfarh"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"syamfarh"},"content":"        // invalid prefix","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"syamfarh"},"content":"        assertParseFailure(parser, PREFIX_OCCUPATION.getPrefix(), expectedMessage);","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"syamfarh"},"content":"        assertParseFailure(parser, \"\", expectedMessage);","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"syamfarh"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"syamfarh":46}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":107,"author":{"gitId":"glenngnng"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":108,"author":{"gitId":"glenngnng"},"content":"        public int getSize() {","lastModifiedDate":"2023-10-24"},{"lineNumber":109,"author":{"gitId":"glenngnng"},"content":"            return persons.size();","lastModifiedDate":"2023-10-24"},{"lineNumber":110,"author":{"gitId":"glenngnng"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"glenngnng":5,"-":108}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"glenngnng"},"content":"import static seedu.address.testutil.TypicalPersons.EDITEDALICE;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"glenngnng"},"content":"import javafx.util.Pair;","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"glenngnng"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":28,"author":{"gitId":"glenngnng"},"content":"    private final Person testPersonAlice \u003d ALICE;","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"glenngnng"},"content":"    private final Person testPersonAliceEdited \u003d EDITEDALICE;","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"glenngnng"},"content":"    private final Person testPersonBenson \u003d BENSON;","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":141,"author":{"gitId":"glenngnng"},"content":"    // Unit testing methods","lastModifiedDate":"2023-10-31"},{"lineNumber":142,"author":{"gitId":"glenngnng"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":143,"author":{"gitId":"glenngnng"},"content":"    public void storeAddedPerson() {","lastModifiedDate":"2023-10-31"},{"lineNumber":144,"author":{"gitId":"glenngnng"},"content":"        modelManager.storeAddedPerson(testPersonAlice);","lastModifiedDate":"2023-10-31"},{"lineNumber":145,"author":{"gitId":"glenngnng"},"content":"        assertEquals(testPersonAlice, modelManager.getAddedPerson());","lastModifiedDate":"2023-10-31"},{"lineNumber":146,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":147,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":148,"author":{"gitId":"glenngnng"},"content":"    //Should I remove this test for a getter?","lastModifiedDate":"2023-10-31"},{"lineNumber":149,"author":{"gitId":"glenngnng"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":150,"author":{"gitId":"glenngnng"},"content":"    public void getAddedPerson() {","lastModifiedDate":"2023-10-31"},{"lineNumber":151,"author":{"gitId":"glenngnng"},"content":"        modelManager.storeAddedPerson(testPersonAlice);","lastModifiedDate":"2023-10-31"},{"lineNumber":152,"author":{"gitId":"glenngnng"},"content":"        modelManager.storeAddedPerson(testPersonBenson);","lastModifiedDate":"2023-10-31"},{"lineNumber":153,"author":{"gitId":"glenngnng"},"content":"        assertEquals(modelManager.getAddedPerson(), testPersonBenson);","lastModifiedDate":"2023-10-31"},{"lineNumber":154,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":155,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":156,"author":{"gitId":"glenngnng"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":157,"author":{"gitId":"glenngnng"},"content":"    public void removeAddedPerson() {","lastModifiedDate":"2023-10-31"},{"lineNumber":158,"author":{"gitId":"glenngnng"},"content":"        modelManager.storeAddedPerson(testPersonAlice);","lastModifiedDate":"2023-10-31"},{"lineNumber":159,"author":{"gitId":"glenngnng"},"content":"        modelManager.storeAddedPerson(testPersonBenson);","lastModifiedDate":"2023-10-31"},{"lineNumber":160,"author":{"gitId":"glenngnng"},"content":"        modelManager.removeAddedPerson();","lastModifiedDate":"2023-10-31"},{"lineNumber":161,"author":{"gitId":"glenngnng"},"content":"        assertEquals(modelManager.getAddedPerson(), testPersonAlice);","lastModifiedDate":"2023-10-31"},{"lineNumber":162,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":163,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":164,"author":{"gitId":"glenngnng"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":165,"author":{"gitId":"glenngnng"},"content":"    public void removeAddedPerson_throwsIndexOutOfBoundsException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":166,"author":{"gitId":"glenngnng"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e modelManager.removeAddedPerson());","lastModifiedDate":"2023-10-31"},{"lineNumber":167,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":168,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":169,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":170,"author":{"gitId":"glenngnng"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":171,"author":{"gitId":"glenngnng"},"content":"    public void storeDeletedPerson() {","lastModifiedDate":"2023-10-31"},{"lineNumber":172,"author":{"gitId":"glenngnng"},"content":"        modelManager.storeDeletedPerson(testPersonAlice);","lastModifiedDate":"2023-10-31"},{"lineNumber":173,"author":{"gitId":"glenngnng"},"content":"        assertEquals(testPersonAlice, modelManager.getDeletedPerson());","lastModifiedDate":"2023-10-31"},{"lineNumber":174,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":175,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":176,"author":{"gitId":"glenngnng"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":177,"author":{"gitId":"glenngnng"},"content":"    public void removeDeletedPerson() {","lastModifiedDate":"2023-10-31"},{"lineNumber":178,"author":{"gitId":"glenngnng"},"content":"        modelManager.storeDeletedPerson(testPersonAlice);","lastModifiedDate":"2023-10-31"},{"lineNumber":179,"author":{"gitId":"glenngnng"},"content":"        modelManager.storeDeletedPerson(testPersonBenson);","lastModifiedDate":"2023-10-31"},{"lineNumber":180,"author":{"gitId":"glenngnng"},"content":"        modelManager.removeDeletedPerson();","lastModifiedDate":"2023-10-31"},{"lineNumber":181,"author":{"gitId":"glenngnng"},"content":"        assertEquals(modelManager.getDeletedPerson(), testPersonAlice);","lastModifiedDate":"2023-10-31"},{"lineNumber":182,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":183,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":184,"author":{"gitId":"glenngnng"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":185,"author":{"gitId":"glenngnng"},"content":"    public void removeDeletedPerson_throwsIndexOutOfBoundsException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":186,"author":{"gitId":"glenngnng"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e modelManager.removeDeletedPerson());","lastModifiedDate":"2023-10-31"},{"lineNumber":187,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":188,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":189,"author":{"gitId":"glenngnng"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":190,"author":{"gitId":"glenngnng"},"content":"    public void storePreviousUndoableCommand() {","lastModifiedDate":"2023-10-31"},{"lineNumber":191,"author":{"gitId":"glenngnng"},"content":"        modelManager.storePreviousUndoableCommand(\"TEST\");","lastModifiedDate":"2023-10-31"},{"lineNumber":192,"author":{"gitId":"glenngnng"},"content":"        assertEquals(modelManager.getPreviousUndoableCommand(), \"TEST\");","lastModifiedDate":"2023-10-31"},{"lineNumber":193,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":194,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":195,"author":{"gitId":"glenngnng"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":196,"author":{"gitId":"glenngnng"},"content":"    public void removePreviousUndoableCommand() {","lastModifiedDate":"2023-10-31"},{"lineNumber":197,"author":{"gitId":"glenngnng"},"content":"        modelManager.storePreviousUndoableCommand(\"TEST1\");","lastModifiedDate":"2023-10-31"},{"lineNumber":198,"author":{"gitId":"glenngnng"},"content":"        modelManager.storePreviousUndoableCommand(\"TEST2\");","lastModifiedDate":"2023-10-31"},{"lineNumber":199,"author":{"gitId":"glenngnng"},"content":"        modelManager.removePreviousUndoableCommand();","lastModifiedDate":"2023-10-31"},{"lineNumber":200,"author":{"gitId":"glenngnng"},"content":"        assertEquals(modelManager.getPreviousUndoableCommand(), \"TEST1\");","lastModifiedDate":"2023-10-31"},{"lineNumber":201,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":202,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":203,"author":{"gitId":"glenngnng"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":204,"author":{"gitId":"glenngnng"},"content":"    public void removePreviousUndoableCommand_throwsIndexOutOfBoundsException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":205,"author":{"gitId":"glenngnng"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e modelManager.removePreviousUndoableCommand());","lastModifiedDate":"2023-10-31"},{"lineNumber":206,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":207,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":208,"author":{"gitId":"glenngnng"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":209,"author":{"gitId":"glenngnng"},"content":"    public void storeEditedPersonsPair() {","lastModifiedDate":"2023-10-31"},{"lineNumber":210,"author":{"gitId":"glenngnng"},"content":"        Pair\u003cPerson, Person\u003e testPersons \u003d new Pair\u003c\u003e(testPersonAlice, testPersonBenson);","lastModifiedDate":"2023-10-31"},{"lineNumber":211,"author":{"gitId":"glenngnng"},"content":"        modelManager.storeEditedPersonsPair(testPersonAlice, testPersonBenson);","lastModifiedDate":"2023-10-31"},{"lineNumber":212,"author":{"gitId":"glenngnng"},"content":"        assertEquals(modelManager.getEditedPersonsPair(), testPersons);","lastModifiedDate":"2023-10-31"},{"lineNumber":213,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":214,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":215,"author":{"gitId":"glenngnng"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":216,"author":{"gitId":"glenngnng"},"content":"    public void removeEditedPersonsPair() {","lastModifiedDate":"2023-10-31"},{"lineNumber":217,"author":{"gitId":"glenngnng"},"content":"        Pair\u003cPerson, Person\u003e testPersons \u003d new Pair\u003c\u003e(testPersonAlice, testPersonBenson);","lastModifiedDate":"2023-10-31"},{"lineNumber":218,"author":{"gitId":"glenngnng"},"content":"        modelManager.storeEditedPersonsPair(testPersonAlice, testPersonBenson);","lastModifiedDate":"2023-10-31"},{"lineNumber":219,"author":{"gitId":"glenngnng"},"content":"        modelManager.storeEditedPersonsPair(testPersonBenson, testPersonAlice);","lastModifiedDate":"2023-10-31"},{"lineNumber":220,"author":{"gitId":"glenngnng"},"content":"        modelManager.removeEditedPersonsPair();","lastModifiedDate":"2023-10-31"},{"lineNumber":221,"author":{"gitId":"glenngnng"},"content":"        assertEquals(modelManager.getEditedPersonsPair(), testPersons);","lastModifiedDate":"2023-10-31"},{"lineNumber":222,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":223,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":224,"author":{"gitId":"glenngnng"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":225,"author":{"gitId":"glenngnng"},"content":"    public void removeEditedPersonsPair_throwsIndexOutOfBoundsException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":226,"author":{"gitId":"glenngnng"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e modelManager.removeEditedPersonsPair());","lastModifiedDate":"2023-10-31"},{"lineNumber":227,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":228,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":229,"author":{"gitId":"glenngnng"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":230,"author":{"gitId":"glenngnng"},"content":"    public void storeDeletedNumberList() {","lastModifiedDate":"2023-10-31"},{"lineNumber":231,"author":{"gitId":"glenngnng"},"content":"        modelManager.storeDeletedNumberList(1);","lastModifiedDate":"2023-10-31"},{"lineNumber":232,"author":{"gitId":"glenngnng"},"content":"        assertEquals(modelManager.getLastDeletedNumber(), 1);","lastModifiedDate":"2023-10-31"},{"lineNumber":233,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":234,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":235,"author":{"gitId":"glenngnng"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":236,"author":{"gitId":"glenngnng"},"content":"    public void removeLastDeletedNumber() {","lastModifiedDate":"2023-10-31"},{"lineNumber":237,"author":{"gitId":"glenngnng"},"content":"        modelManager.storeDeletedNumberList(1);","lastModifiedDate":"2023-10-31"},{"lineNumber":238,"author":{"gitId":"glenngnng"},"content":"        modelManager.storeDeletedNumberList(2);","lastModifiedDate":"2023-10-31"},{"lineNumber":239,"author":{"gitId":"glenngnng"},"content":"        modelManager.removeLastDeletedNumber();","lastModifiedDate":"2023-10-31"},{"lineNumber":240,"author":{"gitId":"glenngnng"},"content":"        assertEquals(modelManager.getLastDeletedNumber(), 1);","lastModifiedDate":"2023-10-31"},{"lineNumber":241,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":242,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":243,"author":{"gitId":"glenngnng"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":244,"author":{"gitId":"glenngnng"},"content":"    public void removeLastDeletedNumber_throwsIndexOutOfBoundsException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":245,"author":{"gitId":"glenngnng"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e modelManager.removeLastDeletedNumber());","lastModifiedDate":"2023-10-31"},{"lineNumber":246,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":247,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":248,"author":{"gitId":"glenngnng"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":249,"author":{"gitId":"glenngnng"},"content":"    public void addPerson_storesAddedPersonInArrayList() {","lastModifiedDate":"2023-10-31"},{"lineNumber":250,"author":{"gitId":"glenngnng"},"content":"        modelManager.addPerson(testPersonAlice);","lastModifiedDate":"2023-10-31"},{"lineNumber":251,"author":{"gitId":"glenngnng"},"content":"        assertEquals(modelManager.getAddedPerson(), testPersonAlice);","lastModifiedDate":"2023-10-31"},{"lineNumber":252,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":253,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":254,"author":{"gitId":"glenngnng"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":255,"author":{"gitId":"glenngnng"},"content":"    public void undoDelete() {","lastModifiedDate":"2023-10-31"},{"lineNumber":256,"author":{"gitId":"glenngnng"},"content":"        modelManager.addPerson(testPersonAlice);","lastModifiedDate":"2023-10-31"},{"lineNumber":257,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":258,"author":{"gitId":"glenngnng"},"content":"        //Make sure person is added into addedPersons array list.","lastModifiedDate":"2023-10-31"},{"lineNumber":259,"author":{"gitId":"glenngnng"},"content":"        assertEquals(modelManager.getAddedPersonsSize(), 1);","lastModifiedDate":"2023-10-31"},{"lineNumber":260,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":261,"author":{"gitId":"glenngnng"},"content":"        modelManager.deletePerson(testPersonAlice);","lastModifiedDate":"2023-10-31"},{"lineNumber":262,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":263,"author":{"gitId":"glenngnng"},"content":"        //Make sure person is added into deletedPersons array list.","lastModifiedDate":"2023-10-31"},{"lineNumber":264,"author":{"gitId":"glenngnng"},"content":"        assertEquals(modelManager.getDeletedPersonsSize(), 1);","lastModifiedDate":"2023-10-31"},{"lineNumber":265,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":266,"author":{"gitId":"glenngnng"},"content":"        modelManager.undoDelete();","lastModifiedDate":"2023-10-31"},{"lineNumber":267,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":268,"author":{"gitId":"glenngnng"},"content":"        //Make sure the person is added back to the address book.","lastModifiedDate":"2023-10-31"},{"lineNumber":269,"author":{"gitId":"glenngnng"},"content":"        assertTrue(modelManager.hasPerson(testPersonAlice));","lastModifiedDate":"2023-10-31"},{"lineNumber":270,"author":{"gitId":"glenngnng"},"content":"        //Make sure the deleted person is removed from the deletedPersons array list.","lastModifiedDate":"2023-10-31"},{"lineNumber":271,"author":{"gitId":"glenngnng"},"content":"        assertEquals(modelManager.getDeletedPersonsSize(), 0);","lastModifiedDate":"2023-10-31"},{"lineNumber":272,"author":{"gitId":"glenngnng"},"content":"        //Make sure the addedPersons array list is unchanged.","lastModifiedDate":"2023-10-31"},{"lineNumber":273,"author":{"gitId":"glenngnng"},"content":"        assertEquals(modelManager.getAddedPersonsSize(), 1);","lastModifiedDate":"2023-10-31"},{"lineNumber":274,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":275,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":276,"author":{"gitId":"glenngnng"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":277,"author":{"gitId":"glenngnng"},"content":"    public void undoAdd() {","lastModifiedDate":"2023-10-31"},{"lineNumber":278,"author":{"gitId":"glenngnng"},"content":"        modelManager.addPerson(testPersonAlice);","lastModifiedDate":"2023-10-31"},{"lineNumber":279,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":280,"author":{"gitId":"glenngnng"},"content":"        //Make sure person is added into addedPersons array list.","lastModifiedDate":"2023-10-31"},{"lineNumber":281,"author":{"gitId":"glenngnng"},"content":"        assertEquals(modelManager.getAddedPersonsSize(), 1);","lastModifiedDate":"2023-10-31"},{"lineNumber":282,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":283,"author":{"gitId":"glenngnng"},"content":"        modelManager.undoAdd();","lastModifiedDate":"2023-10-31"},{"lineNumber":284,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":285,"author":{"gitId":"glenngnng"},"content":"        //Make sure person is removed from addedPersons array list.","lastModifiedDate":"2023-10-31"},{"lineNumber":286,"author":{"gitId":"glenngnng"},"content":"        assertEquals(modelManager.getAddedPersonsSize(), 0);","lastModifiedDate":"2023-10-31"},{"lineNumber":287,"author":{"gitId":"glenngnng"},"content":"        //Make sure person is deleted from address book.","lastModifiedDate":"2023-10-31"},{"lineNumber":288,"author":{"gitId":"glenngnng"},"content":"        assertFalse(modelManager.hasPerson(testPersonAlice));","lastModifiedDate":"2023-10-31"},{"lineNumber":289,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":290,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":291,"author":{"gitId":"glenngnng"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":292,"author":{"gitId":"glenngnng"},"content":"    public void undoEdit() {","lastModifiedDate":"2023-10-31"},{"lineNumber":293,"author":{"gitId":"glenngnng"},"content":"        modelManager.addPerson(testPersonAlice);","lastModifiedDate":"2023-10-31"},{"lineNumber":294,"author":{"gitId":"glenngnng"},"content":"        modelManager.setPerson(testPersonAlice, testPersonAliceEdited);","lastModifiedDate":"2023-10-31"},{"lineNumber":295,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":296,"author":{"gitId":"glenngnng"},"content":"        modelManager.storeEditedPersonsPair(testPersonAliceEdited, testPersonAlice);","lastModifiedDate":"2023-10-31"},{"lineNumber":297,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":298,"author":{"gitId":"glenngnng"},"content":"        //Make sure pair is added into editedPersons array list.","lastModifiedDate":"2023-10-31"},{"lineNumber":299,"author":{"gitId":"glenngnng"},"content":"        assertEquals(modelManager.getEditedPersonsSize(), 1);","lastModifiedDate":"2023-10-31"},{"lineNumber":300,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":301,"author":{"gitId":"glenngnng"},"content":"        modelManager.undoEdit();","lastModifiedDate":"2023-10-31"},{"lineNumber":302,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":303,"author":{"gitId":"glenngnng"},"content":"        //Make sure pair is removed from editedPersons array list.","lastModifiedDate":"2023-10-31"},{"lineNumber":304,"author":{"gitId":"glenngnng"},"content":"        assertEquals(modelManager.getEditedPersonsSize(), 0);","lastModifiedDate":"2023-10-31"},{"lineNumber":305,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":306,"author":{"gitId":"glenngnng"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":307,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":308,"author":{"gitId":"glenngnng"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"glenngnng":177,"-":132}},{"path":"src/test/java/seedu/address/model/person/AppointmentDateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syamfarh"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"syamfarh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"syamfarh"},"content":"import seedu.address.logic.parser.DateTimeParser;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"syamfarh"},"content":"class AppointmentDateTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"syamfarh"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"syamfarh"},"content":"    public void equals() {","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":"        AppointmentDate apptDate \u003d new AppointmentDate(\"2022-12-04 23:00\");","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"syamfarh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"syamfarh"},"content":"        assertTrue(apptDate.equals(apptDate));","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"syamfarh"},"content":"        AppointmentDate apptDateCopy \u003d new AppointmentDate(apptDate.value);","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"syamfarh"},"content":"        assertTrue(apptDate.equals(apptDateCopy));","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"syamfarh"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"syamfarh"},"content":"        assertFalse(apptDate.equals(1));","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"syamfarh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"syamfarh"},"content":"        assertFalse(apptDate.equals(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"syamfarh"},"content":"        // different apptDate -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"syamfarh"},"content":"        AppointmentDate differentApptDate \u003d new AppointmentDate(\"2020-12-04 23:00\");","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"syamfarh"},"content":"        assertFalse(apptDate.equals(differentApptDate));","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"syamfarh"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"syamfarh"},"content":"    public void isValidCurrentDate() {","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"syamfarh"},"content":"        assertTrue(AppointmentDate.isValidCurrentDate(\"2050-11-20 23:00\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"syamfarh"},"content":"        assertFalse(AppointmentDate.isValidCurrentDate(\"2000-11-20 23:00\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"syamfarh"},"content":"        assertFalse(AppointmentDate.isValidCurrentDate(\"2000-11-20\"));","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"syamfarh"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"syamfarh"},"content":"    public void compareTo() {","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"syamfarh"},"content":"        AppointmentDate earlierDate \u003d new AppointmentDate(\"2000-11-20 23:00\");","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"syamfarh"},"content":"        AppointmentDate laterDate \u003d new AppointmentDate(\"2030-11-20 23:00\");","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"syamfarh"},"content":"        AppointmentDate currentDate \u003d new AppointmentDate(LocalDateTime.now());","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"syamfarh"},"content":"        assertEquals(0, currentDate.compareTo(currentDate));","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"syamfarh"},"content":"        assertEquals(1, currentDate.compareTo(earlierDate));","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"syamfarh"},"content":"        assertEquals(-1, currentDate.compareTo(laterDate));","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"syamfarh"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"syamfarh"},"content":"    public void toStringComparison() {","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"syamfarh"},"content":"        AppointmentDate dateWithStringConstructor \u003d new AppointmentDate(\"2000-11-20 23:00\");","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"syamfarh"},"content":"        AppointmentDate dateWithLocalDateTimeConstructor \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"syamfarh"},"content":"                new AppointmentDate(LocalDateTime.parse(\"2000-11-20 23:00\",","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"syamfarh"},"content":"                        DateTimeParser.STRINGTODATETIME.toFormatter()));","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"syamfarh"},"content":"        assertEquals(dateWithStringConstructor.toString(), dateWithLocalDateTimeConstructor.toString());","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"syamfarh"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"syamfarh":64}},{"path":"src/test/java/seedu/address/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"syamfarh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Name name \u003d new Name(\"Valid Name\");","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(new Name(\"Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(new Name(\"Other Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"syamfarh"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"syamfarh"},"content":"    void compareTo() {","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"syamfarh"},"content":"        Name name \u003d new Name(\"John Doe\");","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"syamfarh"},"content":"        Name lowerName \u003d new Name(\"Betsy Low\");","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"syamfarh"},"content":"        Name higherName \u003d new Name(\"Ripper Lan\");","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"syamfarh"},"content":"        Name duplicateName \u003d new Name(\"JOHN DOE\");","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"syamfarh"},"content":"        Name copiedName \u003d name;","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"syamfarh"},"content":"        assertEquals(0, name.compareTo(duplicateName));","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"syamfarh"},"content":"        assertEquals(1, name.compareTo(lowerName));","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"syamfarh"},"content":"        assertEquals(-1, name.compareTo(higherName));","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"syamfarh"},"content":"        assertEquals(0, name.compareTo(duplicateName));","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"syamfarh"},"content":"        assertEquals(0, name.compareTo(copiedName));","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"syamfarh":16,"-":60}},{"path":"src/test/java/seedu/address/model/person/OccupationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bhnuka"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"bhnuka"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"bhnuka"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"bhnuka"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"bhnuka"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"bhnuka"},"content":"public class OccupationTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"bhnuka"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"bhnuka"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"bhnuka"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Occupation(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"bhnuka"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"bhnuka"},"content":"    public void constructor_invalidOccupation_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"bhnuka"},"content":"        String invalidOccupation \u003d \"\";","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"bhnuka"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Occupation(invalidOccupation));","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"bhnuka"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"bhnuka"},"content":"    public void isValidOccupation() {","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"bhnuka"},"content":"        // null occupation","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"bhnuka"},"content":"        assertThrows(NullPointerException.class, () -\u003e Occupation.isValidOccupation(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"bhnuka"},"content":"        // invalid occupation","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"bhnuka"},"content":"        assertFalse(Occupation.isValidOccupation(\"\")); // empty string","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"bhnuka"},"content":"        assertFalse(Occupation.isValidOccupation(\" \")); // spaces only","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"bhnuka"},"content":"        assertFalse(Occupation.isValidOccupation(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"bhnuka"},"content":"        // valid occupation","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"bhnuka"},"content":"        assertTrue(Occupation.isValidOccupation(\"Software Engineer\")); // alphabets and spaces","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"bhnuka"},"content":"        assertTrue(Occupation.isValidOccupation(\"Doctor 2nd\")); // alphanumeric characters and spaces","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"bhnuka"},"content":"        assertTrue(Occupation.isValidOccupation(\"CEO\")); // short, all capital letters","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"bhnuka"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"bhnuka"},"content":"    public void equals() {","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"bhnuka"},"content":"        Occupation occupation \u003d new Occupation(\"Software Engineer\");","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"bhnuka"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"bhnuka"},"content":"        assertTrue(occupation.equals(new Occupation(\"Software Engineer\")));","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"bhnuka"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"bhnuka"},"content":"        assertTrue(occupation.equals(occupation));","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"bhnuka"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"bhnuka"},"content":"        assertFalse(occupation.equals(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"bhnuka"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"bhnuka"},"content":"        assertFalse(occupation.equals(5.0f));","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"bhnuka"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"bhnuka"},"content":"        assertFalse(occupation.equals(new Occupation(\"Doctor\")));","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"bhnuka"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"bhnuka":57}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"bhnuka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_OCCUPATION_BOB;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"bhnuka"},"content":"        // different occupation -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"bhnuka"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withOccupation(VALID_OCCUPATION_BOB).build();","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"bhnuka"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"bhnuka"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", occupation\u003d\" + ALICE.getOccupation()","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"syamfarh"},"content":"                + \", address\u003d\" + ALICE.getAddress() + \", appointmentDate\u003d\" + ALICE.getApptDate()","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"Daphne789"},"content":"                + \", riskProfile\u003d\" + ALICE.getRiskProfile() + \", tags\u003d\" + ALICE.getTags() + \"}\";","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"Daphne789":1,"bhnuka":6,"syamfarh":1,"-":98}},{"path":"src/test/java/seedu/address/model/person/RiskProfileTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Daphne789"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"Daphne789"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"Daphne789"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"Daphne789"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"Daphne789"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"Daphne789"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"Daphne789"},"content":"public class RiskProfileTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"Daphne789"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"Daphne789"},"content":"    public void equals() {","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"Daphne789"},"content":"        RiskProfile result \u003d new RiskProfile(\"a,a,b,b,b,d,e,c\");","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"Daphne789"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"Daphne789"},"content":"        assertTrue(result.equals(result));","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"Daphne789"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"Daphne789"},"content":"        RiskProfile resultCopy \u003d new RiskProfile(result.value);","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"Daphne789"},"content":"        assertTrue(result.equals(resultCopy));","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"Daphne789"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"Daphne789"},"content":"        assertFalse(result.equals(1));","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"Daphne789"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"Daphne789"},"content":"        assertFalse(result.equals(null));","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"Daphne789"},"content":"        // different result -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"Daphne789"},"content":"        RiskProfile differentResult \u003d new RiskProfile(\"d,e,c,c,c,e,b,a\");","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"Daphne789"},"content":"        assertFalse(result.equals(differentResult));","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"Daphne789"},"content":"        // Test hashCode()","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"Daphne789"},"content":"        assertEquals(result.hashCode(), resultCopy.hashCode());","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"Daphne789"},"content":"        assertNotEquals(result.hashCode(), differentResult.hashCode());","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"Daphne789"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"Daphne789":35}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"syamfarh"},"content":"import seedu.address.model.person.AppointmentDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"bhnuka"},"content":"import seedu.address.model.person.Occupation;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"syamfarh"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"bhnuka"},"content":"    private static final String INVALID_OCCUPATION \u003d \"B@rber\";","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"syamfarh"},"content":"    private static final String INVALID_APPOINTMENTDATE_FORMAT \u003d \"20/12/2000\";","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"syamfarh"},"content":"    private static final String INVALID_APPOINTMENTDATE_CURRENTDATE \u003d \"2000-11-20\";","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"bhnuka"},"content":"    private static final String VALID_OCCUPATION \u003d BENSON.getOccupation().toString();","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"syamfarh"},"content":"    private static final String VALID_APPOINTMENTDATE \u003d BENSON.getAddress().toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"syamfarh"},"content":"    private static final String VALID_APPOINTMENTDATE_EMPTY \u003d \"\";","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"Daphne789"},"content":"    private static final String VALID_RISKPROFILE \u003d BENSON.getRiskProfile().toString();","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"bhnuka"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_OCCUPATION,","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"Daphne789"},"content":"                VALID_ADDRESS, VALID_APPOINTMENTDATE, VALID_RISKPROFILE, VALID_TAGS);","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"bhnuka"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_OCCUPATION,","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"Daphne789"},"content":"                VALID_ADDRESS, VALID_APPOINTMENTDATE, VALID_RISKPROFILE, VALID_TAGS);","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"bhnuka"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_OCCUPATION,","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"Daphne789"},"content":"                 VALID_ADDRESS, VALID_APPOINTMENTDATE, VALID_RISKPROFILE, VALID_TAGS);","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"bhnuka"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_OCCUPATION,","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"Daphne789"},"content":"              VALID_ADDRESS, VALID_APPOINTMENTDATE, VALID_RISKPROFILE, VALID_TAGS);","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"bhnuka"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_OCCUPATION,","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"Daphne789"},"content":"                 VALID_ADDRESS, VALID_APPOINTMENTDATE, VALID_RISKPROFILE, VALID_TAGS);","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"bhnuka"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_OCCUPATION,","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"Daphne789"},"content":"              VALID_ADDRESS, VALID_APPOINTMENTDATE, VALID_RISKPROFILE, VALID_TAGS);","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"bhnuka"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"bhnuka"},"content":"    public void toModelType_invalidOccupation_throwsIllegalValueException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"bhnuka"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"bhnuka"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_OCCUPATION,","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"Daphne789"},"content":"                        VALID_ADDRESS, VALID_APPOINTMENTDATE, VALID_RISKPROFILE, VALID_TAGS);","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"bhnuka"},"content":"        String expectedMessage \u003d Occupation.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"bhnuka"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"bhnuka"},"content":"    @Test","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"bhnuka"},"content":"    public void toModelType_nullOccupation_throwsIllegalValueException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"bhnuka"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"Daphne789"},"content":"                VALID_ADDRESS, VALID_APPOINTMENTDATE, VALID_RISKPROFILE, VALID_TAGS);","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"bhnuka"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Occupation.class.getSimpleName());","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"bhnuka"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"bhnuka"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_OCCUPATION,","lastModifiedDate":"2023-10-13"},{"lineNumber":128,"author":{"gitId":"Daphne789"},"content":"                 INVALID_ADDRESS, VALID_APPOINTMENTDATE, VALID_RISKPROFILE, VALID_TAGS);","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"bhnuka"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_OCCUPATION,","lastModifiedDate":"2023-10-13"},{"lineNumber":136,"author":{"gitId":"Daphne789"},"content":"              null, VALID_APPOINTMENTDATE, VALID_RISKPROFILE, VALID_TAGS);","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"syamfarh"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":142,"author":{"gitId":"syamfarh"},"content":"    public void toModelType_invalidAppointmentDateFormat_throwsIllegalValueException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":143,"author":{"gitId":"syamfarh"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":144,"author":{"gitId":"syamfarh"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_OCCUPATION,","lastModifiedDate":"2023-10-15"},{"lineNumber":145,"author":{"gitId":"Daphne789"},"content":"                        VALID_ADDRESS, INVALID_APPOINTMENTDATE_FORMAT, VALID_RISKPROFILE, VALID_TAGS);","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"syamfarh"},"content":"        String expectedMessage \u003d AppointmentDate.MESSAGE_CONSTRAINTS_FORMAT;","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"syamfarh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":148,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":149,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":150,"author":{"gitId":"syamfarh"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":151,"author":{"gitId":"syamfarh"},"content":"    public void toModelType_invalidAppointmentDateCurrentDate() throws IllegalValueException {","lastModifiedDate":"2023-10-16"},{"lineNumber":152,"author":{"gitId":"syamfarh"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":153,"author":{"gitId":"syamfarh"},"content":"                new JsonAdaptedPerson(new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2023-10-16"},{"lineNumber":154,"author":{"gitId":"syamfarh"},"content":"                        .withAppointmentDate(\"\").withEmail(\"hans@example.com\").withOccupation(\"Chef\")","lastModifiedDate":"2023-10-16"},{"lineNumber":155,"author":{"gitId":"syamfarh"},"content":"                        .withAppointmentDate(\"20-11-2000 23:00\").withAddress(\"chicago ave\").build());","lastModifiedDate":"2023-10-27"},{"lineNumber":156,"author":{"gitId":"syamfarh"},"content":"        String expectedMessage \u003d AppointmentDate.MESSAGE_CONSTRAINTS_FORMAT;","lastModifiedDate":"2023-10-16"},{"lineNumber":157,"author":{"gitId":"syamfarh"},"content":"        assertEquals(new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2023-10-16"},{"lineNumber":158,"author":{"gitId":"syamfarh"},"content":"                .withAppointmentDate(\"\").withEmail(\"hans@example.com\").withOccupation(\"Chef\")","lastModifiedDate":"2023-10-16"},{"lineNumber":159,"author":{"gitId":"syamfarh"},"content":"                .withAppointmentDate(\"\").withAddress(\"chicago ave\").build(), person.toModelType());","lastModifiedDate":"2023-10-16"},{"lineNumber":160,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":161,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":167,"author":{"gitId":"bhnuka"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_OCCUPATION,","lastModifiedDate":"2023-10-13"},{"lineNumber":168,"author":{"gitId":"Daphne789"},"content":"                      VALID_ADDRESS, VALID_APPOINTMENTDATE, VALID_RISKPROFILE, invalidTags);","lastModifiedDate":"2023-10-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Daphne789":14,"bhnuka":27,"syamfarh":30,"-":101}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"syamfarh"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-06-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"syamfarh"},"content":"        original.addPerson(new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"syamfarh"},"content":"                .withAppointmentDate(\"\").withEmail(\"hans@example.com\").withOccupation(\"Chef\")","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"syamfarh"},"content":"                .withAppointmentDate(\"\").withAddress(\"chicago ave\").build());","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"syamfarh":4,"-":108}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"syamfarh"},"content":"import seedu.address.model.person.AppointmentDate;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"bhnuka"},"content":"import seedu.address.model.person.Occupation;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"bhnuka"},"content":"        descriptor.setOccupation(person.getOccupation());","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"syamfarh"},"content":"        descriptor.setAppointmentDate(person.getApptDate());","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"bhnuka"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"bhnuka"},"content":"     * Sets the {@code Occupation} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"bhnuka"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"bhnuka"},"content":"    public EditPersonDescriptorBuilder withOccupation(String occupation) {","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"bhnuka"},"content":"        descriptor.setOccupation(new Occupation(occupation));","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"bhnuka"},"content":"        return this;","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"syamfarh"},"content":"     * Sets the {@code AppointmentDate} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"syamfarh"},"content":"    public EditPersonDescriptorBuilder withAppointmentDate(String date) {","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"syamfarh"},"content":"        descriptor.setAppointmentDate(new AppointmentDate(date));","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"syamfarh"},"content":"        return this;","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"syamfarh"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"bhnuka":10,"syamfarh":10,"-":87}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"syamfarh"},"content":"import seedu.address.model.person.AppointmentDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"bhnuka"},"content":"import seedu.address.model.person.Occupation;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"Daphne789"},"content":"import seedu.address.model.person.RiskProfile;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":25,"author":{"gitId":"bhnuka"},"content":"    public static final String DEFAULT_OCCUPATION \u003d \"Barber\";","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"syamfarh"},"content":"    public static final String DEFAULT_APPOINTMENTDATE \u003d \"\";","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"Daphne789"},"content":"    public static final String DEFAULT_RISKPROFILE \u003d \"a,a,b,b,b,d,e,c\";","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"syamfarh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"bhnuka"},"content":"    private Occupation occupation;","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"syamfarh"},"content":"    private AppointmentDate appointmentDate;","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"Daphne789"},"content":"    private RiskProfile riskProfile;","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"bhnuka"},"content":"        occupation \u003d new Occupation(DEFAULT_OCCUPATION);","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"syamfarh"},"content":"        appointmentDate \u003d new AppointmentDate(DEFAULT_APPOINTMENTDATE);","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"Daphne789"},"content":"        riskProfile \u003d new RiskProfile(DEFAULT_RISKPROFILE);","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"bhnuka"},"content":"        occupation \u003d personToCopy.getOccupation();","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"syamfarh"},"content":"        appointmentDate \u003d personToCopy.getApptDate();","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"bhnuka"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"bhnuka"},"content":"     * Sets the {@code Occupation} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"bhnuka"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"bhnuka"},"content":"    public PersonBuilder withOccupation(String occupation) {","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"bhnuka"},"content":"        this.occupation \u003d new Occupation(occupation);","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"bhnuka"},"content":"        return this;","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":115,"author":{"gitId":"syamfarh"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":116,"author":{"gitId":"syamfarh"},"content":"     * Sets the {@code AppointmentDate} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"syamfarh"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":118,"author":{"gitId":"syamfarh"},"content":"    public PersonBuilder withAppointmentDate(String date) {","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"syamfarh"},"content":"        this.appointmentDate \u003d new AppointmentDate(date);","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"syamfarh"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"Daphne789"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"Daphne789"},"content":"     * Sets the {@code RiskProfile} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"Daphne789"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"Daphne789"},"content":"    public PersonBuilder withRiskProfile(String result) {","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"Daphne789"},"content":"        this.riskProfile \u003d new RiskProfile(result);","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"Daphne789"},"content":"        return this;","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"Daphne789"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"Daphne789"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"bhnuka"},"content":"    public Person build() {","lastModifiedDate":"2023-10-13"},{"lineNumber":133,"author":{"gitId":"Daphne789"},"content":"        return new Person(name, phone, email, occupation, address, appointmentDate, riskProfile, tags);","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"bhnuka"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"Daphne789":14,"bhnuka":13,"syamfarh":12,"-":96}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"syamfarh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENTDATE;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"bhnuka"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OCCUPATION;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"bhnuka"},"content":"        sb.append(PREFIX_OCCUPATION + person.getOccupation().fullOccupation + \" \");","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"bhnuka"},"content":"        descriptor.getOccupation().ifPresent(occupation -\u003e sb.append(PREFIX_OCCUPATION)","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"bhnuka"},"content":"             .append(occupation.fullOccupation).append(\" \"));","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"syamfarh"},"content":"        descriptor.getAppointmentDate().ifPresent(appointmentDate -\u003e sb.append(PREFIX_APPOINTMENTDATE)","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"syamfarh"},"content":"                .append(appointmentDate.value).append(\" \"));","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"bhnuka":4,"syamfarh":3,"-":62}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"bhnuka"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"bhnuka"},"content":"import java.util.List;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"bhnuka"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"bhnuka"},"content":"    public static final Index INDEX_FOURTH_PERSON \u003d Index.fromOneBased(4);","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"bhnuka"},"content":"    public static final List\u003cIndex\u003e FIRST_INDEXES \u003d Arrays.asList(INDEX_FIRST_PERSON, INDEX_SECOND_PERSON,","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"bhnuka"},"content":"        INDEX_THIRD_PERSON);","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"bhnuka"},"content":"    public static final List\u003cIndex\u003e SECOND_INDEXES \u003d Arrays.asList(INDEX_SECOND_PERSON, INDEX_THIRD_PERSON,","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"bhnuka"},"content":"            INDEX_FOURTH_PERSON);","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"bhnuka"},"content":"    public static final Index INDEX_NINTH_PERSON \u003d Index.fromOneBased(9);","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"bhnuka"},"content":"    public static final Index INDEX_TENTH_PERSON \u003d Index.fromOneBased(10);","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"bhnuka"},"content":"    public static final Index INDEX_ELEVENTH_PERSON \u003d Index.fromOneBased(11);","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"bhnuka"},"content":"    public static final Index INDEX_TWELFTH_PERSON \u003d Index.fromOneBased(12);","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"bhnuka":12,"-":12}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"limzhenwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_JOHN;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"limzhenwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENTDATE_JOHN;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"limzhenwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_JOHN;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"limzhenwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_JOHN;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"limzhenwy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_JOHN;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"bhnuka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RISKPROFILE_AMY;","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"bhnuka"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RISKPROFILE_BOB;","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"bhnuka"},"content":"            .withPhone(\"94351253\").withOccupation(\"Barber\").withAppointmentDate(\"2023-12-13 08:30\")","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"Daphne789"},"content":"            .withRiskProfile(\"a,a,b,b,b,d,e,c\").withTags(\"friends\").build();","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"glenngnng"},"content":"    public static final Person EDITEDALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"glenngnng"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"notalice@example.com\")","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"glenngnng"},"content":"            .withPhone(\"94351253\").withOccupation(\"Clerk\").withAppointmentDate(\"\")","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"glenngnng"},"content":"            .withRiskProfile(\"a,a,b,b,b,d,e,c\").withTags(\"friends\").build();","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":43,"author":{"gitId":"syamfarh"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\").withOccupation(\"Musician\")","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"bhnuka"},"content":"            .withAppointmentDate(\"2023-12-14 08:30\").withRiskProfile(\"d,c,a,e,b,b,c,a\")","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"bhnuka"},"content":"            .withAppointmentDate(\"2023-12-15 08:30\")","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"bhnuka"},"content":"            .withEmail(\"heinz@example.com\").withOccupation(\"Sheep Farmer\").withAddress(\"wall street\")","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"bhnuka"},"content":"            .withRiskProfile(\"\").build();","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"bhnuka"},"content":"            .withEmail(\"cornelia@example.com\").withOccupation(\"Lecturer\").withAddress(\"10th street\")","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"bhnuka"},"content":"            .withAppointmentDate(\"2023-12-16 08:30\").withRiskProfile(\"\").withTags(\"friends\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"bhnuka"},"content":"            .withAppointmentDate(\"2023-12-17 08:30\").withEmail(\"werner@example.com\").withOccupation(\"Seamstress\")","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"bhnuka"},"content":"            .withAddress(\"michegan ave\").withRiskProfile(\"\").build();","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"bhnuka"},"content":"            .withAppointmentDate(\"2023-12-18 08:30\").withEmail(\"lydia@example.com\").withOccupation(\"Princess\")","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"bhnuka"},"content":"            .withAddress(\"little tokyo\").withRiskProfile(\"\").build();","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"bhnuka"},"content":"            .withAppointmentDate(\"2023-12-19 08:30\").withEmail(\"george@example.com\").withOccupation(\"Zoologist\")","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"bhnuka"},"content":"            .withAddress(\"4th street\").withRiskProfile(\"\").build();","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"bhnuka"},"content":"    public static final Person KHALID \u003d new PersonBuilder().withName(\"Khalid\")","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"bhnuka"},"content":"            .withAddress(\"5th Street\").withEmail(\"khalid@example.com\")","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"bhnuka"},"content":"            .withPhone(\"94352433\").withOccupation(\"Golfer\").withAppointmentDate(\"2023-12-20 08:30\")","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"bhnuka"},"content":"            .withRiskProfile(\"\").withTags(\"friends\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"bhnuka"},"content":"    public static final Person LENNY \u003d new PersonBuilder().withName(\"Lenny David\")","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"bhnuka"},"content":"            .withAddress(\"6th Street\").withEmail(\"lenny@example.com\")","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"bhnuka"},"content":"            .withPhone(\"94932143\").withOccupation(\"Fisherman\").withAppointmentDate(\"2023-12-21 08:30\")","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"bhnuka"},"content":"            .withRiskProfile(\"\").withTags(\"friends\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"bhnuka"},"content":"    public static final Person LENNY1 \u003d new PersonBuilder().withName(\"Lenny David 1\")","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"bhnuka"},"content":"            .withAddress(\"6th Street\").withEmail(\"lenny@example.com\")","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"bhnuka"},"content":"            .withPhone(\"94932143\").withOccupation(\"Fisherman\").withAppointmentDate(\"2023-12-22 08:30\")","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"bhnuka"},"content":"            .withRiskProfile(\"\").withTags(\"friends\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"bhnuka"},"content":"    public static final Person OWEN \u003d new PersonBuilder().withName(\"Owen Davis 2147483647\")","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"bhnuka"},"content":"            .withAddress(\"7th Street\").withEmail(\"owen@example.com\")","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"bhnuka"},"content":"            .withPhone(\"94932143\").withOccupation(\"Fisherman\").withAppointmentDate(\"2023-12-23 08:30\")","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"bhnuka"},"content":"            .withRiskProfile(\"\").withTags(\"friends\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"syamfarh"},"content":"            .withAppointmentDate(\"\").withEmail(\"stefan@example.com\").withOccupation(\"Unemployed\")","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"syamfarh"},"content":"            .withAddress(\"little india\").build();","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"syamfarh"},"content":"            .withAppointmentDate(\"\").withEmail(\"hans@example.com\").withOccupation(\"Chef\")","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"syamfarh"},"content":"            .withAddress(\"chicago ave\").build();","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"limzhenwy"},"content":"            .withEmail(VALID_EMAIL_AMY).withOccupation(\"Barber\").withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-10-20"},{"lineNumber":90,"author":{"gitId":"bhnuka"},"content":"            .withAppointmentDate(\"\").withRiskProfile(VALID_RISKPROFILE_AMY)","lastModifiedDate":"2023-10-28"},{"lineNumber":91,"author":{"gitId":"bhnuka"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"bhnuka"},"content":"            .withEmail(VALID_EMAIL_BOB).withOccupation(\"Software Engineer\").withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"syamfarh"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).withAppointmentDate(\"\")","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"bhnuka"},"content":"            .withRiskProfile(VALID_RISKPROFILE_BOB).build();","lastModifiedDate":"2023-10-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":97,"author":{"gitId":"limzhenwy"},"content":"    public static final Person JOHN \u003d new PersonBuilder().withName(VALID_NAME_JOHN).withPhone(VALID_PHONE_JOHN)","lastModifiedDate":"2023-10-20"},{"lineNumber":98,"author":{"gitId":"limzhenwy"},"content":"            .withEmail(VALID_EMAIL_JOHN).withOccupation(\"Chef\").withAddress(VALID_ADDRESS_JOHN)","lastModifiedDate":"2023-10-20"},{"lineNumber":99,"author":{"gitId":"bhnuka"},"content":"            .withAppointmentDate(VALID_APPOINTMENTDATE_JOHN).withRiskProfile(\"\")","lastModifiedDate":"2023-10-28"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2023-10-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":102,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":103,"author":{"gitId":"limzhenwy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"bhnuka"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(OWEN, LENNY, LENNY1, KHALID, ALICE, BENSON, CARL, DANIEL, ELLE, FIONA,","lastModifiedDate":"2023-11-01"},{"lineNumber":121,"author":{"gitId":"bhnuka"},"content":"                GEORGE, JOHN));","lastModifiedDate":"2023-11-01"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"limzhenwy":10,"Daphne789":1,"glenngnng":4,"bhnuka":38,"syamfarh":6,"-":64}}]

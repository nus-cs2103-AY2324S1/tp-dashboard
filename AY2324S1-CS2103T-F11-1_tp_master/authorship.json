[{"path":".github/pull_request_template.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wr1159"},"content":"Closes #","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"wr1159"},"content":"What have you done in this PR?","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"wr1159"},"content":"*","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"wr1159"},"content":"Dev Testing Steps / Screenshots","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"wr1159":6}},{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-F11-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-F11-1/tp/actions)","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-F11-1/tp/graph/badge.svg?token\u003dF3OGCRX0UZ)](https://codecov.io/gh/AY2324S1-CS2103T-F11-1/tp)","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"**CCACommander Ultra Promax Xtra 9000PLUS** frees your mind of having to remember your CCA members and events. It is,","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"* text-based","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"* easy to learn","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"* SUPER FAST to use","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"### Features","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"1. Add and delete members","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":"2. Add and delete events","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"3. List all events and members","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"4. View events of a member","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"5. View members of an event","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"6. Enrol a member to an event","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"7. Unenrol a member from an event","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"andrechuakj"},"content":"### Links","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"andrechuakj"},"content":"* [Project Website](https://ay2324s1-cs2103t-f11-1.github.io/tp/)","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"andrechuakj"},"content":"* [User Guide](https://ay2324s1-cs2103t-f11-1.github.io/tp/UserGuide.html)","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"andrechuakj"},"content":"* [Developer Guide](https://ay2324s1-cs2103t-f11-1.github.io/tp/DeveloperGuide.html)","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"andrechuakj"},"content":"* [About us](https://ay2324s1-cs2103t-f11-1.github.io/tp/AboutUs.html)","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"andrechuakj"},"content":"### Acknowlegdements","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"* This project is a **part of the se-education.org** initiative. If you would like to contribute code to this project, see [se-education.org](https://se-education.org#https://se-education.org/#contributing) for more info.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"andrechuakj":16,"SelwynAng":7,"-":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"mainClassName \u003d \u0027seedu.ccacommander.Main\u0027","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"andrechuakj"},"content":"    archiveFileName \u003d \u0027ccacommander.jar\u0027","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"andrechuakj"},"content":"}","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"andrechuakj"},"content":"run {","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"andrechuakj"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"andrechuakj":6,"-":70}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":"### Ang Jing Xuan Selwyn","lastModifiedDate":"2023-10-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"\u003cimg src\u003d\"images/selwynang.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"[[github](https://github.com/SelwynAng)] [[portfolio](team/selwynang.md)] [[email](mailto:selwyn.ang@u.nus.edu)]","lastModifiedDate":"2023-10-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"* Role: Team Lead","lastModifiedDate":"2023-10-01"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"* Responsibilities: Overall team coordination, Code Quality","lastModifiedDate":"2023-10-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"andrechuakj"},"content":"### Andre Chua Kai Jun","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"andrechuakj"},"content":"\u003cimg src\u003d\"images/andrechuakj.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"andrechuakj"},"content":"[[github](http://github.com/andrechuakj)] [[portfolio](team/andrechuakj.md)] [[email](mailto:andre.chua@u.nus.edu)]","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"andrechuakj"},"content":"* Role: Developer","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"andrechuakj"},"content":"* Responsibilities: Documentation","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"wr1159"},"content":"### Chu Wei Rong","lastModifiedDate":"2023-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"wr1159"},"content":"\u003cimg src\u003d\"images/wr1159.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"wr1159"},"content":"[[github](http://github.com/wr1159)] [[portfolio](team/wr1159.md)] [[email](mailto:chuweirong@u.nus.edu)]","lastModifiedDate":"2023-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"wr1159"},"content":"* Responsibilities: Git Expert","lastModifiedDate":"2023-10-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"dylkaw"},"content":"### Kaw Jun Rei Dylan","lastModifiedDate":"2023-09-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"dylkaw"},"content":"\u003cimg src\u003d\"images/dylkaw.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"dylkaw"},"content":"[[github](http://github.com/dylkaw)] [[portfolio](team/dylkaw.md)] [[email](mailto:dylankaw@nus.edu.sg)]","lastModifiedDate":"2023-09-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"dylkaw"},"content":"* Responsibilities: Deliverables and deadlines","lastModifiedDate":"2023-09-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"ph-nathan"},"content":"### Pham Quang Nhat","lastModifiedDate":"2023-10-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"ph-nathan"},"content":"\u003cimg src\u003d\"images/ph-nathan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"ph-nathan"},"content":"[[github](http://github.com/ph-nathan)] [[portfolio](team/ph-nathan.md)] [[email](mailto:e0960490@nus.edu.sg)]","lastModifiedDate":"2023-10-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"wr1159":4,"andrechuakj":5,"SelwynAng":5,"dylkaw":4,"ph-nathan":3,"-":32}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"ph-nathan"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/AY2324S1-CS2103T-F11-1/tp/blob/master/src/main/java/seedu/ccacommander/Main.java) and [`MainApp`](https://github.com/AY2324S1-CS2103T-F11-1/tp/blob/master/src/main/java/seedu/ccacommander/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"ph-nathan"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `deleteMember 1`.","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"ph-nathan"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point).","lastModifiedDate":"2023-10-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"ph-nathan"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2324S1-CS2103T-F11-1/tp/blob/master/src/main/java/seedu/ccacommander/ui/Ui.java)","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"ph-nathan"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `MemberListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"ph-nathan"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2324S1-CS2103T-F11-1/tp/blob/master/src/main/java/seedu/ccacommander/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2324S1-CS2103T-F11-1/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"ph-nathan"},"content":"* depends on some classes in the `Model` component, as it displays `Member` and `Event` objects residing in the Model","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"ph-nathan"},"content":"**API** : [`Logic.java`](https://github.com/AY2324S1-CS2103T-F11-1/tp/blob/master/src/main/java/seedu/ccacommander/logic/Logic.java)","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"ph-nathan"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"deleteMember 1\")` API call as an example.","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"ph-nathan"},"content":"![Interactions Inside the Logic Component for the `deleteMember 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"ph-nathan"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteMemberCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"ph-nathan"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `CCACommanderParser` object which in turn creates a parser that matches the command (e.g., `DeleteMemberCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"ph-nathan"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteMemberCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"ph-nathan"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a member).","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"andrechuakj"},"content":"* When called upon to parse a user command, the `CcaCommanderParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `CreateMemberCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `CreateMemberCommand`) which the `CcaCommanderParser` returns back as a `Command` object.","lastModifiedDate":"2023-10-21"},{"lineNumber":114,"author":{"gitId":"ph-nathan"},"content":"* All `XYZCommandParser` classes (e.g., `CreateMemberCommandParser`, `DeleteMemberCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2023-10-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"ph-nathan"},"content":"**API** : [`Model.java`](https://github.com/AY2324S1-CS2103T-F11-1/tp/blob/master/src/main/java/seedu/ccacommander/model/Model.java)","lastModifiedDate":"2023-10-27"},{"lineNumber":118,"author":{"gitId":"ph-nathan"},"content":"* The class diagram below gives an overview of the model package.\u003cbr/\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":119,"author":{"gitId":"andrechuakj"},"content":"*Details of the `Member`, `Event`, and `Enrolment` packages have be omitted for brevity.","lastModifiedDate":"2023-10-28"},{"lineNumber":120,"author":{"gitId":"andrechuakj"},"content":"Please refer to the [Member](#member-class-diagram), [Event](#event-class-diagram) and [Enrolment](#enrolment-model) diagrams for more information.*","lastModifiedDate":"2023-10-28"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"ph-nathan"},"content":"* stores the CCACommander data i.e., all `Member` objects (which are contained in a `UniqueMemberList` object).","lastModifiedDate":"2023-10-27"},{"lineNumber":128,"author":{"gitId":"ph-nathan"},"content":"* stores the currently \u0027selected\u0027 `Member` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cMember\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2023-10-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"ph-nathan"},"content":"**API** : [`Storage.java`](https://github.com/AY2324S1-CS2103T-F11-1/tp/blob/master/src/main/java/seedu/ccacommander/storage/Storage.java)","lastModifiedDate":"2023-10-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"andrechuakj"},"content":"* can save both CCACommander data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-10-21"},{"lineNumber":142,"author":{"gitId":"andrechuakj"},"content":"* inherits from both `CcaCommanderStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2023-10-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"andrechuakj"},"content":"Classes used by multiple components are in the `seedu.ccacommander.commons` package.","lastModifiedDate":"2023-10-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"andrechuakj"},"content":"### Enrolment Model","lastModifiedDate":"2023-10-28"},{"lineNumber":156,"author":{"gitId":"andrechuakj"},"content":"This section explains how the `Enrolment` model is implemented and the various design consideration when","lastModifiedDate":"2023-10-28"},{"lineNumber":157,"author":{"gitId":"andrechuakj"},"content":"implementing this model.","lastModifiedDate":"2023-10-27"},{"lineNumber":158,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":159,"author":{"gitId":"andrechuakj"},"content":"#### Implementation","lastModifiedDate":"2023-10-27"},{"lineNumber":160,"author":{"gitId":"andrechuakj"},"content":"The `Enrolment` and `UniqueEnrolmentList` classes are implemented as shown in the diagram below:","lastModifiedDate":"2023-10-28"},{"lineNumber":161,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":162,"author":{"gitId":"andrechuakj"},"content":"![EnrolmentClassDiagram](images/EnrolmentClassDiagram.png)","lastModifiedDate":"2023-10-28"},{"lineNumber":163,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":164,"author":{"gitId":"andrechuakj"},"content":"`Enrolment` encapsulates the enrolment of a member into an event. It composes of the `Name` of the member and","lastModifiedDate":"2023-10-28"},{"lineNumber":165,"author":{"gitId":"andrechuakj"},"content":"the `Name` of the event enrolled in, number of `Hours` they contributed, and a `Remark` to note for that","lastModifiedDate":"2023-10-27"},{"lineNumber":166,"author":{"gitId":"andrechuakj"},"content":"enrolment. `UniqueEnrolmentList` stores all unique instances of `Enrolment`.","lastModifiedDate":"2023-10-28"},{"lineNumber":167,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":168,"author":{"gitId":"andrechuakj"},"content":"#### Design considerations:","lastModifiedDate":"2023-10-27"},{"lineNumber":169,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":170,"author":{"gitId":"andrechuakj"},"content":"**Aspect: How to store each member\u0027s events and each event\u0027s members.**","lastModifiedDate":"2023-10-27"},{"lineNumber":171,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":172,"author":{"gitId":"andrechuakj"},"content":"* **Alternative 1 (current choice):** Saves the enrolments as an independent list.","lastModifiedDate":"2023-10-28"},{"lineNumber":173,"author":{"gitId":"andrechuakj"},"content":"  * Pros:","lastModifiedDate":"2023-10-27"},{"lineNumber":174,"author":{"gitId":"andrechuakj"},"content":"    * Easy to implement.","lastModifiedDate":"2023-10-27"},{"lineNumber":175,"author":{"gitId":"andrechuakj"},"content":"    * Less performance issues when loading and storing enrolments.","lastModifiedDate":"2023-10-28"},{"lineNumber":176,"author":{"gitId":"andrechuakj"},"content":"  * Cons:","lastModifiedDate":"2023-10-27"},{"lineNumber":177,"author":{"gitId":"andrechuakj"},"content":"    * Incur high performance cost when viewing members of event or events of member.","lastModifiedDate":"2023-10-27"},{"lineNumber":178,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":179,"author":{"gitId":"andrechuakj"},"content":"* **Alternative 2:** Each member or event has its own list of enrolments.","lastModifiedDate":"2023-10-28"},{"lineNumber":180,"author":{"gitId":"andrechuakj"},"content":"  * Pros:","lastModifiedDate":"2023-10-27"},{"lineNumber":181,"author":{"gitId":"andrechuakj"},"content":"    * Linear time to view members of event or events of members.","lastModifiedDate":"2023-10-27"},{"lineNumber":182,"author":{"gitId":"andrechuakj"},"content":"  * Cons:","lastModifiedDate":"2023-10-27"},{"lineNumber":183,"author":{"gitId":"andrechuakj"},"content":"    * Hard to implement.","lastModifiedDate":"2023-10-27"},{"lineNumber":184,"author":{"gitId":"andrechuakj"},"content":"    * Will encounter more difficulties when implementing other features related to enrolment.","lastModifiedDate":"2023-10-28"},{"lineNumber":185,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":186,"author":{"gitId":"andrechuakj"},"content":"Alternative 1 was chosen as the benefit of having a simple design outweighs the cost of having a higher","lastModifiedDate":"2023-10-27"},{"lineNumber":187,"author":{"gitId":"andrechuakj"},"content":"performance overhead when viewing members of event or events of member. Alternative 2 has multiple layers of","lastModifiedDate":"2023-10-27"},{"lineNumber":188,"author":{"gitId":"andrechuakj"},"content":"complexities that are difficult to navigate and this will compound when dealing with other features related to","lastModifiedDate":"2023-10-27"},{"lineNumber":189,"author":{"gitId":"andrechuakj"},"content":"enrolment. The simpler design of alternative 1 also allows for more rigorous testing.","lastModifiedDate":"2023-10-28"},{"lineNumber":190,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":191,"author":{"gitId":"dylkaw"},"content":"### Enrol Feature","lastModifiedDate":"2023-10-27"},{"lineNumber":192,"author":{"gitId":"andrechuakj"},"content":"The enrol feature allows users to link a member to an event in order to keep track of their enrolment and contributions to the event.","lastModifiedDate":"2023-10-28"},{"lineNumber":193,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":194,"author":{"gitId":"dylkaw"},"content":"This section will explain how the enrol feature was implemented and the various design considerations when implementing the feature.","lastModifiedDate":"2023-10-27"},{"lineNumber":195,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":196,"author":{"gitId":"dylkaw"},"content":"#### Implementation","lastModifiedDate":"2023-10-27"},{"lineNumber":197,"author":{"gitId":"dylkaw"},"content":"The enrolment mechanism is facilitated by `EnrolCommand`. It extends `Command`.","lastModifiedDate":"2023-10-27"},{"lineNumber":198,"author":{"gitId":"andrechuakj"},"content":"The method, `EnrolCommand#execute(Model model)`, performs a validity check and adds a member\u0027s enrolment for a particular event if","lastModifiedDate":"2023-10-28"},{"lineNumber":199,"author":{"gitId":"dylkaw"},"content":"all the supplied parameters are valid.","lastModifiedDate":"2023-10-27"},{"lineNumber":200,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":201,"author":{"gitId":"dylkaw"},"content":"The sequence diagram below shows how the `Model` and `LogicManager` components interact when a `EnrolCommand` is executed with user input","lastModifiedDate":"2023-10-27"},{"lineNumber":202,"author":{"gitId":"dylkaw"},"content":"`enrol m/1 e/1 h/1 r/Role: Photographer` represented by `...`","lastModifiedDate":"2023-10-27"},{"lineNumber":203,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":204,"author":{"gitId":"dylkaw"},"content":"![EnrolSequenceDiagram](images/EnrolSequenceDiagram.png)","lastModifiedDate":"2023-10-27"},{"lineNumber":205,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":206,"author":{"gitId":"dylkaw"},"content":"1. `LogicManager` uses the `CcaCommanderParser` class to parse the user command, creating a new instance of `EnrolCommandParser` object.","lastModifiedDate":"2023-10-27"},{"lineNumber":207,"author":{"gitId":"dylkaw"},"content":"2. The `EnrolCommandParser` creates a new instance of a `EnrolCommand` object and returns it to `CcaCommanderParser`","lastModifiedDate":"2023-10-27"},{"lineNumber":208,"author":{"gitId":"dylkaw"},"content":"1. `CcaCommanderParser` encapsulates the `EnrolCommand` object as a `Command` object which is executed by","lastModifiedDate":"2023-10-27"},{"lineNumber":209,"author":{"gitId":"dylkaw"},"content":"   the `LogicManager`.","lastModifiedDate":"2023-10-27"},{"lineNumber":210,"author":{"gitId":"dylkaw"},"content":"1. The command execution calls `Model#getFilteredMemberList()` and `Model#getFilteredEventList()` to get the desired `member` and","lastModifiedDate":"2023-10-27"},{"lineNumber":211,"author":{"gitId":"dylkaw"},"content":"   `event` respectively using indexes supplied by the user.","lastModifiedDate":"2023-10-27"},{"lineNumber":212,"author":{"gitId":"andrechuakj"},"content":"1. Next, the command execution creates a new instance of an `Enrolment` object.","lastModifiedDate":"2023-10-28"},{"lineNumber":213,"author":{"gitId":"andrechuakj"},"content":"1. `Model#createEnrolment()` is then called, adding the new `Enrolment` object to the `uniqueEnrolmentList` object in `model`.","lastModifiedDate":"2023-10-28"},{"lineNumber":214,"author":{"gitId":"andrechuakj"},"content":"1. The change resulting from the command\u0027s execution is saved using the `Model#commit(String commitMessage)` method for the `undo`/`redo` feature.","lastModifiedDate":"2023-10-28"},{"lineNumber":215,"author":{"gitId":"dylkaw"},"content":"1. A `CommandResult` object which encapsulates the result of the command execution is passed back to the `Ui`.","lastModifiedDate":"2023-10-27"},{"lineNumber":216,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":217,"author":{"gitId":"dylkaw"},"content":"The following activity diagram shows how the `EnrolCommand` works.","lastModifiedDate":"2023-10-27"},{"lineNumber":218,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":219,"author":{"gitId":"dylkaw"},"content":"![EnrolActivityDiagram](images/EnrolActivityDiagram.png)","lastModifiedDate":"2023-10-27"},{"lineNumber":220,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":221,"author":{"gitId":"dylkaw"},"content":"#### Design Considerations","lastModifiedDate":"2023-10-27"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":223,"author":{"gitId":"dylkaw"},"content":"##### Aspect 1: `EnrolCommand` parameters","lastModifiedDate":"2023-10-27"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":225,"author":{"gitId":"dylkaw"},"content":"* **Alternative 1 (current choice):** `EnrolCommand` has parameters `Name memberName`, `Name eventName`, `Hours hours` and `Remark remark`.","lastModifiedDate":"2023-10-27"},{"lineNumber":226,"author":{"gitId":"dylkaw"},"content":"    * Pros:","lastModifiedDate":"2023-10-27"},{"lineNumber":227,"author":{"gitId":"dylkaw"},"content":"        * Less complex code reduces the possibility of bugs.","lastModifiedDate":"2023-10-27"},{"lineNumber":228,"author":{"gitId":"dylkaw"},"content":"        * Reduced coupling, enhancing maintainability","lastModifiedDate":"2023-10-27"},{"lineNumber":229,"author":{"gitId":"dylkaw"},"content":"    * Cons:","lastModifiedDate":"2023-10-27"},{"lineNumber":230,"author":{"gitId":"dylkaw"},"content":"        * Not standardised with other creation commands.","lastModifiedDate":"2023-10-27"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":232,"author":{"gitId":"andrechuakj"},"content":"* **Alternative 2:** `EnrolCommand` has parameter `Enrolment enrolment`","lastModifiedDate":"2023-10-28"},{"lineNumber":233,"author":{"gitId":"dylkaw"},"content":"    * Pros:","lastModifiedDate":"2023-10-27"},{"lineNumber":234,"author":{"gitId":"dylkaw"},"content":"        * Standardised with other creation commands","lastModifiedDate":"2023-10-27"},{"lineNumber":235,"author":{"gitId":"dylkaw"},"content":"    * Cons:","lastModifiedDate":"2023-10-27"},{"lineNumber":236,"author":{"gitId":"dylkaw"},"content":"        * More complex code leading to higher possibility of bugs.","lastModifiedDate":"2023-10-27"},{"lineNumber":237,"author":{"gitId":"dylkaw"},"content":"        * Increased coupling, reducing maintainability.","lastModifiedDate":"2023-10-27"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":239,"author":{"gitId":"dylkaw"},"content":"Alternative 1 was chosen because the cons of implementing alternative 2 outweighs the benefits derived from it. Alternative 2","lastModifiedDate":"2023-10-27"},{"lineNumber":240,"author":{"gitId":"dylkaw"},"content":"would require `EnrolCommandParser` to have knowledge of the `Model`. This would result in an increased coupling as it would","lastModifiedDate":"2023-10-27"},{"lineNumber":241,"author":{"gitId":"dylkaw"},"content":"then have greater dependence on more modules. Hence, while Alternative 1 would result in the `EnrolCommand` to be not standardised","lastModifiedDate":"2023-10-27"},{"lineNumber":242,"author":{"gitId":"dylkaw"},"content":"with other create commands, it provides a simpler implementation with fewer changes needed while also maintaining ease of testing.","lastModifiedDate":"2023-10-27"},{"lineNumber":243,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":244,"author":{"gitId":"SelwynAng"},"content":"### Undo/Redo Feature","lastModifiedDate":"2023-10-26"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"SelwynAng"},"content":"The Undo/Redo feature allows the user to revert commands that were entered wrongly.","lastModifiedDate":"2023-10-26"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"SelwynAng"},"content":"This section will explain how the redo and undo features were implemented and the various design considerations when implementing the feature.","lastModifiedDate":"2023-10-26"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"SelwynAng"},"content":"#### Implementation","lastModifiedDate":"2023-10-26"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"SelwynAng"},"content":"The undo/redo mechanism is facilitated by `VersionedCcaCommander`. It extends `CcaCommander` with an undo/redo history, stored internally as an `ccaCommanderVersionList` and `versionPointer`. Additionally, it implements the following operations:","lastModifiedDate":"2023-10-26"},{"lineNumber":253,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":254,"author":{"gitId":"SelwynAng"},"content":"* `VersionedCcaCommander#commit(String commitMessage)` — Saves the current CCACommander version and its commit message in its history.","lastModifiedDate":"2023-10-26"},{"lineNumber":255,"author":{"gitId":"SelwynAng"},"content":"* `VersionedCcaCommander#undo()` — Restores the previous CCACommander version from its history.","lastModifiedDate":"2023-10-26"},{"lineNumber":256,"author":{"gitId":"SelwynAng"},"content":"* `VersionedCcaCommander#redo()` — Restores a previously undone CCACommander version from its history.","lastModifiedDate":"2023-10-26"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"SelwynAng"},"content":"These operations are exposed in the `Model` interface as `Model#commit()`, `Model#undo()` and `Model#redo()` respectively.","lastModifiedDate":"2023-10-26"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"SelwynAng"},"content":"Step 1. The user launches the application for the first time. The `VersionedCcaCommander` will be initialized with the initial CCACommander version, and the `versionPointer` pointing to that single CCACommander version. This initial CCACommander version will be saved into the `ccaCommanderVersionList`","lastModifiedDate":"2023-10-26"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"SelwynAng"},"content":"![UndoRedoVersion0](images/UndoRedoVersion0.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"SelwynAng"},"content":"Step 2. The user executes `deleteMember 5` command to delete the 5th member in CCACommander. The `deleteMember` command calls `Model#commit(String commitMessage)`, causing the modified version of the CCACommander after the `deleteMember 5` command executes to be saved in the `ccaCommanderVersionList`, and the `versionPointer` is shifted to the newly inserted CCACommander version.","lastModifiedDate":"2023-10-26"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"SelwynAng"},"content":"![UndoRedoVersion1](images/UndoRedoVersion1.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"SelwynAng"},"content":"Step 3. The user executes `createMember n/David …​` to add a new member. The `createMember` command also calls `Model#commit(String commitMessage)`, causing another modified CCACommander version to be saved into the `ccaCommanderVersionList`.","lastModifiedDate":"2023-10-26"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"SelwynAng"},"content":"![UndoRedoVersion2](images/UndoRedoVersion2.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"SelwynAng"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commit(String commitMessage)`, so the CCACommander version will not be saved into the `ccaCommanderVersionList`.","lastModifiedDate":"2023-10-26"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"SelwynAng"},"content":"Step 4. The user now decides that adding the member was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undo()`, which will shift the `versionPointer` once to the left, pointing it to the previous CCACommander version, and restores the CCACommander to that version.","lastModifiedDate":"2023-10-26"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"SelwynAng"},"content":"![UndoRedoVersion3](images/UndoRedoVersion3.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"SelwynAng"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `versionPointer` is at index 0, pointing to the initial CcaCommander version, then there are no previous CcaCommander versions to restore. The `undo` command uses `Model#canUndo()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-10-26"},{"lineNumber":283,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"SelwynAng"},"content":"The `redo` command does the opposite — it calls `Model#redo()`, which shifts the `versionPointer` once to the right, pointing to the previously undone version, and restores CCACommander to that version.","lastModifiedDate":"2023-10-26"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"SelwynAng"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `versionPointer` is at index `ccaCommanderVersionList.size() - 1`, pointing to the latest CCACommander version, then there are no undone CcaCommander versions to restore. The `redo` command uses `Model#canRedo()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-10-26"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"SelwynAng"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the CCACommander, such as `list`, will usually not call `Model#commit(String commitMessage)`, `Model#undo()` or `Model#redo()`. Thus, the `ccaCommanderVersionList` remains unchanged.","lastModifiedDate":"2023-10-26"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"SelwynAng"},"content":"![UndoRedoVersion4](images/UndoRedoVersion4.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"SelwynAng"},"content":"Step 6. The user executes `clear`, which calls `Model#commit(String commitMessage)`. Since the `versionPointer` is not pointing at the end of the `ccaCommanderVersionList`, all CCACommander versions after the `versionPointer` will be purged. Reason: It no longer makes sense to redo the `createMember n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2023-10-26"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"SelwynAng"},"content":"![UndoRedoVersion5](images/UndoRedoVersion5.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"SelwynAng"},"content":"![CommitActivityDiagram](images/CommitActivityDiagram.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"andrechuakj"},"content":"* **Alternative 1 (current choice):** Saves the entire CCACommander.","lastModifiedDate":"2023-10-21"},{"lineNumber":318,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"ph-nathan"},"content":"  * Pros: Will use less memory (e.g. for `deleteMember`, just save the member being deleted).","lastModifiedDate":"2023-10-27"},{"lineNumber":324,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"wr1159"},"content":"### Command History","lastModifiedDate":"2023-11-02"},{"lineNumber":328,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":329,"author":{"gitId":"wr1159"},"content":"#### Implementation","lastModifiedDate":"2023-10-27"},{"lineNumber":330,"author":{"gitId":"wr1159"},"content":"The proposed commandHistory mechanism is facilitated by `CommandHistory`. It contains `commandHistoryList` and `currentCommandPointer`. Additionally, it implements the following operations:","lastModifiedDate":"2023-10-26"},{"lineNumber":331,"author":{"gitId":"wr1159"},"content":"* `CommandHistory#hasPreviousCommand()` — Returns if there is a previously command from the history based on `currentCommandPointer`.","lastModifiedDate":"2023-10-26"},{"lineNumber":332,"author":{"gitId":"wr1159"},"content":"* `CommandHistory#hasNextCommand()` — Returns if there is a next command from the history based on `currentCommandPointer`.","lastModifiedDate":"2023-10-26"},{"lineNumber":333,"author":{"gitId":"wr1159"},"content":"* `CommandHistory#getPreviousCommand()` — Restores the previous command from its history based on `currentCommandPointer`.","lastModifiedDate":"2023-10-26"},{"lineNumber":334,"author":{"gitId":"wr1159"},"content":"* `CommandHistory#getNextCommand()` — Restores the next command from its history based on `currentCommandPointer`.","lastModifiedDate":"2023-10-26"},{"lineNumber":335,"author":{"gitId":"wr1159"},"content":"* `CommandHistory#addCommand()` — Add the command into the history.","lastModifiedDate":"2023-10-26"},{"lineNumber":336,"author":{"gitId":"wr1159"},"content":"* `CommandHistory#isLastCommandEqualCommand()` — Returns if the command is equal to the last command added into the `commandHistoryList`.","lastModifiedDate":"2023-11-02"},{"lineNumber":337,"author":{"gitId":"wr1159"},"content":"* `CommandHistory#resetPointer()` — Resets the pointer to be start from the most recent command again.","lastModifiedDate":"2023-11-02"},{"lineNumber":338,"author":{"gitId":"wr1159"},"content":"* `CommandHistory#isLastCommand()` — Returns if `currentCommandPointer` is at the last command.","lastModifiedDate":"2023-11-02"},{"lineNumber":339,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":340,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":341,"author":{"gitId":"wr1159"},"content":"Given below is an example usage scenario and how the commandHistory behaves at each step.","lastModifiedDate":"2023-10-26"},{"lineNumber":342,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":343,"author":{"gitId":"wr1159"},"content":"Step 1. The user launches the application for the first time and enters their first command. ","lastModifiedDate":"2023-10-26"},{"lineNumber":344,"author":{"gitId":"wr1159"},"content":"The `CommandHistory` will save the command and the `currentCommandPointer` won\u0027t be pointing to any command.","lastModifiedDate":"2023-10-27"},{"lineNumber":345,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":346,"author":{"gitId":"wr1159"},"content":"![CommandHistoryState0](images/CommandHistoryState0.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":347,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":348,"author":{"gitId":"wr1159"},"content":"Step 2. The user presses \u0027↑\u0027 while the commandBox is selected. `CommandHistory#getPreviousCommand()` is called and the previous command is displayed in the commandBox. ","lastModifiedDate":"2023-10-27"},{"lineNumber":349,"author":{"gitId":"wr1159"},"content":"When the previous command is entered into the commandBox, the new version of command will not be stored in `CommandHistory` after calling `CommandHistory#isLastCommandEqualCommand()`","lastModifiedDate":"2023-11-02"},{"lineNumber":350,"author":{"gitId":"wr1159"},"content":"and it returns true.","lastModifiedDate":"2023-11-02"},{"lineNumber":351,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":352,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":353,"author":{"gitId":"wr1159"},"content":"![CommandHistoryState1](images/CommandHistoryState1.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":354,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":355,"author":{"gitId":"wr1159"},"content":"Step 3. The user presses \u0027↑\u0027 while the commandBox is selected. `CommandHistory#getPreviousCommand()` is called ","lastModifiedDate":"2023-10-27"},{"lineNumber":356,"author":{"gitId":"wr1159"},"content":"and the previous command is displayed in the commandBox. When the previous command is edited and is entered into the commandBox, the newly edited version of command will be stored in `CommandHistory` after calling `CommandHistory#addCommand()`.","lastModifiedDate":"2023-10-27"},{"lineNumber":357,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":358,"author":{"gitId":"wr1159"},"content":"![CommandHistoryState3](images/CommandHistoryState2.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":359,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":360,"author":{"gitId":"wr1159"},"content":"Step 4. The user has pressed \u0027↑\u0027 while selecting the commandBox until the first Command and `CommandHistory#getPreviousCommand()` ","lastModifiedDate":"2023-10-27"},{"lineNumber":361,"author":{"gitId":"wr1159"},"content":"is called multiple times. The user then presses \u0027↓\u0027 and `CommandHistory#getNextCommand()` is called and the command1 (the next command) will then be displayed in the commandBox.","lastModifiedDate":"2023-10-26"},{"lineNumber":362,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":363,"author":{"gitId":"wr1159"},"content":"![CommandHistoryState3](images/CommandHistoryState3.png)","lastModifiedDate":"2023-10-26"},{"lineNumber":364,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":365,"author":{"gitId":"wr1159"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentCommandPointer` is at ","lastModifiedDate":"2023-10-26"},{"lineNumber":366,"author":{"gitId":"wr1159"},"content":"index 0, pointing to the initial first command, then there are no previous commands to restore. The program uses ","lastModifiedDate":"2023-10-26"},{"lineNumber":367,"author":{"gitId":"wr1159"},"content":"`CommandHistory#hasPreviousCommand()` to check if this is the case. If so, it will not change anything.","lastModifiedDate":"2023-10-27"},{"lineNumber":368,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":369,"author":{"gitId":"wr1159"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":370,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":371,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":372,"author":{"gitId":"wr1159"},"content":"The opposite occurs too when calling the next command  —  the program calls `CommandHistory#hasNextCommand()`, which shifts the `currentCommandPointer` once to the right, pointing to the previously entered command and displaying that command instead.","lastModifiedDate":"2023-10-26"},{"lineNumber":373,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":374,"author":{"gitId":"wr1159"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `commandHistoryPointer` is at index `commandHistoryList.size()`, pointing to nothing, and there are no undone CcaCommander states to restore. ","lastModifiedDate":"2023-10-26"},{"lineNumber":375,"author":{"gitId":"wr1159"},"content":"The program uses `CommandHistory#hasNextCommand()` to check if this is the case. If so, it will not call `CommandHistory#getNextCommand()`","lastModifiedDate":"2023-11-02"},{"lineNumber":376,"author":{"gitId":"wr1159"},"content":"but will instead use `CommandHistory#isLastCommand()` to check if the `commandHistoryPointer` is at the last command and set the commandBox to be blank.","lastModifiedDate":"2023-11-02"},{"lineNumber":377,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":378,"author":{"gitId":"wr1159"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":379,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":380,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":381,"author":{"gitId":"wr1159"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2023-10-26"},{"lineNumber":382,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":383,"author":{"gitId":"wr1159"},"content":"\u003cimg src\u003d\"images/CommandHistoryActivityDiagram.png\" width\u003d\"400\" style\u003d\"padding-left:170px\" /\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":384,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":385,"author":{"gitId":"wr1159"},"content":"#### Design considerations:","lastModifiedDate":"2023-10-26"},{"lineNumber":386,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":387,"author":{"gitId":"wr1159"},"content":"**Aspect: Storing of Command History:**","lastModifiedDate":"2023-10-27"},{"lineNumber":388,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":389,"author":{"gitId":"wr1159"},"content":"* **Alternative 1 (current choice):** Stores the list of all commands.","lastModifiedDate":"2023-10-26"},{"lineNumber":390,"author":{"gitId":"wr1159"},"content":"    * Pros: Allows user to iterate through all commands listed.","lastModifiedDate":"2023-10-26"},{"lineNumber":391,"author":{"gitId":"wr1159"},"content":"    * Cons: May have performance issues in terms of memory usage after prolonged usage.","lastModifiedDate":"2023-11-02"},{"lineNumber":392,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":393,"author":{"gitId":"wr1159"},"content":"* **Alternative 2:** CommandHistory only stores previous command.","lastModifiedDate":"2023-10-26"},{"lineNumber":394,"author":{"gitId":"wr1159"},"content":"    * Pros: Will use less memory and reduces user error.","lastModifiedDate":"2023-10-26"},{"lineNumber":395,"author":{"gitId":"wr1159"},"content":"    * Cons: Quite limited as a feature.","lastModifiedDate":"2023-10-26"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":397,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"SelwynAng"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-07"},{"lineNumber":402,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":403,"author":{"gitId":"SelwynAng"},"content":"## **Planned Enhancements**","lastModifiedDate":"2023-11-07"},{"lineNumber":404,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":405,"author":{"gitId":"SelwynAng"},"content":"### Allow users to add / delete tags without retyping previous tags","lastModifiedDate":"2023-11-07"},{"lineNumber":406,"author":{"gitId":"SelwynAng"},"content":"**Current Implementation:**","lastModifiedDate":"2023-11-07"},{"lineNumber":407,"author":{"gitId":"SelwynAng"},"content":"* **Current Issue:** Each member/event can have tags attached to it and these tags can be edited using the `editMember`/`editEvent`","lastModifiedDate":"2023-11-07"},{"lineNumber":408,"author":{"gitId":"SelwynAng"},"content":"commands. However, upon adding a new tag to a member/event without typing all the old tags, it will override the initial tags attached to","lastModifiedDate":"2023-11-07"},{"lineNumber":409,"author":{"gitId":"SelwynAng"},"content":"the member/event and only the new tag will be displayed. This brings inconvenience to the user as the user has to ","lastModifiedDate":"2023-11-07"},{"lineNumber":410,"author":{"gitId":"SelwynAng"},"content":"type both the old and new tags instead of just typing the new tag.","lastModifiedDate":"2023-11-07"},{"lineNumber":411,"author":{"gitId":"SelwynAng"},"content":"* **Example:** We have a member called Alice with a member index of 1, and she has an initial tag called `friend`. We want to ","lastModifiedDate":"2023-11-07"},{"lineNumber":412,"author":{"gitId":"SelwynAng"},"content":"add a new tag `early` to her. Upon entering the command `editMember 1 t/early`, the current implementation will override ","lastModifiedDate":"2023-11-07"},{"lineNumber":413,"author":{"gitId":"SelwynAng"},"content":"all the initial tags and only the `early` tag will be displayed.","lastModifiedDate":"2023-11-07"},{"lineNumber":414,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":415,"author":{"gitId":"SelwynAng"},"content":"**Proposed solution:**","lastModifiedDate":"2023-11-07"},{"lineNumber":416,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":417,"author":{"gitId":"SelwynAng"},"content":"We propose to enhance the `editMember`/`editEvent` commands to give the user the flexibility to choose one of the following options","lastModifiedDate":"2023-11-07"},{"lineNumber":418,"author":{"gitId":"SelwynAng"},"content":"when editing the tags of the member/event:","lastModifiedDate":"2023-11-07"},{"lineNumber":419,"author":{"gitId":"SelwynAng"},"content":"1. Override the initial tags entirely where the new tags that the user enters will entirely replace all the old tags","lastModifiedDate":"2023-11-07"},{"lineNumber":420,"author":{"gitId":"SelwynAng"},"content":"2. Add new tag to the list of old tags where the old tags will remain attached to the member/event with the addition of the new tags","lastModifiedDate":"2023-11-07"},{"lineNumber":421,"author":{"gitId":"SelwynAng"},"content":"3. Edit current list of tags attached to the member/event","lastModifiedDate":"2023-11-07"},{"lineNumber":422,"author":{"gitId":"SelwynAng"},"content":"4. Delete specific tags from the current list of tags attached to the member/event","lastModifiedDate":"2023-11-07"},{"lineNumber":423,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":424,"author":{"gitId":"SelwynAng"},"content":"### Allow users to create and edit a member/event with name containing non-alphanumeric characters","lastModifiedDate":"2023-11-07"},{"lineNumber":425,"author":{"gitId":"SelwynAng"},"content":"**Current Implementation:**","lastModifiedDate":"2023-11-07"},{"lineNumber":426,"author":{"gitId":"SelwynAng"},"content":"* **Current Issue:** Member/event name only accepts alphanumeric characters and restricts the user from entering special characters","lastModifiedDate":"2023-11-07"},{"lineNumber":427,"author":{"gitId":"SelwynAng"},"content":"into the member/event name, which should be allowed as member/event names can contain special characters.","lastModifiedDate":"2023-11-07"},{"lineNumber":428,"author":{"gitId":"SelwynAng"},"content":"* **Example:** The user wants to create a new event named \"Raffles Hall\u0027s Musical Production\" and the user enters ","lastModifiedDate":"2023-11-07"},{"lineNumber":429,"author":{"gitId":"SelwynAng"},"content":"`createEvent n/Raffles Hall\u0027s Musical Production l/Raffles Hall d/2023-09-19` but the message \"Names should only contain ","lastModifiedDate":"2023-11-07"},{"lineNumber":430,"author":{"gitId":"SelwynAng"},"content":"alphanumeric characters and spaces, and it should not be blank\" is shown to the user instead of accepting it as a valid event. This is","lastModifiedDate":"2023-11-07"},{"lineNumber":431,"author":{"gitId":"SelwynAng"},"content":"due to the presence of the special character `\u0027` in the event name.","lastModifiedDate":"2023-11-07"},{"lineNumber":432,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":433,"author":{"gitId":"SelwynAng"},"content":"**Proposed solution:**","lastModifiedDate":"2023-11-07"},{"lineNumber":434,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":435,"author":{"gitId":"SelwynAng"},"content":"We propose to allow the `createMember`, `editMember` , `createEvent` and `editEvent` commands to accept special ","lastModifiedDate":"2023-11-07"},{"lineNumber":436,"author":{"gitId":"SelwynAng"},"content":"characters in the name field and not to be restricted to just alphanumeric characters.","lastModifiedDate":"2023-11-07"},{"lineNumber":437,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":438,"author":{"gitId":"SelwynAng"},"content":"### Provide more specific index error messages to the user","lastModifiedDate":"2023-11-07"},{"lineNumber":439,"author":{"gitId":"SelwynAng"},"content":"**Current Implementation:**","lastModifiedDate":"2023-11-07"},{"lineNumber":440,"author":{"gitId":"SelwynAng"},"content":"* **Current Issue:** As of now, for commands that accept more than 1 index as a parameter, it is hard to tell which index is wrong","lastModifiedDate":"2023-11-07"},{"lineNumber":441,"author":{"gitId":"SelwynAng"},"content":"based on the index error message shown to the user if one of the indexes provided is wrong. This can hamper the user\u0027s efficiency as the","lastModifiedDate":"2023-11-07"},{"lineNumber":442,"author":{"gitId":"SelwynAng"},"content":"user cannot tell immediately which provided index is wrong.","lastModifiedDate":"2023-11-07"},{"lineNumber":443,"author":{"gitId":"SelwynAng"},"content":"* **Example:** Commands such as `enrol` accept more than 1 index as a parameter. When the user accidentally enters an invalid index","lastModifiedDate":"2023-11-07"},{"lineNumber":444,"author":{"gitId":"SelwynAng"},"content":"such as `enrol m/1 e/-1` where the event index is wrong, the error message displayed to the user is just \"Index is not a non-zero unsigned integer.\"","lastModifiedDate":"2023-11-07"},{"lineNumber":445,"author":{"gitId":"SelwynAng"},"content":"There is a lack of information shown to the user which specific index is wrong.","lastModifiedDate":"2023-11-07"},{"lineNumber":446,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":447,"author":{"gitId":"SelwynAng"},"content":"**Proposed solution:**","lastModifiedDate":"2023-11-07"},{"lineNumber":448,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":449,"author":{"gitId":"SelwynAng"},"content":"We propose to make the index error messages more specific and highlight to the user which index is wrong and why","lastModifiedDate":"2023-11-07"},{"lineNumber":450,"author":{"gitId":"SelwynAng"},"content":"that index is wrong. For example, in the `enrol m/1 e/-1` input, we will show an error message to the user along ","lastModifiedDate":"2023-11-07"},{"lineNumber":451,"author":{"gitId":"SelwynAng"},"content":"the lines of \"The provided Event Index is not a non-zero unsigned integer.\"","lastModifiedDate":"2023-11-07"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":458,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":459,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":460,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":461,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"andrechuakj"},"content":"* has a need to manage a significant number of CCA members and events","lastModifiedDate":"2023-10-03"},{"lineNumber":472,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":475,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"andrechuakj"},"content":"**Value proposition**: one stop app to manage CCA members and events faster than a typical mouse/GUI driven app","lastModifiedDate":"2023-10-03"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"wr1159"},"content":"| Priority | As a …​       | I can …​                                       | So that …​                                                                          |","lastModifiedDate":"2023-10-01"},{"lineNumber":485,"author":{"gitId":"andrechuakj"},"content":"|----------|---------------|------------------------------------------------|-------------------------------------------------------------------------------------|","lastModifiedDate":"2023-10-28"},{"lineNumber":486,"author":{"gitId":"wr1159"},"content":"| `* * *`  | beginner user | create a new profile of a CCA member           | I can keep track of their information                                               |","lastModifiedDate":"2023-10-01"},{"lineNumber":487,"author":{"gitId":"wr1159"},"content":"| `* * *`  | power user    | delete the profile of a CCA member             | I can remove them from the system when needed                                       |","lastModifiedDate":"2023-10-01"},{"lineNumber":488,"author":{"gitId":"wr1159"},"content":"| `* * *`  | beginner user | list all members in my CCA                     | I can keep track of my CCA strength                                                 |","lastModifiedDate":"2023-10-01"},{"lineNumber":489,"author":{"gitId":"wr1159"},"content":"| `* * *`  | beginner user | add a new event hosted by the CCA              | I can keep track of upcoming activities                                             |","lastModifiedDate":"2023-10-01"},{"lineNumber":490,"author":{"gitId":"andrechuakj"},"content":"| `* * *`  | power user    | delete an event                                | I can remove it from the schedule                                                   |","lastModifiedDate":"2023-10-05"},{"lineNumber":491,"author":{"gitId":"wr1159"},"content":"| `* * *`  | power user    | view a list of all events hosted by the CCA    | I can see event history                                                             |","lastModifiedDate":"2023-10-01"},{"lineNumber":492,"author":{"gitId":"andrechuakj"},"content":"| `* * *`  | beginner user | add a member to an event                       | I can track which members are participating in the event                            |","lastModifiedDate":"2023-10-05"},{"lineNumber":493,"author":{"gitId":"ph-nathan"},"content":"| `* * *`  | beginner user | remove a member from an event                  | I can amend adding the wrong member to an event                                     |","lastModifiedDate":"2023-10-27"},{"lineNumber":494,"author":{"gitId":"andrechuakj"},"content":"| `* * *`  | beginner user | view the members who have enrolled in an event | I can estimate the number of members who will enrol in similar events in the future |","lastModifiedDate":"2023-10-28"},{"lineNumber":495,"author":{"gitId":"andrechuakj"},"content":"| `* * *`  | beginner user | view events of a member                        | I can check how involved that particular member is                                  |","lastModifiedDate":"2023-10-05"},{"lineNumber":496,"author":{"gitId":"wr1159"},"content":"| `* * *`  | beginner user | recall the previous commands                   | I can enter similar commands quickly                                                |","lastModifiedDate":"2023-10-27"},{"lineNumber":497,"author":{"gitId":"SelwynAng"},"content":"| `* * *`  | power user    | undo a command                                 | I can correct any wrong commands that I have entered previously                     |","lastModifiedDate":"2023-10-26"},{"lineNumber":498,"author":{"gitId":"SelwynAng"},"content":"| `* * *`  | power user    | redo a command                                 | I can correct any wrong undo commands that I have entered previously                |","lastModifiedDate":"2023-10-26"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"wr1159"},"content":"(For all use cases below, the **System** is the `CCACommander` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-10-01"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"andrechuakj"},"content":"\u003cins\u003e**Use case: UC01 - Create a member**\u003c/ins\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":507,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":508,"author":{"gitId":"andrechuakj"},"content":"**Guarantees: MSS -\u003e Entered member will be added.**","lastModifiedDate":"2023-10-03"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":510,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":512,"author":{"gitId":"andrechuakj"},"content":"1.  User enters command to create a member.","lastModifiedDate":"2023-10-03"},{"lineNumber":513,"author":{"gitId":"andrechuakj"},"content":"2.  CCACommander adds that member to the member list and displays the member added.","lastModifiedDate":"2023-10-03"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":515,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":517,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2023-10-03"},{"lineNumber":518,"author":{"gitId":"andrechuakj"},"content":"* 1a. User uses the command incorrectly.","lastModifiedDate":"2023-10-03"},{"lineNumber":519,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":520,"author":{"gitId":"andrechuakj"},"content":"    * 1a1. CCACommander shows an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":522,"author":{"gitId":"andrechuakj"},"content":"      Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":524,"author":{"gitId":"andrechuakj"},"content":"\u003cins\u003e**Use case: UC02 - Delete a member**\u003c/ins\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"SelwynAng"},"content":"**Guarantees: MSS -\u003e Specified member will be deleted.**","lastModifiedDate":"2023-10-02"},{"lineNumber":527,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":528,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"andrechuakj"},"content":"1. User requests to \u003cins\u003elist all members\u003c/ins\u003e (UC03).","lastModifiedDate":"2023-10-03"},{"lineNumber":531,"author":{"gitId":"andrechuakj"},"content":"2. CCACommander shows a list of all members.","lastModifiedDate":"2023-10-03"},{"lineNumber":532,"author":{"gitId":"andrechuakj"},"content":"3. User requests to delete a specific member in the list of all members.","lastModifiedDate":"2023-10-03"},{"lineNumber":533,"author":{"gitId":"andrechuakj"},"content":"4. CCACommander deletes the specific member.","lastModifiedDate":"2023-10-03"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"SelwynAng"},"content":"    * 3a1. CCACommander shows an error message and requests for a valid index from the user.","lastModifiedDate":"2023-10-02"},{"lineNumber":542,"author":{"gitId":"SelwynAng"},"content":"    * 3a2. User enters new index.","lastModifiedDate":"2023-10-02"},{"lineNumber":543,"author":{"gitId":"SelwynAng"},"content":"    * Steps 3a1-3a2 are repeated until index given by the user is correct.","lastModifiedDate":"2023-10-02"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"SelwynAng"},"content":"      Use case resumes at step 4.","lastModifiedDate":"2023-10-02"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"andrechuakj"},"content":"\u003cins\u003e**Use case : UC03 - List all members**\u003c/ins\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":548,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":549,"author":{"gitId":"SelwynAng"},"content":"**Guarantees: MSS -\u003e All members will be listed.**","lastModifiedDate":"2023-10-02"},{"lineNumber":550,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":551,"author":{"gitId":"SelwynAng"},"content":"**MSS**","lastModifiedDate":"2023-10-01"},{"lineNumber":552,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":553,"author":{"gitId":"andrechuakj"},"content":"1. User requests to list all members.","lastModifiedDate":"2023-10-03"},{"lineNumber":554,"author":{"gitId":"andrechuakj"},"content":"2. CCACommander lists all members in the CCA.","lastModifiedDate":"2023-10-03"},{"lineNumber":555,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":556,"author":{"gitId":"SelwynAng"},"content":"   Use case ends.","lastModifiedDate":"2023-10-01"},{"lineNumber":557,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":558,"author":{"gitId":"SelwynAng"},"content":"**Extensions**","lastModifiedDate":"2023-10-01"},{"lineNumber":559,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":560,"author":{"gitId":"SelwynAng"},"content":"* 1a. The list of all members is empty.","lastModifiedDate":"2023-10-01"},{"lineNumber":561,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":562,"author":{"gitId":"SelwynAng"},"content":"    * 1a1. CCACommander shows an empty member list.","lastModifiedDate":"2023-10-01"},{"lineNumber":563,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":564,"author":{"gitId":"SelwynAng"},"content":"      Use case ends.","lastModifiedDate":"2023-10-01"},{"lineNumber":565,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":566,"author":{"gitId":"andrechuakj"},"content":"\u003cins\u003e**Use case : UC04 - List all events**\u003c/ins\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":567,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":568,"author":{"gitId":"SelwynAng"},"content":"**Guarantees: MSS -\u003e All events will be listed.**","lastModifiedDate":"2023-10-02"},{"lineNumber":569,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":570,"author":{"gitId":"SelwynAng"},"content":"**MSS**","lastModifiedDate":"2023-10-01"},{"lineNumber":571,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":572,"author":{"gitId":"andrechuakj"},"content":"1. User requests to list all events.","lastModifiedDate":"2023-10-03"},{"lineNumber":573,"author":{"gitId":"andrechuakj"},"content":"2. CCACommander lists all events in the CCA.","lastModifiedDate":"2023-10-03"},{"lineNumber":574,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":575,"author":{"gitId":"SelwynAng"},"content":"   Use case ends.","lastModifiedDate":"2023-10-01"},{"lineNumber":576,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":577,"author":{"gitId":"SelwynAng"},"content":"**Extensions**","lastModifiedDate":"2023-10-01"},{"lineNumber":578,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":579,"author":{"gitId":"SelwynAng"},"content":"* 1a. The list of all events is empty.","lastModifiedDate":"2023-10-01"},{"lineNumber":580,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":581,"author":{"gitId":"SelwynAng"},"content":"    * 1a1. CCACommander shows an empty event list.","lastModifiedDate":"2023-10-01"},{"lineNumber":582,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":583,"author":{"gitId":"SelwynAng"},"content":"      Use case ends.","lastModifiedDate":"2023-10-01"},{"lineNumber":584,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":585,"author":{"gitId":"andrechuakj"},"content":"\u003cins\u003e**Use case: UC05 - View members of event**\u003c/ins\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":586,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":587,"author":{"gitId":"dylkaw"},"content":"**Guarantees: MSS -\u003e All members of the specified event will be listed.**","lastModifiedDate":"2023-10-02"},{"lineNumber":588,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":589,"author":{"gitId":"dylkaw"},"content":"**MSS**","lastModifiedDate":"2023-10-02"},{"lineNumber":590,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":591,"author":{"gitId":"andrechuakj"},"content":"1. User requests to \u003cins\u003elist all events\u003c/ins\u003e (UC04).","lastModifiedDate":"2023-10-03"},{"lineNumber":592,"author":{"gitId":"andrechuakj"},"content":"2. CCACommander shows a list of all events.","lastModifiedDate":"2023-10-03"},{"lineNumber":593,"author":{"gitId":"andrechuakj"},"content":"3. User requests to view a specific event in the list of all events.","lastModifiedDate":"2023-10-03"},{"lineNumber":594,"author":{"gitId":"andrechuakj"},"content":"4. CCACommander displays all members of the specified event.","lastModifiedDate":"2023-10-03"},{"lineNumber":595,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":596,"author":{"gitId":"dylkaw"},"content":"   Use case ends.","lastModifiedDate":"2023-10-02"},{"lineNumber":597,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":598,"author":{"gitId":"dylkaw"},"content":"**Extensions**","lastModifiedDate":"2023-10-02"},{"lineNumber":599,"author":{"gitId":"wr1159"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-10-02"},{"lineNumber":600,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":601,"author":{"gitId":"wr1159"},"content":"    * 3a1. CCACommander shows an error message.","lastModifiedDate":"2023-10-02"},{"lineNumber":602,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":603,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-02"},{"lineNumber":604,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":605,"author":{"gitId":"andrechuakj"},"content":"\u003cins\u003e**Use case: UC06 - View events of member**\u003c/ins\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":606,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":607,"author":{"gitId":"dylkaw"},"content":"**Guarantees: MSS -\u003e All events of the specified member will be listed.**","lastModifiedDate":"2023-10-02"},{"lineNumber":608,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":609,"author":{"gitId":"dylkaw"},"content":"**MSS**","lastModifiedDate":"2023-10-02"},{"lineNumber":610,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":611,"author":{"gitId":"andrechuakj"},"content":"1. User requests to \u003cins\u003elist all members\u003c/ins\u003e (UC03).","lastModifiedDate":"2023-10-03"},{"lineNumber":612,"author":{"gitId":"andrechuakj"},"content":"2. CCACommander shows a list of all members.","lastModifiedDate":"2023-10-03"},{"lineNumber":613,"author":{"gitId":"andrechuakj"},"content":"3. User requests to view a specific member in the list of all members.","lastModifiedDate":"2023-10-03"},{"lineNumber":614,"author":{"gitId":"andrechuakj"},"content":"4. CCACommander displays all events of the specified member.","lastModifiedDate":"2023-10-03"},{"lineNumber":615,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":616,"author":{"gitId":"dylkaw"},"content":"   Use case ends.","lastModifiedDate":"2023-10-02"},{"lineNumber":617,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":618,"author":{"gitId":"dylkaw"},"content":"**Extensions**","lastModifiedDate":"2023-10-02"},{"lineNumber":619,"author":{"gitId":"wr1159"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-10-02"},{"lineNumber":620,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":621,"author":{"gitId":"wr1159"},"content":"    * 3a1. CCACommander shows an error message.","lastModifiedDate":"2023-10-02"},{"lineNumber":622,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":623,"author":{"gitId":"wr1159"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-02"},{"lineNumber":624,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":625,"author":{"gitId":"andrechuakj"},"content":"\u003cins\u003e**Use case: UC07 - Create an event**\u003c/ins\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":626,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":627,"author":{"gitId":"wr1159"},"content":"**Guarantees: MSS -\u003e Entered event will be added.**","lastModifiedDate":"2023-10-02"},{"lineNumber":628,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":629,"author":{"gitId":"wr1159"},"content":"**MSS**","lastModifiedDate":"2023-10-02"},{"lineNumber":630,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":631,"author":{"gitId":"andrechuakj"},"content":"1.  User requests to add an event to the list.","lastModifiedDate":"2023-10-03"},{"lineNumber":632,"author":{"gitId":"andrechuakj"},"content":"2.  CCACommander adds that event to the event list and displays the event added.","lastModifiedDate":"2023-10-03"},{"lineNumber":633,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":634,"author":{"gitId":"andrechuakj"},"content":"    Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":635,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":636,"author":{"gitId":"ph-nathan"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":637,"author":{"gitId":"andrechuakj"},"content":"* 1a. User uses the command incorrectly.","lastModifiedDate":"2023-10-03"},{"lineNumber":638,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":639,"author":{"gitId":"andrechuakj"},"content":"    * 1a1. CCACommander shows an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":640,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":641,"author":{"gitId":"wr1159"},"content":"      Use case ends.","lastModifiedDate":"2023-10-01"},{"lineNumber":642,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":643,"author":{"gitId":"andrechuakj"},"content":"\u003cins\u003e**Use case: UC08 - Delete an event**\u003c/ins\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":644,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":645,"author":{"gitId":"wr1159"},"content":"**Guarantees: MSS -\u003e Specified event will be deleted.**","lastModifiedDate":"2023-10-01"},{"lineNumber":646,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":647,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":648,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":649,"author":{"gitId":"andrechuakj"},"content":"1.  User \u003cins\u003elists all events\u003c/ins\u003e (UC04).","lastModifiedDate":"2023-10-03"},{"lineNumber":650,"author":{"gitId":"andrechuakj"},"content":"2.  CCACommander shows a list of all events.","lastModifiedDate":"2023-10-03"},{"lineNumber":651,"author":{"gitId":"andrechuakj"},"content":"3.  User requests to delete a specific event in the list of all events.","lastModifiedDate":"2023-10-03"},{"lineNumber":652,"author":{"gitId":"andrechuakj"},"content":"4.  CCACommander deletes the specific event.","lastModifiedDate":"2023-10-03"},{"lineNumber":653,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":654,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":655,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":656,"author":{"gitId":"ph-nathan"},"content":"\u003cins\u003e**Use case: UC09 - Enrol member to an event**\u003c/ins\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":657,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":658,"author":{"gitId":"ph-nathan"},"content":"**Guarantees: MSS -\u003e Specified member will be enrolled to the event.**","lastModifiedDate":"2023-10-27"},{"lineNumber":659,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":660,"author":{"gitId":"ph-nathan"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":661,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":662,"author":{"gitId":"andrechuakj"},"content":"1. User \u003cins\u003elists all members\u003c/ins\u003e (UC03).","lastModifiedDate":"2023-10-05"},{"lineNumber":663,"author":{"gitId":"andrechuakj"},"content":"2. CCACommander shows a list of all members.","lastModifiedDate":"2023-10-05"},{"lineNumber":664,"author":{"gitId":"andrechuakj"},"content":"3. User \u003cins\u003elists all events\u003c/ins\u003e (UC04).","lastModifiedDate":"2023-10-05"},{"lineNumber":665,"author":{"gitId":"andrechuakj"},"content":"4. CCACommander shows a list of all events.","lastModifiedDate":"2023-10-05"},{"lineNumber":666,"author":{"gitId":"ph-nathan"},"content":"5. User requests to enrol a specific member in the list of all members to a specific event in the list of all events.","lastModifiedDate":"2023-10-27"},{"lineNumber":667,"author":{"gitId":"ph-nathan"},"content":"6. CCACommander enrols the specified member from the specified event.","lastModifiedDate":"2023-10-27"},{"lineNumber":668,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":669,"author":{"gitId":"andrechuakj"},"content":"    Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":670,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":671,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":672,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":673,"author":{"gitId":"ph-nathan"},"content":"* 5a. The given index is invalid.","lastModifiedDate":"2023-10-04"},{"lineNumber":674,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":675,"author":{"gitId":"ph-nathan"},"content":"    * 5a1. CCACommander shows an error message and requests for a valid index from the user.","lastModifiedDate":"2023-10-04"},{"lineNumber":676,"author":{"gitId":"ph-nathan"},"content":"    * 5a2. User enters new index.","lastModifiedDate":"2023-10-04"},{"lineNumber":677,"author":{"gitId":"ph-nathan"},"content":"    * Steps 5a1-5a2 are repeated until index given by the user is correct.","lastModifiedDate":"2023-10-04"},{"lineNumber":678,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":679,"author":{"gitId":"ph-nathan"},"content":"      Use case resumes at step 6.","lastModifiedDate":"2023-10-04"},{"lineNumber":680,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":681,"author":{"gitId":"ph-nathan"},"content":"* 5b. The specified member is already added to the event.","lastModifiedDate":"2023-10-04"},{"lineNumber":682,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":683,"author":{"gitId":"ph-nathan"},"content":"    * 5b1. CCACommander shows an error message saying member is already in event.","lastModifiedDate":"2023-10-04"},{"lineNumber":684,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":685,"author":{"gitId":"ph-nathan"},"content":"      Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":686,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":687,"author":{"gitId":"ph-nathan"},"content":"\u003cins\u003e**Use case: UC10 - Unenrol member from an event**\u003c/ins\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":688,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":689,"author":{"gitId":"ph-nathan"},"content":"**Guarantees: MSS -\u003e Specified member will be unenrolled from the event.**","lastModifiedDate":"2023-10-27"},{"lineNumber":690,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":691,"author":{"gitId":"ph-nathan"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":692,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":693,"author":{"gitId":"andrechuakj"},"content":"1. User \u003cins\u003elists all members\u003c/ins\u003e (UC03).","lastModifiedDate":"2023-10-05"},{"lineNumber":694,"author":{"gitId":"andrechuakj"},"content":"2. CCACommander shows a list of all members.","lastModifiedDate":"2023-10-05"},{"lineNumber":695,"author":{"gitId":"andrechuakj"},"content":"3. User \u003cins\u003elists all events\u003c/ins\u003e (UC04).","lastModifiedDate":"2023-10-05"},{"lineNumber":696,"author":{"gitId":"andrechuakj"},"content":"4. CCACommander shows a list of all events.","lastModifiedDate":"2023-10-05"},{"lineNumber":697,"author":{"gitId":"ph-nathan"},"content":"5. User requests to unenrol a specific member in the list of all members to a specific event in the list of all events.","lastModifiedDate":"2023-10-27"},{"lineNumber":698,"author":{"gitId":"ph-nathan"},"content":"6. CCACommander unenrols the specified member to the specified event.","lastModifiedDate":"2023-10-27"},{"lineNumber":699,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":700,"author":{"gitId":"ph-nathan"},"content":"    Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":701,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":702,"author":{"gitId":"ph-nathan"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":703,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":704,"author":{"gitId":"ph-nathan"},"content":"* 5a. The given index is invalid.","lastModifiedDate":"2023-10-04"},{"lineNumber":705,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":706,"author":{"gitId":"ph-nathan"},"content":"    * 5a1. CCACommander shows an error message and requests for a valid index from the user.","lastModifiedDate":"2023-10-04"},{"lineNumber":707,"author":{"gitId":"ph-nathan"},"content":"    * 5a2. User enters new index.","lastModifiedDate":"2023-10-04"},{"lineNumber":708,"author":{"gitId":"ph-nathan"},"content":"    * Steps 5a1-5a2 are repeated until index given by the user is correct.","lastModifiedDate":"2023-10-04"},{"lineNumber":709,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":710,"author":{"gitId":"ph-nathan"},"content":"      Use case resumes at step 6.","lastModifiedDate":"2023-10-04"},{"lineNumber":711,"author":{"gitId":"ph-nathan"},"content":"* 5b. The specified member is not in the event.","lastModifiedDate":"2023-10-04"},{"lineNumber":712,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":713,"author":{"gitId":"ph-nathan"},"content":"    * 5b1. CCACommander shows an error message saying member is not in event.","lastModifiedDate":"2023-10-04"},{"lineNumber":714,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":715,"author":{"gitId":"ph-nathan"},"content":"      Use case ends.","lastModifiedDate":"2023-10-04"},{"lineNumber":716,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":717,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":718,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":719,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":720,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":721,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":722,"author":{"gitId":"dylkaw"},"content":"2.  Should be able to hold up to 1000 members without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-10-02"},{"lineNumber":723,"author":{"gitId":"dylkaw"},"content":"3.  Should be able to hold up to 1000 events without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-10-02"},{"lineNumber":724,"author":{"gitId":"wr1159"},"content":"4.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2023-10-02"},{"lineNumber":725,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":726,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":727,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":728,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":729,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":730,"author":{"gitId":"ph-nathan"},"content":"* **CCA**: Co-Curricular Activities","lastModifiedDate":"2023-10-04"},{"lineNumber":731,"author":{"gitId":"ph-nathan"},"content":"* **CLI**: Command Line Interface","lastModifiedDate":"2023-10-04"},{"lineNumber":732,"author":{"gitId":"ph-nathan"},"content":"* **Data archiving**: A feature related to data storage and archiving","lastModifiedDate":"2023-10-04"},{"lineNumber":733,"author":{"gitId":"ph-nathan"},"content":"* **Event**: An activity entity of the application","lastModifiedDate":"2023-10-04"},{"lineNumber":734,"author":{"gitId":"ph-nathan"},"content":"* **Extensions**: Variations or deviations from the main success scenario in a use case","lastModifiedDate":"2023-10-04"},{"lineNumber":735,"author":{"gitId":"ph-nathan"},"content":"* **GUI**: Graphical User Interface","lastModifiedDate":"2023-10-04"},{"lineNumber":736,"author":{"gitId":"ph-nathan"},"content":"* **Jar file**: A Java Archive file used to distribute and run Java applications","lastModifiedDate":"2023-10-04"},{"lineNumber":737,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":738,"author":{"gitId":"ph-nathan"},"content":"* **Member**: An individual entity of the application","lastModifiedDate":"2023-10-04"},{"lineNumber":739,"author":{"gitId":"ph-nathan"},"content":"* **MSS**: Main Success Scenario","lastModifiedDate":"2023-10-04"},{"lineNumber":740,"author":{"gitId":"ph-nathan"},"content":"* **Non-Functional Requirements**: Constraints under which system is developed and operated","lastModifiedDate":"2023-10-04"},{"lineNumber":741,"author":{"gitId":"ph-nathan"},"content":"* **PlantUML**: The tool or language used for creating diagrams in the documentation","lastModifiedDate":"2023-10-05"},{"lineNumber":742,"author":{"gitId":"ph-nathan"},"content":"* **Sequence Diagram**: A type of diagram used to visualize the sequence of interactions between components or objects","lastModifiedDate":"2023-10-04"},{"lineNumber":743,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":744,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":745,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":746,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":747,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":748,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":749,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":750,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":751,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":752,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":753,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":754,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":755,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":756,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":757,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":758,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":759,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":760,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":761,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":762,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":763,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":764,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":765,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":766,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":767,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":768,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":769,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":770,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":771,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":772,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":773,"author":{"gitId":"ph-nathan"},"content":"### Deleting a member","lastModifiedDate":"2023-10-27"},{"lineNumber":774,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":775,"author":{"gitId":"ph-nathan"},"content":"1. Deleting a member while all members are being shown","lastModifiedDate":"2023-10-27"},{"lineNumber":776,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":777,"author":{"gitId":"ph-nathan"},"content":"   1. Prerequisites: List all members using the `list` command. Multiple members in the list.","lastModifiedDate":"2023-10-27"},{"lineNumber":778,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":779,"author":{"gitId":"ph-nathan"},"content":"   1. Test case: `deleteMember 1`\u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":780,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":781,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":782,"author":{"gitId":"ph-nathan"},"content":"   1. Test case: `deleteMember 0`\u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":783,"author":{"gitId":"ph-nathan"},"content":"      Expected: No member is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2023-10-27"},{"lineNumber":784,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":785,"author":{"gitId":"ph-nathan"},"content":"   1. Other incorrect deleteMember commands to try: `deleteMember`, `deleteMember x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":786,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":787,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":788,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":789,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":790,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":791,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":792,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":793,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":794,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":795,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":796,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"wr1159":97,"andrechuakj":109,"dylkaw":69,"SelwynAng":118,"ph-nathan":87,"-":316}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"andrechuakj"},"content":"   1. Run the `seedu.ccacommander.Main` and try a few commands.","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"andrechuakj"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [CCACommander’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"andrechuakj":2,"-":53}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"andrechuakj"},"content":"   e.g. `seedu.ccacommander.commons.StringUtilTest`","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"andrechuakj"},"content":"   e.g. `seedu.ccacommander.storage.StorageManagerTest`","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"andrechuakj"},"content":"   e.g. `seedu.ccacommander.logic.LogicManagerTest`","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"andrechuakj":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"## CCACommander Ultra Promax Xtra 9000PLUS - User Guide","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"CCACommander Ultra Promax Xtra 9000PLUS is the one-stop app for CCA Heads to manage CCA members and events, optimised for CCA Heads who prefer to use command line interface.","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"1. Download the latest `ccacommander.jar` from [here](https://github.com/AY2324S1-CS2103T-F11-1/tp/releases).","lastModifiedDate":"2023-10-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your CCACommander application.","lastModifiedDate":"2023-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar ccacommander.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"andrechuakj"},"content":"   * `list` : Lists all members and events.","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"SelwynAng"},"content":"   * `createMember n/CHU WEI RONG g/Male p/98765432 e/chuweirongrocks@gmail.com a/19 Kent Ridge Crescent, Singapore 119278` : Creates a member named `CHU WEI RONG` in CCACommander.","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"SelwynAng"},"content":"   * `deleteMember 3` : Deletes the 3rd member shown in the current list.","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"SelwynAng"},"content":"  e.g. in `createMember n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"SelwynAng"},"content":"* Parameters can be in any given order.\u003cbr\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"andrechuakj"},"content":"### Clear all Members and Events: `clear`","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"andrechuakj"},"content":"Clears all Member and Event entries from CCACommander.","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"andrechuakj"},"content":"Format: `clear`","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"SelwynAng"},"content":"### Create a Member: `createMember`","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"SelwynAng"},"content":"Creates a new member with accompanying personal details (name, gender, phone number, email address, home address, tag).","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":70,"author":{"gitId":"andrechuakj"},"content":"Format: `createMember n/MEMBER_NAME g/GENDER [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]...`","lastModifiedDate":"2023-11-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":72,"author":{"gitId":"andrechuakj"},"content":"* Acceptable values for `GENDER`: `Male`, `Female`, `Others`.","lastModifiedDate":"2023-10-05"},{"lineNumber":73,"author":{"gitId":"andrechuakj"},"content":"* Acceptable values for `EMAIL`: A string with an email extension (e.g. `@gmail.com`).","lastModifiedDate":"2023-10-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":75,"author":{"gitId":"andrechuakj"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":76,"author":{"gitId":"SelwynAng"},"content":"* `createMember n/CHU WEI RONG g/Male p/98765432 e/chuweirongrocks@gmail.com a/19 Kent Ridge Crescent, Singapore 119278 t/Leader` creates a member `CHU WEI RONG` in CCACommander.","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":78,"author":{"gitId":"SelwynAng"},"content":"### Delete a Member : `deleteMember`","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":80,"author":{"gitId":"SelwynAng"},"content":"Deletes the member at the specified index.","lastModifiedDate":"2023-10-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":82,"author":{"gitId":"SelwynAng"},"content":"Format: `deleteMember MEMBER_INDEX`","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":84,"author":{"gitId":"SelwynAng"},"content":"* Deletes the member at the specified `MEMBER_INDEX`.","lastModifiedDate":"2023-10-01"},{"lineNumber":85,"author":{"gitId":"andrechuakj"},"content":"* The index refers to the index number shown in the **currently displayed** member list.","lastModifiedDate":"2023-11-07"},{"lineNumber":86,"author":{"gitId":"SelwynAng"},"content":"* The index **must be a positive integer** that is within the range of the length of the member list.","lastModifiedDate":"2023-10-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-01"},{"lineNumber":89,"author":{"gitId":"SelwynAng"},"content":"* `deleteMember 1 ` deletes the 1st member in the member list.","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"SelwynAng"},"content":"* `deleteMember 10 ` deletes the 10th member in the member list.","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":92,"author":{"gitId":"ph-nathan"},"content":"### Edit a Member: `editMember`","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"ph-nathan"},"content":"Edits the member at the specified index with the specified fields.","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"andrechuakj"},"content":"Format: `editMember MEMBER_INDEX [n/MEMBER_NAME] [g/GENDER] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]...`","lastModifiedDate":"2023-11-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"andrechuakj"},"content":"* The index refers to the index number shown in the **currently displayed** member list.","lastModifiedDate":"2023-11-07"},{"lineNumber":98,"author":{"gitId":"ph-nathan"},"content":"* The index **must be a positive integer** that is within the range of the length of the member list.","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"ph-nathan"},"content":"* At least one field to edit must be provided.","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"ph-nathan"},"content":"* Acceptable values for `GENDER`: `Male`, `Female`, `Others`.","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"ph-nathan"},"content":"* Acceptable values for `EMAIL`: A string with an email extension (e.g. `@gmail.com`).","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"ph-nathan"},"content":"Examples:","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"SelwynAng"},"content":"* `editMember 1 a/RH t/Musician` edits the address and the tag fields of the 1st member in the member list.","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"SelwynAng"},"content":"### Create an Event : `createEvent`","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":108,"author":{"gitId":"SelwynAng"},"content":"Creates a new event with accompanying details (name, location, date, tag).","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":110,"author":{"gitId":"andrechuakj"},"content":"Format: `createEvent n/EVENT_NAME l/LOCATION d/DATE [t/TAG]...`","lastModifiedDate":"2023-11-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":112,"author":{"gitId":"SelwynAng"},"content":"* Acceptable values for `DATE`: Dates in the format of `YYYY-MM-DD`.","lastModifiedDate":"2023-11-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-01"},{"lineNumber":115,"author":{"gitId":"andrechuakj"},"content":"* `createEvent n/Party l/Raffles Hall d/2023-09-16` creates an event `Party` in CCACommander.","lastModifiedDate":"2023-11-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":117,"author":{"gitId":"SelwynAng"},"content":"### Delete an Event: `deleteEvent`","lastModifiedDate":"2023-10-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":119,"author":{"gitId":"wr1159"},"content":"Deletes the event at the specified index.","lastModifiedDate":"2023-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":121,"author":{"gitId":"SelwynAng"},"content":"Format: `deleteEvent EVENT_INDEX`","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":123,"author":{"gitId":"wr1159"},"content":"* Deletes the event at the specified `EVENT_INDEX`.","lastModifiedDate":"2023-10-01"},{"lineNumber":124,"author":{"gitId":"andrechuakj"},"content":"* The index refers to the index number shown in the **currently displayed** event list.","lastModifiedDate":"2023-11-07"},{"lineNumber":125,"author":{"gitId":"wr1159"},"content":"* The index **must be a positive integer** that is within the range of the length of the event list.","lastModifiedDate":"2023-10-01"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":127,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-01"},{"lineNumber":128,"author":{"gitId":"SelwynAng"},"content":"* `deleteEvent 1` deletes the 1st event in the event list.","lastModifiedDate":"2023-10-25"},{"lineNumber":129,"author":{"gitId":"SelwynAng"},"content":"* `deleteEvent 10` deletes the 10th event in the event list.","lastModifiedDate":"2023-10-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":131,"author":{"gitId":"wr1159"},"content":"### Edits an Event : `editEvent`","lastModifiedDate":"2023-10-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":133,"author":{"gitId":"wr1159"},"content":"Edits the event at the specified index with the specified attributes.","lastModifiedDate":"2023-10-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":135,"author":{"gitId":"andrechuakj"},"content":"Format: `editEvent EVENT_INDEX [n/EVENT_NAME] [l/LOCATION] [d/DATE] [t/TAG]...`","lastModifiedDate":"2023-11-07"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":137,"author":{"gitId":"andrechuakj"},"content":"* The index refers to the index number shown in the **currently displayed** event list.","lastModifiedDate":"2023-11-07"},{"lineNumber":138,"author":{"gitId":"wr1159"},"content":"* The index **must be a positive integer** that is within the range of the length of the member list.","lastModifiedDate":"2023-10-27"},{"lineNumber":139,"author":{"gitId":"wr1159"},"content":"* At least one field to edit must be provided.","lastModifiedDate":"2023-10-27"},{"lineNumber":140,"author":{"gitId":"SelwynAng"},"content":"* `EVENT_NAME` **must only contain** Alphanumeric Characters and spaces, and it should not be blank","lastModifiedDate":"2023-11-02"},{"lineNumber":141,"author":{"gitId":"SelwynAng"},"content":"* `LOCATION` **must not** be blank and can take in any values.","lastModifiedDate":"2023-11-02"},{"lineNumber":142,"author":{"gitId":"SelwynAng"},"content":"* `DATE` **must be a valid date** in the format of **YYYY-MM-DD**.","lastModifiedDate":"2023-11-02"},{"lineNumber":143,"author":{"gitId":"SelwynAng"},"content":"* `TAG` **must only contain** Alphanumeric Characters with no space in between.","lastModifiedDate":"2023-11-02"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-27"},{"lineNumber":146,"author":{"gitId":"wr1159"},"content":"* `editEvent 5 n/Halloween Surprise Party l/UTR d/2023-10-31 t/sem1` edits the 5th event in the event list to change the name to `Halloween","lastModifiedDate":"2023-10-27"},{"lineNumber":147,"author":{"gitId":"wr1159"},"content":"Surprise Party`, the location to `UTR`, the date to `2023-10-31` and the tag to `sem1`.","lastModifiedDate":"2023-10-27"},{"lineNumber":148,"author":{"gitId":"wr1159"},"content":"* `editEvent 3 l/UCC Theater` edits the 3rd event in the event list to change the location to `UCC Theater`.","lastModifiedDate":"2023-10-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":150,"author":{"gitId":"SelwynAng"},"content":"### Enrol a Member to an Event: `enrol`","lastModifiedDate":"2023-11-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":152,"author":{"gitId":"SelwynAng"},"content":"Enrols a member to an event.","lastModifiedDate":"2023-11-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":154,"author":{"gitId":"SelwynAng"},"content":"Format: `enrol m/MEMBER_INDEX e/EVENT_INDEX [h/NUMBER_OF_HOURS] [r/REMARK]`","lastModifiedDate":"2023-10-25"},{"lineNumber":155,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":156,"author":{"gitId":"SelwynAng"},"content":"* Enrols the member at the specified `MEMBER_INDEX` to the event at the specified `EVENT_INDEX` with `NUMBER_OF_HOURS` specifying the number of hours that the member contributed and `REMARK` stating extra remarks about the member and event.","lastModifiedDate":"2023-11-02"},{"lineNumber":157,"author":{"gitId":"andrechuakj"},"content":"* The `MEMBER_INDEX`/`EVENT_INDEX` refers to the index number shown in the **currently displayed** member/event list.","lastModifiedDate":"2023-11-07"},{"lineNumber":158,"author":{"gitId":"ph-nathan"},"content":"* The `MEMBER_INDEX`/`EVENT_INDEX` **must be a positive integer** that is within the range of the length of the member/event list.","lastModifiedDate":"2023-10-04"},{"lineNumber":159,"author":{"gitId":"SelwynAng"},"content":"* The `NUMBER_OF_HOURS` **must be a positive integer** and **must be less than or equal to 2147483647**.","lastModifiedDate":"2023-10-26"},{"lineNumber":160,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":161,"author":{"gitId":"ph-nathan"},"content":"Examples:","lastModifiedDate":"2023-10-04"},{"lineNumber":162,"author":{"gitId":"SelwynAng"},"content":"* `enrol m/1 e/5 h/3 r/did planning` enrols the 1st member in the member list to the 5th event in the event list, where the member had 3 hours of contributions to that event and has a remark stating that the member \"did planning\".","lastModifiedDate":"2023-11-02"},{"lineNumber":163,"author":{"gitId":"SelwynAng"},"content":"* `enrol m/5 e/1` enrols the 5th member in the member list to the 1st event in the event list.","lastModifiedDate":"2023-11-02"},{"lineNumber":164,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":165,"author":{"gitId":"SelwynAng"},"content":"### Unenrol a Member from an Event: `unenrol`","lastModifiedDate":"2023-11-02"},{"lineNumber":166,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":167,"author":{"gitId":"SelwynAng"},"content":"Unenrol a member from an event.","lastModifiedDate":"2023-11-02"},{"lineNumber":168,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":169,"author":{"gitId":"SelwynAng"},"content":"Format: `unenrol m/MEMBER_INDEX e/EVENT_INDEX`","lastModifiedDate":"2023-10-25"},{"lineNumber":170,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":171,"author":{"gitId":"SelwynAng"},"content":"* Unenrol the member at the specified `MEMBER_INDEX` from the event at the specified `EVENT_INDEX`.","lastModifiedDate":"2023-11-02"},{"lineNumber":172,"author":{"gitId":"andrechuakj"},"content":"* The member at `MEMBER_INDEX` must be a part of the event at `EVENT_INDEX`.","lastModifiedDate":"2023-10-05"},{"lineNumber":173,"author":{"gitId":"andrechuakj"},"content":"* The `MEMBER_INDEX`/`EVENT_INDEX` refers to the index number shown in the **currently displayed** member/event list.","lastModifiedDate":"2023-11-07"},{"lineNumber":174,"author":{"gitId":"ph-nathan"},"content":"* The `MEMBER_INDEX`/`EVENT_INDEX` **must be a positive integer** that is within the range of the length of the member/event list.","lastModifiedDate":"2023-10-05"},{"lineNumber":175,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":176,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":177,"author":{"gitId":"ph-nathan"},"content":"Examples:","lastModifiedDate":"2023-10-04"},{"lineNumber":178,"author":{"gitId":"SelwynAng"},"content":"* `unenrol m/1 e/5` unenrols the 1st member in the member list from the 5th event in the event list.","lastModifiedDate":"2023-11-02"},{"lineNumber":179,"author":{"gitId":"SelwynAng"},"content":"* `unenrol m/5 e/1` unenrols the 5th member in the member list from the 1st event in the event list.","lastModifiedDate":"2023-11-02"},{"lineNumber":180,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":181,"author":{"gitId":"andrechuakj"},"content":"### Edit an enrolment: `editEnrolment`","lastModifiedDate":"2023-10-28"},{"lineNumber":182,"author":{"gitId":"andrechuakj"},"content":"Edits the enrolment details of a specified member at a specified event with the specified attributes.","lastModifiedDate":"2023-10-28"},{"lineNumber":183,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":184,"author":{"gitId":"andrechuakj"},"content":"Format: `editEnrolment m/MEMBER_INDEX e/EVENT_INDEX [h/NUMBER_OF_HOURS] [r/REMARK]`","lastModifiedDate":"2023-10-28"},{"lineNumber":185,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":186,"author":{"gitId":"andrechuakj"},"content":"* Edits the specified `MEMBER_INDEX`\u0027s enrolment of the event at the specified `EVENT_INDEX` with `NUMBER_OF_HOURS` specifying the number of hours that the member contributed and `REMARK` stating extra remarks about the member and event.","lastModifiedDate":"2023-10-28"},{"lineNumber":187,"author":{"gitId":"andrechuakj"},"content":"* The `MEMBER_INDEX`/`EVENT_INDEX` refers to the index number shown in the **currently displayed** member/event list.","lastModifiedDate":"2023-11-07"},{"lineNumber":188,"author":{"gitId":"dylkaw"},"content":"* The `MEMBER_INDEX`/`EVENT_INDEX` **must be a positive integer** that is within the range of the length of the member/event list.","lastModifiedDate":"2023-10-26"},{"lineNumber":189,"author":{"gitId":"dylkaw"},"content":"* At least one field to edit must be provided.","lastModifiedDate":"2023-10-26"},{"lineNumber":190,"author":{"gitId":"dylkaw"},"content":"* The `NUMBER_OF_HOURS` **must be a positive integer** and **must be less than or equal to 2147483647**.","lastModifiedDate":"2023-10-26"},{"lineNumber":191,"author":{"gitId":"dylkaw"},"content":"* `REMARK` can take any value, but should not be blank.","lastModifiedDate":"2023-10-27"},{"lineNumber":192,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":193,"author":{"gitId":"dylkaw"},"content":"Examples:","lastModifiedDate":"2023-10-26"},{"lineNumber":194,"author":{"gitId":"andrechuakj"},"content":"* `editEnrolment m/1 e/1 h/0 r/Absent due to Covid` edits the enrolment of the 1st member in the member list for the 1st event of the event list to be `0` hours and have a remark `Absent due to Covid`.","lastModifiedDate":"2023-10-28"},{"lineNumber":195,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":196,"author":{"gitId":"dylkaw"},"content":"### List all Members and all Events : `list`","lastModifiedDate":"2023-10-26"},{"lineNumber":197,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":198,"author":{"gitId":"SelwynAng"},"content":"List all members and all events in the CCA in two separate columns.","lastModifiedDate":"2023-11-02"},{"lineNumber":199,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":200,"author":{"gitId":"dylkaw"},"content":"Format: `list`","lastModifiedDate":"2023-10-26"},{"lineNumber":201,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":202,"author":{"gitId":"dylkaw"},"content":"### View Events of Member : `viewMember`","lastModifiedDate":"2023-10-26"},{"lineNumber":203,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":204,"author":{"gitId":"dylkaw"},"content":"Lists all the events of a specified member index.","lastModifiedDate":"2023-10-26"},{"lineNumber":205,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":206,"author":{"gitId":"dylkaw"},"content":"Format: `viewMember MEMBER_INDEX`","lastModifiedDate":"2023-10-26"},{"lineNumber":207,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":208,"author":{"gitId":"dylkaw"},"content":"* Views the events of the member at the specified `MEMBER_INDEX`.","lastModifiedDate":"2023-10-26"},{"lineNumber":209,"author":{"gitId":"andrechuakj"},"content":"* The index refers to the index number shown in the **currently displayed** member list.","lastModifiedDate":"2023-11-07"},{"lineNumber":210,"author":{"gitId":"dylkaw"},"content":"* The index **must be a positive integer** that is within the range of the length of the member list.","lastModifiedDate":"2023-10-26"},{"lineNumber":211,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":212,"author":{"gitId":"dylkaw"},"content":"Examples:","lastModifiedDate":"2023-10-26"},{"lineNumber":213,"author":{"gitId":"dylkaw"},"content":"* `viewMember 1` displays events of the 1st member in the member list.","lastModifiedDate":"2023-10-26"},{"lineNumber":214,"author":{"gitId":"dylkaw"},"content":"* `viewMember 10` displays events of the 10th member in the member list.","lastModifiedDate":"2023-10-26"},{"lineNumber":215,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":216,"author":{"gitId":"dylkaw"},"content":"### View Members of Event : `viewEvent`","lastModifiedDate":"2023-10-26"},{"lineNumber":217,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":218,"author":{"gitId":"dylkaw"},"content":"Lists all the members of a specified event index.","lastModifiedDate":"2023-10-26"},{"lineNumber":219,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":220,"author":{"gitId":"dylkaw"},"content":"Format: `viewEvent EVENT_INDEX`","lastModifiedDate":"2023-10-26"},{"lineNumber":221,"author":{"gitId":"dylkaw"},"content":"* Views the members of the event at the specified `EVENT_INDEX`.","lastModifiedDate":"2023-10-26"},{"lineNumber":222,"author":{"gitId":"andrechuakj"},"content":"* The index refers to the index number shown in the **currently displayed** event list.","lastModifiedDate":"2023-11-07"},{"lineNumber":223,"author":{"gitId":"dylkaw"},"content":"* The index **must be a positive integer** that is within the range of the length of the event list.","lastModifiedDate":"2023-10-26"},{"lineNumber":224,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":225,"author":{"gitId":"dylkaw"},"content":"Examples:","lastModifiedDate":"2023-10-26"},{"lineNumber":226,"author":{"gitId":"dylkaw"},"content":"* `viewEvent 1` displays members of the 1st event in the event list.","lastModifiedDate":"2023-10-26"},{"lineNumber":227,"author":{"gitId":"dylkaw"},"content":"* `viewEvent 10` displays members of the 10th event in the event list.","lastModifiedDate":"2023-10-26"},{"lineNumber":228,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":229,"author":{"gitId":"SelwynAng"},"content":"### Find Member in member list : `findMember`","lastModifiedDate":"2023-10-26"},{"lineNumber":230,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":231,"author":{"gitId":"SelwynAng"},"content":"Finds and lists member(s) whose name(s) contain the provided `KEYWORD`.","lastModifiedDate":"2023-10-27"},{"lineNumber":232,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":233,"author":{"gitId":"SelwynAng"},"content":"Format: `findMember KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2023-10-27"},{"lineNumber":234,"author":{"gitId":"SelwynAng"},"content":"* Finds and lists member(s) whose name(s) contain the specified `KEYWORD`.","lastModifiedDate":"2023-10-27"},{"lineNumber":235,"author":{"gitId":"SelwynAng"},"content":"* More than 1 `KEYWORD` can be provided to find more members.","lastModifiedDate":"2023-10-27"},{"lineNumber":236,"author":{"gitId":"SelwynAng"},"content":"* The `KEYWORD` must match minimally one of the words in the name of the member to be found, where capitalisation does not matter.","lastModifiedDate":"2023-10-27"},{"lineNumber":237,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":238,"author":{"gitId":"SelwynAng"},"content":"Examples:","lastModifiedDate":"2023-11-02"},{"lineNumber":239,"author":{"gitId":"SelwynAng"},"content":"* `findMember alice` displays the member(s) whose name(s) contain \u0027alice\u0027","lastModifiedDate":"2023-10-27"},{"lineNumber":240,"author":{"gitId":"SelwynAng"},"content":"* `findMember alice bob charlie` displays the member(s) whose name(s) contain \u0027alice\u0027, \u0027bob\u0027 and/or \u0027charlie\u0027.","lastModifiedDate":"2023-10-27"},{"lineNumber":241,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":242,"author":{"gitId":"SelwynAng"},"content":"### Find Event in event list : `findEvent`","lastModifiedDate":"2023-10-26"},{"lineNumber":243,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":244,"author":{"gitId":"SelwynAng"},"content":"Finds and lists event(s) which name(s) contain the provided `KEYWORD`.","lastModifiedDate":"2023-10-27"},{"lineNumber":245,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":246,"author":{"gitId":"SelwynAng"},"content":"Format: `findEvent KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2023-10-27"},{"lineNumber":247,"author":{"gitId":"SelwynAng"},"content":"* Finds and lists event(s) which name(s) contain the specified `KEYWORD`.","lastModifiedDate":"2023-10-27"},{"lineNumber":248,"author":{"gitId":"SelwynAng"},"content":"* More than 1 `KEYWORD` can be provided to find more events.","lastModifiedDate":"2023-10-27"},{"lineNumber":249,"author":{"gitId":"SelwynAng"},"content":"* The `KEYWORD` must match minimally one of the words in the name of the event to be found, where capitalisation does not matter.","lastModifiedDate":"2023-10-27"},{"lineNumber":250,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":251,"author":{"gitId":"SelwynAng"},"content":"Examples:","lastModifiedDate":"2023-11-02"},{"lineNumber":252,"author":{"gitId":"SelwynAng"},"content":"* `findEvent party` displays the event(s) which name(s) contain \u0027party\u0027","lastModifiedDate":"2023-10-27"},{"lineNumber":253,"author":{"gitId":"SelwynAng"},"content":"* `findEvent party marathon gaming` displays the event(s) which name(s) contain \u0027party\u0027, \u0027marathon\u0027 and/or \u0027gaming\u0027.","lastModifiedDate":"2023-10-27"},{"lineNumber":254,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":255,"author":{"gitId":"SelwynAng"},"content":"### Undoing a command: `undo`","lastModifiedDate":"2023-10-25"},{"lineNumber":256,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":257,"author":{"gitId":"SelwynAng"},"content":"Undoes the previous command that the user has entered, which has changed the data within CCACommander.","lastModifiedDate":"2023-10-25"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":259,"author":{"gitId":"andrechuakj"},"content":"Format: `undo`","lastModifiedDate":"2023-11-07"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":261,"author":{"gitId":"andrechuakj"},"content":"List of commands that can be undone:","lastModifiedDate":"2023-11-07"},{"lineNumber":262,"author":{"gitId":"andrechuakj"},"content":"* `clear`","lastModifiedDate":"2023-11-07"},{"lineNumber":263,"author":{"gitId":"andrechuakj"},"content":"* `createMember`","lastModifiedDate":"2023-11-07"},{"lineNumber":264,"author":{"gitId":"andrechuakj"},"content":"* `deleteMember`","lastModifiedDate":"2023-11-07"},{"lineNumber":265,"author":{"gitId":"andrechuakj"},"content":"* `editMember`","lastModifiedDate":"2023-11-07"},{"lineNumber":266,"author":{"gitId":"andrechuakj"},"content":"* `createEvent`","lastModifiedDate":"2023-11-07"},{"lineNumber":267,"author":{"gitId":"andrechuakj"},"content":"* `deleteEvent`","lastModifiedDate":"2023-11-07"},{"lineNumber":268,"author":{"gitId":"andrechuakj"},"content":"* `editEvent`","lastModifiedDate":"2023-11-07"},{"lineNumber":269,"author":{"gitId":"andrechuakj"},"content":"* `enrol`","lastModifiedDate":"2023-11-07"},{"lineNumber":270,"author":{"gitId":"andrechuakj"},"content":"* `unenrol`","lastModifiedDate":"2023-11-07"},{"lineNumber":271,"author":{"gitId":"andrechuakj"},"content":"* `editEnrolment`","lastModifiedDate":"2023-11-07"},{"lineNumber":272,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":273,"author":{"gitId":"andrechuakj"},"content":"### Redoing a command: `redo`","lastModifiedDate":"2023-11-07"},{"lineNumber":274,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":275,"author":{"gitId":"SelwynAng"},"content":"Redoes a command that the user has undone previously.","lastModifiedDate":"2023-10-25"},{"lineNumber":276,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":277,"author":{"gitId":"SelwynAng"},"content":"Format: `redo`","lastModifiedDate":"2023-10-25"},{"lineNumber":278,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":279,"author":{"gitId":"SelwynAng"},"content":"### Help: `help`","lastModifiedDate":"2023-11-02"},{"lineNumber":280,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":281,"author":{"gitId":"SelwynAng"},"content":"Displays a pop-out window that shows a link to this User Guide.","lastModifiedDate":"2023-11-02"},{"lineNumber":282,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":283,"author":{"gitId":"SelwynAng"},"content":"Format: `help`","lastModifiedDate":"2023-11-02"},{"lineNumber":284,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":285,"author":{"gitId":"SelwynAng"},"content":"### Exit: `exit`","lastModifiedDate":"2023-11-02"},{"lineNumber":286,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":287,"author":{"gitId":"SelwynAng"},"content":"Closes CCACommander and its display window.","lastModifiedDate":"2023-11-03"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":289,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2023-11-02"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":291,"author":{"gitId":"wr1159"},"content":"### Recall previous commands","lastModifiedDate":"2023-11-02"},{"lineNumber":292,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":293,"author":{"gitId":"wr1159"},"content":"CCA Leaders can quickly recall previously entered commands for convenience. Example use cases include marking attendance for a group of members, editing slightly wrong details and more.","lastModifiedDate":"2023-11-02"},{"lineNumber":294,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":295,"author":{"gitId":"wr1159"},"content":"CCACommander stores almost all (see the info card below to see what commands are stored) commands entered by the user. Users can use the \u003ckbd\u003e↑\u003c/kbd\u003e to \u003ckbd\u003e↓\u003c/kbd\u003e key to navigate through the commands entered upon selecting the command box.","lastModifiedDate":"2023-11-02"},{"lineNumber":296,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":297,"author":{"gitId":"wr1159"},"content":"Example:","lastModifiedDate":"2023-11-02"},{"lineNumber":298,"author":{"gitId":"wr1159"},"content":"1. A CCA Leader has just marked attendance for the first member in the member list using the `editEnrolment m/1 e/1 r/Present` command.","lastModifiedDate":"2023-11-02"},{"lineNumber":299,"author":{"gitId":"wr1159"},"content":"2. The CCA Leader can then use \u003ckbd\u003e↑\u003c/kbd\u003e to get `editEnrolment m/1 e/1 r/Present` ","lastModifiedDate":"2023-11-02"},{"lineNumber":300,"author":{"gitId":"wr1159"},"content":"3. The CCA Leader can edit the member index to get `editEnrolment m/2 e/1 r/Present` to mark the second member as present.","lastModifiedDate":"2023-11-02"},{"lineNumber":301,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":302,"author":{"gitId":"wr1159"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e:information_source: CCACommander will not store 2 of the same commands if they were entered twice in a row. Likewise, \"commands\" containing exclusively of blank spaces will not be stored as well. ","lastModifiedDate":"2023-11-02"},{"lineNumber":303,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":304,"author":{"gitId":"wr1159"},"content":"Upon entering the \u003ckbd\u003e⌫ Backspace\u003c/kbd\u003e or the \u003ckbd\u003e↵ Enter\u003c/kbd\u003e key, users will have to re-navigate from the most recent command as it was treated as an edit or entry of command.","lastModifiedDate":"2023-11-02"},{"lineNumber":305,"author":{"gitId":"wr1159"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":306,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":307,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"andrechuakj"},"content":"CCACommander data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-10-05"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":313,"author":{"gitId":"andrechuakj"},"content":"CCACommander data are saved automatically as a JSON file `[JAR file location]/data/ccacommander.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-10-05"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":315,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":316,"author":{"gitId":"andrechuakj"},"content":"If your changes to the data file makes its format invalid, CCACommander will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.","lastModifiedDate":"2023-10-05"},{"lineNumber":317,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":319,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"andrechuakj"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous CCACommander home folder.","lastModifiedDate":"2023-10-05"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":332,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"andrechuakj"},"content":"**Clear all members and events** | `clear`","lastModifiedDate":"2023-10-27"},{"lineNumber":339,"author":{"gitId":"andrechuakj"},"content":"**Create a member** | `createMember n/MEMBER_NAME g/GENDER [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]...` \u003cbr\u003e e.g. `createMember n/CHU WEI RONG g/Male p/98765432 e/chuweirongrocks@gmail.com a/19 Kent Ridge Crescent, Singapore 119278 t/Leader`","lastModifiedDate":"2023-11-07"},{"lineNumber":340,"author":{"gitId":"SelwynAng"},"content":"**Delete a member** | `deleteMember MEMBER_INDEX` \u003cbr\u003e e.g.`deleteMember 1`","lastModifiedDate":"2023-10-25"},{"lineNumber":341,"author":{"gitId":"andrechuakj"},"content":"**Edit a member** | `editMember MEMBER_INDEX [n/MEMBER_NAME] [g/GENDER] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]...` \u003cbr\u003e e.g.`editMember 1 a/One North`","lastModifiedDate":"2023-11-07"},{"lineNumber":342,"author":{"gitId":"andrechuakj"},"content":"**Create an event** | `createEvent n/EVENT_NAME [l/LOCATION] [d/DATE] [t/TAG]...` \u003cbr\u003e e.g.`createEvent n/Party l/Raffles Hall d/2023-09-16 t/Fun`","lastModifiedDate":"2023-11-07"},{"lineNumber":343,"author":{"gitId":"SelwynAng"},"content":"**Delete an event** | `deleteEvent EVENT_INDEX` \u003cbr\u003e e.g.`deleteEvent 1`","lastModifiedDate":"2023-10-25"},{"lineNumber":344,"author":{"gitId":"andrechuakj"},"content":"**Edit an event** | `editEvent EVENT_INDEX [n/EVENT_NAME] [l/LOCATION] [d/DATE] [t/TAG]...` \u003cbr\u003e e.g. `editEvent 5 n/Halloween Surprise Party l/UTR d/2023-10-31 t/sem1`","lastModifiedDate":"2023-11-07"},{"lineNumber":345,"author":{"gitId":"SelwynAng"},"content":"**Add member to an event** | `enrol m/MEMBER_INDEX e/EVENT_INDEX [h/NUMBER_OF_HOURS] [r/REMARK]` \u003cbr\u003e e.g.`enrol m/1 e/5 h/3 r/did planning`","lastModifiedDate":"2023-10-25"},{"lineNumber":346,"author":{"gitId":"SelwynAng"},"content":"**Delete member from an event** | `unenrol m/MEMBER_INDEX e/EVENT_INDEX` \u003cbr\u003e e.g.`unenrol m/1 e/5`","lastModifiedDate":"2023-10-25"},{"lineNumber":347,"author":{"gitId":"andrechuakj"},"content":"**Edit an enrolment** | `editEnrolment m/MEMBER_INDEX e/EVENT_INDEX [h/NUMBER_OF_HOURS] [r/REMARK]` \u003cbr\u003e e.g. `editEnrolment m/1 e/1 h/0 r/Absent due to Covid`","lastModifiedDate":"2023-10-28"},{"lineNumber":348,"author":{"gitId":"dylkaw"},"content":"**List all members and all events** | `list`","lastModifiedDate":"2023-10-26"},{"lineNumber":349,"author":{"gitId":"dylkaw"},"content":"**View members of event** | `viewEvent EVENT_INDEX` \u003cbr\u003e e.g.`viewEvent 1`","lastModifiedDate":"2023-10-26"},{"lineNumber":350,"author":{"gitId":"dylkaw"},"content":"**View events of member** | `viewMember MEMBER_INDEX` \u003cbr\u003e e.g.`viewMember 1`","lastModifiedDate":"2023-10-26"},{"lineNumber":351,"author":{"gitId":"SelwynAng"},"content":"**Find member in list** | `findMember KEYWORD [MORE_KEYWORDS]` \u003cbr\u003e e.g.`findMember alice`","lastModifiedDate":"2023-10-27"},{"lineNumber":352,"author":{"gitId":"SelwynAng"},"content":"**Find event in list** | `findEvent KEYWORD [MORE_KEYWORDS]` \u003cbr\u003e e.g.`findEvent party`","lastModifiedDate":"2023-10-27"},{"lineNumber":353,"author":{"gitId":"SelwynAng"},"content":"**Redo** | `redo`","lastModifiedDate":"2023-10-25"},{"lineNumber":354,"author":{"gitId":"SelwynAng"},"content":"**Undo** | `undo`","lastModifiedDate":"2023-10-25"},{"lineNumber":355,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2023-11-02"},{"lineNumber":356,"author":{"gitId":"SelwynAng"},"content":"**Exit** | `exit`","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"wr1159":26,"andrechuakj":52,"SelwynAng":97,"dylkaw":42,"ph-nathan":21,"-":118}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"andrechuakj"},"content":"    content: \"CCACommander Ultra Promax Xtra 9000PLUS\";","lastModifiedDate":"2023-10-05"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"andrechuakj":1,"-":294}},{"path":"docs/assets/css/style.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"# Only the main Sass file needs front matter (the dashes are enough)","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"@import","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \"minima/skins/{{ site.minima.skin | default: \u0027classic\u0027 }}\",","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \"minima/initialize\";","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":".icon {","lastModifiedDate":"2020-08-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    height: 21px;","lastModifiedDate":"2020-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    width: 21px","lastModifiedDate":"2020-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-01"},{"lineNumber":13,"author":{"gitId":"wr1159"},"content":"kbd {","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"wr1159"},"content":"  border: 0.1em solid #AAA;","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"wr1159"},"content":"  border-radius:0.2em;","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"wr1159"},"content":"  box-shadow: 0.1em 0.2em 0.2em #DDD;","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"wr1159"},"content":"  background-color: #F9F9F9;","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"wr1159"},"content":"  background-image: linear-gradient(to bottom, #EEE, #F9F9F9, #EEE);","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"wr1159"},"content":"  padding: 0.1em 0.3em;","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"wr1159"},"content":"  font-family: inherit;","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"wr1159"},"content":"  font-size: 0.85em;","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"wr1159"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"wr1159":10,"-":12}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":"user -[USER_COLOR]\u003e ui : \"deleteMember 1\"","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"deleteMember 1\")","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteMember(p)","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"andrechuakj"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveCcaCommander(CCACommander)","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"andrechuakj":1,"ph-nathan":3,"-":35}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"CcaCommander *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"CcaCommander *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2023-01-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Person -up-\u003e \"*\" Tag","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"andrechuakj":2,"-":19}},{"path":"docs/diagrams/CommandHistoryActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wr1159"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"wr1159"},"content":"skin rose","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"wr1159"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"wr1159"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"wr1159"},"content":"start","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"wr1159"},"content":":User presses \u0027↓\u0027 or \u0027↑\u0027 while \\nthe command box is selected.;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"wr1159"},"content":"switch ()","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"wr1159"},"content":"case ( [↑])","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"wr1159"},"content":"    if() then ([has previous\\ncommand])","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"wr1159"},"content":"    :Set the previous command\\n in commandBox;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"wr1159"},"content":"    else ([else])","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"wr1159"},"content":"    endif","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"wr1159"},"content":"case ( [↓])","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"wr1159"},"content":"    if() then ([has next\\ncommand])","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"wr1159"},"content":"    :Set the next command\\n in commandBox;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"wr1159"},"content":"    else ([else])","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"wr1159"},"content":"    endif","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"wr1159"},"content":"case ( [↵ or ⌫])","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"wr1159"},"content":"    :resets currentCommandPointer;","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"wr1159"},"content":"case ([else])","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"wr1159"},"content":"endswitch","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"wr1159"},"content":"stop","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"wr1159"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"wr1159":25}},{"path":"docs/diagrams/CommandHistoryState0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wr1159"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"wr1159"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"wr1159"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"wr1159"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"wr1159"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"wr1159"},"content":"skinparam ClassFontColor\u003c\u003cHide\u003e\u003e #FFFFFF","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"wr1159"},"content":"skinparam ClassBorderColor\u003c\u003cHide\u003e\u003e #FFFFFF","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"wr1159"},"content":"skinparam ClassBackgroundColor\u003c\u003cHide\u003e\u003e #FFFFFF","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"wr1159"},"content":"title User enters the first command","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"wr1159"},"content":"package CommandHistory{","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"wr1159"},"content":"    class State1 as \"\u003cu\u003ecommand0:String\u003c/u\u003e\"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"wr1159"},"content":"    class State2 as \"\u003cu\u003ecommand1:String\u003c/u\u003e\" \u003c\u003cHide\u003e\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"wr1159"},"content":"    class State3 as \"\u003cu\u003ecommand2:String\u003c/u\u003e\" \u003c\u003cHide\u003e\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"wr1159"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"wr1159"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"wr1159"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"wr1159"},"content":"class Pointer as \"Current Command\" #FFFFFF","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"wr1159"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"wr1159"},"content":"@end","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"wr1159":22}},{"path":"docs/diagrams/CommandHistoryState1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wr1159"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"wr1159"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"wr1159"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"wr1159"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"wr1159"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"wr1159"},"content":"skinparam ClassFontColor\u003c\u003cHide\u003e\u003e #FFFFFF","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"wr1159"},"content":"skinparam ClassBorderColor\u003c\u003cHide\u003e\u003e #FFFFFF","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"wr1159"},"content":"skinparam ClassBackgroundColor\u003c\u003cHide\u003e\u003e #FFFFFF","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"wr1159"},"content":"title User gets the previous method","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"wr1159"},"content":"package \"After pressing ↑\" \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"wr1159"},"content":"\u0027    note \"The cached value\\nis returned\" as N1","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"wr1159"},"content":"\u0027    note \"The pointer was\\nset to the\\ndefault position\" as N2","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"wr1159"},"content":"    package CommandHistory as AFTER \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"wr1159"},"content":"        class State1 as \"\u003cu\u003ecommand0:String\u003c/u\u003e\"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"wr1159"},"content":"        class State2 as \"\u003cu\u003ecommand1:String\u003c/u\u003e\" \u003c\u003cHide\u003e\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"wr1159"},"content":"        class State3 as \"\u003cu\u003ecommand2:String\u003c/u\u003e\" \u003c\u003cHide\u003e\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"wr1159"},"content":"    class Pointer1 as \"Current Command\" #FFFFFF","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"wr1159"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"wr1159"},"content":"package \"After entering an edited version of command0\" \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"wr1159"},"content":"\u0027    note \"The cached value\\nis returned\" as N1","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"wr1159"},"content":"\u0027    note \"The pointer was\\nset to the\\ndefault position\" as N2","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"wr1159"},"content":"    package CommandHistory as AFTER \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"wr1159"},"content":"        class State4 as \"\u003cu\u003ecommand0:String\u003c/u\u003e\"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"wr1159"},"content":"        class State5 as \"\u003cu\u003ecommand1:String\u003c/u\u003e\"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"wr1159"},"content":"        class State6 as \"\u003cu\u003ecommand2:String\u003c/u\u003e\" \u003c\u003cHide\u003e\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"wr1159"},"content":"    class Pointer2 as \"Current Command\" #FFFFFF","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"wr1159"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"wr1159"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"wr1159"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"wr1159"},"content":"State4 -[hidden]right-\u003e State5","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"wr1159"},"content":"State5 -[hidden]right-\u003e State6","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"wr1159"},"content":"Pointer1 -up-\u003e State1","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"wr1159"},"content":"Pointer2 -up-\u003e State6","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"wr1159"},"content":"@end","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"wr1159":40}},{"path":"docs/diagrams/CommandHistoryState2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wr1159"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"wr1159"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"wr1159"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"wr1159"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"wr1159"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"wr1159"},"content":"skinparam ClassFontColor\u003c\u003cHide\u003e\u003e #FFFFFF","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"wr1159"},"content":"skinparam ClassBorderColor\u003c\u003cHide\u003e\u003e #FFFFFF","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"wr1159"},"content":"skinparam ClassBackgroundColor\u003c\u003cHide\u003e\u003e #FFFFFF","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"wr1159"},"content":"title User gets the next method","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"wr1159"},"content":"package \"User presses ↑ until the first command\" \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"wr1159"},"content":"    package CommandHistory as AFTER \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"wr1159"},"content":"        class State1 as \"\u003cu\u003ecommand0:String\u003c/u\u003e\"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"wr1159"},"content":"        class State2 as \"\u003cu\u003ecommand1:String\u003c/u\u003e\"","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"wr1159"},"content":"        class State3 as \"\u003cu\u003ecommand2:String\u003c/u\u003e\"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"wr1159"},"content":"    class Pointer1 as \"Current Command\" #FFFFFF","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"wr1159"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"wr1159"},"content":"package \"After pressing ↓\" \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"wr1159"},"content":"    package CommandHistory as AFTER \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"wr1159"},"content":"        class State4 as \"\u003cu\u003ecommand0:String\u003c/u\u003e\"","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"wr1159"},"content":"        class State5 as \"\u003cu\u003ecommand1:String\u003c/u\u003e\"","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"wr1159"},"content":"        class State6 as \"\u003cu\u003ecommand2:String\u003c/u\u003e\"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"wr1159"},"content":"    class Pointer2 as \"Current Command\" #FFFFFF","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"wr1159"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"wr1159"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"wr1159"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"wr1159"},"content":"State4 -[hidden]right-\u003e State5","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"wr1159"},"content":"State5 -[hidden]right-\u003e State6","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"wr1159"},"content":"Pointer1 -up-\u003e State1","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"wr1159"},"content":"Pointer2 -up-\u003e State5","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"wr1159"},"content":"@end","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"wr1159":36}},{"path":"docs/diagrams/CommandHistoryState3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wr1159"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"wr1159"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"wr1159"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"wr1159"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"wr1159"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"wr1159"},"content":"skinparam ClassFontColor\u003c\u003cHide\u003e\u003e #FFFFFF","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"wr1159"},"content":"skinparam ClassBorderColor\u003c\u003cHide\u003e\u003e #FFFFFF","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"wr1159"},"content":"skinparam ClassBackgroundColor\u003c\u003cHide\u003e\u003e #FFFFFF","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"wr1159"},"content":"title User enters the same command","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"wr1159"},"content":"package \"After pressing ↑\" \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"wr1159"},"content":"    package CommandHistory as Before{","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"wr1159"},"content":"        class State1 as \"\u003cu\u003ecommand0:String\u003c/u\u003e\"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"wr1159"},"content":"        class State2 as \"\u003cu\u003ecommand1:String\u003c/u\u003e\" \u003c\u003cHide\u003e\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"wr1159"},"content":"        class State3 as \"\u003cu\u003ecommand2:String\u003c/u\u003e\" \u003c\u003cHide\u003e\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"wr1159"},"content":"    class Pointer1 as \"Current Command\" #FFFFFF","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"wr1159"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"wr1159"},"content":"package \"After entering command0\"{","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"wr1159"},"content":"    note \"command0 is not\\n stored again\" as N2","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"wr1159"},"content":"    package CommandHistory as After{","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"wr1159"},"content":"        class State4 as \"\u003cu\u003ecommand0:String\u003c/u\u003e\"","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"wr1159"},"content":"        class State5 as \"\u003cu\u003ecommand1:String\u003c/u\u003e\" \u003c\u003cHide\u003e\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"wr1159"},"content":"        class State6 as \"\u003cu\u003ecommand2:String\u003c/u\u003e\" \u003c\u003cHide\u003e\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"wr1159"},"content":"    class Pointer2 as \"Current Command\" #FFFFFF","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"wr1159"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"wr1159"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"wr1159"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"wr1159"},"content":"State4 -[hidden]right-\u003e State5","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"wr1159"},"content":"State5 -[hidden]right-\u003e State6","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"wr1159"},"content":"Pointer1 -up-\u003e State1","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"wr1159"},"content":"Pointer2 -up-\u003e State5","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"wr1159"},"content":"N2 -up-\u003e After","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"wr1159"},"content":"@end","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"wr1159":38}},{"path":"docs/diagrams/CommitActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"skin rose","lastModifiedDate":"2023-07-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"start","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":":User executes command;","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"if () then ([command\\n commits\\n CcaCommander]\\n)","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    :Purge redundant states;","lastModifiedDate":"2020-12-12"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":"    :Save CcaCommander to","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"    ccaCommanderVersionList;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"else ([else])","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"endif","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"stop","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"andrechuakj":1,"SelwynAng":2,"-":15}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"participant \":CcaCommanderParser\" as CcaCommanderParser LOGIC_COLOR","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"participant \":DeleteMemberCommandParser\" as DeleteMemberCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"participant \"d:DeleteMemberCommand\" as DeleteMemberCommand LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":"[-\u003e LogicManager : execute(\"deleteMember 1\")","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"ph-nathan"},"content":"LogicManager -\u003e CcaCommanderParser : parseCommand(\"deleteMember 1\")","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"andrechuakj"},"content":"activate CcaCommanderParser","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"create DeleteMemberCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"ph-nathan"},"content":"CcaCommanderParser -\u003e DeleteMemberCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"ph-nathan"},"content":"activate DeleteMemberCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"ph-nathan"},"content":"DeleteMemberCommandParser --\u003e CcaCommanderParser","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"ph-nathan"},"content":"deactivate DeleteMemberCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"ph-nathan"},"content":"CcaCommanderParser -\u003e DeleteMemberCommandParser : parse(\"1\")","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"ph-nathan"},"content":"activate DeleteMemberCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"ph-nathan"},"content":"create DeleteMemberCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"ph-nathan"},"content":"DeleteMemberCommandParser -\u003e DeleteMemberCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"ph-nathan"},"content":"activate DeleteMemberCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"ph-nathan"},"content":"DeleteMemberCommand --\u003e DeleteMemberCommandParser : d","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"ph-nathan"},"content":"deactivate DeleteMemberCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"ph-nathan"},"content":"DeleteMemberCommandParser --\u003e CcaCommanderParser : d","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"ph-nathan"},"content":"deactivate DeleteMemberCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"ph-nathan"},"content":"DeleteMemberCommandParser -[hidden]-\u003e CcaCommanderParser","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"ph-nathan"},"content":"destroy DeleteMemberCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"andrechuakj"},"content":"CcaCommanderParser --\u003e LogicManager : d","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"andrechuakj"},"content":"deactivate CcaCommanderParser","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"ph-nathan"},"content":"LogicManager -\u003e DeleteMemberCommand : execute()","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"ph-nathan"},"content":"activate DeleteMemberCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"ph-nathan"},"content":"DeleteMemberCommand -\u003e Model : deleteMember(1)","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"ph-nathan"},"content":"Model --\u003e DeleteMemberCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"ph-nathan"},"content":"DeleteMemberCommand -\u003e CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"ph-nathan"},"content":"CommandResult --\u003e DeleteMemberCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"ph-nathan"},"content":"DeleteMemberCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"ph-nathan"},"content":"deactivate DeleteMemberCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"andrechuakj":4,"ph-nathan":28,"-":38}},{"path":"docs/diagrams/EnrolActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dylkaw"},"content":"@startuml","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"dylkaw"},"content":"!include style.puml","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"dylkaw"},"content":"start","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"dylkaw"},"content":":User enters an enrol command in","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"dylkaw"},"content":"the command box;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"dylkaw"},"content":":EnrolCommandParser parses the argument;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"dylkaw"},"content":"if () then ([valid command input format])","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"dylkaw"},"content":"    if () then ([valid indexes])","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"dylkaw"},"content":"        :Get member and event","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"dylkaw"},"content":"        from the respective filtered lists;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":"        :Create a new Enrolment object;","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"andrechuakj"},"content":"        if () then ([non-duplicate enrolment]))","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"andrechuakj"},"content":"        :Add new enrolment to","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"andrechuakj"},"content":"        uniqueEnrolmentList in the model;","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"dylkaw"},"content":"        :Commit this state to the model;","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"dylkaw"},"content":"        else ([else])","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"dylkaw"},"content":"            :Throws CommandException","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"dylkaw"},"content":"            with error message;","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"dylkaw"},"content":"        endif","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"dylkaw"},"content":"    else ([else])","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"dylkaw"},"content":"        :Throws CommandException","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"dylkaw"},"content":"        with error message;","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"dylkaw"},"content":"    endif","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"dylkaw"},"content":"else ([else])","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"dylkaw"},"content":"    :Throws ParseException","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"dylkaw"},"content":"    with command usage","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"dylkaw"},"content":"    direction;","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"dylkaw"},"content":"endif","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"dylkaw"},"content":":Returns feedback to user;","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"dylkaw"},"content":"stop","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"dylkaw"},"content":"@enduml","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"andrechuakj":4,"dylkaw":32}},{"path":"docs/diagrams/EnrolSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dylkaw"},"content":"@startuml","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"dylkaw"},"content":"!include style.puml","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"dylkaw"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"dylkaw"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"dylkaw"},"content":"participant \":CcaCommanderParser\" as CcaCommanderParser LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"dylkaw"},"content":"participant \":EnrolCommandParser\" as EnrolCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"dylkaw"},"content":"participant \":EnrolCommand\" as EnrolCommand LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"participant \":Enrolment\" as Enrolment LOGIC_COLOR","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"dylkaw"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"dylkaw"},"content":"end box","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"dylkaw"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"dylkaw"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"dylkaw"},"content":"end box","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"dylkaw"},"content":"[-\u003e LogicManager : execute(...)","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"dylkaw"},"content":"activate LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"dylkaw"},"content":"LogicManager -\u003e CcaCommanderParser : parseCommand(...)","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"dylkaw"},"content":"activate CcaCommanderParser","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"dylkaw"},"content":"create EnrolCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"dylkaw"},"content":"CcaCommanderParser -\u003e EnrolCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"dylkaw"},"content":"activate EnrolCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"dylkaw"},"content":"EnrolCommandParser --\u003e CcaCommanderParser","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"dylkaw"},"content":"deactivate EnrolCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"dylkaw"},"content":"CcaCommanderParser -\u003e EnrolCommandParser: parse(...)","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"dylkaw"},"content":"activate EnrolCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"dylkaw"},"content":"create EnrolCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"dylkaw"},"content":"EnrolCommandParser -\u003e EnrolCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"dylkaw"},"content":"activate EnrolCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"dylkaw"},"content":"EnrolCommand --\u003e EnrolCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"dylkaw"},"content":"deactivate EnrolCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"dylkaw"},"content":"EnrolCommandParser --\u003e CcaCommanderParser","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"dylkaw"},"content":"deactivate EnrolCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"dylkaw"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"dylkaw"},"content":"EnrolCommandParser -[hidden]-\u003e CcaCommanderParser","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"dylkaw"},"content":"destroy EnrolCommandParser","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"dylkaw"},"content":"CcaCommanderParser --\u003e LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"dylkaw"},"content":"deactivate CcaCommanderParser","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"dylkaw"},"content":"LogicManager -\u003e EnrolCommand : execute()","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"dylkaw"},"content":"activate EnrolCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"dylkaw"},"content":"EnrolCommand -\u003e Model : getFilteredMemberList()","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"dylkaw"},"content":"activate Model","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"dylkaw"},"content":"deactivate Model","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"dylkaw"},"content":"EnrolCommand -\u003e Model : getFilteredEventClassList()","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"dylkaw"},"content":"activate Model","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"dylkaw"},"content":"deactivate Model","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"andrechuakj"},"content":"create Enrolment","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"andrechuakj"},"content":"EnrolCommand -\u003e Enrolment","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"andrechuakj"},"content":"activate Enrolment","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"andrechuakj"},"content":"Enrolment --\u003e EnrolCommand : enrolment","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"andrechuakj"},"content":"deactivate Enrolment","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"andrechuakj"},"content":"EnrolCommand -\u003e Model : createEnrolment(enrolment)","lastModifiedDate":"2023-10-28"},{"lineNumber":67,"author":{"gitId":"dylkaw"},"content":"activate Model","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"dylkaw"},"content":"deactivate Model","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"dylkaw"},"content":"EnrolCommand -\u003e Model : commit()","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"dylkaw"},"content":"activate Model","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"dylkaw"},"content":"deactivate Model","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"dylkaw"},"content":"create CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"dylkaw"},"content":"EnrolCommand -\u003e CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"dylkaw"},"content":"activate CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"dylkaw"},"content":"CommandResult --\u003e EnrolCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"dylkaw"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"dylkaw"},"content":"EnrolCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"dylkaw"},"content":"deactivate EnrolCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"dylkaw"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"dylkaw"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"dylkaw"},"content":"@enduml","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"andrechuakj":7,"dylkaw":79}},{"path":"docs/diagrams/EnrolmentClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"@startuml","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"andrechuakj"},"content":"!include style.puml","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"show members","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"hide empty members","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"skinparam classAttributeFontColor #FFFFFF","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"Package Enrolment as EnrolmentPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"Class UniqueEnrolmentList","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":"Class Enrolment","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"Class Hours","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":"Class Name","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"andrechuakj"},"content":"Class Remark","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"andrechuakj"},"content":"}","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"andrechuakj"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"andrechuakj"},"content":"HiddenOutside ..\u003e UniqueEnrolmentList","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"andrechuakj"},"content":"UniqueEnrolmentList ..\u003e \"*\" Enrolment","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"andrechuakj"},"content":"Enrolment *---\u003e \"Member 1\" Name","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"andrechuakj"},"content":"Enrolment *---\u003e \"1 Event\" Name","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"andrechuakj"},"content":"Enrolment *--\u003e \"1\" Hours","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"andrechuakj"},"content":"Enrolment *--\u003e \"1\" Remark","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"andrechuakj"},"content":"@enduml","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"andrechuakj":28}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic as LogicPackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"Class CcaCommanderParser","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"package Model {","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Storage {","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"andrechuakj"},"content":"LogicManager -right-\u003e\"1\" CcaCommanderParser","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"andrechuakj"},"content":"CcaCommanderParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"dylkaw"},"content":"note right of XYZCommand: XYZCommand \u003d CreateMemberCommand, \\nFindCommand, etc","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"andrechuakj":3,"dylkaw":1,"-":42}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyCcaCommander\" as ReadOnlyCcaCommander","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"Class CcaCommander","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"Class versionedCcaCommander","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"Package Member {","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"ph-nathan"},"content":"Package Event {","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"andrechuakj"},"content":"Package Enrolment {","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"ph-nathan"},"content":"CcaCommander .right.|\u003e ReadOnlyCcaCommander","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"ph-nathan"},"content":"Model .left.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"ph-nathan"},"content":"Model .right.\u003e ReadOnlyCcaCommander","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"ph-nathan"},"content":"ModelManager -right-\u003e \"1\" versionedCcaCommander","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"ph-nathan"},"content":"versionedCcaCommander *-right-\u003e \"*\" CcaCommander","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"ph-nathan"},"content":"ModelManager -left-\u003e \"1\" UserPrefs","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"ph-nathan"},"content":"CcaCommander *--\u003e \"*\" Member","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"ph-nathan"},"content":"CcaCommander *--\u003e \"*\" Event","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"andrechuakj"},"content":"CcaCommander *--\u003e \"*\" Enrolment","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"andrechuakj":4,"ph-nathan":22,"-":27}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"Class CcaCommanderParser","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"andrechuakj"},"content":"HiddenOutside ..\u003e CcaCommanderParser","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"andrechuakj"},"content":"CcaCommanderParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"andrechuakj"},"content":"CcaCommanderParser ..\u003e Command : returns \u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"andrechuakj":4,"-":34}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage as StoragePackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"andrechuakj"},"content":"package \"CcaCommander Storage\" #F4F6F6{","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"andrechuakj"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nCcaCommanderStorage\" as CcaCommanderStorage","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"andrechuakj"},"content":"Class JsonCcaCommanderStorage","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"andrechuakj"},"content":"Class JsonSerializableCcaCommander","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"andrechuakj"},"content":"StorageManager -up-\u003e \"1\" CcaCommanderStorage","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"andrechuakj"},"content":"Storage -right-|\u003e CcaCommanderStorage","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"andrechuakj"},"content":"JsonCcaCommanderStorage .up.|\u003e CcaCommanderStorage","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"andrechuakj"},"content":"JsonCcaCommanderStorage ..\u003e JsonSerializableCcaCommander","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"andrechuakj"},"content":"JsonSerializableCcaCommander --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"andrechuakj":9,"-":34}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"Class MemberListPanel","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"Class MemberCard","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"Class EventListPanel","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":"Class EventCard","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"ph-nathan"},"content":"MainWindow *-down-\u003e \"1\" MemberListPanel","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"ph-nathan"},"content":"MainWindow *-down-\u003e \"1\" EventListPanel","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"ph-nathan"},"content":"MemberListPanel -down-\u003e \"*\" MemberCard","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"ph-nathan"},"content":"EventListPanel -down-\u003e \"*\" EventCard","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"ph-nathan"},"content":"MemberListPanel --|\u003e UiPart","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"ph-nathan"},"content":"MemberCard --|\u003e UiPart","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"ph-nathan"},"content":"EventListPanel --|\u003e UiPart","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"ph-nathan"},"content":"EventCard --|\u003e UiPart","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"ph-nathan"},"content":"MemberCard ..\u003e Model","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"ph-nathan"},"content":"EventCard ..\u003e Model","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"ph-nathan"},"content":"MemberListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"ph-nathan":15,"-":52}},{"path":"docs/diagrams/UndoRedoState3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"undo\"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":"package Versions \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":"    class Version1 as \"\u003cu\u003ecc0:CcaCommander\u003c/u\u003e\"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"    class Version2 as \"\u003cu\u003ecc1:CcaCommander\u003c/u\u003e\"","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"    class Version3 as \"\u003cu\u003ecc2:CcaCommander\u003c/u\u003e\"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"Version1 -[hidden]right-\u003e Version2","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"Version2 -[hidden]right-\u003e Version3","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"class Pointer as \"Current Version\" #FFFFFF","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"Pointer -up-\u003e Version2","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"SelwynAng":8,"-":13}},{"path":"docs/diagrams/UndoRedoVersion0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"hide \u003c\u003ctag\u003e\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":"title Initial Version","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":"package Versions {","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"    class Version1 as \"\u003cu\u003ecc0:CcaCommander\u003c/u\u003e\"","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"    class Version2 as \"\u003cu\u003ecc1:CcaCommander\u003c/u\u003e\"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":"    class Version3 as \"\u003cu\u003ecc2:CcaCommander\u003c/u\u003e\"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"Version1 -[hidden]right-\u003e Version2","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"Version2 -[hidden]right-\u003e Version3","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"hide Version.Version2","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"hide Version.Version3","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"class Pointer as \"Current Version\" #FFFFFF","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"Pointer -up-\u003e Version1","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":"@end","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"SelwynAng":24}},{"path":"docs/diagrams/UndoRedoVersion1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"title After command \"deleteMember 5\"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":"package Versions \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":"    class Version1 as \"\u003cu\u003ecc0:CcaCommander\u003c/u\u003e\"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"    class Version2 as \"\u003cu\u003ecc1:CcaCommander\u003c/u\u003e\"","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"    class Version3 as \"\u003cu\u003ecc2:CcaCommander\u003c/u\u003e\"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"Version1 -[hidden]right-\u003e Version2","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"Version2 -[hidden]right-\u003e Version3","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"hide Versions.Version3","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"class Pointer as \"Current Version\" #FFFFFF","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"Pointer -up-\u003e Version2","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"@end","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"SelwynAng":23}},{"path":"docs/diagrams/UndoRedoVersion2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"title After command \"createMember n/David ...\"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":"package Versions \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":"    class Version1 as \"\u003cu\u003ecc0:CcaCommander\u003c/u\u003e\"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"    class Version2 as \"\u003cu\u003ecc1:CcaCommander\u003c/u\u003e\"","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"    class Version3 as \"\u003cu\u003ecc2:CcaCommander\u003c/u\u003e\"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"Version1 -[hidden]right-\u003e Version2","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"Version2 -[hidden]right-\u003e Version3","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"class Pointer as \"Current Version\" #FFFFFF","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"Pointer -up-\u003e Version3","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"@end","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"SelwynAng":21}},{"path":"docs/diagrams/UndoRedoVersion4.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"title After command \"list\"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":"package Versions \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":"    class Version1 as \"\u003cu\u003ecc0:CCACommander\u003c/u\u003e\"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"    class Version2 as \"\u003cu\u003ecc1:CCACommander\u003c/u\u003e\"","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"    class Version3 as \"\u003cu\u003ecc2:CCACommander\u003c/u\u003e\"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"Version1 -[hidden]right-\u003e Version2","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"Version2 -[hidden]right-\u003e Version3","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"class Pointer as \"Current Version\" #FFFFFF","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"Pointer -up-\u003e Version2","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"@end","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"SelwynAng":21}},{"path":"docs/diagrams/UndoRedoVersion5.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"title After command \"clear\"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":"package Versions \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":"    class Version1 as \"\u003cu\u003ecc0:CcaCommander\u003c/u\u003e\"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"    class Version2 as \"\u003cu\u003ecc1:CcaCommander\u003c/u\u003e\"","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"    class Version3 as \"\u003cu\u003ecc3:CcaCommander\u003c/u\u003e\"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"Version1 -[hidden]right-\u003e Version2","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"Version2 -[hidden]right-\u003e Version3","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"class Pointer as \"Current Version\" #FFFFFF","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"Pointer -up-\u003e Version3","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"note right on link: Version cc2 deleted.","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"@end","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"SelwynAng":22}},{"path":"docs/diagrams/UndoSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"participant \":CcaCommanderParser\" as CcaCommanderParser LOGIC_COLOR","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":"participant \"undoCmd:UndoCommand\" as UndoCommand LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":"participant \":VersionedCcaCommander\" as VersionedCcaCommander MODEL_COLOR","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"andrechuakj"},"content":"LogicManager -\u003e CcaCommanderParser : parseCommand(undo)","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"andrechuakj"},"content":"activate CcaCommanderParser","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"create UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"andrechuakj"},"content":"CcaCommanderParser -\u003e UndoCommand","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"andrechuakj"},"content":"UndoCommand --\u003e CcaCommanderParser","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"SelwynAng"},"content":"CcaCommanderParser --\u003e LogicManager : undoCmd","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"andrechuakj"},"content":"deactivate CcaCommanderParser","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"LogicManager -\u003e UndoCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"SelwynAng"},"content":"UndoCommand -\u003e Model : undo()","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"andrechuakj"},"content":"Model -\u003e VersionedCcaCommander : undo()","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"andrechuakj"},"content":"activate VersionedCcaCommander","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"andrechuakj"},"content":"VersionedCcaCommander -\u003e VersionedCcaCommander : resetData(ReadOnlyCcaCommander)","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"SelwynAng"},"content":"activate VersionedCcaCommander","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"SelwynAng"},"content":"VersionedCcaCommander --\u003e VersionedCcaCommander","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"SelwynAng"},"content":"deactivate VersionedCcaCommander","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"SelwynAng"},"content":"VersionedCcaCommander --\u003e Model","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"andrechuakj"},"content":"deactivate VersionedCcaCommander","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"Model --\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"UndoCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"UndoCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"destroy UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"andrechuakj":11,"SelwynAng":8,"-":39}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"Participant \":CcaCommanderParser\" as abp LOGIC_COLOR","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":17,"author":{"gitId":"wr1159"},"content":"ecp -\u003e ec ++: index, editMemberDescriptor","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"wr1159":1,"andrechuakj":1,"-":20}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"title: CCACommander Ultra Promax Xtra 9000PLUS","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-F11-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-F11-1/tp/actions)","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-F11-1/tp/graph/badge.svg?token\u003dF3OGCRX0UZ)](https://codecov.io/gh/AY2324S1-CS2103T-F11-1/tp)","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"**CCACommander is a desktop application for managing your CCA members and events details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":"* If you are interested in using CCACommander, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"* If you are interested about developing CCACommander, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"andrechuakj":4,"SelwynAng":2,"-":13}},{"path":"docs/team/andrechuakj.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"andrechuakj"},"content":"layout: page","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"title: Andre\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"### Project: CCACommander Ultra Promax Xtra 9000PLUS","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"CCACommander Ultra Promax Xtra 9000PLUS is the one-stop app for CCA Heads to manage CCA members and events, optimised for CCA Heads who prefer to use command line interface.","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"* **New Feature**:","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dandrechuakj\u0026breakdown\u003dtrue#/)","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"andrechuakj"},"content":"* **Project management**:","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"andrechuakj"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"andrechuakj"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":22,"author":{"gitId":"andrechuakj"},"content":"* **Community**:","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"andrechuakj"},"content":"* **Tools**:","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"andrechuakj":24}},{"path":"docs/team/dylkaw.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dylkaw"},"content":"---","lastModifiedDate":"2023-10-01"},{"lineNumber":2,"author":{"gitId":"dylkaw"},"content":"layout: page","lastModifiedDate":"2023-10-01"},{"lineNumber":3,"author":{"gitId":"dylkaw"},"content":"title: Dylan\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-01"},{"lineNumber":4,"author":{"gitId":"dylkaw"},"content":"---","lastModifiedDate":"2023-10-01"},{"lineNumber":5,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":6,"author":{"gitId":"dylkaw"},"content":"### Project: CCACommander Ultra Promax Xtra 9000PLUS","lastModifiedDate":"2023-10-01"},{"lineNumber":7,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"CCACommander Ultra Promax Xtra 9000PLUS is the one-stop app for CCA Heads to manage CCA members and events, optimised for CCA Heads who prefer to use command line interface.","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":10,"author":{"gitId":"dylkaw"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-01"},{"lineNumber":11,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":12,"author":{"gitId":"dylkaw"},"content":"* **New Feature**:","lastModifiedDate":"2023-10-01"},{"lineNumber":13,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":14,"author":{"gitId":"dylkaw"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003ddylkaw\u0026breakdown\u003dtrue#/)","lastModifiedDate":"2023-10-01"},{"lineNumber":15,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":16,"author":{"gitId":"dylkaw"},"content":"* **Project management**:","lastModifiedDate":"2023-10-01"},{"lineNumber":17,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":18,"author":{"gitId":"dylkaw"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-01"},{"lineNumber":19,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":20,"author":{"gitId":"dylkaw"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-01"},{"lineNumber":21,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":22,"author":{"gitId":"dylkaw"},"content":"* **Community**:","lastModifiedDate":"2023-10-01"},{"lineNumber":23,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":24,"author":{"gitId":"dylkaw"},"content":"* **Tools**:","lastModifiedDate":"2023-10-01"}],"authorContributionMap":{"andrechuakj":1,"dylkaw":23}},{"path":"docs/team/ph-nathan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"layout: page","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"title: Nathan\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"### Project: CCACommander Ultra Promax Xtra 9000PLUS","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"CCACommander Ultra Promax Xtra 9000PLUS is the one-stop app for CCA Heads to manage CCA members and events, optimised for CCA Heads who prefer to use command line interface.","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":"* **New Feature**:","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dph-nathan\u0026breakdown\u003dtrue#/)","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"* **Project management**:","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"ph-nathan"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"ph-nathan"},"content":"* **Community**:","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"ph-nathan"},"content":"* **Tools**:","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"andrechuakj":1,"ph-nathan":23}},{"path":"docs/team/selwynang.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"---","lastModifiedDate":"2023-10-01"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"layout: page","lastModifiedDate":"2023-10-01"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"title: Selwyn\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-01"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"---","lastModifiedDate":"2023-10-01"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"### Project: CCACommander Ultra Promax Xtra 9000PLUS","lastModifiedDate":"2023-10-01"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"CCACommander Ultra Promax Xtra 9000PLUS is the one-stop app for CCA Heads to manage CCA members and events, optimised for CCA Heads who prefer to use command line interface.","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-01"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"* **New Feature**:","lastModifiedDate":"2023-10-01"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dselwynang\u0026breakdown\u003dtrue#/)","lastModifiedDate":"2023-10-01"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"* **Project management**:","lastModifiedDate":"2023-10-01"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-01"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-01"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"* **Community**:","lastModifiedDate":"2023-10-01"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":"* **Tools**:","lastModifiedDate":"2023-10-01"}],"authorContributionMap":{"andrechuakj":1,"SelwynAng":23}},{"path":"docs/team/wr1159.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wr1159"},"content":"---","lastModifiedDate":"2023-10-01"},{"lineNumber":2,"author":{"gitId":"wr1159"},"content":"layout: page","lastModifiedDate":"2023-10-01"},{"lineNumber":3,"author":{"gitId":"wr1159"},"content":"title: Wei Rong\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-01"},{"lineNumber":4,"author":{"gitId":"wr1159"},"content":"---","lastModifiedDate":"2023-10-01"},{"lineNumber":5,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":6,"author":{"gitId":"wr1159"},"content":"### Project: CCACommander Ultra Promax Xtra 9000PLUS","lastModifiedDate":"2023-10-01"},{"lineNumber":7,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"CCACommander Ultra Promax Xtra 9000PLUS is the one-stop app for CCA Heads to manage CCA members and events, optimised for CCA Heads who prefer to use command line interface.","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":10,"author":{"gitId":"wr1159"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-01"},{"lineNumber":11,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":12,"author":{"gitId":"wr1159"},"content":"* **New Feature**:","lastModifiedDate":"2023-10-01"},{"lineNumber":13,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":14,"author":{"gitId":"wr1159"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dwr1159\u0026breakdown\u003dtrue#/)","lastModifiedDate":"2023-10-01"},{"lineNumber":15,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":16,"author":{"gitId":"wr1159"},"content":"* **Project management**:","lastModifiedDate":"2023-10-01"},{"lineNumber":17,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":18,"author":{"gitId":"wr1159"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-01"},{"lineNumber":19,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":20,"author":{"gitId":"wr1159"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-01"},{"lineNumber":21,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":22,"author":{"gitId":"wr1159"},"content":"* **Community**:","lastModifiedDate":"2023-10-01"},{"lineNumber":23,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":24,"author":{"gitId":"wr1159"},"content":"* **Tools**:","lastModifiedDate":"2023-10-01"}],"authorContributionMap":{"wr1159":23,"andrechuakj":1}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"This command allows users of the CCACommander application to add optional remarks to people in their records and edit it if required. The command should have the following format:","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.commands;","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"andrechuakj"},"content":" * Changes the remark of an existing person in CCACommander.","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"andrechuakj"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `CcaCommanderParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"andrechuakj"},"content":"Create a `RemarkCommandParser` class in the `seedu.ccacommander.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2023-10-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"andrechuakj"},"content":":information_source: Don’t forget to update `CcaCommanderParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2023-10-21"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"andrechuakj"},"content":"Create a new `Remark` in `seedu.ccacommander.model.member`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2023-10-21"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":233,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"andrechuakj"},"content":"Simply add the following to [`seedu.ccacommander.ui.MemberCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2023-10-21"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"andrechuakj"},"content":"CCACommander stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2023-10-22"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"andrechuakj"},"content":":exclamation: You must delete CCACommander’s storage file located at `/data/ccacommander.json` before running it! Not doing so will cause CcaCommander to default to an empty record!","lastModifiedDate":"2023-10-22"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":346,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":347,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":357,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":376,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"andrechuakj"},"content":"This concludes the tutorial for adding a new `Command` to CcaCommander.","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"andrechuakj":13,"-":386}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"wr1159"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Member` class.","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"andrechuakj"},"content":"The `address` field in `Member` is actually an instance of the `seedu.ccacommander.model.member.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"wr1159"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditMemberDescriptor` may require more careful inspection.","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"wr1159"},"content":"Let’s try removing references to `Address` in `EditMemberDescriptor`.","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"wr1159"},"content":"1. Safe delete the field `address` in `EditMemberDescriptor`.","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"wr1159"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Member` class will require you to modify its constructor.","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"wr1159"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `MemberCard` that has not been removed nor identified.","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"wr1159"},"content":"A quick look at the `MemberCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"wr1159"},"content":"**`MemberCard.java`**","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"wr1159"},"content":"**`MemberCard.fxml`**","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"andrechuakj"},"content":"**`invalidMemberCcaCommander.json`:**","lastModifiedDate":"2023-10-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"wr1159"},"content":"  \"members\": [ {","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"wr1159"},"content":"    \"name\": \"Member with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"wr1159":11,"andrechuakj":2,"-":99}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"andrechuakj"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.ccacommander.logic.Logic`.","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"andrechuakj"},"content":"A quick look at the `seedu.ccacommander.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"andrechuakj"},"content":"            storage.saveCcaCommander(model.getCcaCommander());","lastModifiedDate":"2023-10-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"andrechuakj"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `CcaCommanderParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2023-10-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"andrechuakj"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveCcaCommander(model.getCcaCommander())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2023-10-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"andrechuakj"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonCcaCommander#saveCcaCommander()` method which calls the `JsonSerializableCcaCommander` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2023-10-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"andrechuakj"},"content":"    **`JsonSerializableCcaCommander` constructor:**","lastModifiedDate":"2023-10-21"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"andrechuakj"},"content":"     * Converts a given {@code ReadOnlyCcaCommander} into this class for Jackson use.","lastModifiedDate":"2023-10-21"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"andrechuakj"},"content":"     * {@code JsonSerializableCcaCommander}.","lastModifiedDate":"2023-10-21"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"andrechuakj"},"content":"    public JsonSerializableCcaCommander(ReadOnlyCcaCommander source) {","lastModifiedDate":"2023-10-21"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"andrechuakj"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableCcaCommander`.","lastModifiedDate":"2023-10-21"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"andrechuakj"},"content":"    3.  Save the records in the CSV format instead","lastModifiedDate":"2023-10-21"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"andrechuakj"},"content":"    6.  Add a new entity to the records","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"andrechuakj":13,"-":288}},{"path":"src/main/java/seedu/ccacommander/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.core.LogsCenter;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.util.FileUtil;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return Objects.equals(configPath, otherAppParameters.configPath);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .add(\"configPath\", configPath)","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"andrechuakj":4,"-":69}},{"path":"src/main/java/seedu/ccacommander/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.core.LogsCenter;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger logger \u003d LogsCenter.getLogger(Main.class);","lastModifiedDate":"2023-07-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // As per https://github.com/openjdk/jfx/blob/master/doc-files/release-notes-16.md","lastModifiedDate":"2023-07-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // JavaFX 16 (or later) runtime logs a warning at startup if JavaFX classes are loaded from","lastModifiedDate":"2023-07-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // the classpath instead of a module.","lastModifiedDate":"2023-07-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // Our application does not use Java modules yet. Even if it did, modules are ignored when","lastModifiedDate":"2023-07-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // packed into a FAT Jar file (as we do), which means this warning will persist even then.","lastModifiedDate":"2023-07-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // The warning however, can be safely ignored. Thus, the following log informs","lastModifiedDate":"2023-07-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // the user (if looking at the log output) that the said warning appearing in the log","lastModifiedDate":"2023-07-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // can be ignored.","lastModifiedDate":"2023-07-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        logger.warning(\"The warning about Unsupported JavaFX configuration below can be ignored.\");","lastModifiedDate":"2023-07-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"andrechuakj":2,"-":37}},{"path":"src/main/java/seedu/ccacommander/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.core.Config;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.core.LogsCenter;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.core.Version;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.util.ConfigUtil;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.util.StringUtil;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.Logic;","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.LogicManager;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.CcaCommander;","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.ModelManager;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.ReadOnlyCcaCommander;","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.UserPrefs;","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.util.SampleDataUtil;","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.storage.CcaCommanderStorage;","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.storage.JsonCcaCommanderStorage;","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.storage.Storage;","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.storage.StorageManager;","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.storage.UserPrefsStorage;","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.ui.Ui;","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.ui.UiManager;","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 2, true);","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"andrechuakj"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing CCACommander ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"andrechuakj"},"content":"        CcaCommanderStorage ccaCommanderStorage \u003d new JsonCcaCommanderStorage(userPrefs.getCcaCommanderFilePath());","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"andrechuakj"},"content":"        storage \u003d new StorageManager(ccaCommanderStorage, userPrefsStorage);","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"andrechuakj"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s CcaCommander and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"andrechuakj"},"content":"     * The data from the sample CcaCommander will be used instead if {@code storage}\u0027s CcaCommander is not","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"andrechuakj"},"content":"     * found, or an empty CcaCommander will be used instead if errors occur when reading {@code storage}\u0027s","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"andrechuakj"},"content":"     * CcaCommander.","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"andrechuakj"},"content":"        logger.info(\"Using data file : \" + storage.getCcaCommanderFilePath());","lastModifiedDate":"2023-10-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":79,"author":{"gitId":"andrechuakj"},"content":"        Optional\u003cReadOnlyCcaCommander\u003e ccaCommanderOptional;","lastModifiedDate":"2023-10-21"},{"lineNumber":80,"author":{"gitId":"andrechuakj"},"content":"        ReadOnlyCcaCommander initialData;","lastModifiedDate":"2023-10-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"andrechuakj"},"content":"            ccaCommanderOptional \u003d storage.readCcaCommander();","lastModifiedDate":"2023-10-21"},{"lineNumber":83,"author":{"gitId":"andrechuakj"},"content":"            if (!ccaCommanderOptional.isPresent()) {","lastModifiedDate":"2023-10-21"},{"lineNumber":84,"author":{"gitId":"andrechuakj"},"content":"                logger.info(\"Creating a new data file \" + storage.getCcaCommanderFilePath()","lastModifiedDate":"2023-10-21"},{"lineNumber":85,"author":{"gitId":"andrechuakj"},"content":"                        + \" populated with a sample CCACommander.\");","lastModifiedDate":"2023-10-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"andrechuakj"},"content":"            initialData \u003d ccaCommanderOptional.orElseGet(SampleDataUtil::getSampleCcaCommander);","lastModifiedDate":"2023-10-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":89,"author":{"gitId":"andrechuakj"},"content":"            logger.warning(\"Data file at \" + storage.getCcaCommanderFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-10-21"},{"lineNumber":90,"author":{"gitId":"andrechuakj"},"content":"                    + \" Will be starting with an empty CCACommander.\");","lastModifiedDate":"2023-10-22"},{"lineNumber":91,"author":{"gitId":"andrechuakj"},"content":"            initialData \u003d new CcaCommander();","lastModifiedDate":"2023-10-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"andrechuakj"},"content":"        logger.info(\"Starting CCACommander \" + MainApp.VERSION);","lastModifiedDate":"2023-10-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"andrechuakj"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping CCACommander ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-10-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"andrechuakj":44,"-":143}},{"path":"src/main/java/seedu/ccacommander/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.commons.core;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Config otherConfig \u003d (Config) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, otherConfig.logLevel)","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, otherConfig.userPrefsFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .add(\"logLevel\", logLevel)","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .add(\"userPrefsFilePath\", userPrefsFilePath)","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"andrechuakj":2,"-":64}},{"path":"src/main/java/seedu/ccacommander/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.commons.core;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.ui.Stylesheet.DEFAULT_STYLESHEET;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"    private String stylesheet;","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"ph-nathan"},"content":"        stylesheet \u003d DEFAULT_STYLESHEET.toString();","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"ph-nathan"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition, String stylesheet) {","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":42,"author":{"gitId":"ph-nathan"},"content":"        this.stylesheet \u003d stylesheet;","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"ph-nathan"},"content":"    public String getStylesheet() {","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"ph-nathan"},"content":"        return this.stylesheet;","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        GuiSettings otherGuiSettings \u003d (GuiSettings) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d otherGuiSettings.windowWidth","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d otherGuiSettings.windowHeight","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"ph-nathan"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, otherGuiSettings.windowCoordinates)","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"ph-nathan"},"content":"                \u0026\u0026 Objects.equals(stylesheet, otherGuiSettings.stylesheet);","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"ph-nathan"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates, stylesheet);","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                .add(\"windowWidth\", windowWidth)","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                .add(\"windowHeight\", windowHeight)","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .add(\"windowCoordinates\", windowCoordinates)","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"ph-nathan"},"content":"                .add(\"stylesheet\", stylesheet)","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"andrechuakj":2,"ph-nathan":12,"-":78}},{"path":"src/main/java/seedu/ccacommander/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.commons.core;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-05-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-05-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":23,"author":{"gitId":"andrechuakj"},"content":"    private static final String LOG_FILE \u003d \"ccacommander.log\";","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger; // logger for this class","lastModifiedDate":"2023-07-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger baseLogger; // to be used as the parent of all other loggers created by this class.","lastModifiedDate":"2023-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // This static block ensures essential loggers are created early","lastModifiedDate":"2023-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2023-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        setBaseLogger();","lastModifiedDate":"2023-07-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2023-07-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Initializes loggers with the log level specified in the {@code config} object. Applies to all loggers created","lastModifiedDate":"2023-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * using {@link #getLogger(String)} and {@link #getLogger(Class)} methods except for those that are manually set.","lastModifiedDate":"2023-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.info(\"Log level will be set as: \" + currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // set the level of the baseLogger which will be inherited by other loggers","lastModifiedDate":"2023-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        baseLogger.setLevel(currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name prefixed by the {@code baseLogger}\u0027s name so that the created logger","lastModifiedDate":"2023-07-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * becomes a descendant of the {@code baseLogger}. Furthermore, the returned logger will have the same log handlers","lastModifiedDate":"2023-07-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * as the {@code baseLogger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Java organizes loggers into a hierarchy based on their names (using \u0027.\u0027 as a separator, similar to how Java","lastModifiedDate":"2023-07-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // packages form a hierarchy). Furthermore, loggers without a level inherit the level of their parent logger.","lastModifiedDate":"2023-07-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // By prefixing names of all loggers with baseLogger\u0027s name + \".\", we make the baseLogger the parent of all","lastModifiedDate":"2023-07-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // loggers. This allows us to change the level of all loggers simply by changing the baseLogger level.","lastModifiedDate":"2023-07-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(baseLogger.getName() + \".\" + name);","lastModifiedDate":"2023-07-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(true);","lastModifiedDate":"2023-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return logger;","lastModifiedDate":"2023-07-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(clazz);","lastModifiedDate":"2023-05-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Removes all handlers from the {@code logger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"andrechuakj"},"content":"     * Creates a logger named \u0027ccacommander\u0027, containing a {@code ConsoleHandler} and a {@code FileHandler}.","lastModifiedDate":"2023-10-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets it as the {@code baseLogger}, to be used as the parent logger of all other loggers.","lastModifiedDate":"2023-07-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static void setBaseLogger() {","lastModifiedDate":"2023-07-19"},{"lineNumber":82,"author":{"gitId":"andrechuakj"},"content":"        baseLogger \u003d Logger.getLogger(\"ccacommander\");","lastModifiedDate":"2023-10-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        baseLogger.setUseParentHandlers(false);","lastModifiedDate":"2023-07-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        removeHandlers(baseLogger);","lastModifiedDate":"2023-07-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Level.ALL is used as the level for the handlers because the baseLogger filters the log messages by level","lastModifiedDate":"2023-07-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // already; there is no need to control log message level of the handlers.","lastModifiedDate":"2023-07-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // add a ConsoleHandler to log to the console","lastModifiedDate":"2023-07-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2023-07-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        baseLogger.addHandler(consoleHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // add a FileHandler to log to a file","lastModifiedDate":"2023-07-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2023-07-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2023-07-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            fileHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            baseLogger.addHandler(fileHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"andrechuakj":4,"-":102}},{"path":"src/main/java/seedu/ccacommander/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.commons.core;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!(other instanceof Version)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Version otherVersion \u003d (Version) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return major \u003d\u003d otherVersion.major","lastModifiedDate":"2023-07-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                \u0026\u0026 minor \u003d\u003d otherVersion.minor","lastModifiedDate":"2023-07-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                \u0026\u0026 patch \u003d\u003d otherVersion.patch","lastModifiedDate":"2023-07-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                \u0026\u0026 isEarlyAccess \u003d\u003d otherVersion.isEarlyAccess;","lastModifiedDate":"2023-07-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"andrechuakj":1,"-":120}},{"path":"src/main/java/seedu/ccacommander/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.commons.core.index;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!(other instanceof Index)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Index otherIndex \u003d (Index) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return zeroBasedIndex \u003d\u003d otherIndex.zeroBasedIndex;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"zeroBasedIndex\", zeroBasedIndex).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"andrechuakj":2,"-":67}},{"path":"src/main/java/seedu/ccacommander/commons/exceptions/DataLoadingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.commons.exceptions;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-06-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during loading of data from a file.","lastModifiedDate":"2023-06-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-06-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataLoadingException extends Exception {","lastModifiedDate":"2023-06-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataLoadingException(Exception cause) {","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2023-06-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-06-14"}],"authorContributionMap":{"andrechuakj":1,"-":10}},{"path":"src/main/java/seedu/ccacommander/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.commons.exceptions;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"andrechuakj":1,"-":20}},{"path":"src/main/java/seedu/ccacommander/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.commons.util;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.MainApp;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"andrechuakj":2,"-":40}},{"path":"src/main/java/seedu/ccacommander/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.commons.util;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"andrechuakj":1,"-":34}},{"path":"src/main/java/seedu/ccacommander/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.commons.util;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.core.Config;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"andrechuakj":3,"-":20}},{"path":"src/main/java/seedu/ccacommander/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.commons.util;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"andrechuakj":1,"-":82}},{"path":"src/main/java/seedu/ccacommander/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.commons.util;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.core.LogsCenter;","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the JSON object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2023-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid JSON file.","lastModifiedDate":"2023-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize JSON file has to correspond to the structure in the class given here.","lastModifiedDate":"2023-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading of the JSON file failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.info(\"JSON file \" + filePath + \" found.\");","lastModifiedDate":"2023-01-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new DataLoadingException(e);","lastModifiedDate":"2023-06-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"andrechuakj":3,"-":141}},{"path":"src/main/java/seedu/ccacommander/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.commons.util;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"wr1159"},"content":"import java.util.StringJoiner;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":69,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"wr1159"},"content":"     * Returns the string {@code s} with the first character of each word capitalised.","lastModifiedDate":"2023-10-23"},{"lineNumber":72,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"wr1159"},"content":"    public static String capitaliseWordsInString(String s) {","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"wr1159"},"content":"        requireNonNull(s);","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"wr1159"},"content":"        s \u003d s.trim();","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"wr1159"},"content":"        if (s.length() \u003d\u003d 0) {","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"wr1159"},"content":"            return s;","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"wr1159"},"content":"        String[] words \u003d s.split(\"\\\\s+\");","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"wr1159"},"content":"        StringJoiner result \u003d new StringJoiner(\" \");","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":83,"author":{"gitId":"wr1159"},"content":"        for (String word : words) {","lastModifiedDate":"2023-10-23"},{"lineNumber":84,"author":{"gitId":"wr1159"},"content":"            result.add(word.substring(0, 1).toUpperCase() + word.substring(1).toLowerCase());","lastModifiedDate":"2023-10-23"},{"lineNumber":85,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":86,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":87,"author":{"gitId":"wr1159"},"content":"        return result.toString();","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wr1159":21,"andrechuakj":2,"-":66}},{"path":"src/main/java/seedu/ccacommander/commons/util/ToStringBuilder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.commons.util;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Builds a string representation of an object that is suitable as the return value of {@link Object#toString()}.","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class ToStringBuilder {","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    private static final String OBJECT_PREFIX \u003d \"{\";","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private static final String OBJECT_SUFFIX \u003d \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    private static final String FIELD_SEPARATOR \u003d \", \";","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private static final String FIELD_NAME_VALUE_SEPARATOR \u003d \"\u003d\";","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private boolean hasField;","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Constructs a {@code ToStringBuilder} whose formatted output will be prefixed with {@code objectName}.","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public ToStringBuilder(String objectName) {","lastModifiedDate":"2019-02-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        stringBuilder.append(objectName).append(OBJECT_PREFIX);","lastModifiedDate":"2019-02-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code ToStringBuilder} whose formatted output will be prefixed with the","lastModifiedDate":"2019-02-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * canonical class name of {@code object}.","lastModifiedDate":"2019-02-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public ToStringBuilder(Object object) {","lastModifiedDate":"2019-02-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this(object.getClass().getCanonicalName());","lastModifiedDate":"2019-02-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Adds a field name/value pair to the output string.","lastModifiedDate":"2019-02-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-02-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param fieldName The name of the field.","lastModifiedDate":"2019-02-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param fieldValue The value of the field.","lastModifiedDate":"2019-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @return A reference to this {@code ToStringBuilder} object, allowing method calls to be chained.","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public ToStringBuilder add(String fieldName, Object fieldValue) {","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (hasField) {","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            stringBuilder.append(FIELD_SEPARATOR);","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        stringBuilder.append(fieldName).append(FIELD_NAME_VALUE_SEPARATOR).append(fieldValue);","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        hasField \u003d true;","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the built formatted string representation.","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return stringBuilder.toString() + OBJECT_SUFFIX;","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-23"}],"authorContributionMap":{"andrechuakj":1,"-":52}},{"path":"src/main/java/seedu/ccacommander/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.core.GuiSettings;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.commands.CommandResult;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.ReadOnlyCcaCommander;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.Event;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Member;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"andrechuakj"},"content":"     * Returns the CcaCommander.","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"andrechuakj"},"content":"     * @see seedu.ccacommander.model.Model#getCcaCommander()","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"andrechuakj"},"content":"    ReadOnlyCcaCommander getCcaCommander();","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"wr1159"},"content":"    /** Returns an unmodifiable view of the filtered list of members*/","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"wr1159"},"content":"    ObservableList\u003cMember\u003e getFilteredMemberList();","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"SelwynAng"},"content":"    /** Returns an unmodifiable view of the filtered list of events*/","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"SelwynAng"},"content":"    ObservableList\u003cEvent\u003e getFilteredEventList();","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"andrechuakj"},"content":"     * Returns the user prefs\u0027 CcaCommander file path.","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"andrechuakj"},"content":"    Path getCcaCommanderFilePath();","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"wr1159":2,"andrechuakj":13,"SelwynAng":3,"-":36}},{"path":"src/main/java/seedu/ccacommander/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.core.GuiSettings;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.core.LogsCenter;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.commands.Command;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.commands.CommandResult;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.parser.CcaCommanderParser;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.ReadOnlyCcaCommander;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.Event;","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Member;","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.storage.Storage;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"andrechuakj"},"content":"    private final CcaCommanderParser ccaCommanderParser;","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"andrechuakj"},"content":"        ccaCommanderParser \u003d new CcaCommanderParser();","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"andrechuakj"},"content":"        Command command \u003d ccaCommanderParser.parseCommand(commandText);","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"andrechuakj"},"content":"            storage.saveCcaCommander(model.getCcaCommander());","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"andrechuakj"},"content":"    public ReadOnlyCcaCommander getCcaCommander() {","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"andrechuakj"},"content":"        return model.getCcaCommander();","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"wr1159"},"content":"    public ObservableList\u003cMember\u003e getFilteredMemberList() {","lastModifiedDate":"2023-10-02"},{"lineNumber":72,"author":{"gitId":"wr1159"},"content":"        return model.getFilteredMemberList();","lastModifiedDate":"2023-10-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"ph-nathan"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"ph-nathan"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"ph-nathan"},"content":"        return model.getFilteredEventList();","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"andrechuakj"},"content":"    public Path getCcaCommanderFilePath() {","lastModifiedDate":"2023-10-21"},{"lineNumber":81,"author":{"gitId":"andrechuakj"},"content":"        return model.getCcaCommanderFilePath();","lastModifiedDate":"2023-10-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"wr1159":2,"andrechuakj":21,"ph-nathan":3,"-":67}},{"path":"src/main/java/seedu/ccacommander/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.parser.Prefix;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.enrolment.Enrolment;","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.Event;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Member;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"wr1159"},"content":"    public static final String MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX \u003d \"The member index provided is invalid\";","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"wr1159"},"content":"    public static final String MESSAGE_MEMBERS_LISTED_OVERVIEW \u003d \"%1$d members listed!\";","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"    public static final String MESSAGE_EVENTS_LISTED_OVERVIEW \u003d \"%1$d events listed!\";","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"    public static final String MESSAGE_INVALID_EVENT_DISPLAYED_INDEX \u003d \"The event index provided is invalid\";","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"    public static final String MESSAGE_INVALID_MEMBER_AND_EVENT_DISPLAYED_INDEX \u003d \"The member and event indexes \"","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":"            + \"provided are both invalid\";","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"dylkaw"},"content":"    public static final String MESSAGE_ENROLMENT_DOES_NOT_EXIST \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"dylkaw"},"content":"            \"Member at index %1$d is not enrolled in event at index %2$d.\";","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"wr1159"},"content":"     * Formats the {@code member} for display to the user.","lastModifiedDate":"2023-10-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"wr1159"},"content":"    public static String format(Member member) {","lastModifiedDate":"2023-10-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"wr1159"},"content":"        builder.append(member.getName())","lastModifiedDate":"2023-10-02"},{"lineNumber":49,"author":{"gitId":"ph-nathan"},"content":"                .append(\" | Phone: \")","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"wr1159"},"content":"                .append(member.getPhone())","lastModifiedDate":"2023-10-02"},{"lineNumber":51,"author":{"gitId":"ph-nathan"},"content":"                .append(\" | Email: \")","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"wr1159"},"content":"                .append(member.getEmail())","lastModifiedDate":"2023-10-02"},{"lineNumber":53,"author":{"gitId":"ph-nathan"},"content":"                .append(\" | Address: \")","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"wr1159"},"content":"                .append(member.getAddress())","lastModifiedDate":"2023-10-02"},{"lineNumber":55,"author":{"gitId":"ph-nathan"},"content":"                .append(\" | Tags: \");","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"ph-nathan"},"content":"        member.getTags().forEach(tag -\u003e builder.append(tag).append(\" \"));","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"SelwynAng"},"content":"     * Formats the {@code event} for display to the user.","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"SelwynAng"},"content":"    public static String format(Event event) {","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"SelwynAng"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"SelwynAng"},"content":"        builder.append(event.getName())","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"ph-nathan"},"content":"                .append(\" | Date: \")","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"SelwynAng"},"content":"                .append(event.getDate())","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"ph-nathan"},"content":"                .append(\" | Location: \")","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"ph-nathan"},"content":"                .append(event.getLocation())","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"ph-nathan"},"content":"                .append(\" | Tags: \");","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"ph-nathan"},"content":"        event.getTags().forEach(tag -\u003e builder.append(tag).append(\" \"));","lastModifiedDate":"2023-10-29"},{"lineNumber":72,"author":{"gitId":"SelwynAng"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":75,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"andrechuakj"},"content":"     * Formats the {@code enrolment} for display to the user.","lastModifiedDate":"2023-10-28"},{"lineNumber":77,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":78,"author":{"gitId":"andrechuakj"},"content":"    public static String format(Enrolment enrolment) {","lastModifiedDate":"2023-10-28"},{"lineNumber":79,"author":{"gitId":"dylkaw"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"dylkaw"},"content":"        builder.append(\"Member: \")","lastModifiedDate":"2023-10-23"},{"lineNumber":81,"author":{"gitId":"andrechuakj"},"content":"                .append(enrolment.getMemberName())","lastModifiedDate":"2023-10-28"},{"lineNumber":82,"author":{"gitId":"dylkaw"},"content":"                .append(\" to Event: \")","lastModifiedDate":"2023-10-23"},{"lineNumber":83,"author":{"gitId":"andrechuakj"},"content":"                .append(enrolment.getEventName())","lastModifiedDate":"2023-10-28"},{"lineNumber":84,"author":{"gitId":"ph-nathan"},"content":"                .append(\" | Hours: \")","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"andrechuakj"},"content":"                .append(enrolment.getHours())","lastModifiedDate":"2023-10-28"},{"lineNumber":86,"author":{"gitId":"ph-nathan"},"content":"                .append(\" | Remark: \")","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"andrechuakj"},"content":"                .append(enrolment.getRemark());","lastModifiedDate":"2023-10-28"},{"lineNumber":88,"author":{"gitId":"dylkaw"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wr1159":8,"andrechuakj":11,"SelwynAng":13,"dylkaw":10,"ph-nathan":13,"-":35}},{"path":"src/main/java/seedu/ccacommander/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.commands;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.CcaCommander;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":" * Clears the CcaCommander book.","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"CCACommander has been cleared!\";","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"andrechuakj"},"content":"        model.setCcaCommander(new CcaCommander());","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"        model.commit(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"andrechuakj":6,"SelwynAng":1,"-":17}},{"path":"src/main/java/seedu/ccacommander/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.commands;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"andrechuakj":3,"-":17}},{"path":"src/main/java/seedu/ccacommander/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.commands;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .add(\"feedbackToUser\", feedbackToUser)","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .add(\"showHelp\", showHelp)","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .add(\"exit\", exit)","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"andrechuakj":2,"-":80}},{"path":"src/main/java/seedu/ccacommander/logic/commands/CreateEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.commands;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"dylkaw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"wr1159"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.Messages;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.Event;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.ui.EventListPanel;","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.ui.MemberListPanel;","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"dylkaw"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"andrechuakj"},"content":" * Adds a member to CcaCommander.","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"dylkaw"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"dylkaw"},"content":"public class CreateEventCommand extends Command {","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"dylkaw"},"content":"    public static final String COMMAND_WORD \u003d \"createEvent\";","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"andrechuakj"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Creates an event in CCACommander. \"","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"dylkaw"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"dylkaw"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"dylkaw"},"content":"            + PREFIX_LOCATION + \"LOCATION \"","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"dylkaw"},"content":"            + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"wr1159"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"dylkaw"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"dylkaw"},"content":"            + PREFIX_NAME + \"Party \"","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"dylkaw"},"content":"            + PREFIX_LOCATION + \"Raffles Hall \"","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"wr1159"},"content":"            + PREFIX_DATE + \"2023-10-16 \"","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"wr1159"},"content":"            + PREFIX_TAG + \"hall \"","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"wr1159"},"content":"            + PREFIX_TAG + \"sem1 \";","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"dylkaw"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New event added: %1$s\";","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"SelwynAng"},"content":"    public static final String MESSAGE_COMMIT \u003d \"New event added: %1$s\";","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"andrechuakj"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"This event already exists in CCACommander. \";","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"dylkaw"},"content":"    private final Event toCreate;","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"dylkaw"},"content":"     * Creates an CreateEventCommand to add the specified {@code Event}","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"dylkaw"},"content":"    public CreateEventCommand(Event event) {","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"dylkaw"},"content":"        requireNonNull(event);","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"dylkaw"},"content":"        toCreate \u003d event;","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"dylkaw"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"dylkaw"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"dylkaw"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"dylkaw"},"content":"        if (model.hasEvent(toCreate)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"dylkaw"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"dylkaw"},"content":"        model.createEvent(toCreate);","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"SelwynAng"},"content":"        model.commit(String.format(MESSAGE_COMMIT, toCreate.getName()));","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"ph-nathan"},"content":"        MemberListPanel.setDisplayMemberHoursAndRemark(false);","lastModifiedDate":"2023-11-03"},{"lineNumber":63,"author":{"gitId":"ph-nathan"},"content":"        EventListPanel.setDisplayEventHoursAndRemark(false);","lastModifiedDate":"2023-11-03"},{"lineNumber":64,"author":{"gitId":"dylkaw"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toCreate)));","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"dylkaw"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"dylkaw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"dylkaw"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"dylkaw"},"content":"            return true;","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"dylkaw"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"dylkaw"},"content":"        if (!(other instanceof CreateEventCommand)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"dylkaw"},"content":"            return false;","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"dylkaw"},"content":"        CreateEventCommand otherCreateEventCommand \u003d (CreateEventCommand) other;","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"dylkaw"},"content":"        return toCreate.equals(otherCreateEventCommand.toCreate);","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"dylkaw"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"dylkaw"},"content":"    public String toString() {","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"dylkaw"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"dylkaw"},"content":"                .add(\"toAdd\", toCreate)","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"dylkaw"},"content":"                .toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"dylkaw"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"wr1159":5,"andrechuakj":12,"dylkaw":64,"SelwynAng":2,"ph-nathan":5}},{"path":"src/main/java/seedu/ccacommander/logic/commands/CreateMemberCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.commands;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.Messages;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Member;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.ui.EventListPanel;","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.ui.MemberListPanel;","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"andrechuakj"},"content":" * Adds a member to CcaCommander.","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"dylkaw"},"content":"public class CreateMemberCommand extends Command {","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"dylkaw"},"content":"    public static final String COMMAND_WORD \u003d \"createMember\";","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"andrechuakj"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a member to CCACommander. \"","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"andrechuakj"},"content":"            + PREFIX_GENDER + \"GENDER \"","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"andrechuakj"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"andrechuakj"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"andrechuakj"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"andrechuakj"},"content":"            + PREFIX_GENDER + \"Male \"","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"wr1159"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New member added: %1$s\";","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"SelwynAng"},"content":"    public static final String MESSAGE_COMMIT \u003d \"New member added: %1$s\";","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"andrechuakj"},"content":"    public static final String MESSAGE_DUPLICATE_MEMBER \u003d \"This member already exists in CCACommander\";","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"wr1159"},"content":"    private final Member toAdd;","lastModifiedDate":"2023-10-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"dylkaw"},"content":"     * Creates an CreateMemberCommand to add the specified {@code Member}","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"dylkaw"},"content":"    public CreateMemberCommand(Member member) {","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"wr1159"},"content":"        requireNonNull(member);","lastModifiedDate":"2023-10-02"},{"lineNumber":54,"author":{"gitId":"wr1159"},"content":"        toAdd \u003d member;","lastModifiedDate":"2023-10-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"wr1159"},"content":"        if (model.hasMember(toAdd)) {","lastModifiedDate":"2023-10-02"},{"lineNumber":62,"author":{"gitId":"wr1159"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_MEMBER);","lastModifiedDate":"2023-10-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"dylkaw"},"content":"        model.createMember(toAdd);","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"SelwynAng"},"content":"        model.commit(String.format(MESSAGE_COMMIT, toAdd.getName()));","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":68,"author":{"gitId":"ph-nathan"},"content":"        MemberListPanel.setDisplayMemberHoursAndRemark(false);","lastModifiedDate":"2023-11-03"},{"lineNumber":69,"author":{"gitId":"ph-nathan"},"content":"        EventListPanel.setDisplayEventHoursAndRemark(false);","lastModifiedDate":"2023-11-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"dylkaw"},"content":"        if (!(other instanceof CreateMemberCommand)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":84,"author":{"gitId":"dylkaw"},"content":"        CreateMemberCommand otherCreateMemberCommand \u003d (CreateMemberCommand) other;","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"dylkaw"},"content":"        return toAdd.equals(otherCreateMemberCommand.toAdd);","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wr1159":6,"andrechuakj":21,"dylkaw":8,"SelwynAng":2,"ph-nathan":5,"-":52}},{"path":"src/main/java/seedu/ccacommander/logic/commands/DeleteEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.commands;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"import java.util.List;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.core.index.Index;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.Messages;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.Event;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"wr1159"},"content":"import seedu.ccacommander.model.shared.Name;","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.ui.EventListPanel;","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.ui.MemberListPanel;","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"andrechuakj"},"content":" * Deletes an event identified using its displayed index from CcaCommander.","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"public class DeleteEventCommand extends Command {","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"    public static final String COMMAND_WORD \u003d \"deleteEvent\";","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":"            + \": Deletes the event identified by the index number used in the displayed event list.\\n\"","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"SelwynAng"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"SelwynAng"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"SelwynAng"},"content":"    public static final String MESSAGE_DELETE_EVENT_SUCCESS \u003d \"Deleted Event: %1$s\";","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"SelwynAng"},"content":"    public static final String MESSAGE_COMMIT \u003d \"Deleted Event: %1$s\";","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"SelwynAng"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"SelwynAng"},"content":"    public DeleteEventCommand(Index targetIndex) {","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"SelwynAng"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"SelwynAng"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"SelwynAng"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"SelwynAng"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"SelwynAng"},"content":"        List\u003cEvent\u003e lastShownList \u003d model.getFilteredEventList();","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"SelwynAng"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"SelwynAng"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"SelwynAng"},"content":"        Event eventToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"wr1159"},"content":"        Name eventToDeleteName \u003d eventToDelete.getName();","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"SelwynAng"},"content":"        model.deleteEvent(eventToDelete);","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"wr1159"},"content":"        model.deleteEnrolmentsWithEventName(eventToDeleteName);","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"SelwynAng"},"content":"        model.commit(String.format(MESSAGE_COMMIT, eventToDelete.getName()));","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"ph-nathan"},"content":"        MemberListPanel.setDisplayMemberHoursAndRemark(false);","lastModifiedDate":"2023-11-03"},{"lineNumber":53,"author":{"gitId":"ph-nathan"},"content":"        EventListPanel.setDisplayEventHoursAndRemark(false);","lastModifiedDate":"2023-11-03"},{"lineNumber":54,"author":{"gitId":"SelwynAng"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_EVENT_SUCCESS, Messages.format(eventToDelete)));","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"SelwynAng"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"SelwynAng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"SelwynAng"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"SelwynAng"},"content":"            return true;","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"SelwynAng"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"SelwynAng"},"content":"        if (!(other instanceof DeleteEventCommand)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"SelwynAng"},"content":"            return false;","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"SelwynAng"},"content":"        DeleteEventCommand otherDeleteEventCommand \u003d (DeleteEventCommand) other;","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"SelwynAng"},"content":"        return targetIndex.equals(otherDeleteEventCommand.targetIndex);","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"SelwynAng"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"SelwynAng"},"content":"    public String toString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"SelwynAng"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"SelwynAng"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"SelwynAng"},"content":"                .toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"wr1159":4,"andrechuakj":8,"SelwynAng":61,"ph-nathan":5}},{"path":"src/main/java/seedu/ccacommander/logic/commands/DeleteMemberCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.commands;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"import java.util.List;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.core.index.Index;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.Messages;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Member;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"wr1159"},"content":"import seedu.ccacommander.model.shared.Name;","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.ui.EventListPanel;","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.ui.MemberListPanel;","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"andrechuakj"},"content":" * Deletes a member identified using its displayed index from CcaCommander.","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"public class DeleteMemberCommand extends Command {","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"    public static final String COMMAND_WORD \u003d \"deleteMember\";","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":"            + \": Deletes the member identified by the index number used in the displayed member list.\\n\"","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"SelwynAng"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"SelwynAng"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"SelwynAng"},"content":"    public static final String MESSAGE_DELETE_MEMBER_SUCCESS \u003d \"Deleted Member: %1$s\";","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"SelwynAng"},"content":"    public static final String MESSAGE_COMMIT \u003d \"Deleted Member: %1$s.\";","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"SelwynAng"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"SelwynAng"},"content":"    public DeleteMemberCommand(Index targetIndex) {","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"SelwynAng"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"SelwynAng"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"SelwynAng"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"SelwynAng"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"SelwynAng"},"content":"        List\u003cMember\u003e lastShownList \u003d model.getFilteredMemberList();","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"SelwynAng"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"SelwynAng"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"SelwynAng"},"content":"        Member memberToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"wr1159"},"content":"        Name memberToDeleteName \u003d memberToDelete.getName();","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"SelwynAng"},"content":"        model.deleteMember(memberToDelete);","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"wr1159"},"content":"        model.deleteEnrolmentsWithMemberName(memberToDeleteName);","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"SelwynAng"},"content":"        model.commit(String.format(MESSAGE_COMMIT, memberToDelete.getName()));","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":51,"author":{"gitId":"ph-nathan"},"content":"        MemberListPanel.setDisplayMemberHoursAndRemark(false);","lastModifiedDate":"2023-11-03"},{"lineNumber":52,"author":{"gitId":"ph-nathan"},"content":"        EventListPanel.setDisplayEventHoursAndRemark(false);","lastModifiedDate":"2023-11-03"},{"lineNumber":53,"author":{"gitId":"SelwynAng"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_MEMBER_SUCCESS, Messages.format(memberToDelete)));","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"SelwynAng"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"SelwynAng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"SelwynAng"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"SelwynAng"},"content":"            return true;","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"SelwynAng"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"SelwynAng"},"content":"        if (!(other instanceof DeleteMemberCommand)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"SelwynAng"},"content":"            return false;","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"SelwynAng"},"content":"        DeleteMemberCommand otherDeleteMemberCommand \u003d (DeleteMemberCommand) other;","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"SelwynAng"},"content":"        return targetIndex.equals(otherDeleteMemberCommand.targetIndex);","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"SelwynAng"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"SelwynAng"},"content":"    public String toString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"SelwynAng"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"SelwynAng"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"SelwynAng"},"content":"                .toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"wr1159":4,"andrechuakj":8,"SelwynAng":60,"ph-nathan":5}},{"path":"src/main/java/seedu/ccacommander/logic/commands/EditEnrolmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dylkaw"},"content":"package seedu.ccacommander.logic.commands;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"dylkaw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_EVENT;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_HOURS;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_MEMBER;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.model.Model.PREDICATE_SHOW_ALL_ENROLMENTS;","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"dylkaw"},"content":"import java.util.List;","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"dylkaw"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"dylkaw"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.commons.core.index.Index;","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.commons.util.CollectionUtil;","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.logic.Messages;","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.model.Model;","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.model.enrolment.Enrolment;","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.model.enrolment.EnrolmentExistsPredicate;","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.model.enrolment.Hours;","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.model.enrolment.Remark;","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.model.event.Event;","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.model.member.Member;","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.model.shared.Name;","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"dylkaw"},"content":"/**","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"dylkaw"},"content":" * Edits the details of an existing enrolment in CcaCommander.","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"dylkaw"},"content":" */","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"dylkaw"},"content":"public class EditEnrolmentCommand extends Command {","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"dylkaw"},"content":"    public static final String COMMAND_WORD \u003d \"editEnrolment\";","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"dylkaw"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the enrolment details of the member identified \"","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"dylkaw"},"content":"            + \"by the index number used in the displayed member list at the event identified by the index number used\"","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"dylkaw"},"content":"            + \"in the displayed event list.\"","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"dylkaw"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"dylkaw"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"dylkaw"},"content":"            + PREFIX_MEMBER + \"MEMBER_INDEX \"","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"dylkaw"},"content":"            + PREFIX_EVENT + \"EVENT_INDEX \"","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"dylkaw"},"content":"            + \"[\" + PREFIX_HOURS + \"HOURS] \"","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"dylkaw"},"content":"            + \"[\" + PREFIX_REMARK + \"REMARK] \\n\"","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"dylkaw"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"dylkaw"},"content":"            + PREFIX_MEMBER + \"1 \"","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"dylkaw"},"content":"            + PREFIX_EVENT + \"1 \"","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"dylkaw"},"content":"            + PREFIX_HOURS + \"3 \"","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"dylkaw"},"content":"            + PREFIX_REMARK + \"Organised catering\";","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"dylkaw"},"content":"    public static final String MESSAGE_EDIT_ENROLMENT_SUCCESS \u003d \"Edited Enrolment: %1$s\";","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"dylkaw"},"content":"    public static final String MESSAGE_COMMIT \u003d \"Edited Enrolment: %1$s\";","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"dylkaw"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"dylkaw"},"content":"    private final Index memberIndex;","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"dylkaw"},"content":"    private final Index eventIndex;","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"dylkaw"},"content":"    private final EditEnrolmentDescriptor editEnrolmentDescriptor;","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"dylkaw"},"content":"     * @param memberIndex of the desired member in the filtered member list","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"dylkaw"},"content":"     * @param eventIndex of the desired event in the filtered event list","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"dylkaw"},"content":"     * @param editEnrolmentDescriptor details to edit the event with","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"dylkaw"},"content":"    public EditEnrolmentCommand(Index memberIndex, Index eventIndex, EditEnrolmentDescriptor editEnrolmentDescriptor) {","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"dylkaw"},"content":"        requireNonNull(memberIndex);","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"dylkaw"},"content":"        requireNonNull(eventIndex);","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"dylkaw"},"content":"        requireNonNull(editEnrolmentDescriptor);","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":66,"author":{"gitId":"dylkaw"},"content":"        this.memberIndex \u003d memberIndex;","lastModifiedDate":"2023-10-28"},{"lineNumber":67,"author":{"gitId":"dylkaw"},"content":"        this.eventIndex \u003d eventIndex;","lastModifiedDate":"2023-10-28"},{"lineNumber":68,"author":{"gitId":"dylkaw"},"content":"        this.editEnrolmentDescriptor \u003d new EditEnrolmentDescriptor(editEnrolmentDescriptor);","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":70,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":71,"author":{"gitId":"dylkaw"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":72,"author":{"gitId":"dylkaw"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-28"},{"lineNumber":73,"author":{"gitId":"dylkaw"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-28"},{"lineNumber":74,"author":{"gitId":"dylkaw"},"content":"        List\u003cMember\u003e lastShownMemberList \u003d model.getFilteredMemberList();","lastModifiedDate":"2023-10-28"},{"lineNumber":75,"author":{"gitId":"dylkaw"},"content":"        List\u003cEvent\u003e lastShownEventList \u003d model.getFilteredEventList();","lastModifiedDate":"2023-10-28"},{"lineNumber":76,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":77,"author":{"gitId":"dylkaw"},"content":"        if (memberIndex.getZeroBased() \u003e\u003d lastShownMemberList.size()) {","lastModifiedDate":"2023-10-28"},{"lineNumber":78,"author":{"gitId":"dylkaw"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-28"},{"lineNumber":79,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":80,"author":{"gitId":"dylkaw"},"content":"        if (eventIndex.getZeroBased() \u003e\u003d lastShownEventList.size()) {","lastModifiedDate":"2023-10-28"},{"lineNumber":81,"author":{"gitId":"dylkaw"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-28"},{"lineNumber":82,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":83,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":84,"author":{"gitId":"dylkaw"},"content":"        Member targetMember \u003d lastShownMemberList.get(memberIndex.getZeroBased());","lastModifiedDate":"2023-10-28"},{"lineNumber":85,"author":{"gitId":"dylkaw"},"content":"        Event targetEvent \u003d lastShownEventList.get(eventIndex.getZeroBased());","lastModifiedDate":"2023-10-28"},{"lineNumber":86,"author":{"gitId":"dylkaw"},"content":"        Enrolment enrolmentToCheck \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":87,"author":{"gitId":"wr1159"},"content":"                new Enrolment(targetMember.getName(), targetEvent.getName(), Optional.of(new Hours(\"0\")),","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"wr1159"},"content":"                        Optional.of(new Remark(\"UNUSED REMARK\")));","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":90,"author":{"gitId":"dylkaw"},"content":"        model.updateFilteredEnrolmentList(new EnrolmentExistsPredicate(enrolmentToCheck));","lastModifiedDate":"2023-10-28"},{"lineNumber":91,"author":{"gitId":"dylkaw"},"content":"        List\u003cEnrolment\u003e enrolmentToEditList \u003d model.getFilteredEnrolmentList();","lastModifiedDate":"2023-10-28"},{"lineNumber":92,"author":{"gitId":"dylkaw"},"content":"        if (enrolmentToEditList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-10-28"},{"lineNumber":93,"author":{"gitId":"dylkaw"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_ENROLMENT_DOES_NOT_EXIST,","lastModifiedDate":"2023-10-28"},{"lineNumber":94,"author":{"gitId":"dylkaw"},"content":"                    memberIndex.getOneBased(), eventIndex.getOneBased()));","lastModifiedDate":"2023-10-28"},{"lineNumber":95,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":96,"author":{"gitId":"dylkaw"},"content":"        assert enrolmentToEditList.size() \u003d\u003d 1 : \"There should not be duplicate enrolments\";","lastModifiedDate":"2023-10-28"},{"lineNumber":97,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":98,"author":{"gitId":"dylkaw"},"content":"        Enrolment enrolmentToEdit \u003d enrolmentToEditList.get(0);","lastModifiedDate":"2023-10-28"},{"lineNumber":99,"author":{"gitId":"dylkaw"},"content":"        Enrolment editedEnrolment \u003d createEditedEnrolment(enrolmentToEdit, editEnrolmentDescriptor);","lastModifiedDate":"2023-10-28"},{"lineNumber":100,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":101,"author":{"gitId":"dylkaw"},"content":"        model.setEnrolment(enrolmentToEdit, editedEnrolment);","lastModifiedDate":"2023-10-28"},{"lineNumber":102,"author":{"gitId":"dylkaw"},"content":"        model.updateFilteredEnrolmentList(PREDICATE_SHOW_ALL_ENROLMENTS);","lastModifiedDate":"2023-10-28"},{"lineNumber":103,"author":{"gitId":"dylkaw"},"content":"        model.commit(String.format(MESSAGE_COMMIT, editedEnrolment.getMemberAndEventEnrolment()));","lastModifiedDate":"2023-10-28"},{"lineNumber":104,"author":{"gitId":"dylkaw"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_ENROLMENT_SUCCESS, Messages.format(editedEnrolment)));","lastModifiedDate":"2023-10-28"},{"lineNumber":105,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":106,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":107,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":108,"author":{"gitId":"dylkaw"},"content":"     * Creates and returns a {@code Enrolment} with the details of {@code enrolmentToEdit}","lastModifiedDate":"2023-10-28"},{"lineNumber":109,"author":{"gitId":"dylkaw"},"content":"     * edited with {@code editEnrolmentDescriptor}.","lastModifiedDate":"2023-10-28"},{"lineNumber":110,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":111,"author":{"gitId":"dylkaw"},"content":"    private static Enrolment createEditedEnrolment(Enrolment enrolmentToEdit,","lastModifiedDate":"2023-10-28"},{"lineNumber":112,"author":{"gitId":"dylkaw"},"content":"                                                    EditEnrolmentDescriptor editEnrolmentDescriptor) {","lastModifiedDate":"2023-10-28"},{"lineNumber":113,"author":{"gitId":"dylkaw"},"content":"        requireNonNull(enrolmentToEdit);","lastModifiedDate":"2023-10-30"},{"lineNumber":114,"author":{"gitId":"dylkaw"},"content":"        requireNonNull(editEnrolmentDescriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":115,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":116,"author":{"gitId":"dylkaw"},"content":"        Name memberName \u003d editEnrolmentDescriptor.getMemberName().orElse(enrolmentToEdit.getMemberName());","lastModifiedDate":"2023-10-28"},{"lineNumber":117,"author":{"gitId":"dylkaw"},"content":"        Name eventName \u003d editEnrolmentDescriptor.getEventName().orElse(enrolmentToEdit.getEventName());","lastModifiedDate":"2023-10-28"},{"lineNumber":118,"author":{"gitId":"dylkaw"},"content":"        Hours updatedHours \u003d editEnrolmentDescriptor.getHours().orElse(enrolmentToEdit.getHours());","lastModifiedDate":"2023-10-28"},{"lineNumber":119,"author":{"gitId":"dylkaw"},"content":"        Remark updatedRemark \u003d editEnrolmentDescriptor.getRemark().orElse(enrolmentToEdit.getRemark());","lastModifiedDate":"2023-10-28"},{"lineNumber":120,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":121,"author":{"gitId":"wr1159"},"content":"        return new Enrolment(memberName, eventName, Optional.of(updatedHours), Optional.of(updatedRemark));","lastModifiedDate":"2023-11-02"},{"lineNumber":122,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":123,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":124,"author":{"gitId":"dylkaw"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":125,"author":{"gitId":"dylkaw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-28"},{"lineNumber":126,"author":{"gitId":"dylkaw"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-28"},{"lineNumber":127,"author":{"gitId":"dylkaw"},"content":"            return true;","lastModifiedDate":"2023-10-28"},{"lineNumber":128,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":129,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":130,"author":{"gitId":"dylkaw"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-28"},{"lineNumber":131,"author":{"gitId":"dylkaw"},"content":"        if (!(other instanceof EditEnrolmentCommand)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":132,"author":{"gitId":"dylkaw"},"content":"            return false;","lastModifiedDate":"2023-10-28"},{"lineNumber":133,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":134,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":135,"author":{"gitId":"dylkaw"},"content":"        EditEnrolmentCommand otherEditEnrolmentCommand \u003d (EditEnrolmentCommand) other;","lastModifiedDate":"2023-10-28"},{"lineNumber":136,"author":{"gitId":"dylkaw"},"content":"        return memberIndex.equals(otherEditEnrolmentCommand.memberIndex)","lastModifiedDate":"2023-10-28"},{"lineNumber":137,"author":{"gitId":"dylkaw"},"content":"                \u0026\u0026 eventIndex.equals(otherEditEnrolmentCommand.eventIndex)","lastModifiedDate":"2023-10-28"},{"lineNumber":138,"author":{"gitId":"dylkaw"},"content":"                \u0026\u0026 editEnrolmentDescriptor.equals(otherEditEnrolmentCommand.editEnrolmentDescriptor);","lastModifiedDate":"2023-10-28"},{"lineNumber":139,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":140,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":141,"author":{"gitId":"dylkaw"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":142,"author":{"gitId":"dylkaw"},"content":"    public String toString() {","lastModifiedDate":"2023-10-28"},{"lineNumber":143,"author":{"gitId":"dylkaw"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-28"},{"lineNumber":144,"author":{"gitId":"dylkaw"},"content":"                .add(\"memberIndex\", memberIndex)","lastModifiedDate":"2023-10-28"},{"lineNumber":145,"author":{"gitId":"dylkaw"},"content":"                .add(\"eventIndex\", eventIndex)","lastModifiedDate":"2023-10-28"},{"lineNumber":146,"author":{"gitId":"dylkaw"},"content":"                .add(\"editEnrolmentDescriptor\", editEnrolmentDescriptor)","lastModifiedDate":"2023-10-28"},{"lineNumber":147,"author":{"gitId":"dylkaw"},"content":"                .toString();","lastModifiedDate":"2023-10-28"},{"lineNumber":148,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":149,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":150,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":151,"author":{"gitId":"dylkaw"},"content":"     * Stores the details to edit the enrolment with. Each non-empty field value will replace the","lastModifiedDate":"2023-10-28"},{"lineNumber":152,"author":{"gitId":"dylkaw"},"content":"     * corresponding field value of the event.","lastModifiedDate":"2023-10-28"},{"lineNumber":153,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":154,"author":{"gitId":"dylkaw"},"content":"    public static class EditEnrolmentDescriptor {","lastModifiedDate":"2023-10-28"},{"lineNumber":155,"author":{"gitId":"dylkaw"},"content":"        private Name memberName;","lastModifiedDate":"2023-10-28"},{"lineNumber":156,"author":{"gitId":"dylkaw"},"content":"        private Name eventName;","lastModifiedDate":"2023-10-28"},{"lineNumber":157,"author":{"gitId":"dylkaw"},"content":"        private Hours hours;","lastModifiedDate":"2023-10-28"},{"lineNumber":158,"author":{"gitId":"dylkaw"},"content":"        private Remark remark;","lastModifiedDate":"2023-10-28"},{"lineNumber":159,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":160,"author":{"gitId":"dylkaw"},"content":"        public EditEnrolmentDescriptor() {}","lastModifiedDate":"2023-10-28"},{"lineNumber":161,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":162,"author":{"gitId":"dylkaw"},"content":"        /**","lastModifiedDate":"2023-10-28"},{"lineNumber":163,"author":{"gitId":"dylkaw"},"content":"         * Copy constructor.","lastModifiedDate":"2023-10-28"},{"lineNumber":164,"author":{"gitId":"dylkaw"},"content":"         */","lastModifiedDate":"2023-10-28"},{"lineNumber":165,"author":{"gitId":"dylkaw"},"content":"        public EditEnrolmentDescriptor(EditEnrolmentDescriptor toCopy) {","lastModifiedDate":"2023-10-28"},{"lineNumber":166,"author":{"gitId":"dylkaw"},"content":"            setMemberName(toCopy.memberName);","lastModifiedDate":"2023-10-28"},{"lineNumber":167,"author":{"gitId":"dylkaw"},"content":"            setEventName(toCopy.eventName);","lastModifiedDate":"2023-10-28"},{"lineNumber":168,"author":{"gitId":"dylkaw"},"content":"            setHours(toCopy.hours);","lastModifiedDate":"2023-10-28"},{"lineNumber":169,"author":{"gitId":"dylkaw"},"content":"            setRemark(toCopy.remark);","lastModifiedDate":"2023-10-28"},{"lineNumber":170,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":171,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":172,"author":{"gitId":"dylkaw"},"content":"        /**","lastModifiedDate":"2023-10-28"},{"lineNumber":173,"author":{"gitId":"dylkaw"},"content":"         * Returns true if at least either hours or remark is edited.","lastModifiedDate":"2023-10-28"},{"lineNumber":174,"author":{"gitId":"dylkaw"},"content":"         */","lastModifiedDate":"2023-10-28"},{"lineNumber":175,"author":{"gitId":"dylkaw"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-10-28"},{"lineNumber":176,"author":{"gitId":"dylkaw"},"content":"            return CollectionUtil.isAnyNonNull(hours, remark);","lastModifiedDate":"2023-10-28"},{"lineNumber":177,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":178,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":179,"author":{"gitId":"dylkaw"},"content":"        public void setMemberName(Name memberName) {","lastModifiedDate":"2023-10-28"},{"lineNumber":180,"author":{"gitId":"dylkaw"},"content":"            this.memberName \u003d memberName;","lastModifiedDate":"2023-10-28"},{"lineNumber":181,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":182,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":183,"author":{"gitId":"dylkaw"},"content":"        public Optional\u003cName\u003e getMemberName() {","lastModifiedDate":"2023-10-28"},{"lineNumber":184,"author":{"gitId":"dylkaw"},"content":"            return Optional.ofNullable(memberName);","lastModifiedDate":"2023-10-28"},{"lineNumber":185,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":186,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":187,"author":{"gitId":"dylkaw"},"content":"        public void setEventName(Name eventName) {","lastModifiedDate":"2023-10-28"},{"lineNumber":188,"author":{"gitId":"dylkaw"},"content":"            this.eventName \u003d eventName;","lastModifiedDate":"2023-10-28"},{"lineNumber":189,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":190,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":191,"author":{"gitId":"dylkaw"},"content":"        public Optional\u003cName\u003e getEventName() {","lastModifiedDate":"2023-10-28"},{"lineNumber":192,"author":{"gitId":"dylkaw"},"content":"            return Optional.ofNullable(eventName);","lastModifiedDate":"2023-10-28"},{"lineNumber":193,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":194,"author":{"gitId":"dylkaw"},"content":"        public void setHours(Hours hours) {","lastModifiedDate":"2023-10-28"},{"lineNumber":195,"author":{"gitId":"dylkaw"},"content":"            this.hours \u003d hours;","lastModifiedDate":"2023-10-28"},{"lineNumber":196,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":197,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":198,"author":{"gitId":"dylkaw"},"content":"        public Optional\u003cHours\u003e getHours() {","lastModifiedDate":"2023-10-28"},{"lineNumber":199,"author":{"gitId":"dylkaw"},"content":"            return Optional.ofNullable(hours);","lastModifiedDate":"2023-10-28"},{"lineNumber":200,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":201,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":202,"author":{"gitId":"dylkaw"},"content":"        public void setRemark(Remark remark) {","lastModifiedDate":"2023-10-28"},{"lineNumber":203,"author":{"gitId":"dylkaw"},"content":"            this.remark \u003d remark;","lastModifiedDate":"2023-10-28"},{"lineNumber":204,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":205,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":206,"author":{"gitId":"dylkaw"},"content":"        public Optional\u003cRemark\u003e getRemark() {","lastModifiedDate":"2023-10-28"},{"lineNumber":207,"author":{"gitId":"dylkaw"},"content":"            return Optional.ofNullable(remark);","lastModifiedDate":"2023-10-28"},{"lineNumber":208,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":209,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":210,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":211,"author":{"gitId":"dylkaw"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-10-28"},{"lineNumber":212,"author":{"gitId":"dylkaw"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-28"},{"lineNumber":213,"author":{"gitId":"dylkaw"},"content":"                return true;","lastModifiedDate":"2023-10-28"},{"lineNumber":214,"author":{"gitId":"dylkaw"},"content":"            }","lastModifiedDate":"2023-10-28"},{"lineNumber":215,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":216,"author":{"gitId":"dylkaw"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-10-28"},{"lineNumber":217,"author":{"gitId":"dylkaw"},"content":"            if (!(other instanceof EditEnrolmentDescriptor)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":218,"author":{"gitId":"dylkaw"},"content":"                return false;","lastModifiedDate":"2023-10-28"},{"lineNumber":219,"author":{"gitId":"dylkaw"},"content":"            }","lastModifiedDate":"2023-10-28"},{"lineNumber":220,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":221,"author":{"gitId":"dylkaw"},"content":"            EditEnrolmentDescriptor otherEditEnrolmentDescriptor \u003d (EditEnrolmentDescriptor) other;","lastModifiedDate":"2023-10-28"},{"lineNumber":222,"author":{"gitId":"dylkaw"},"content":"            return Objects.equals(memberName, otherEditEnrolmentDescriptor.memberName)","lastModifiedDate":"2023-10-28"},{"lineNumber":223,"author":{"gitId":"dylkaw"},"content":"                    \u0026\u0026 Objects.equals(eventName, otherEditEnrolmentDescriptor.eventName)","lastModifiedDate":"2023-10-28"},{"lineNumber":224,"author":{"gitId":"dylkaw"},"content":"                    \u0026\u0026 Objects.equals(hours, otherEditEnrolmentDescriptor.hours)","lastModifiedDate":"2023-10-28"},{"lineNumber":225,"author":{"gitId":"dylkaw"},"content":"                    \u0026\u0026 Objects.equals(remark, otherEditEnrolmentDescriptor.remark);","lastModifiedDate":"2023-10-28"},{"lineNumber":226,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":227,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":228,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":229,"author":{"gitId":"dylkaw"},"content":"        public String toString() {","lastModifiedDate":"2023-10-28"},{"lineNumber":230,"author":{"gitId":"dylkaw"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2023-10-28"},{"lineNumber":231,"author":{"gitId":"dylkaw"},"content":"                    .add(\"memberName\", memberName)","lastModifiedDate":"2023-10-28"},{"lineNumber":232,"author":{"gitId":"dylkaw"},"content":"                    .add(\"eventName\", eventName)","lastModifiedDate":"2023-10-28"},{"lineNumber":233,"author":{"gitId":"dylkaw"},"content":"                    .add(\"hours\", hours)","lastModifiedDate":"2023-10-28"},{"lineNumber":234,"author":{"gitId":"dylkaw"},"content":"                    .add(\"remark\", remark)","lastModifiedDate":"2023-10-28"},{"lineNumber":235,"author":{"gitId":"dylkaw"},"content":"                    .toString();","lastModifiedDate":"2023-10-28"},{"lineNumber":236,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":237,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":238,"author":{"gitId":"dylkaw"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"wr1159":3,"dylkaw":235}},{"path":"src/main/java/seedu/ccacommander/logic/commands/EditEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"package seedu.ccacommander.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.model.Model.PREDICATE_SHOW_ALL_EVENTS;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.model.Model.PREDICATE_SHOW_ALL_MEMBERS;","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"import java.util.List;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.commons.core.index.Index;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.commons.util.CollectionUtil;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.logic.Messages;","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.Model;","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.event.Event;","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.event.EventDate;","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.event.Location;","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.shared.Name;","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.tag.Tag;","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.ui.EventListPanel;","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.ui.MemberListPanel;","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"ph-nathan"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"ph-nathan"},"content":" * Edits the details of an existing event in CcaCommander.","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"ph-nathan"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"ph-nathan"},"content":"public class EditEventCommand extends Command {","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"ph-nathan"},"content":"    public static final String COMMAND_WORD \u003d \"editEvent\";","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"ph-nathan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the event identified \"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"ph-nathan"},"content":"            + \"by the index number used in the displayed event list. \"","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"ph-nathan"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"ph-nathan"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"ph-nathan"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"ph-nathan"},"content":"            + \"[\" + PREFIX_LOCATION + \"LOCATION] \"","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"ph-nathan"},"content":"            + \"[\" + PREFIX_DATE + \"DATE] \"","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"ph-nathan"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"ph-nathan"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"ph-nathan"},"content":"            + PREFIX_LOCATION + \"NUS \"","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"ph-nathan"},"content":"            + PREFIX_DATE + \"2023-10-26 \";","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"ph-nathan"},"content":"    public static final String MESSAGE_EDIT_EVENT_SUCCESS \u003d \"Edited Event: %1$s\";","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"ph-nathan"},"content":"    public static final String MESSAGE_COMMIT \u003d \"Edited Event: %1$s\";","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"ph-nathan"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"ph-nathan"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"This event already exists in CCACommander.\";","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"ph-nathan"},"content":"    private final Index index;","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"ph-nathan"},"content":"    private final EditEventDescriptor editEventDescriptor;","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"ph-nathan"},"content":"     * @param index of the event in the filtered event list to edit","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"ph-nathan"},"content":"     * @param editEventDescriptor details to edit the event with","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"ph-nathan"},"content":"    public EditEventCommand(Index index, EditEventDescriptor editEventDescriptor) {","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"ph-nathan"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"ph-nathan"},"content":"        requireNonNull(editEventDescriptor);","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"ph-nathan"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"ph-nathan"},"content":"        this.editEventDescriptor \u003d new EditEventDescriptor(editEventDescriptor);","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"ph-nathan"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"ph-nathan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"ph-nathan"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"ph-nathan"},"content":"        List\u003cEvent\u003e lastShownList \u003d model.getFilteredEventList();","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"ph-nathan"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"ph-nathan"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"ph-nathan"},"content":"        Event eventToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"ph-nathan"},"content":"        Event editedEvent \u003d createEditedEvent(eventToEdit, editEventDescriptor);","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"ph-nathan"},"content":"        if (!eventToEdit.isSameEvent(editedEvent) \u0026\u0026 model.hasEvent(editedEvent)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"ph-nathan"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":88,"author":{"gitId":"ph-nathan"},"content":"        Name prevName \u003d eventToEdit.getName();","lastModifiedDate":"2023-10-30"},{"lineNumber":89,"author":{"gitId":"ph-nathan"},"content":"        Name newName \u003d editedEvent.getName();","lastModifiedDate":"2023-10-30"},{"lineNumber":90,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"ph-nathan"},"content":"        if (!prevName.equals(newName)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"ph-nathan"},"content":"            model.editEnrolmentsWithEventName(prevName, newName);","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":95,"author":{"gitId":"ph-nathan"},"content":"        model.setEvent(eventToEdit, editedEvent);","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"ph-nathan"},"content":"        model.updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"ph-nathan"},"content":"        model.updateFilteredMemberList(PREDICATE_SHOW_ALL_MEMBERS);","lastModifiedDate":"2023-10-29"},{"lineNumber":98,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":99,"author":{"gitId":"ph-nathan"},"content":"        model.commit(String.format(MESSAGE_COMMIT, editedEvent.getName()));","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":101,"author":{"gitId":"ph-nathan"},"content":"        MemberListPanel.setDisplayMemberHoursAndRemark(false);","lastModifiedDate":"2023-11-03"},{"lineNumber":102,"author":{"gitId":"ph-nathan"},"content":"        EventListPanel.setDisplayEventHoursAndRemark(false);","lastModifiedDate":"2023-11-03"},{"lineNumber":103,"author":{"gitId":"ph-nathan"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_EVENT_SUCCESS, Messages.format(editedEvent)));","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"ph-nathan"},"content":"     * Creates and returns a {@code Event} with the details of {@code eventToEdit}","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"ph-nathan"},"content":"     * edited with {@code editEventDescriptor}.","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"ph-nathan"},"content":"    private static Event createEditedEvent(Event eventToEdit, EditEventDescriptor editEventDescriptor) {","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"ph-nathan"},"content":"        assert eventToEdit !\u003d null;","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"ph-nathan"},"content":"        Name updatedName \u003d editEventDescriptor.getName().orElse(eventToEdit.getName());","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"ph-nathan"},"content":"        Location updatedLocation \u003d editEventDescriptor.getLocation().orElse(eventToEdit.getLocation());","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"ph-nathan"},"content":"        EventDate updatedEventDate \u003d editEventDescriptor.getDate().orElse(eventToEdit.getDate());","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"ph-nathan"},"content":"        Set\u003cTag\u003e updatedTags \u003d editEventDescriptor.getTags().orElse(eventToEdit.getTags());","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"ph-nathan"},"content":"        return new Event(updatedName, updatedEventDate, updatedLocation, updatedTags);","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"ph-nathan"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":122,"author":{"gitId":"ph-nathan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"ph-nathan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"ph-nathan"},"content":"            return true;","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"ph-nathan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"ph-nathan"},"content":"        if (!(other instanceof EditEventCommand)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"ph-nathan"},"content":"            return false;","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"ph-nathan"},"content":"        EditEventCommand otherEditEventCommand \u003d (EditEventCommand) other;","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"ph-nathan"},"content":"        return index.equals(otherEditEventCommand.index)","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"ph-nathan"},"content":"                \u0026\u0026 editEventDescriptor.equals(otherEditEventCommand.editEventDescriptor);","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"ph-nathan"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":138,"author":{"gitId":"ph-nathan"},"content":"    public String toString() {","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"ph-nathan"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-26"},{"lineNumber":140,"author":{"gitId":"ph-nathan"},"content":"                .add(\"index\", index)","lastModifiedDate":"2023-10-26"},{"lineNumber":141,"author":{"gitId":"ph-nathan"},"content":"                .add(\"editEventDescriptor\", editEventDescriptor)","lastModifiedDate":"2023-10-26"},{"lineNumber":142,"author":{"gitId":"ph-nathan"},"content":"                .toString();","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"ph-nathan"},"content":"     * Stores the details to edit the event with. Each non-empty field value will replace the","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"ph-nathan"},"content":"     * corresponding field value of the event.","lastModifiedDate":"2023-10-26"},{"lineNumber":148,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":149,"author":{"gitId":"ph-nathan"},"content":"    public static class EditEventDescriptor {","lastModifiedDate":"2023-10-26"},{"lineNumber":150,"author":{"gitId":"ph-nathan"},"content":"        private Name name;","lastModifiedDate":"2023-10-26"},{"lineNumber":151,"author":{"gitId":"ph-nathan"},"content":"        private Location location;","lastModifiedDate":"2023-10-26"},{"lineNumber":152,"author":{"gitId":"ph-nathan"},"content":"        private EventDate eventDate;","lastModifiedDate":"2023-10-26"},{"lineNumber":153,"author":{"gitId":"ph-nathan"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-10-26"},{"lineNumber":154,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":155,"author":{"gitId":"ph-nathan"},"content":"        public EditEventDescriptor() {}","lastModifiedDate":"2023-10-26"},{"lineNumber":156,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":157,"author":{"gitId":"ph-nathan"},"content":"        /**","lastModifiedDate":"2023-10-26"},{"lineNumber":158,"author":{"gitId":"ph-nathan"},"content":"         * Copy constructor.","lastModifiedDate":"2023-10-26"},{"lineNumber":159,"author":{"gitId":"ph-nathan"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-10-26"},{"lineNumber":160,"author":{"gitId":"ph-nathan"},"content":"         */","lastModifiedDate":"2023-10-26"},{"lineNumber":161,"author":{"gitId":"ph-nathan"},"content":"        public EditEventDescriptor(EditEventDescriptor toCopy) {","lastModifiedDate":"2023-10-26"},{"lineNumber":162,"author":{"gitId":"ph-nathan"},"content":"            setName(toCopy.name);","lastModifiedDate":"2023-10-26"},{"lineNumber":163,"author":{"gitId":"ph-nathan"},"content":"            setLocation(toCopy.location);","lastModifiedDate":"2023-10-26"},{"lineNumber":164,"author":{"gitId":"ph-nathan"},"content":"            setDate(toCopy.eventDate);","lastModifiedDate":"2023-10-26"},{"lineNumber":165,"author":{"gitId":"ph-nathan"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2023-10-26"},{"lineNumber":166,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":167,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":168,"author":{"gitId":"ph-nathan"},"content":"        /**","lastModifiedDate":"2023-10-26"},{"lineNumber":169,"author":{"gitId":"ph-nathan"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-10-26"},{"lineNumber":170,"author":{"gitId":"ph-nathan"},"content":"         */","lastModifiedDate":"2023-10-26"},{"lineNumber":171,"author":{"gitId":"ph-nathan"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-10-26"},{"lineNumber":172,"author":{"gitId":"ph-nathan"},"content":"            return CollectionUtil.isAnyNonNull(name, location, eventDate, tags);","lastModifiedDate":"2023-10-26"},{"lineNumber":173,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":174,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":175,"author":{"gitId":"ph-nathan"},"content":"        public void setName(Name name) {","lastModifiedDate":"2023-10-26"},{"lineNumber":176,"author":{"gitId":"ph-nathan"},"content":"            this.name \u003d name;","lastModifiedDate":"2023-10-26"},{"lineNumber":177,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":178,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":179,"author":{"gitId":"ph-nathan"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2023-10-26"},{"lineNumber":180,"author":{"gitId":"ph-nathan"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2023-10-26"},{"lineNumber":181,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":182,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":183,"author":{"gitId":"ph-nathan"},"content":"        public void setLocation(Location location) {","lastModifiedDate":"2023-10-26"},{"lineNumber":184,"author":{"gitId":"ph-nathan"},"content":"            this.location \u003d location;","lastModifiedDate":"2023-10-26"},{"lineNumber":185,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":186,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":187,"author":{"gitId":"ph-nathan"},"content":"        public Optional\u003cLocation\u003e getLocation() {","lastModifiedDate":"2023-10-26"},{"lineNumber":188,"author":{"gitId":"ph-nathan"},"content":"            return Optional.ofNullable(location);","lastModifiedDate":"2023-10-26"},{"lineNumber":189,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":190,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":191,"author":{"gitId":"ph-nathan"},"content":"        public void setDate(EventDate eventDate) {","lastModifiedDate":"2023-10-26"},{"lineNumber":192,"author":{"gitId":"ph-nathan"},"content":"            this.eventDate \u003d eventDate;","lastModifiedDate":"2023-10-26"},{"lineNumber":193,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":194,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":195,"author":{"gitId":"ph-nathan"},"content":"        public Optional\u003cEventDate\u003e getDate() {","lastModifiedDate":"2023-10-26"},{"lineNumber":196,"author":{"gitId":"ph-nathan"},"content":"            return Optional.ofNullable(eventDate);","lastModifiedDate":"2023-10-26"},{"lineNumber":197,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":198,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":199,"author":{"gitId":"ph-nathan"},"content":"        /**","lastModifiedDate":"2023-10-26"},{"lineNumber":200,"author":{"gitId":"ph-nathan"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2023-10-26"},{"lineNumber":201,"author":{"gitId":"ph-nathan"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-10-26"},{"lineNumber":202,"author":{"gitId":"ph-nathan"},"content":"         */","lastModifiedDate":"2023-10-26"},{"lineNumber":203,"author":{"gitId":"ph-nathan"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-26"},{"lineNumber":204,"author":{"gitId":"ph-nathan"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2023-10-26"},{"lineNumber":205,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":206,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":207,"author":{"gitId":"ph-nathan"},"content":"        /**","lastModifiedDate":"2023-10-26"},{"lineNumber":208,"author":{"gitId":"ph-nathan"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-10-26"},{"lineNumber":209,"author":{"gitId":"ph-nathan"},"content":"         * if modification is attempted.","lastModifiedDate":"2023-10-26"},{"lineNumber":210,"author":{"gitId":"ph-nathan"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2023-10-26"},{"lineNumber":211,"author":{"gitId":"ph-nathan"},"content":"         */","lastModifiedDate":"2023-10-26"},{"lineNumber":212,"author":{"gitId":"ph-nathan"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2023-10-26"},{"lineNumber":213,"author":{"gitId":"ph-nathan"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2023-10-26"},{"lineNumber":214,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":215,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":216,"author":{"gitId":"ph-nathan"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":217,"author":{"gitId":"ph-nathan"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-10-26"},{"lineNumber":218,"author":{"gitId":"ph-nathan"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-26"},{"lineNumber":219,"author":{"gitId":"ph-nathan"},"content":"                return true;","lastModifiedDate":"2023-10-26"},{"lineNumber":220,"author":{"gitId":"ph-nathan"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":221,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":222,"author":{"gitId":"ph-nathan"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-10-26"},{"lineNumber":223,"author":{"gitId":"ph-nathan"},"content":"            if (!(other instanceof EditEventDescriptor)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":224,"author":{"gitId":"ph-nathan"},"content":"                return false;","lastModifiedDate":"2023-10-26"},{"lineNumber":225,"author":{"gitId":"ph-nathan"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":226,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":227,"author":{"gitId":"ph-nathan"},"content":"            EditEventDescriptor otherEditEventDescriptor \u003d (EditEventDescriptor) other;","lastModifiedDate":"2023-10-26"},{"lineNumber":228,"author":{"gitId":"ph-nathan"},"content":"            return Objects.equals(name, otherEditEventDescriptor.name)","lastModifiedDate":"2023-10-26"},{"lineNumber":229,"author":{"gitId":"ph-nathan"},"content":"                    \u0026\u0026 Objects.equals(location, otherEditEventDescriptor.location)","lastModifiedDate":"2023-10-26"},{"lineNumber":230,"author":{"gitId":"ph-nathan"},"content":"                    \u0026\u0026 Objects.equals(eventDate, otherEditEventDescriptor.eventDate)","lastModifiedDate":"2023-10-26"},{"lineNumber":231,"author":{"gitId":"ph-nathan"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditEventDescriptor.tags);","lastModifiedDate":"2023-10-26"},{"lineNumber":232,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":233,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":234,"author":{"gitId":"ph-nathan"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":235,"author":{"gitId":"ph-nathan"},"content":"        public String toString() {","lastModifiedDate":"2023-10-26"},{"lineNumber":236,"author":{"gitId":"ph-nathan"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2023-10-26"},{"lineNumber":237,"author":{"gitId":"ph-nathan"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2023-10-26"},{"lineNumber":238,"author":{"gitId":"ph-nathan"},"content":"                    .add(\"location\", location)","lastModifiedDate":"2023-10-26"},{"lineNumber":239,"author":{"gitId":"ph-nathan"},"content":"                    .add(\"date\", eventDate)","lastModifiedDate":"2023-10-26"},{"lineNumber":240,"author":{"gitId":"ph-nathan"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2023-10-26"},{"lineNumber":241,"author":{"gitId":"ph-nathan"},"content":"                    .toString();","lastModifiedDate":"2023-10-26"},{"lineNumber":242,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":243,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":244,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"ph-nathan":244}},{"path":"src/main/java/seedu/ccacommander/logic/commands/EditMemberCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.commands;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.model.Model.PREDICATE_SHOW_ALL_EVENTS;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.model.Model.PREDICATE_SHOW_ALL_MEMBERS;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.core.index.Index;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.util.CollectionUtil;","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.Messages;","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Address;","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Email;","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Gender;","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Member;","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Phone;","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.shared.Name;","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.tag.Tag;","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.ui.EventListPanel;","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.ui.MemberListPanel;","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"andrechuakj"},"content":" * Edits the details of an existing member in CcaCommander.","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"ph-nathan"},"content":"public class EditMemberCommand extends Command {","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"ph-nathan"},"content":"    public static final String COMMAND_WORD \u003d \"editMember\";","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"wr1159"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the member identified \"","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"wr1159"},"content":"            + \"by the index number used in the displayed member list. \"","lastModifiedDate":"2023-10-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":48,"author":{"gitId":"ph-nathan"},"content":"            + \"[\" + PREFIX_GENDER + \"GENDER] \"","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"wr1159"},"content":"    public static final String MESSAGE_EDIT_MEMBER_SUCCESS \u003d \"Edited Member: %1$s\";","lastModifiedDate":"2023-10-02"},{"lineNumber":58,"author":{"gitId":"SelwynAng"},"content":"    public static final String MESSAGE_COMMIT \u003d \"Edited Member: %1$s\";","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"andrechuakj"},"content":"    public static final String MESSAGE_DUPLICATE_MEMBER \u003d \"This member already exists in CCACommander.\";","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"wr1159"},"content":"    private final EditMemberDescriptor editMemberDescriptor;","lastModifiedDate":"2023-10-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"wr1159"},"content":"     * @param index of the member in the filtered member list to edit","lastModifiedDate":"2023-10-02"},{"lineNumber":67,"author":{"gitId":"wr1159"},"content":"     * @param editMemberDescriptor details to edit the member with","lastModifiedDate":"2023-10-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"ph-nathan"},"content":"    public EditMemberCommand(Index index, EditMemberDescriptor editMemberDescriptor) {","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":71,"author":{"gitId":"wr1159"},"content":"        requireNonNull(editMemberDescriptor);","lastModifiedDate":"2023-10-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":74,"author":{"gitId":"wr1159"},"content":"        this.editMemberDescriptor \u003d new EditMemberDescriptor(editMemberDescriptor);","lastModifiedDate":"2023-10-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"wr1159"},"content":"        List\u003cMember\u003e lastShownList \u003d model.getFilteredMemberList();","lastModifiedDate":"2023-10-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"wr1159"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"wr1159"},"content":"        Member memberToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-02"},{"lineNumber":87,"author":{"gitId":"wr1159"},"content":"        Member editedMember \u003d createEditedMember(memberToEdit, editMemberDescriptor);","lastModifiedDate":"2023-10-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"wr1159"},"content":"        if (!memberToEdit.isSameMember(editedMember) \u0026\u0026 model.hasMember(editedMember)) {","lastModifiedDate":"2023-10-02"},{"lineNumber":90,"author":{"gitId":"wr1159"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_MEMBER);","lastModifiedDate":"2023-10-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"ph-nathan"},"content":"        Name prevName \u003d memberToEdit.getName();","lastModifiedDate":"2023-10-30"},{"lineNumber":94,"author":{"gitId":"ph-nathan"},"content":"        Name newName \u003d editedMember.getName();","lastModifiedDate":"2023-10-30"},{"lineNumber":95,"author":{"gitId":"ph-nathan"},"content":"        // If member\u0027s name is edited, the corresponding enrolment objects are edited also","lastModifiedDate":"2023-10-30"},{"lineNumber":96,"author":{"gitId":"ph-nathan"},"content":"        if (!prevName.equals(newName)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":97,"author":{"gitId":"ph-nathan"},"content":"            model.editEnrolmentsWithMemberName(prevName, newName);","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":100,"author":{"gitId":"wr1159"},"content":"        model.setMember(memberToEdit, editedMember);","lastModifiedDate":"2023-10-02"},{"lineNumber":101,"author":{"gitId":"wr1159"},"content":"        model.updateFilteredMemberList(PREDICATE_SHOW_ALL_MEMBERS);","lastModifiedDate":"2023-10-02"},{"lineNumber":102,"author":{"gitId":"ph-nathan"},"content":"        model.updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2023-10-29"},{"lineNumber":103,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":104,"author":{"gitId":"SelwynAng"},"content":"        model.commit(String.format(MESSAGE_COMMIT, editedMember.getName()));","lastModifiedDate":"2023-10-23"},{"lineNumber":105,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":106,"author":{"gitId":"ph-nathan"},"content":"        MemberListPanel.setDisplayMemberHoursAndRemark(false);","lastModifiedDate":"2023-11-03"},{"lineNumber":107,"author":{"gitId":"ph-nathan"},"content":"        EventListPanel.setDisplayEventHoursAndRemark(false);","lastModifiedDate":"2023-11-03"},{"lineNumber":108,"author":{"gitId":"wr1159"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_MEMBER_SUCCESS, Messages.format(editedMember)));","lastModifiedDate":"2023-10-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":112,"author":{"gitId":"wr1159"},"content":"     * Creates and returns a {@code Member} with the details of {@code memberToEdit}","lastModifiedDate":"2023-10-02"},{"lineNumber":113,"author":{"gitId":"wr1159"},"content":"     * edited with {@code editMemberDescriptor}.","lastModifiedDate":"2023-10-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":115,"author":{"gitId":"wr1159"},"content":"    private static Member createEditedMember(Member memberToEdit, EditMemberDescriptor editMemberDescriptor) {","lastModifiedDate":"2023-10-02"},{"lineNumber":116,"author":{"gitId":"wr1159"},"content":"        assert memberToEdit !\u003d null;","lastModifiedDate":"2023-10-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":118,"author":{"gitId":"wr1159"},"content":"        Name updatedName \u003d editMemberDescriptor.getName().orElse(memberToEdit.getName());","lastModifiedDate":"2023-10-02"},{"lineNumber":119,"author":{"gitId":"andrechuakj"},"content":"        Gender updatedGender \u003d editMemberDescriptor.getGender().orElse(memberToEdit.getGender());","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"wr1159"},"content":"        Phone updatedPhone \u003d editMemberDescriptor.getPhone().orElse(memberToEdit.getPhone());","lastModifiedDate":"2023-10-02"},{"lineNumber":121,"author":{"gitId":"wr1159"},"content":"        Email updatedEmail \u003d editMemberDescriptor.getEmail().orElse(memberToEdit.getEmail());","lastModifiedDate":"2023-10-02"},{"lineNumber":122,"author":{"gitId":"wr1159"},"content":"        Address updatedAddress \u003d editMemberDescriptor.getAddress().orElse(memberToEdit.getAddress());","lastModifiedDate":"2023-10-02"},{"lineNumber":123,"author":{"gitId":"wr1159"},"content":"        Set\u003cTag\u003e updatedTags \u003d editMemberDescriptor.getTags().orElse(memberToEdit.getTags());","lastModifiedDate":"2023-10-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"andrechuakj"},"content":"        return new Member(updatedName, updatedGender, Optional.of(updatedPhone),","lastModifiedDate":"2023-10-30"},{"lineNumber":126,"author":{"gitId":"andrechuakj"},"content":"                Optional.of(updatedEmail), Optional.of(updatedAddress), updatedTags);","lastModifiedDate":"2023-10-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"ph-nathan"},"content":"        if (!(other instanceof EditMemberCommand)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"ph-nathan"},"content":"        EditMemberCommand otherEditMemberCommand \u003d (EditMemberCommand) other;","lastModifiedDate":"2023-10-26"},{"lineNumber":141,"author":{"gitId":"ph-nathan"},"content":"        return index.equals(otherEditMemberCommand.index)","lastModifiedDate":"2023-10-26"},{"lineNumber":142,"author":{"gitId":"ph-nathan"},"content":"                \u0026\u0026 editMemberDescriptor.equals(otherEditMemberCommand.editMemberDescriptor);","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":149,"author":{"gitId":"wr1159"},"content":"                .add(\"editMemberDescriptor\", editMemberDescriptor)","lastModifiedDate":"2023-10-02"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"wr1159"},"content":"     * Stores the details to edit the member with. Each non-empty field value will replace the","lastModifiedDate":"2023-10-02"},{"lineNumber":155,"author":{"gitId":"wr1159"},"content":"     * corresponding field value of the member.","lastModifiedDate":"2023-10-02"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"wr1159"},"content":"    public static class EditMemberDescriptor {","lastModifiedDate":"2023-10-02"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":159,"author":{"gitId":"andrechuakj"},"content":"        private Gender gender;","lastModifiedDate":"2023-10-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"wr1159"},"content":"        public EditMemberDescriptor() {}","lastModifiedDate":"2023-10-02"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":171,"author":{"gitId":"wr1159"},"content":"        public EditMemberDescriptor(EditMemberDescriptor toCopy) {","lastModifiedDate":"2023-10-02"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":173,"author":{"gitId":"andrechuakj"},"content":"            setGender(toCopy.gender);","lastModifiedDate":"2023-10-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"ph-nathan"},"content":"            return CollectionUtil.isAnyNonNull(name, gender, phone, email, address, tags);","lastModifiedDate":"2023-10-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"andrechuakj"},"content":"        public void setGender(Gender gender) {","lastModifiedDate":"2023-10-18"},{"lineNumber":196,"author":{"gitId":"andrechuakj"},"content":"            this.gender \u003d gender;","lastModifiedDate":"2023-10-18"},{"lineNumber":197,"author":{"gitId":"andrechuakj"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":198,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":199,"author":{"gitId":"andrechuakj"},"content":"        public Optional\u003cGender\u003e getGender() {","lastModifiedDate":"2023-10-18"},{"lineNumber":200,"author":{"gitId":"andrechuakj"},"content":"            return Optional.ofNullable(gender);","lastModifiedDate":"2023-10-18"},{"lineNumber":201,"author":{"gitId":"andrechuakj"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":202,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":228,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":229,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":230,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":236,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":237,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":238,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":239,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":251,"author":{"gitId":"wr1159"},"content":"            if (!(other instanceof EditMemberDescriptor)) {","lastModifiedDate":"2023-10-02"},{"lineNumber":252,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":255,"author":{"gitId":"wr1159"},"content":"            EditMemberDescriptor otherEditMemberDescriptor \u003d (EditMemberDescriptor) other;","lastModifiedDate":"2023-10-02"},{"lineNumber":256,"author":{"gitId":"wr1159"},"content":"            return Objects.equals(name, otherEditMemberDescriptor.name)","lastModifiedDate":"2023-10-02"},{"lineNumber":257,"author":{"gitId":"ph-nathan"},"content":"                    \u0026\u0026 Objects.equals(gender, otherEditMemberDescriptor.gender)","lastModifiedDate":"2023-10-26"},{"lineNumber":258,"author":{"gitId":"wr1159"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditMemberDescriptor.phone)","lastModifiedDate":"2023-10-02"},{"lineNumber":259,"author":{"gitId":"wr1159"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditMemberDescriptor.email)","lastModifiedDate":"2023-10-02"},{"lineNumber":260,"author":{"gitId":"wr1159"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditMemberDescriptor.address)","lastModifiedDate":"2023-10-02"},{"lineNumber":261,"author":{"gitId":"wr1159"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditMemberDescriptor.tags);","lastModifiedDate":"2023-10-02"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":268,"author":{"gitId":"andrechuakj"},"content":"                    .add(\"gender\", gender)","lastModifiedDate":"2023-10-18"},{"lineNumber":269,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":271,"author":{"gitId":"andrechuakj"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2023-10-21"},{"lineNumber":272,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"wr1159":39,"andrechuakj":37,"SelwynAng":2,"ph-nathan":26,"-":172}},{"path":"src/main/java/seedu/ccacommander/logic/commands/EnrolCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dylkaw"},"content":"package seedu.ccacommander.logic.commands;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"dylkaw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_EVENT;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_HOURS;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_MEMBER;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"dylkaw"},"content":"import java.util.List;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.commons.core.index.Index;","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.logic.Messages;","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.model.Model;","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.enrolment.Enrolment;","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.enrolment.Hours;","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.enrolment.Remark;","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.model.event.Event;","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.model.member.Member;","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.model.shared.Name;","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.ui.EventListPanel;","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.ui.MemberListPanel;","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"dylkaw"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"dylkaw"},"content":" * Enrols a member to an event in CcaCommander.","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"dylkaw"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"dylkaw"},"content":"public class EnrolCommand extends Command {","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"dylkaw"},"content":"    public static final String COMMAND_WORD \u003d \"enrol\";","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"dylkaw"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Enrols a member to an event in CCACommander. \\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"dylkaw"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"dylkaw"},"content":"            + PREFIX_MEMBER + \"MEMBER_INDEX \"","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"dylkaw"},"content":"            + PREFIX_EVENT + \"EVENT_INDEX \"","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"dylkaw"},"content":"            + PREFIX_HOURS + \"HOURS \"","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"dylkaw"},"content":"            + PREFIX_REMARK + \"REMARK \\n\"","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"dylkaw"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"dylkaw"},"content":"            + PREFIX_MEMBER + \"1 \"","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"dylkaw"},"content":"            + PREFIX_EVENT + \"1 \"","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"dylkaw"},"content":"            + PREFIX_HOURS + \"0 \"","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"dylkaw"},"content":"            + PREFIX_REMARK + \"Role: Supervisor\";","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"dylkaw"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Successfully added: %1$s\";","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"SelwynAng"},"content":"    public static final String MESSAGE_COMMIT \u003d \"Successfully enrolled: %1$s\";","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"andrechuakj"},"content":"    public static final String MESSAGE_DUPLICATE_ENROLMENT \u003d \"This member has already been enrolled to the event. \";","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"dylkaw"},"content":"    private final Index memberIndex;","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"dylkaw"},"content":"    private final Index eventIndex;","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"andrechuakj"},"content":"    private final Optional\u003cHours\u003e hours;","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"andrechuakj"},"content":"    private final Optional\u003cRemark\u003e remark;","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"andrechuakj"},"content":"     * Creates an EnrolCommand to add the specified {@code Enrolment}","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"andrechuakj"},"content":"    public EnrolCommand(Index memberIndex, Index eventIndex, Optional\u003cHours\u003e hours, Optional\u003cRemark\u003e remark) {","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"dylkaw"},"content":"        requireNonNull(memberIndex);","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"dylkaw"},"content":"        requireNonNull(eventIndex);","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"dylkaw"},"content":"        requireNonNull(hours);","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"dylkaw"},"content":"        requireNonNull(remark);","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"dylkaw"},"content":"        this.memberIndex \u003d memberIndex;","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"dylkaw"},"content":"        this.eventIndex \u003d eventIndex;","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"dylkaw"},"content":"        this.hours \u003d hours;","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"dylkaw"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"dylkaw"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"dylkaw"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-23"},{"lineNumber":72,"author":{"gitId":"dylkaw"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-23"},{"lineNumber":73,"author":{"gitId":"dylkaw"},"content":"        List\u003cMember\u003e lastShownMemberList \u003d model.getFilteredMemberList();","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"dylkaw"},"content":"        List\u003cEvent\u003e lastShownEventList \u003d model.getFilteredEventList();","lastModifiedDate":"2023-10-23"},{"lineNumber":75,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"dylkaw"},"content":"        if (memberIndex.getZeroBased() \u003e\u003d lastShownMemberList.size()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"dylkaw"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-23"},{"lineNumber":78,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"dylkaw"},"content":"        if (eventIndex.getZeroBased() \u003e\u003d lastShownEventList.size()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":81,"author":{"gitId":"dylkaw"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":83,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":84,"author":{"gitId":"dylkaw"},"content":"        Member member \u003d lastShownMemberList.get(memberIndex.getZeroBased());","lastModifiedDate":"2023-10-23"},{"lineNumber":85,"author":{"gitId":"dylkaw"},"content":"        Event event \u003d lastShownEventList.get(eventIndex.getZeroBased());","lastModifiedDate":"2023-10-23"},{"lineNumber":86,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":87,"author":{"gitId":"dylkaw"},"content":"        Name memberName \u003d member.getName();","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"dylkaw"},"content":"        Name eventName \u003d event.getName();","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":90,"author":{"gitId":"andrechuakj"},"content":"        Enrolment toAdd \u003d new Enrolment(memberName, eventName, this.hours, this.remark);","lastModifiedDate":"2023-10-28"},{"lineNumber":91,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":92,"author":{"gitId":"andrechuakj"},"content":"        if (model.hasEnrolment(toAdd)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":93,"author":{"gitId":"andrechuakj"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_ENROLMENT);","lastModifiedDate":"2023-10-28"},{"lineNumber":94,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":95,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":96,"author":{"gitId":"andrechuakj"},"content":"        model.createEnrolment(toAdd);","lastModifiedDate":"2023-10-28"},{"lineNumber":97,"author":{"gitId":"andrechuakj"},"content":"        model.commit(String.format(MESSAGE_COMMIT, toAdd.getMemberAndEventEnrolment()));","lastModifiedDate":"2023-10-28"},{"lineNumber":98,"author":{"gitId":"ph-nathan"},"content":"        MemberListPanel.setDisplayMemberHoursAndRemark(false);","lastModifiedDate":"2023-11-03"},{"lineNumber":99,"author":{"gitId":"ph-nathan"},"content":"        EventListPanel.setDisplayEventHoursAndRemark(false);","lastModifiedDate":"2023-11-03"},{"lineNumber":100,"author":{"gitId":"dylkaw"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2023-10-23"},{"lineNumber":101,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":102,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":103,"author":{"gitId":"dylkaw"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":104,"author":{"gitId":"dylkaw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-23"},{"lineNumber":105,"author":{"gitId":"dylkaw"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-23"},{"lineNumber":106,"author":{"gitId":"dylkaw"},"content":"            return true;","lastModifiedDate":"2023-10-23"},{"lineNumber":107,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":108,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":109,"author":{"gitId":"dylkaw"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-23"},{"lineNumber":110,"author":{"gitId":"dylkaw"},"content":"        if (!(other instanceof EnrolCommand)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":111,"author":{"gitId":"dylkaw"},"content":"            return false;","lastModifiedDate":"2023-10-23"},{"lineNumber":112,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":113,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":114,"author":{"gitId":"dylkaw"},"content":"        EnrolCommand otherEnrolCommand \u003d (EnrolCommand) other;","lastModifiedDate":"2023-10-24"},{"lineNumber":115,"author":{"gitId":"dylkaw"},"content":"        return memberIndex.equals(otherEnrolCommand.memberIndex)","lastModifiedDate":"2023-10-24"},{"lineNumber":116,"author":{"gitId":"dylkaw"},"content":"                \u0026\u0026 eventIndex.equals(otherEnrolCommand.eventIndex)","lastModifiedDate":"2023-10-24"},{"lineNumber":117,"author":{"gitId":"dylkaw"},"content":"                \u0026\u0026 hours.equals(otherEnrolCommand.hours)","lastModifiedDate":"2023-10-24"},{"lineNumber":118,"author":{"gitId":"dylkaw"},"content":"                \u0026\u0026 remark.equals(otherEnrolCommand.remark);","lastModifiedDate":"2023-10-24"},{"lineNumber":119,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":120,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":121,"author":{"gitId":"dylkaw"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":122,"author":{"gitId":"dylkaw"},"content":"    public String toString() {","lastModifiedDate":"2023-10-23"},{"lineNumber":123,"author":{"gitId":"dylkaw"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-23"},{"lineNumber":124,"author":{"gitId":"dylkaw"},"content":"                .add(\"member index\", memberIndex)","lastModifiedDate":"2023-10-23"},{"lineNumber":125,"author":{"gitId":"dylkaw"},"content":"                .add(\"event index\", eventIndex)","lastModifiedDate":"2023-10-23"},{"lineNumber":126,"author":{"gitId":"dylkaw"},"content":"                .add(\"hours\", hours)","lastModifiedDate":"2023-10-23"},{"lineNumber":127,"author":{"gitId":"dylkaw"},"content":"                .add(\"remark\", remark)","lastModifiedDate":"2023-10-23"},{"lineNumber":128,"author":{"gitId":"dylkaw"},"content":"                .toString();","lastModifiedDate":"2023-10-23"},{"lineNumber":129,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":130,"author":{"gitId":"dylkaw"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"andrechuakj":14,"dylkaw":111,"SelwynAng":1,"ph-nathan":4}},{"path":"src/main/java/seedu/ccacommander/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.commands;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting CCACommander as requested ...\";","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"andrechuakj":3,"-":16}},{"path":"src/main/java/seedu/ccacommander/logic/commands/FindEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"package seedu.ccacommander.logic.commands;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.logic.Messages;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.model.Model;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.model.event.EventNameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.ui.EventListPanel;","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.ui.MemberListPanel;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":" * Finds and lists all events in CcaCommander whose name contains any of the argument keywords.","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"public class FindEventCommand extends Command {","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"    public static final String COMMAND_WORD \u003d \"findEvent\";","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all events whose names contain any of \"","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"            + \"Example: \" + COMMAND_WORD + \" party marathon study\";","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"SelwynAng"},"content":"    private final EventNameContainsKeywordsPredicate predicate;","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"SelwynAng"},"content":"    public FindEventCommand(EventNameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"SelwynAng"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"SelwynAng"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"SelwynAng"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"SelwynAng"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"SelwynAng"},"content":"        model.updateFilteredEventList(predicate);","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"ph-nathan"},"content":"        MemberListPanel.setDisplayMemberHoursAndRemark(false);","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"ph-nathan"},"content":"        EventListPanel.setDisplayEventHoursAndRemark(false);","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"SelwynAng"},"content":"        return new CommandResult(","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"SelwynAng"},"content":"                String.format(Messages.MESSAGE_EVENTS_LISTED_OVERVIEW, model.getFilteredEventList().size()));","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"SelwynAng"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"SelwynAng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"SelwynAng"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"SelwynAng"},"content":"            return true;","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"SelwynAng"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"SelwynAng"},"content":"        if (!(other instanceof FindEventCommand)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"SelwynAng"},"content":"            return false;","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"SelwynAng"},"content":"        FindEventCommand otherFindEventCommand \u003d (FindEventCommand) other;","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"SelwynAng"},"content":"        return predicate.equals(otherFindEventCommand.predicate);","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"SelwynAng"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"SelwynAng"},"content":"    public String toString() {","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"SelwynAng"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"SelwynAng"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"SelwynAng"},"content":"                .toString();","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"SelwynAng":58,"ph-nathan":6}},{"path":"src/main/java/seedu/ccacommander/logic/commands/FindMemberCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.commands;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.Messages;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.MemberNameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.ui.EventListPanel;","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.ui.MemberListPanel;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":" * Finds and lists all members in CcaCommander whose name contains any of the argument keywords.","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"public class FindMemberCommand extends Command {","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"    public static final String COMMAND_WORD \u003d \"findMember\";","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"wr1159"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all members whose names contain any of \"","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"dylkaw"},"content":"    private final MemberNameContainsKeywordsPredicate predicate;","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"SelwynAng"},"content":"    public FindMemberCommand(MemberNameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"wr1159"},"content":"        model.updateFilteredMemberList(predicate);","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"ph-nathan"},"content":"        MemberListPanel.setDisplayMemberHoursAndRemark(false);","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"ph-nathan"},"content":"        EventListPanel.setDisplayEventHoursAndRemark(false);","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"wr1159"},"content":"                String.format(Messages.MESSAGE_MEMBERS_LISTED_OVERVIEW, model.getFilteredMemberList().size()));","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"SelwynAng"},"content":"        if (!(other instanceof FindMemberCommand)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"SelwynAng"},"content":"        FindMemberCommand otherFindMemberCommand \u003d (FindMemberCommand) other;","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"SelwynAng"},"content":"        return predicate.equals(otherFindMemberCommand.predicate);","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"wr1159":3,"andrechuakj":6,"SelwynAng":6,"dylkaw":1,"ph-nathan":5,"-":42}},{"path":"src/main/java/seedu/ccacommander/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.commands;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"andrechuakj":2,"-":19}},{"path":"src/main/java/seedu/ccacommander/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.commands;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.model.Model.PREDICATE_SHOW_ALL_EVENTS;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.model.Model.PREDICATE_SHOW_ALL_MEMBERS;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.ui.EventListPanel;","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.ui.MemberListPanel;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":" * Lists all members and events in CcaCommander to the user.","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"ph-nathan"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all members and events\";","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"ph-nathan"},"content":"        MemberListPanel.setDisplayMemberHoursAndRemark(false);","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"ph-nathan"},"content":"        EventListPanel.setDisplayEventHoursAndRemark(false);","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"wr1159"},"content":"        model.updateFilteredMemberList(PREDICATE_SHOW_ALL_MEMBERS);","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"ph-nathan"},"content":"        model.updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wr1159":1,"andrechuakj":3,"ph-nathan":14,"-":18}},{"path":"src/main/java/seedu/ccacommander/logic/commands/RedoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"package seedu.ccacommander.logic.commands;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.model.Model.PREDICATE_SHOW_ALL_EVENTS;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.model.Model.PREDICATE_SHOW_ALL_MEMBERS;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.model.Model;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"wr1159"},"content":"import seedu.ccacommander.ui.EventListPanel;","lastModifiedDate":"2023-11-06"},{"lineNumber":10,"author":{"gitId":"wr1159"},"content":"import seedu.ccacommander.ui.MemberListPanel;","lastModifiedDate":"2023-11-06"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":" * Redoes the latest redoable command {@code Command}","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"public class RedoCommand extends Command {","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"    public static final String COMMAND_WORD \u003d \"redo\";","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"    public static final String MESSAGE_SUCCESS_REDO \u003d \"Command successfully redone: \\n%s\";","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"    public static final String MESSAGE_NO_AVAILABLE_COMMAND \u003d \"No available commands to redo.\";","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":"        if (!model.canRedo()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"SelwynAng"},"content":"            throw new CommandException(MESSAGE_NO_AVAILABLE_COMMAND);","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"SelwynAng"},"content":"        String redoCommandMessage \u003d model.redo();","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":30,"author":{"gitId":"wr1159"},"content":"        MemberListPanel.setDisplayMemberHoursAndRemark(false);","lastModifiedDate":"2023-11-06"},{"lineNumber":31,"author":{"gitId":"wr1159"},"content":"        EventListPanel.setDisplayEventHoursAndRemark(false);","lastModifiedDate":"2023-11-06"},{"lineNumber":32,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":33,"author":{"gitId":"SelwynAng"},"content":"        model.updateFilteredMemberList(PREDICATE_SHOW_ALL_MEMBERS);","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"SelwynAng"},"content":"        model.updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"SelwynAng"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS_REDO, redoCommandMessage));","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"wr1159":6,"SelwynAng":31}},{"path":"src/main/java/seedu/ccacommander/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"package seedu.ccacommander.logic.commands;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.model.Model.PREDICATE_SHOW_ALL_EVENTS;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.model.Model.PREDICATE_SHOW_ALL_MEMBERS;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.model.Model;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"wr1159"},"content":"import seedu.ccacommander.ui.EventListPanel;","lastModifiedDate":"2023-11-06"},{"lineNumber":10,"author":{"gitId":"wr1159"},"content":"import seedu.ccacommander.ui.MemberListPanel;","lastModifiedDate":"2023-11-06"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":" * Undoes the latest undoable command {@code Command}","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"    public static final String MESSAGE_SUCCESS_UNDO \u003d \"Previous command successfully undone: \\n%s\";","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"    public static final String MESSAGE_NO_AVAILABLE_COMMAND \u003d \"No available commands to undo.\";","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":"        if (!model.canUndo()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"SelwynAng"},"content":"            throw new CommandException(MESSAGE_NO_AVAILABLE_COMMAND);","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"SelwynAng"},"content":"        String undoCommandMessage \u003d model.undo();","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":30,"author":{"gitId":"wr1159"},"content":"        MemberListPanel.setDisplayMemberHoursAndRemark(false);","lastModifiedDate":"2023-11-06"},{"lineNumber":31,"author":{"gitId":"wr1159"},"content":"        EventListPanel.setDisplayEventHoursAndRemark(false);","lastModifiedDate":"2023-11-06"},{"lineNumber":32,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":33,"author":{"gitId":"SelwynAng"},"content":"        model.updateFilteredMemberList(PREDICATE_SHOW_ALL_MEMBERS);","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"SelwynAng"},"content":"        model.updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"SelwynAng"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS_UNDO, undoCommandMessage));","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"wr1159":6,"SelwynAng":31}},{"path":"src/main/java/seedu/ccacommander/logic/commands/UnenrolCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"package seedu.ccacommander.logic.commands;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.model.ModelManager.findEnrolmentFromList;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"import java.util.List;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.commons.core.index.Index;","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.logic.Messages;","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.model.Model;","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.model.enrolment.Enrolment;","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.model.enrolment.exceptions.EnrolmentNotFoundException;","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.model.event.Event;","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.model.member.Member;","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.model.shared.Name;","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"/**","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":" * Deletes an enrolment identified using the displayed indexes of the member and event from CcaCommander.","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":" */","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"public class UnenrolCommand extends Command {","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"    public static final String COMMAND_WORD \u003d \"unenrol\";","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"SelwynAng"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"SelwynAng"},"content":"            + \": Deletes the enrolment identified by the member\u0027s index number used in the displayed member list \"","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"SelwynAng"},"content":"            + \"and the event\u0027s index number used in the displayed event list.\\n\"","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"SelwynAng"},"content":"            + \"Parameters: MEMBER_INDEX (must be a positive integer), EVENT_INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"SelwynAng"},"content":"            + \"Example: \" + COMMAND_WORD + \" m/1\" + \" e/1\";","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"SelwynAng"},"content":"    public static final String MESSAGE_DELETE_ENROLMENT_SUCCESS \u003d \"Deleted Enrolment: %1$s\";","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"SelwynAng"},"content":"    public static final String MESSAGE_COMMIT \u003d \"Deleted Enrolment: %1$s.\";","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"SelwynAng"},"content":"    private final Index memberIndex;","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"SelwynAng"},"content":"    private final Index eventIndex;","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"SelwynAng"},"content":"     * Creates an UnenrolCommand to remove the specified {@code Enrolment}","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"SelwynAng"},"content":"    public UnenrolCommand(Index memberIndex, Index eventIndex) {","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"SelwynAng"},"content":"        this.memberIndex \u003d memberIndex;","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"SelwynAng"},"content":"        this.eventIndex \u003d eventIndex;","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"SelwynAng"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"SelwynAng"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"SelwynAng"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"SelwynAng"},"content":"        List\u003cEnrolment\u003e lastShownEnrolmentList \u003d model.getFilteredEnrolmentList();","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"SelwynAng"},"content":"        List\u003cMember\u003e lastShownMemberList \u003d model.getFilteredMemberList();","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"SelwynAng"},"content":"        List\u003cEvent\u003e lastShownEventList \u003d model.getFilteredEventList();","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"SelwynAng"},"content":"        int zeroBasedMemberIndex \u003d memberIndex.getZeroBased();","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"SelwynAng"},"content":"        int zeroBasedEventIndex \u003d eventIndex.getZeroBased();","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"SelwynAng"},"content":"        if (zeroBasedMemberIndex \u003e\u003d lastShownMemberList.size()","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"SelwynAng"},"content":"                \u0026\u0026 zeroBasedEventIndex \u003c lastShownEventList.size()) {","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"SelwynAng"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"SelwynAng"},"content":"        } else if (zeroBasedEventIndex \u003e\u003d lastShownEventList.size()","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"SelwynAng"},"content":"                \u0026\u0026 zeroBasedMemberIndex \u003c lastShownMemberList.size()) {","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"SelwynAng"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"SelwynAng"},"content":"        } else if (zeroBasedMemberIndex \u003e\u003d lastShownMemberList.size()","lastModifiedDate":"2023-10-29"},{"lineNumber":60,"author":{"gitId":"SelwynAng"},"content":"                \u0026\u0026 zeroBasedEventIndex \u003e\u003d lastShownEventList.size()) {","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"SelwynAng"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_MEMBER_AND_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"SelwynAng"},"content":"        Member member \u003d lastShownMemberList.get(zeroBasedMemberIndex);","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"SelwynAng"},"content":"        Event event \u003d lastShownEventList.get(zeroBasedEventIndex);","lastModifiedDate":"2023-10-28"},{"lineNumber":66,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":67,"author":{"gitId":"SelwynAng"},"content":"        Name memberName \u003d member.getName();","lastModifiedDate":"2023-10-28"},{"lineNumber":68,"author":{"gitId":"SelwynAng"},"content":"        Name eventName \u003d event.getName();","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"SelwynAng"},"content":"        Enrolment enrolmentToDelete;","lastModifiedDate":"2023-10-29"},{"lineNumber":70,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":71,"author":{"gitId":"SelwynAng"},"content":"        try {","lastModifiedDate":"2023-10-29"},{"lineNumber":72,"author":{"gitId":"SelwynAng"},"content":"            enrolmentToDelete \u003d findEnrolmentFromList(lastShownEnrolmentList, memberName, eventName);","lastModifiedDate":"2023-10-29"},{"lineNumber":73,"author":{"gitId":"SelwynAng"},"content":"        } catch (EnrolmentNotFoundException ee) {","lastModifiedDate":"2023-10-29"},{"lineNumber":74,"author":{"gitId":"SelwynAng"},"content":"            throw new CommandException(String.format(Messages.MESSAGE_ENROLMENT_DOES_NOT_EXIST,","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"SelwynAng"},"content":"                    memberIndex.getOneBased(), eventIndex.getOneBased()));","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":77,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":78,"author":{"gitId":"SelwynAng"},"content":"        assert enrolmentToDelete !\u003d null : \"The enrolment to delete should be null\";","lastModifiedDate":"2023-10-29"},{"lineNumber":79,"author":{"gitId":"SelwynAng"},"content":"        model.deleteEnrolment(enrolmentToDelete);","lastModifiedDate":"2023-10-28"},{"lineNumber":80,"author":{"gitId":"SelwynAng"},"content":"        model.commit(String.format(MESSAGE_COMMIT, enrolmentToDelete.getMemberAndEventEnrolment()));","lastModifiedDate":"2023-10-28"},{"lineNumber":81,"author":{"gitId":"SelwynAng"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_ENROLMENT_SUCCESS, Messages.format(enrolmentToDelete)));","lastModifiedDate":"2023-10-28"},{"lineNumber":82,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":83,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":84,"author":{"gitId":"SelwynAng"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":85,"author":{"gitId":"SelwynAng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-28"},{"lineNumber":86,"author":{"gitId":"SelwynAng"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-28"},{"lineNumber":87,"author":{"gitId":"SelwynAng"},"content":"            return true;","lastModifiedDate":"2023-10-28"},{"lineNumber":88,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":89,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":90,"author":{"gitId":"SelwynAng"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-28"},{"lineNumber":91,"author":{"gitId":"SelwynAng"},"content":"        if (!(other instanceof UnenrolCommand)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":92,"author":{"gitId":"SelwynAng"},"content":"            return false;","lastModifiedDate":"2023-10-28"},{"lineNumber":93,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":94,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":95,"author":{"gitId":"SelwynAng"},"content":"        UnenrolCommand otherUnenrolCommand \u003d (UnenrolCommand) other;","lastModifiedDate":"2023-10-28"},{"lineNumber":96,"author":{"gitId":"SelwynAng"},"content":"        return memberIndex.equals(otherUnenrolCommand.memberIndex)","lastModifiedDate":"2023-10-28"},{"lineNumber":97,"author":{"gitId":"SelwynAng"},"content":"                \u0026\u0026 eventIndex.equals(otherUnenrolCommand.eventIndex);","lastModifiedDate":"2023-10-28"},{"lineNumber":98,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":99,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":100,"author":{"gitId":"SelwynAng"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":101,"author":{"gitId":"SelwynAng"},"content":"    public String toString() {","lastModifiedDate":"2023-10-28"},{"lineNumber":102,"author":{"gitId":"SelwynAng"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-28"},{"lineNumber":103,"author":{"gitId":"SelwynAng"},"content":"                .add(\"memberIndex\", memberIndex)","lastModifiedDate":"2023-10-28"},{"lineNumber":104,"author":{"gitId":"SelwynAng"},"content":"                .add(\"eventIndex\", eventIndex)","lastModifiedDate":"2023-10-28"},{"lineNumber":105,"author":{"gitId":"SelwynAng"},"content":"                .toString();","lastModifiedDate":"2023-10-28"},{"lineNumber":106,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":107,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"SelwynAng":107}},{"path":"src/main/java/seedu/ccacommander/logic/commands/ViewEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"package seedu.ccacommander.logic.commands;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"import java.util.Collection;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":"import java.util.List;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.commons.core.index.Index;","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.logic.Messages;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.Model;","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.event.Event;","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.event.SameEventPredicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.member.MemberInNameCollectionPredicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.shared.Name;","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.ui.EventListPanel;","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.ui.MemberListPanel;","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"ph-nathan"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"ph-nathan"},"content":" * Lists all members of an event to the user","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"ph-nathan"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"public class ViewEventCommand extends Command {","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"ph-nathan"},"content":"    public static final String COMMAND_WORD \u003d \"viewEvent\";","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"ph-nathan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"ph-nathan"},"content":"            + \": Views the members of the event identified by the index number used in the displayed event list.\\n\"","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"ph-nathan"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"ph-nathan"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"ph-nathan"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all members in %1$s.\";","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"ph-nathan"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"ph-nathan"},"content":"     * Creates a ViewEventCommand to list all members of the event displayed at the specified index.","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"ph-nathan"},"content":"    public ViewEventCommand(Index targetIndex) {","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"ph-nathan"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"ph-nathan"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"ph-nathan"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"ph-nathan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"ph-nathan"},"content":"        List\u003cEvent\u003e lastShownEventList \u003d model.getFilteredEventList();","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"ph-nathan"},"content":"        if (targetIndex.getOneBased() \u003e lastShownEventList.size()) {","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"ph-nathan"},"content":"            throw new CommandException(MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":50,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":51,"author":{"gitId":"ph-nathan"},"content":"        Event event \u003d lastShownEventList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"ph-nathan"},"content":"        Name eventName \u003d event.getName();","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"ph-nathan"},"content":"        Collection\u003cName\u003e memberNameCollection \u003d model.updateMemberHoursAndRemark(eventName);","lastModifiedDate":"2023-11-03"},{"lineNumber":56,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":57,"author":{"gitId":"ph-nathan"},"content":"        MemberListPanel.setDisplayMemberHoursAndRemark(true);","lastModifiedDate":"2023-11-03"},{"lineNumber":58,"author":{"gitId":"ph-nathan"},"content":"        EventListPanel.setDisplayEventHoursAndRemark(false);","lastModifiedDate":"2023-11-03"},{"lineNumber":59,"author":{"gitId":"ph-nathan"},"content":"        model.updateFilteredMemberList(new MemberInNameCollectionPredicate(memberNameCollection));","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"ph-nathan"},"content":"        model.updateFilteredEventList(new SameEventPredicate(event));","lastModifiedDate":"2023-10-29"},{"lineNumber":61,"author":{"gitId":"ph-nathan"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(event)));","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":63,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":64,"author":{"gitId":"ph-nathan"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":65,"author":{"gitId":"ph-nathan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-29"},{"lineNumber":66,"author":{"gitId":"ph-nathan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-10-29"},{"lineNumber":67,"author":{"gitId":"ph-nathan"},"content":"                || (other instanceof ViewEventCommand // instanceof handles nulls","lastModifiedDate":"2023-10-29"},{"lineNumber":68,"author":{"gitId":"ph-nathan"},"content":"                \u0026\u0026 targetIndex.equals(((ViewEventCommand) other).targetIndex));","lastModifiedDate":"2023-10-29"},{"lineNumber":69,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":70,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"ph-nathan":70}},{"path":"src/main/java/seedu/ccacommander/logic/commands/ViewMemberCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"package seedu.ccacommander.logic.commands;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"import java.util.Collection;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":"import java.util.List;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.commons.core.index.Index;","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.logic.Messages;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.Model;","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.event.EventInNameCollectionPredicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.member.Member;","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.member.SameMemberPredicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.shared.Name;","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.ui.EventListPanel;","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.ui.MemberListPanel;","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"ph-nathan"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"ph-nathan"},"content":" * Lists all events of a member to the user","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"ph-nathan"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"public class ViewMemberCommand extends Command {","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"ph-nathan"},"content":"    public static final String COMMAND_WORD \u003d \"viewMember\";","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"ph-nathan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"ph-nathan"},"content":"            + \": Views the events of the member identified by the index number used in the displayed member list.\\n\"","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"ph-nathan"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"ph-nathan"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"ph-nathan"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all events of %1$s.\";","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"ph-nathan"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"ph-nathan"},"content":"     * Creates a ViewMemberCommand to list all events of the member displayed at the specified index.","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"ph-nathan"},"content":"    public ViewMemberCommand(Index targetIndex) {","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"ph-nathan"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"ph-nathan"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"ph-nathan"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"ph-nathan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"ph-nathan"},"content":"        List\u003cMember\u003e lastShownMemberList \u003d model.getFilteredMemberList();","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"ph-nathan"},"content":"        if (targetIndex.getOneBased() \u003e lastShownMemberList.size()) {","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"ph-nathan"},"content":"            throw new CommandException(MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":50,"author":{"gitId":"ph-nathan"},"content":"        Member member \u003d lastShownMemberList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-29"},{"lineNumber":51,"author":{"gitId":"ph-nathan"},"content":"        Name memberName \u003d member.getName();","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"ph-nathan"},"content":"        Collection\u003cName\u003e eventNamesCollection \u003d model.updateEventHoursAndRemark(memberName);","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"ph-nathan"},"content":"        MemberListPanel.setDisplayMemberHoursAndRemark(false);","lastModifiedDate":"2023-11-03"},{"lineNumber":56,"author":{"gitId":"ph-nathan"},"content":"        EventListPanel.setDisplayEventHoursAndRemark(true);","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"ph-nathan"},"content":"        model.updateFilteredMemberList(new SameMemberPredicate(member));","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"ph-nathan"},"content":"        model.updateFilteredEventList(new EventInNameCollectionPredicate(eventNamesCollection));","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"ph-nathan"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(member)));","lastModifiedDate":"2023-10-29"},{"lineNumber":60,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":61,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"ph-nathan"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":63,"author":{"gitId":"ph-nathan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-29"},{"lineNumber":64,"author":{"gitId":"ph-nathan"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-10-29"},{"lineNumber":65,"author":{"gitId":"ph-nathan"},"content":"                || (other instanceof ViewMemberCommand","lastModifiedDate":"2023-10-29"},{"lineNumber":66,"author":{"gitId":"ph-nathan"},"content":"                \u0026\u0026 targetIndex.equals(((ViewMemberCommand) other).targetIndex));","lastModifiedDate":"2023-10-29"},{"lineNumber":67,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":68,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"ph-nathan":68}},{"path":"src/main/java/seedu/ccacommander/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.commands.exceptions;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"andrechuakj":1,"-":16}},{"path":"src/main/java/seedu/ccacommander/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.parser;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.Messages;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Throws a {@code ParseException} if any of the prefixes given in {@code prefixes} appeared more than","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * once among the arguments.","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void verifyNoDuplicatePrefixesFor(Prefix... prefixes) throws ParseException {","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Prefix[] duplicatedPrefixes \u003d Stream.of(prefixes).distinct()","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .filter(prefix -\u003e argMultimap.containsKey(prefix) \u0026\u0026 argMultimap.get(prefix).size() \u003e 1)","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .toArray(Prefix[]::new);","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (duplicatedPrefixes.length \u003e 0) {","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new ParseException(Messages.getErrorMessageForDuplicatePrefixes(duplicatedPrefixes));","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"andrechuakj":3,"-":75}},{"path":"src/main/java/seedu/ccacommander/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.parser;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"andrechuakj":1,"-":147}},{"path":"src/main/java/seedu/ccacommander/logic/parser/CcaCommanderParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.parser;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.core.LogsCenter;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.commands.ClearCommand;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.commands.Command;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.commands.CreateEventCommand;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.commands.CreateMemberCommand;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.commands.DeleteEventCommand;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.commands.DeleteMemberCommand;","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.logic.commands.EditEnrolmentCommand;","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.logic.commands.EditEventCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.logic.commands.EditMemberCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.logic.commands.EnrolCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.commands.ExitCommand;","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.logic.commands.FindEventCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.logic.commands.FindMemberCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.commands.ListCommand;","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.logic.commands.RedoCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.logic.commands.UndoCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.logic.commands.UnenrolCommand;","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.logic.commands.ViewEventCommand;","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.logic.commands.ViewMemberCommand;","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"andrechuakj"},"content":"public class CcaCommanderParser {","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"andrechuakj"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(CcaCommanderParser.class);","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"dylkaw"},"content":"        case CreateMemberCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"dylkaw"},"content":"            return new CreateMemberCommandParser().parse(arguments);","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"dylkaw"},"content":"        case CreateEventCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"dylkaw"},"content":"            return new CreateEventCommandParser().parse(arguments);","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"ph-nathan"},"content":"        case EditMemberCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"ph-nathan"},"content":"            return new EditMemberCommandParser().parse(arguments);","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"ph-nathan"},"content":"        case EditEventCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"ph-nathan"},"content":"            return new EditEventCommandParser().parse(arguments);","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"dylkaw"},"content":"        case EditEnrolmentCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-28"},{"lineNumber":80,"author":{"gitId":"dylkaw"},"content":"            return new EditEnrolmentCommandParser().parse(arguments);","lastModifiedDate":"2023-10-28"},{"lineNumber":81,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":82,"author":{"gitId":"SelwynAng"},"content":"        case DeleteMemberCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"SelwynAng"},"content":"            return new DeleteMemberCommandParser().parse(arguments);","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"SelwynAng"},"content":"        case DeleteEventCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"SelwynAng"},"content":"            return new DeleteEventCommandParser().parse(arguments);","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"dylkaw"},"content":"        case EnrolCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"dylkaw"},"content":"            return new EnrolCommandParser().parse(arguments);","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":91,"author":{"gitId":"SelwynAng"},"content":"        case UnenrolCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-28"},{"lineNumber":92,"author":{"gitId":"SelwynAng"},"content":"            return new UnenrolCommandParser().parse(arguments);","lastModifiedDate":"2023-10-28"},{"lineNumber":93,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"SelwynAng"},"content":"        case FindMemberCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-23"},{"lineNumber":98,"author":{"gitId":"SelwynAng"},"content":"            return new FindMemberCommandParser().parse(arguments);","lastModifiedDate":"2023-10-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"SelwynAng"},"content":"        case FindEventCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-23"},{"lineNumber":101,"author":{"gitId":"SelwynAng"},"content":"            return new FindEventCommandParser().parse(arguments);","lastModifiedDate":"2023-10-23"},{"lineNumber":102,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":103,"author":{"gitId":"ph-nathan"},"content":"        case ViewMemberCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-29"},{"lineNumber":104,"author":{"gitId":"ph-nathan"},"content":"            return new ViewMemberCommandParser().parse(arguments);","lastModifiedDate":"2023-10-29"},{"lineNumber":105,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":106,"author":{"gitId":"ph-nathan"},"content":"        case ViewEventCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-29"},{"lineNumber":107,"author":{"gitId":"ph-nathan"},"content":"            return new ViewEventCommandParser().parse(arguments);","lastModifiedDate":"2023-10-29"},{"lineNumber":108,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"SelwynAng"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-23"},{"lineNumber":113,"author":{"gitId":"SelwynAng"},"content":"            return new UndoCommand();","lastModifiedDate":"2023-10-23"},{"lineNumber":114,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":115,"author":{"gitId":"SelwynAng"},"content":"        case RedoCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-24"},{"lineNumber":116,"author":{"gitId":"SelwynAng"},"content":"            return new RedoCommand();","lastModifiedDate":"2023-10-24"},{"lineNumber":117,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"andrechuakj":16,"dylkaw":13,"SelwynAng":24,"ph-nathan":15,"-":62}},{"path":"src/main/java/seedu/ccacommander/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.parser;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"dylkaw"},"content":"    // Shared prefixes","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":11,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"dylkaw"},"content":"    // Member prefixes","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"andrechuakj"},"content":"    public static final Prefix PREFIX_GENDER \u003d new Prefix(\"g/\");","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"dylkaw"},"content":"    // Event prefixes","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"dylkaw"},"content":"    public static final Prefix PREFIX_LOCATION \u003d new Prefix(\"l/\");","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"dylkaw"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"andrechuakj"},"content":"    // Enrolment prefixes","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"andrechuakj"},"content":"    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"r/\");","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"andrechuakj"},"content":"    public static final Prefix PREFIX_HOURS \u003d new Prefix(\"h/\");","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"dylkaw"},"content":"    public static final Prefix PREFIX_MEMBER \u003d new Prefix(\"m/\");","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"dylkaw"},"content":"    public static final Prefix PREFIX_EVENT \u003d new Prefix(\"e/\");","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"andrechuakj":6,"dylkaw":8,"-":14}},{"path":"src/main/java/seedu/ccacommander/logic/parser/CreateEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.parser;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"wr1159"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"wr1159"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"dylkaw"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.commands.CreateEventCommand;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.Event;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.EventDate;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.Location;","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.shared.Name;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"wr1159"},"content":"import seedu.ccacommander.model.tag.Tag;","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"dylkaw"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"dylkaw"},"content":" * Parses input arguments and creates a new CreateEventCommand object","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"dylkaw"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"dylkaw"},"content":"public class CreateEventCommandParser implements Parser\u003cCreateEventCommand\u003e {","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"dylkaw"},"content":"     * Parses the given {@code String} of arguments in the context of the CreateEventCommand","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"dylkaw"},"content":"     * and returns an CreateEventCommand object for execution.","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"dylkaw"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"dylkaw"},"content":"    public CreateEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"dylkaw"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"wr1159"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_LOCATION, PREFIX_DATE, PREFIX_TAG);","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"dylkaw"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_LOCATION, PREFIX_DATE)","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"dylkaw"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"dylkaw"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, CreateEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"dylkaw"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_LOCATION, PREFIX_DATE);","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"dylkaw"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"dylkaw"},"content":"        EventDate eventDate \u003d ParserUtil.parseEventDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"dylkaw"},"content":"        Location location \u003d ParserUtil.parseLocation(argMultimap.getValue(PREFIX_LOCATION).get());","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"wr1159"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"wr1159"},"content":"        Event event \u003d new Event(name, eventDate, location, tagList);","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"dylkaw"},"content":"        return new CreateEventCommand(event);","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"dylkaw"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"dylkaw"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"dylkaw"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"dylkaw"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"dylkaw"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"wr1159":6,"andrechuakj":11,"dylkaw":41}},{"path":"src/main/java/seedu/ccacommander/logic/parser/CreateMemberCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.parser;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.commands.CreateMemberCommand;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Address;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Email;","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Gender;","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Member;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Phone;","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.shared.Name;","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.tag.Tag;","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"dylkaw"},"content":" * Parses input arguments and creates a new CreateMemberCommand object","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"dylkaw"},"content":"public class CreateMemberCommandParser implements Parser\u003cCreateMemberCommand\u003e {","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"dylkaw"},"content":"     * Parses the given {@code String} of arguments in the context of the CreateMemberCommand","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"dylkaw"},"content":"     * and returns an CreateMemberCommand object for execution.","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"dylkaw"},"content":"    public CreateMemberCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"andrechuakj"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_GENDER,","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"andrechuakj"},"content":"                        PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"andrechuakj"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_GENDER)","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":42,"author":{"gitId":"dylkaw"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, CreateMemberCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"andrechuakj"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_GENDER,","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"andrechuakj"},"content":"                PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"andrechuakj"},"content":"        Gender gender \u003d ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get());","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"andrechuakj"},"content":"        Phone phone \u003d getParsedPhone(argMultimap);","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"andrechuakj"},"content":"        Email email \u003d getParsedEmail(argMultimap);","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"andrechuakj"},"content":"        Address address \u003d getParsedAddress(argMultimap);","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"andrechuakj"},"content":"        Member member \u003d new Member(name, gender, Optional.ofNullable(phone),","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"andrechuakj"},"content":"                Optional.ofNullable(email), Optional.ofNullable(address), tagList);","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"dylkaw"},"content":"        return new CreateMemberCommand(member);","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"andrechuakj"},"content":"    private Phone getParsedPhone(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"andrechuakj"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"andrechuakj"},"content":"            return ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"andrechuakj"},"content":"        } else {","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"andrechuakj"},"content":"            return null;","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"andrechuakj"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"andrechuakj"},"content":"    private Email getParsedEmail(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"andrechuakj"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2023-10-30"},{"lineNumber":78,"author":{"gitId":"andrechuakj"},"content":"            return ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2023-10-30"},{"lineNumber":79,"author":{"gitId":"andrechuakj"},"content":"        } else {","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"andrechuakj"},"content":"            return null;","lastModifiedDate":"2023-10-30"},{"lineNumber":81,"author":{"gitId":"andrechuakj"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":83,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":84,"author":{"gitId":"andrechuakj"},"content":"    private Address getParsedAddress(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-10-30"},{"lineNumber":85,"author":{"gitId":"andrechuakj"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2023-10-30"},{"lineNumber":86,"author":{"gitId":"andrechuakj"},"content":"            return ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"andrechuakj"},"content":"        } else {","lastModifiedDate":"2023-10-30"},{"lineNumber":88,"author":{"gitId":"andrechuakj"},"content":"            return null;","lastModifiedDate":"2023-10-30"},{"lineNumber":89,"author":{"gitId":"andrechuakj"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":90,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":91,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"andrechuakj":53,"dylkaw":7,"-":32}},{"path":"src/main/java/seedu/ccacommander/logic/parser/DeleteEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.parser;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.core.index.Index;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.commands.DeleteEventCommand;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":" * Parses input arguments and creates a new DeleteEventCommand object","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"public class DeleteEventCommandParser implements Parser\u003cDeleteEventCommand\u003e {","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteEventCommand","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"     * and returns a DeleteEventCommand object for execution.","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"    public DeleteEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"        try {","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"            return new DeleteEventCommand(index);","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteEventCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"andrechuakj":5,"SelwynAng":22}},{"path":"src/main/java/seedu/ccacommander/logic/parser/DeleteMemberCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.parser;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.core.index.Index;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.commands.DeleteMemberCommand;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":" * Parses input arguments and creates a new DeleteMemberCommand object","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"public class DeleteMemberCommandParser implements Parser\u003cDeleteMemberCommand\u003e {","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteMemberCommand","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"     * and returns a DeleteMemberCommand object for execution.","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"    public DeleteMemberCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"        try {","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"            return new DeleteMemberCommand(index);","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteMemberCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"andrechuakj":5,"SelwynAng":22}},{"path":"src/main/java/seedu/ccacommander/logic/parser/EditEnrolmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dylkaw"},"content":"package seedu.ccacommander.logic.parser;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"dylkaw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_EVENT;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_HOURS;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_MEMBER;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"dylkaw"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.commons.core.index.Index;","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.logic.commands.EditEnrolmentCommand;","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.logic.commands.EditEnrolmentCommand.EditEnrolmentDescriptor;","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"dylkaw"},"content":"/**","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"dylkaw"},"content":" * Parses input arguments and creates a new EditEnrolmentCommand object","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"dylkaw"},"content":" */","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"dylkaw"},"content":"public class EditEnrolmentCommandParser implements Parser\u003cEditEnrolmentCommand\u003e {","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"dylkaw"},"content":"     * Parses the given {@code String} of arguments in the context of the EditEnrolmentCommand","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"dylkaw"},"content":"     * and returns an EditEnrolmentCommand object for execution.","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"dylkaw"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"dylkaw"},"content":"    public EditEnrolmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"dylkaw"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"dylkaw"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"dylkaw"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_MEMBER, PREFIX_EVENT, PREFIX_HOURS, PREFIX_REMARK);","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"dylkaw"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_MEMBER, PREFIX_EVENT)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"dylkaw"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditEnrolmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"dylkaw"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_MEMBER, PREFIX_EVENT, PREFIX_HOURS, PREFIX_REMARK);","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"dylkaw"},"content":"        EditEnrolmentDescriptor editEnrolmentDescriptor \u003d new EditEnrolmentDescriptor();","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"dylkaw"},"content":"        if (argMultimap.getValue(PREFIX_HOURS).isPresent()) {","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"dylkaw"},"content":"            editEnrolmentDescriptor.setHours(ParserUtil.parseHours(argMultimap.getValue(PREFIX_HOURS).get()));","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"dylkaw"},"content":"        if (argMultimap.getValue(PREFIX_REMARK).isPresent()) {","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"dylkaw"},"content":"            editEnrolmentDescriptor.setRemark(ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).get()));","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"dylkaw"},"content":"        if (!editEnrolmentDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"dylkaw"},"content":"            throw new ParseException(EditEnrolmentCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"dylkaw"},"content":"        Index memberIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_MEMBER).get());","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"dylkaw"},"content":"        Index eventIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_EVENT).get());","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"dylkaw"},"content":"        return new EditEnrolmentCommand(memberIndex, eventIndex, editEnrolmentDescriptor);","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"dylkaw"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"dylkaw"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"dylkaw"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"dylkaw"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"dylkaw"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"dylkaw":65}},{"path":"src/main/java/seedu/ccacommander/logic/parser/EditEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.parser;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.core.index.Index;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.logic.commands.EditEventCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.logic.commands.EditEventCommand.EditEventDescriptor;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.tag.Tag;","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"ph-nathan"},"content":" * Parses input arguments and creates a new EditEventCommand object","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"ph-nathan"},"content":"public class EditEventCommandParser implements Parser\u003cEditEventCommand\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"ph-nathan"},"content":"     * Parses the given {@code String} of arguments in the context of the EditEventCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"ph-nathan"},"content":"     * and returns an EditEventCommand object for execution.","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"ph-nathan"},"content":"    public EditEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"ph-nathan"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_LOCATION, PREFIX_DATE, PREFIX_TAG);","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"ph-nathan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditEventCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"ph-nathan"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_LOCATION, PREFIX_DATE);","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":46,"author":{"gitId":"ph-nathan"},"content":"        EditEventDescriptor editEventDescriptor \u003d new EditEventDescriptor();","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"ph-nathan"},"content":"            editEventDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"ph-nathan"},"content":"        if (argMultimap.getValue(PREFIX_LOCATION).isPresent()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"ph-nathan"},"content":"            editEventDescriptor.setLocation(ParserUtil.parseLocation(argMultimap.getValue(PREFIX_LOCATION).get()));","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"ph-nathan"},"content":"        if (argMultimap.getValue(PREFIX_DATE).isPresent()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"ph-nathan"},"content":"            editEventDescriptor.setDate(ParserUtil.parseEventDate(argMultimap.getValue(PREFIX_DATE).get()));","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"ph-nathan"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editEventDescriptor::setTags);","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"ph-nathan"},"content":"        if (!editEventDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"ph-nathan"},"content":"            throw new ParseException(EditEventCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"ph-nathan"},"content":"        return new EditEventCommand(index, editEventDescriptor);","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"andrechuakj":7,"ph-nathan":22,"-":52}},{"path":"src/main/java/seedu/ccacommander/logic/parser/EditMemberCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.parser;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.core.index.Index;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.logic.commands.EditMemberCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.logic.commands.EditMemberCommand.EditMemberDescriptor;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.tag.Tag;","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"ph-nathan"},"content":" * Parses input arguments and creates a new EditMemberCommand object","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"ph-nathan"},"content":"public class EditMemberCommandParser implements Parser\u003cEditMemberCommand\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"ph-nathan"},"content":"     * Parses the given {@code String} of arguments in the context of the EditMemberCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"ph-nathan"},"content":"     * and returns an EditMemberCommand object for execution.","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"ph-nathan"},"content":"    public EditMemberCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"ph-nathan"},"content":"                ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"ph-nathan"},"content":"                        PREFIX_NAME, PREFIX_GENDER, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"ph-nathan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"ph-nathan"},"content":"                    EditMemberCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"ph-nathan"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_GENDER,","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"ph-nathan"},"content":"                PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":51,"author":{"gitId":"wr1159"},"content":"        EditMemberDescriptor editMemberDescriptor \u003d new EditMemberDescriptor();","lastModifiedDate":"2023-10-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"wr1159"},"content":"            editMemberDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-10-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"ph-nathan"},"content":"        if (argMultimap.getValue(PREFIX_GENDER).isPresent()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"ph-nathan"},"content":"            editMemberDescriptor.setGender(ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get()));","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"wr1159"},"content":"            editMemberDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2023-10-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"wr1159"},"content":"            editMemberDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2023-10-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"wr1159"},"content":"            editMemberDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2023-10-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"wr1159"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editMemberDescriptor::setTags);","lastModifiedDate":"2023-10-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"wr1159"},"content":"        if (!editMemberDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-10-02"},{"lineNumber":71,"author":{"gitId":"ph-nathan"},"content":"            throw new ParseException(EditMemberCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"ph-nathan"},"content":"        return new EditMemberCommand(index, editMemberDescriptor);","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"wr1159":7,"andrechuakj":10,"ph-nathan":19,"-":56}},{"path":"src/main/java/seedu/ccacommander/logic/parser/EnrolCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dylkaw"},"content":"package seedu.ccacommander.logic.parser;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_EVENT;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_HOURS;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_MEMBER;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"dylkaw"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.commons.core.index.Index;","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.logic.commands.EnrolCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.enrolment.Hours;","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.enrolment.Remark;","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"dylkaw"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"dylkaw"},"content":" * Parses input arguments and creates a new EnrolCommand object","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"dylkaw"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"dylkaw"},"content":"public class EnrolCommandParser implements Parser\u003cEnrolCommand\u003e {","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"dylkaw"},"content":"     * Parses the given {@code String} of arguments in the context of the EnrolCommand","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"dylkaw"},"content":"     * and returns an EnrolCommand object for execution.","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"dylkaw"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"dylkaw"},"content":"    public EnrolCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"dylkaw"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"dylkaw"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_MEMBER, PREFIX_EVENT, PREFIX_HOURS, PREFIX_REMARK);","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"andrechuakj"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_MEMBER, PREFIX_EVENT)","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"dylkaw"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"dylkaw"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EnrolCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"dylkaw"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_MEMBER, PREFIX_EVENT, PREFIX_HOURS, PREFIX_REMARK);","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"dylkaw"},"content":"        Index memberIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_MEMBER).get());","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"dylkaw"},"content":"        Index eventIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_EVENT).get());","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"andrechuakj"},"content":"        Hours hours \u003d getParsedHour(argMultimap);","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"andrechuakj"},"content":"        Remark remark \u003d getParsedRemark(argMultimap);","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"andrechuakj"},"content":"        return new EnrolCommand(memberIndex, eventIndex, Optional.ofNullable(hours), Optional.ofNullable(remark));","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"dylkaw"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"dylkaw"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"dylkaw"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"dylkaw"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"andrechuakj"},"content":"    private Hours getParsedHour(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"andrechuakj"},"content":"        if (argMultimap.getValue(PREFIX_HOURS).isPresent()) {","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"andrechuakj"},"content":"            return ParserUtil.parseHours(argMultimap.getValue(PREFIX_HOURS).get());","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"andrechuakj"},"content":"        } else {","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"andrechuakj"},"content":"            return null;","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"andrechuakj"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"andrechuakj"},"content":"    private Remark getParsedRemark(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"andrechuakj"},"content":"        if (argMultimap.getValue(PREFIX_REMARK).isPresent()) {","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"andrechuakj"},"content":"            return ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).get());","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"andrechuakj"},"content":"        } else {","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"andrechuakj"},"content":"            return null;","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"andrechuakj"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"dylkaw"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"andrechuakj":23,"dylkaw":47}},{"path":"src/main/java/seedu/ccacommander/logic/parser/FindEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"package seedu.ccacommander.logic.parser;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.logic.commands.FindEventCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.model.event.EventNameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":" * Parses input arguments and creates a new FindEventCommand object","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"public class FindEventCommandParser implements Parser\u003cFindEventCommand\u003e {","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"     * Parses the given {@code String} of arguments in the context of the FindEventCommand","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"     * and returns a FindEventCommand object for execution.","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"    public FindEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"SelwynAng"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"SelwynAng"},"content":"        return new FindEventCommand(new EventNameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"SelwynAng":31}},{"path":"src/main/java/seedu/ccacommander/logic/parser/FindMemberCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.parser;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.logic.commands.FindMemberCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.MemberNameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":" * Parses input arguments and creates a new FindMemberCommand object","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"public class FindMemberCommandParser implements Parser\u003cFindMemberCommand\u003e {","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"     * Parses the given {@code String} of arguments in the context of the FindMemberCommand","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"     * and returns a FindMemberCommand object for execution.","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"    public FindMemberCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"SelwynAng"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindMemberCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"SelwynAng"},"content":"        return new FindMemberCommand(new MemberNameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"andrechuakj":4,"SelwynAng":8,"-":21}},{"path":"src/main/java/seedu/ccacommander/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.parser;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.commands.Command;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"andrechuakj":3,"-":13}},{"path":"src/main/java/seedu/ccacommander/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.parser;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.core.index.Index;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.util.StringUtil;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.enrolment.Hours;","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.enrolment.Remark;","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.EventDate;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.Location;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Address;","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Email;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Gender;","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Phone;","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.shared.Name;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.tag.Tag;","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"andrechuakj"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"andrechuakj"},"content":"     * Parses a {@code String gender} into a {@code Gender}.","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"andrechuakj"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"andrechuakj"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"andrechuakj"},"content":"     * @throws ParseException if the given {@code gender} is invalid.","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"andrechuakj"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"andrechuakj"},"content":"    public static Gender parseGender(String gender) throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"andrechuakj"},"content":"        requireNonNull(gender);","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"andrechuakj"},"content":"        String trimmedGender \u003d gender.trim();","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"andrechuakj"},"content":"        if (!Gender.isValidGender(trimmedGender)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"andrechuakj"},"content":"            throw new ParseException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"andrechuakj"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"andrechuakj"},"content":"        return new Gender(trimmedGender);","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"andrechuakj"},"content":"     * Parses a {@code String ccacommander} into an {@code Address}.","lastModifiedDate":"2023-10-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"andrechuakj"},"content":"     * @throws ParseException if the given {@code ccacommander} is invalid.","lastModifiedDate":"2023-10-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"dylkaw"},"content":"     * Parses a {@code String location} into an {@code Location}.","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"dylkaw"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"dylkaw"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"andrechuakj"},"content":"     * @throws ParseException if the given {@code location} is invalid.","lastModifiedDate":"2023-10-21"},{"lineNumber":123,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"dylkaw"},"content":"    public static Location parseLocation(String location) throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"dylkaw"},"content":"        requireNonNull(location);","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"dylkaw"},"content":"        String trimmedLocation \u003d location.trim();","lastModifiedDate":"2023-10-16"},{"lineNumber":127,"author":{"gitId":"dylkaw"},"content":"        if (!Location.isValidLocation(trimmedLocation)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":128,"author":{"gitId":"dylkaw"},"content":"            throw new ParseException(Location.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"dylkaw"},"content":"        return new Location(trimmedLocation);","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"dylkaw"},"content":"     * Parses a {@code String eventDate} into an {@code EventDate}.","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"dylkaw"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"dylkaw"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"andrechuakj"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2023-10-21"},{"lineNumber":138,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"dylkaw"},"content":"    public static EventDate parseEventDate(String eventDate) throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":140,"author":{"gitId":"dylkaw"},"content":"        requireNonNull(eventDate);","lastModifiedDate":"2023-10-16"},{"lineNumber":141,"author":{"gitId":"dylkaw"},"content":"        String trimmedEventDate \u003d eventDate.trim();","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"dylkaw"},"content":"        if (!EventDate.isValidDate(trimmedEventDate)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":143,"author":{"gitId":"dylkaw"},"content":"            throw new ParseException(EventDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"dylkaw"},"content":"        return new EventDate(trimmedEventDate);","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":148,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":149,"author":{"gitId":"dylkaw"},"content":"     * Parses a {@code String hours} into an {@code Hours}.","lastModifiedDate":"2023-10-23"},{"lineNumber":150,"author":{"gitId":"dylkaw"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-23"},{"lineNumber":151,"author":{"gitId":"dylkaw"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":152,"author":{"gitId":"dylkaw"},"content":"     * @throws ParseException if the given {@code hours} is invalid.","lastModifiedDate":"2023-10-23"},{"lineNumber":153,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":154,"author":{"gitId":"dylkaw"},"content":"    public static Hours parseHours(String hours) throws ParseException {","lastModifiedDate":"2023-10-23"},{"lineNumber":155,"author":{"gitId":"dylkaw"},"content":"        requireNonNull(hours);","lastModifiedDate":"2023-10-23"},{"lineNumber":156,"author":{"gitId":"dylkaw"},"content":"        String trimmedHours \u003d hours.trim();","lastModifiedDate":"2023-10-23"},{"lineNumber":157,"author":{"gitId":"dylkaw"},"content":"        if (!Hours.isValidHours(trimmedHours)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":158,"author":{"gitId":"dylkaw"},"content":"            throw new ParseException(Hours.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-23"},{"lineNumber":159,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":160,"author":{"gitId":"dylkaw"},"content":"        return new Hours(trimmedHours);","lastModifiedDate":"2023-10-23"},{"lineNumber":161,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":162,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":163,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":164,"author":{"gitId":"dylkaw"},"content":"     * Parses a {@code String remark} into an {@code Remark}.","lastModifiedDate":"2023-10-23"},{"lineNumber":165,"author":{"gitId":"dylkaw"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-23"},{"lineNumber":166,"author":{"gitId":"dylkaw"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":167,"author":{"gitId":"dylkaw"},"content":"     * @throws ParseException if the given {@code remark} is invalid.","lastModifiedDate":"2023-10-23"},{"lineNumber":168,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":169,"author":{"gitId":"dylkaw"},"content":"    public static Remark parseRemark(String remark) throws ParseException {","lastModifiedDate":"2023-10-23"},{"lineNumber":170,"author":{"gitId":"dylkaw"},"content":"        requireNonNull(remark);","lastModifiedDate":"2023-10-23"},{"lineNumber":171,"author":{"gitId":"dylkaw"},"content":"        String trimmedRemark \u003d remark.trim();","lastModifiedDate":"2023-10-23"},{"lineNumber":172,"author":{"gitId":"dylkaw"},"content":"        if (!Remark.isValidRemark(trimmedRemark)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":173,"author":{"gitId":"dylkaw"},"content":"            throw new ParseException(Remark.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-23"},{"lineNumber":174,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":175,"author":{"gitId":"dylkaw"},"content":"        return new Remark(trimmedRemark);","lastModifiedDate":"2023-10-23"},{"lineNumber":176,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":177,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"andrechuakj":33,"dylkaw":58,"-":113}},{"path":"src/main/java/seedu/ccacommander/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.parser;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!(other instanceof Prefix)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return prefix.equals(otherPrefix.prefix);","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"andrechuakj":1,"-":41}},{"path":"src/main/java/seedu/ccacommander/logic/parser/UnenrolCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"package seedu.ccacommander.logic.parser;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_EVENT;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_MEMBER;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.commons.core.index.Index;","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.logic.commands.UnenrolCommand;","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.logic.parser.exceptions.HandledParseException;","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"/**","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":" * Parses input arguments and creates a new UnenrolCommand object","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":" */","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"public class UnenrolCommandParser implements Parser\u003cUnenrolCommand\u003e {","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"     * Parses the given {@code String} of arguments in the context of the UnenrolCommand","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"     * and returns an UnenrolCommand object for execution.","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":"    public UnenrolCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"SelwynAng"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"SelwynAng"},"content":"        Index memberIndex;","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"SelwynAng"},"content":"        Index eventIndex;","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"SelwynAng"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"SelwynAng"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_MEMBER, PREFIX_EVENT);","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"SelwynAng"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_MEMBER, PREFIX_EVENT)","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"SelwynAng"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"SelwynAng"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnenrolCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"SelwynAng"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_MEMBER, PREFIX_EVENT);","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"SelwynAng"},"content":"        try {","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"SelwynAng"},"content":"            memberIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_MEMBER).get());","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"SelwynAng"},"content":"            eventIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_EVENT).get());","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"SelwynAng"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"SelwynAng"},"content":"            throw new HandledParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"SelwynAng"},"content":"                    UnenrolCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"SelwynAng"},"content":"        return new UnenrolCommand(memberIndex, eventIndex);","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"SelwynAng"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"SelwynAng"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"SelwynAng"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"SelwynAng"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"SelwynAng":57}},{"path":"src/main/java/seedu/ccacommander/logic/parser/ViewEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"package seedu.ccacommander.logic.parser;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.commons.core.index.Index;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.logic.commands.ViewEventCommand;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":" * Parses input arguments and creates a new ViewEventCommand object","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"public class ViewEventCommandParser implements Parser\u003cViewEventCommand\u003e {","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewEventCommand","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":"     * and returns a ViewEventCommand object for execution.","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"ph-nathan"},"content":"    public ViewEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"ph-nathan"},"content":"        try {","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"ph-nathan"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"            return new ViewEventCommand(index);","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"ph-nathan"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"ph-nathan"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"ph-nathan"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewEventCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"ph-nathan":29}},{"path":"src/main/java/seedu/ccacommander/logic/parser/ViewMemberCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"package seedu.ccacommander.logic.parser;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.commons.core.index.Index;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.logic.commands.ViewMemberCommand;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":" * Parses input arguments and creates a new ViewMemberCommand object","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"public class ViewMemberCommandParser implements Parser\u003cViewMemberCommand\u003e {","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewMemberCommand","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"     * and returns a ViewMemberCommand object for execution.","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"ph-nathan"},"content":"    public ViewMemberCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"ph-nathan"},"content":"        try {","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"ph-nathan"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"ph-nathan"},"content":"            return new ViewMemberCommand(index);","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"ph-nathan"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"ph-nathan"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewMemberCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"ph-nathan":28}},{"path":"src/main/java/seedu/ccacommander/logic/parser/exceptions/HandledParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"package seedu.ccacommander.logic.parser.exceptions;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"/**","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":" * Represents a rethrown ParseException when a parser encounters a problem.","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":" * This class was created to counter the issue when a caller method calls the called method which throws","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":" * a new ParseException.","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":" * In the called method, a ParseException is thrown and caught within itself.","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":" * Upon doing so, the called method throws a new ParseException.","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":" * However, when the caller method catches the ParseException, it catches the original ParseException instead of","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":" * the new ParseException, which is not the behaviour we want.","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":" * Hence, HandledParseException is created and will be the exception type of the new ParseException,","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":" * allowing for better differentiation between the old and new ParseExceptions.","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":" */","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"public class HandledParseException extends ParseException {","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"    private String hpeMessage;","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"     * Creates a new HandledParseException.","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"     * @param message","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"    public HandledParseException(String message) {","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"        super(message);","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":"        this.hpeMessage \u003d message;","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"SelwynAng"},"content":"     * Creates a new HandledParseException.","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"SelwynAng"},"content":"     * @param message","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"SelwynAng"},"content":"     * @param cause","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"SelwynAng"},"content":"    public HandledParseException(String message, Throwable cause) {","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"SelwynAng"},"content":"        super(message, cause);","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"SelwynAng"},"content":"        this.hpeMessage \u003d message;","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"SelwynAng"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"SelwynAng"},"content":"    public String getMessage() {","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"SelwynAng"},"content":"        return this.hpeMessage;","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"SelwynAng":41}},{"path":"src/main/java/seedu/ccacommander/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.parser.exceptions;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"andrechuakj":2,"-":15}},{"path":"src/main/java/seedu/ccacommander/model/CcaCommander.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.enrolment.Enrolment;","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.enrolment.UniqueEnrolmentList;","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.Event;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.UniqueEventList;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Member;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.UniqueMemberList;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"andrechuakj"},"content":" * Wraps all data at the CcaCommander level","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"wr1159"},"content":" * Duplicates are not allowed (by .isSameMember comparison)","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"andrechuakj"},"content":"public class CcaCommander implements ReadOnlyCcaCommander {","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"wr1159"},"content":"    private final UniqueMemberList members;","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"wr1159"},"content":"    private final UniqueEventList events;","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"andrechuakj"},"content":"    private final UniqueEnrolmentList enrolments;","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"wr1159"},"content":"        members \u003d new UniqueMemberList();","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"wr1159"},"content":"        events \u003d new UniqueEventList();","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"andrechuakj"},"content":"        enrolments \u003d new UniqueEnrolmentList();","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"andrechuakj"},"content":"    public CcaCommander() {}","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"andrechuakj"},"content":"     * Creates an CcaCommander using the Members in the {@code toBeCopied}","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"andrechuakj"},"content":"    public CcaCommander(ReadOnlyCcaCommander toBeCopied) {","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"wr1159"},"content":"    // list overwrite operations","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"wr1159"},"content":"     * Replaces the contents of the member list with {@code members}.","lastModifiedDate":"2023-10-02"},{"lineNumber":53,"author":{"gitId":"wr1159"},"content":"     * {@code members} must not contain duplicate members.","lastModifiedDate":"2023-10-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"wr1159"},"content":"    public void setMembers(List\u003cMember\u003e members) {","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"wr1159"},"content":"        this.members.setMembers(members);","lastModifiedDate":"2023-10-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"wr1159"},"content":"     * Replaces the contents of the event list with {@code events}.","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"wr1159"},"content":"     * {@code events} must not contain duplicate events.","lastModifiedDate":"2023-10-11"},{"lineNumber":62,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":63,"author":{"gitId":"wr1159"},"content":"    public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2023-10-11"},{"lineNumber":64,"author":{"gitId":"wr1159"},"content":"        this.events.setEvents(events);","lastModifiedDate":"2023-10-11"},{"lineNumber":65,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":66,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":67,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"andrechuakj"},"content":"     * Replaces the contents of the enrolment list with {@code enrolments}.","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"andrechuakj"},"content":"     * {@code enrolments} must not contain duplicate enrolments.","lastModifiedDate":"2023-10-28"},{"lineNumber":70,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"andrechuakj"},"content":"    public void setEnrolments(List\u003cEnrolment\u003e enrolments) {","lastModifiedDate":"2023-10-28"},{"lineNumber":72,"author":{"gitId":"andrechuakj"},"content":"        this.enrolments.setEnrolments(enrolments);","lastModifiedDate":"2023-10-28"},{"lineNumber":73,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"andrechuakj"},"content":"     * Resets the existing data of this {@code CcaCommander} with {@code newData}.","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"andrechuakj"},"content":"    public void resetData(ReadOnlyCcaCommander newData) {","lastModifiedDate":"2023-10-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":81,"author":{"gitId":"wr1159"},"content":"        setMembers(newData.getMemberList());","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"wr1159"},"content":"        setEvents(newData.getEventList());","lastModifiedDate":"2023-10-11"},{"lineNumber":83,"author":{"gitId":"andrechuakj"},"content":"        setEnrolments(newData.getEnrolmentList());","lastModifiedDate":"2023-10-28"},{"lineNumber":84,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"wr1159"},"content":"    // member-level operations","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"andrechuakj"},"content":"     * Returns true if a member with the same identity as {@code member} exists in CcaCommander.","lastModifiedDate":"2023-10-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"wr1159"},"content":"    public boolean hasMember(Member member) {","lastModifiedDate":"2023-10-02"},{"lineNumber":93,"author":{"gitId":"wr1159"},"content":"        requireNonNull(member);","lastModifiedDate":"2023-10-02"},{"lineNumber":94,"author":{"gitId":"wr1159"},"content":"        return members.contains(member);","lastModifiedDate":"2023-10-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"andrechuakj"},"content":"     * Adds a member to CcaCommander.","lastModifiedDate":"2023-10-21"},{"lineNumber":99,"author":{"gitId":"andrechuakj"},"content":"     * The member must not already exist in CcaCommander.","lastModifiedDate":"2023-10-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"dylkaw"},"content":"    public void createMember(Member m) {","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"wr1159"},"content":"        members.add(m);","lastModifiedDate":"2023-10-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":106,"author":{"gitId":"wr1159"},"content":"     * Replaces the given member {@code target} in the list with {@code editedMember}.","lastModifiedDate":"2023-10-02"},{"lineNumber":107,"author":{"gitId":"andrechuakj"},"content":"     * {@code target} must exist in CcaCommander.","lastModifiedDate":"2023-10-21"},{"lineNumber":108,"author":{"gitId":"andrechuakj"},"content":"     * The member identity of {@code editedMember} must not be the same as another existing member in CcaCommander.","lastModifiedDate":"2023-10-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":110,"author":{"gitId":"wr1159"},"content":"    public void setMember(Member target, Member editedMember) {","lastModifiedDate":"2023-10-02"},{"lineNumber":111,"author":{"gitId":"wr1159"},"content":"        requireNonNull(editedMember);","lastModifiedDate":"2023-10-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"wr1159"},"content":"        members.setMember(target, editedMember);","lastModifiedDate":"2023-10-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"andrechuakj"},"content":"     * Removes {@code key} from this {@code CcaCommander}.","lastModifiedDate":"2023-10-21"},{"lineNumber":118,"author":{"gitId":"andrechuakj"},"content":"     * {@code key} must exist in CcaCommander.","lastModifiedDate":"2023-10-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"wr1159"},"content":"    public void removeMember(Member key) {","lastModifiedDate":"2023-10-02"},{"lineNumber":121,"author":{"gitId":"wr1159"},"content":"        members.remove(key);","lastModifiedDate":"2023-10-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"wr1159"},"content":"    // event-level operations","lastModifiedDate":"2023-10-13"},{"lineNumber":125,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":126,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":127,"author":{"gitId":"andrechuakj"},"content":"     * Returns true if an event with the same identity as {@code event} exists in CcaCommander.","lastModifiedDate":"2023-10-21"},{"lineNumber":128,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":129,"author":{"gitId":"wr1159"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2023-10-11"},{"lineNumber":130,"author":{"gitId":"wr1159"},"content":"        requireNonNull(event);","lastModifiedDate":"2023-10-11"},{"lineNumber":131,"author":{"gitId":"wr1159"},"content":"        return events.contains(event);","lastModifiedDate":"2023-10-11"},{"lineNumber":132,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":133,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":134,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":135,"author":{"gitId":"andrechuakj"},"content":"     * Adds an event to CcaCommander.","lastModifiedDate":"2023-10-21"},{"lineNumber":136,"author":{"gitId":"andrechuakj"},"content":"     * The event must not already exist in CcaCommander.","lastModifiedDate":"2023-10-21"},{"lineNumber":137,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":138,"author":{"gitId":"dylkaw"},"content":"    public void createEvent(Event e) {","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"dylkaw"},"content":"        events.createEvent(e);","lastModifiedDate":"2023-10-16"},{"lineNumber":140,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":141,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":142,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":143,"author":{"gitId":"wr1159"},"content":"     * Replaces the given event {@code target} in the list with {@code editedEvent}.","lastModifiedDate":"2023-10-11"},{"lineNumber":144,"author":{"gitId":"andrechuakj"},"content":"     * {@code target} must exist in CcaCommander.","lastModifiedDate":"2023-10-21"},{"lineNumber":145,"author":{"gitId":"andrechuakj"},"content":"     * The event identity of {@code editedEvent} must not be the same as another existing event in CcaCommander.","lastModifiedDate":"2023-10-21"},{"lineNumber":146,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":147,"author":{"gitId":"wr1159"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2023-10-11"},{"lineNumber":148,"author":{"gitId":"wr1159"},"content":"        requireNonNull(editedEvent);","lastModifiedDate":"2023-10-11"},{"lineNumber":149,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":150,"author":{"gitId":"wr1159"},"content":"        events.setEvent(target, editedEvent);","lastModifiedDate":"2023-10-11"},{"lineNumber":151,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":152,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":153,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":154,"author":{"gitId":"andrechuakj"},"content":"     * Removes {@code key} from this {@code CcaCommander}.","lastModifiedDate":"2023-10-21"},{"lineNumber":155,"author":{"gitId":"andrechuakj"},"content":"     * {@code key} must exist in CcaCommander.","lastModifiedDate":"2023-10-21"},{"lineNumber":156,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":157,"author":{"gitId":"wr1159"},"content":"    public void removeEvent(Event key) {","lastModifiedDate":"2023-10-11"},{"lineNumber":158,"author":{"gitId":"wr1159"},"content":"        events.remove(key);","lastModifiedDate":"2023-10-11"},{"lineNumber":159,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":160,"author":{"gitId":"andrechuakj"},"content":"    // enrolment-level operations","lastModifiedDate":"2023-10-28"},{"lineNumber":161,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":162,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":163,"author":{"gitId":"andrechuakj"},"content":"     * Returns true if an enrolment with the same identity as {@code enrolment} exists in CcaCommander.","lastModifiedDate":"2023-10-28"},{"lineNumber":164,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":165,"author":{"gitId":"andrechuakj"},"content":"    public boolean hasEnrolment(Enrolment enrolment) {","lastModifiedDate":"2023-10-28"},{"lineNumber":166,"author":{"gitId":"andrechuakj"},"content":"        requireNonNull(enrolment);","lastModifiedDate":"2023-10-28"},{"lineNumber":167,"author":{"gitId":"andrechuakj"},"content":"        return enrolments.contains(enrolment);","lastModifiedDate":"2023-10-28"},{"lineNumber":168,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":169,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":170,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":171,"author":{"gitId":"andrechuakj"},"content":"     * Adds an enrolment to CcaCommander.","lastModifiedDate":"2023-10-28"},{"lineNumber":172,"author":{"gitId":"andrechuakj"},"content":"     * The enrolment must not already exist in CcaCommander.","lastModifiedDate":"2023-10-28"},{"lineNumber":173,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":174,"author":{"gitId":"andrechuakj"},"content":"    public void createEnrolment(Enrolment a) {","lastModifiedDate":"2023-10-28"},{"lineNumber":175,"author":{"gitId":"andrechuakj"},"content":"        enrolments.createEnrolment(a);","lastModifiedDate":"2023-10-28"},{"lineNumber":176,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":177,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":178,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":179,"author":{"gitId":"SelwynAng"},"content":"     * Removes {@code key} from this {@code CcaCommander}.","lastModifiedDate":"2023-10-28"},{"lineNumber":180,"author":{"gitId":"SelwynAng"},"content":"     * {@code key} must exist in CcaCommander.","lastModifiedDate":"2023-10-28"},{"lineNumber":181,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":182,"author":{"gitId":"SelwynAng"},"content":"    public void removeEnrolment(Enrolment key) {","lastModifiedDate":"2023-10-28"},{"lineNumber":183,"author":{"gitId":"SelwynAng"},"content":"        enrolments.remove(key);","lastModifiedDate":"2023-10-28"},{"lineNumber":184,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":185,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":186,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":187,"author":{"gitId":"dylkaw"},"content":"     * Replaces the given enrolment {@code target} in the list with {@code editedEnrolment}.","lastModifiedDate":"2023-10-28"},{"lineNumber":188,"author":{"gitId":"dylkaw"},"content":"     * {@code target} must exist in CcaCommander.","lastModifiedDate":"2023-10-28"},{"lineNumber":189,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":190,"author":{"gitId":"dylkaw"},"content":"    public void setEnrolment(Enrolment target, Enrolment editedEnrolment) {","lastModifiedDate":"2023-10-28"},{"lineNumber":191,"author":{"gitId":"dylkaw"},"content":"        requireNonNull(editedEnrolment);","lastModifiedDate":"2023-10-28"},{"lineNumber":192,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":193,"author":{"gitId":"dylkaw"},"content":"        enrolments.setEnrolment(target, editedEnrolment);","lastModifiedDate":"2023-10-28"},{"lineNumber":194,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":195,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":196,"author":{"gitId":"wr1159"},"content":"    // util methods","lastModifiedDate":"2023-10-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":201,"author":{"gitId":"wr1159"},"content":"                .add(\"members\", members)","lastModifiedDate":"2023-10-02"},{"lineNumber":202,"author":{"gitId":"wr1159"},"content":"                .add(\"events\", events)","lastModifiedDate":"2023-10-11"},{"lineNumber":203,"author":{"gitId":"andrechuakj"},"content":"                .add(\"enrolments\", enrolments)","lastModifiedDate":"2023-10-28"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"wr1159"},"content":"    public ObservableList\u003cMember\u003e getMemberList() {","lastModifiedDate":"2023-10-02"},{"lineNumber":209,"author":{"gitId":"wr1159"},"content":"        return members.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-02"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":212,"author":{"gitId":"wr1159"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":213,"author":{"gitId":"wr1159"},"content":"    public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2023-10-11"},{"lineNumber":214,"author":{"gitId":"wr1159"},"content":"        return events.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-11"},{"lineNumber":215,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":216,"author":{"gitId":"andrechuakj"},"content":"    public ObservableList\u003cEnrolment\u003e getEnrolmentList() {","lastModifiedDate":"2023-10-28"},{"lineNumber":217,"author":{"gitId":"andrechuakj"},"content":"        return enrolments.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-28"},{"lineNumber":218,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":219,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":227,"author":{"gitId":"andrechuakj"},"content":"        if (!(other instanceof CcaCommander)) {","lastModifiedDate":"2023-10-21"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":231,"author":{"gitId":"andrechuakj"},"content":"        CcaCommander otherCcaCommander \u003d (CcaCommander) other;","lastModifiedDate":"2023-10-21"},{"lineNumber":232,"author":{"gitId":"andrechuakj"},"content":"        return members.equals(otherCcaCommander.members);","lastModifiedDate":"2023-10-21"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":237,"author":{"gitId":"wr1159"},"content":"        return members.hashCode();","lastModifiedDate":"2023-10-02"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":239,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wr1159":68,"andrechuakj":51,"dylkaw":29,"SelwynAng":8,"-":83}},{"path":"src/main/java/seedu/ccacommander/model/CcaCommanderVersion.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"package seedu.ccacommander.model;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":" * Represents a version of CcaCommander","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":"public class CcaCommanderVersion {","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":"    private String commitMessage;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":"    private ReadOnlyCcaCommander versionCapture;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":"     * Creates a {@code CcaCommanderVersion} with the specified {@code commitMessage} and {@code versionCaptures}.","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"    public CcaCommanderVersion(String commitMessage, ReadOnlyCcaCommander versionCapture) {","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"        requireAllNonNull(commitMessage, versionCapture);","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"        this.commitMessage \u003d commitMessage;","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"        this.versionCapture \u003d new CcaCommander(versionCapture);","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"    public String getCommitMessage() {","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"        return commitMessage;","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"SelwynAng"},"content":"    public ReadOnlyCcaCommander getVersionCapture() {","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"SelwynAng"},"content":"        return versionCapture;","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"SelwynAng"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"SelwynAng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"SelwynAng"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"SelwynAng"},"content":"                || (other instanceof CcaCommanderVersion","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"SelwynAng"},"content":"                \u0026\u0026 ((CcaCommanderVersion) other).versionCapture.equals(versionCapture)","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"SelwynAng"},"content":"                \u0026\u0026 ((CcaCommanderVersion) other).commitMessage.equals(commitMessage));","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"SelwynAng":37}},{"path":"src/main/java/seedu/ccacommander/model/CommandHistory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wr1159"},"content":"package seedu.ccacommander.model;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"wr1159"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"wr1159"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"wr1159"},"content":"import java.util.List;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"wr1159"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"wr1159"},"content":" * The facilitator of storing commands and functions related to recalling previously entered commands.","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"wr1159"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"wr1159"},"content":"public class CommandHistory {","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"wr1159"},"content":"    private List\u003cString\u003e commandHistoryList;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"wr1159"},"content":"    private int currentCommandPointer;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"wr1159"},"content":"     * Constructs a new instance of CommandHistory.","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"wr1159"},"content":"    public CommandHistory() {","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"wr1159"},"content":"        this.commandHistoryList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"wr1159"},"content":"        this.currentCommandPointer \u003d 0;","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"wr1159"},"content":"     * Adds the command into {@code commandHistoryList} and sets the pointer to the new command only if the command","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"wr1159"},"content":"     * is not the latest command added.","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"wr1159"},"content":"     * @param command","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"wr1159"},"content":"    public void addCommand(String command) {","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"wr1159"},"content":"        requireNonNull(command);","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"wr1159"},"content":"        String trimmedCommand \u003d command.trim();","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"wr1159"},"content":"        if (trimmedCommand.length() \u003d\u003d 0) {","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"wr1159"},"content":"            return;","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"wr1159"},"content":"        if (this.commandHistoryList.size() \u003d\u003d 0","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"wr1159"},"content":"                || !isLastCommandEqualCommand(trimmedCommand)) {","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"wr1159"},"content":"            this.commandHistoryList.add(trimmedCommand);","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"wr1159"},"content":"            resetPointer();","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"wr1159"},"content":"     * Returns true if last command in {@code commandHistoryList} is equal to param command.","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"wr1159"},"content":"     * @param command","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"wr1159"},"content":"    public boolean isLastCommandEqualCommand(String command) {","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"wr1159"},"content":"        return this.commandHistoryList.get(this.commandHistoryList.size() - 1).equals(command);","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"wr1159"},"content":"     * Returns true if there is a next command.","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"wr1159"},"content":"     * @return boolean value of whether a next command exists.","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"wr1159"},"content":"    public boolean hasNextCommand() {","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"wr1159"},"content":"        boolean hasCommands \u003d this.commandHistoryList.size() \u003e 0;","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"wr1159"},"content":"        boolean pointerHasNext \u003d this.currentCommandPointer \u003c this.commandHistoryList.size() - 1;","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"wr1159"},"content":"        return pointerHasNext \u0026\u0026 hasCommands;","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"wr1159"},"content":"     * Returns true if there is a previous command.","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"wr1159"},"content":"    public boolean hasPreviousCommand() {","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"wr1159"},"content":"        boolean hasCommands \u003d this.commandHistoryList.size() \u003e 0;","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"wr1159"},"content":"        boolean pointerHasPrevious \u003d this.currentCommandPointer \u003e 0;","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"wr1159"},"content":"        return pointerHasPrevious \u0026\u0026 hasCommands;","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"wr1159"},"content":"     * Returns next command.","lastModifiedDate":"2023-10-28"},{"lineNumber":74,"author":{"gitId":"wr1159"},"content":"     * Must be used in conjunction with {@code hasNextCommand} hence the assertion.","lastModifiedDate":"2023-10-28"},{"lineNumber":75,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"wr1159"},"content":"    public String getNextCommand() {","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"wr1159"},"content":"        assert this.currentCommandPointer \u003c this.commandHistoryList.size() - 1","lastModifiedDate":"2023-10-28"},{"lineNumber":78,"author":{"gitId":"wr1159"},"content":"                : \"currentCommandPointer is at the newest command already\";","lastModifiedDate":"2023-10-28"},{"lineNumber":79,"author":{"gitId":"wr1159"},"content":"        this.currentCommandPointer++;","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"wr1159"},"content":"        String nextCommand \u003d this.commandHistoryList.get(this.currentCommandPointer);","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"wr1159"},"content":"        return nextCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"wr1159"},"content":"     * Returns previous command.","lastModifiedDate":"2023-10-28"},{"lineNumber":86,"author":{"gitId":"wr1159"},"content":"     * Must be used in conjunction with {@code hasPreviousCommand} hence the assertion.","lastModifiedDate":"2023-10-28"},{"lineNumber":87,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"wr1159"},"content":"    public String getPreviousCommand() {","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"wr1159"},"content":"        assert this.currentCommandPointer \u003e 0","lastModifiedDate":"2023-10-28"},{"lineNumber":90,"author":{"gitId":"wr1159"},"content":"                : \"currentCommandPointer is at the oldest command already\";","lastModifiedDate":"2023-10-28"},{"lineNumber":91,"author":{"gitId":"wr1159"},"content":"        this.currentCommandPointer--;","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"wr1159"},"content":"        String command \u003d this.commandHistoryList.get(this.currentCommandPointer);","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"wr1159"},"content":"        return command;","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"wr1159"},"content":"     * Resets the pointer to after the last command (no next command available, only previous commands available)","lastModifiedDate":"2023-10-27"},{"lineNumber":98,"author":{"gitId":"wr1159"},"content":"     * This will be used to move the pointer past the last command.","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"wr1159"},"content":"    public void resetPointer() {","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"wr1159"},"content":"        this.currentCommandPointer \u003d this.commandHistoryList.size();","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"wr1159"},"content":"     * Returns true if the pointer is at the last command.","lastModifiedDate":"2023-10-28"},{"lineNumber":106,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":107,"author":{"gitId":"wr1159"},"content":"    public boolean isLastCommand() {","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"wr1159"},"content":"        return this.currentCommandPointer \u003d\u003d this.commandHistoryList.size() - 1;","lastModifiedDate":"2023-10-27"},{"lineNumber":109,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":110,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":111,"author":{"gitId":"wr1159"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"wr1159":111}},{"path":"src/main/java/seedu/ccacommander/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"import java.util.Collection;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.core.GuiSettings;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.enrolment.Enrolment;","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.Event;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Member;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.shared.Name;","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"wr1159"},"content":"    Predicate\u003cMember\u003e PREDICATE_SHOW_ALL_MEMBERS \u003d unused -\u003e true;","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"dylkaw"},"content":"    Predicate\u003cEvent\u003e PREDICATE_SHOW_ALL_EVENTS \u003d unused -\u003e true;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"andrechuakj"},"content":"    Predicate\u003cEnrolment\u003e PREDICATE_SHOW_ALL_ENROLMENTS \u003d unused -\u003e true;","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"andrechuakj"},"content":"     * Returns the user prefs\u0027 CcaCommander file path.","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"andrechuakj"},"content":"    Path getCcaCommanderFilePath();","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"andrechuakj"},"content":"     * Sets the user prefs\u0027 CcaCommander file path.","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"andrechuakj"},"content":"    void setCcaCommanderFilePath(Path ccaCommanderFilePath);","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"andrechuakj"},"content":"     * Replaces CcaCommander data with the data in {@code ccaCommander}.","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"andrechuakj"},"content":"    void setCcaCommander(ReadOnlyCcaCommander ccaCommander);","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"andrechuakj"},"content":"    /** Returns the CcaCommander */","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"andrechuakj"},"content":"    ReadOnlyCcaCommander getCcaCommander();","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"andrechuakj"},"content":"     * Returns true if a member with the same identity as {@code member} exists in CcaCommander.","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"wr1159"},"content":"    boolean hasMember(Member member);","lastModifiedDate":"2023-10-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"wr1159"},"content":"     * Deletes the given member.","lastModifiedDate":"2023-10-02"},{"lineNumber":68,"author":{"gitId":"andrechuakj"},"content":"     * The member must exist in CcaCommander.","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"wr1159"},"content":"    void deleteMember(Member target);","lastModifiedDate":"2023-10-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"dylkaw"},"content":"     * Creates the given member.","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"andrechuakj"},"content":"     * {@code member} must not already exist in CcaCommander.","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"dylkaw"},"content":"    void createMember(Member member);","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"wr1159"},"content":"     * Replaces the given member {@code target} with {@code editedMember}.","lastModifiedDate":"2023-10-02"},{"lineNumber":80,"author":{"gitId":"andrechuakj"},"content":"     * {@code target} must exist in CcaCommander.","lastModifiedDate":"2023-10-21"},{"lineNumber":81,"author":{"gitId":"andrechuakj"},"content":"     * The member identity of {@code editedMember} must not be the same as another existing member in CcaCommander.","lastModifiedDate":"2023-10-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"wr1159"},"content":"    void setMember(Member target, Member editedMember);","lastModifiedDate":"2023-10-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"andrechuakj"},"content":"     * Returns true if a event with the same identity as {@code event} exists in CcaCommander.","lastModifiedDate":"2023-10-21"},{"lineNumber":87,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"dylkaw"},"content":"    boolean hasEvent(Event event);","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":91,"author":{"gitId":"SelwynAng"},"content":"     * Deletes the given event.","lastModifiedDate":"2023-10-28"},{"lineNumber":92,"author":{"gitId":"SelwynAng"},"content":"     * The event must exist in CcaCommander.","lastModifiedDate":"2023-10-28"},{"lineNumber":93,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":94,"author":{"gitId":"SelwynAng"},"content":"    void deleteEvent(Event target);","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":96,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"dylkaw"},"content":"     * Creates the given event.","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"andrechuakj"},"content":"     * {@code event} must not already exist in CcaCommander.","lastModifiedDate":"2023-10-21"},{"lineNumber":99,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"dylkaw"},"content":"    void createEvent(Event event);","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"dylkaw"},"content":"     * Replaces the given event {@code target} with {@code editedEvent}.","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"andrechuakj"},"content":"     * {@code target} must exist in CcaCommander.","lastModifiedDate":"2023-10-21"},{"lineNumber":105,"author":{"gitId":"andrechuakj"},"content":"     * The member identity of {@code editedEvent} must not be the same as another existing event in CcaCommander.","lastModifiedDate":"2023-10-21"},{"lineNumber":106,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"dylkaw"},"content":"    void setEvent(Event target, Event editedEvent);","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":110,"author":{"gitId":"andrechuakj"},"content":"     * Returns true if an enrolment with the same identity as {@code enrolment} exists in CcaCommander.","lastModifiedDate":"2023-10-28"},{"lineNumber":111,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":112,"author":{"gitId":"andrechuakj"},"content":"    boolean hasEnrolment(Enrolment enrolment);","lastModifiedDate":"2023-10-28"},{"lineNumber":113,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":114,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":115,"author":{"gitId":"SelwynAng"},"content":"     * Deletes the given enrolment.","lastModifiedDate":"2023-10-28"},{"lineNumber":116,"author":{"gitId":"SelwynAng"},"content":"     * The enrolment must exist in CcaCommander.","lastModifiedDate":"2023-10-28"},{"lineNumber":117,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":118,"author":{"gitId":"SelwynAng"},"content":"    void deleteEnrolment(Enrolment target);","lastModifiedDate":"2023-10-28"},{"lineNumber":119,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":120,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":121,"author":{"gitId":"wr1159"},"content":"     * Deletes all enrolments with matching eventName.","lastModifiedDate":"2023-11-02"},{"lineNumber":122,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":123,"author":{"gitId":"wr1159"},"content":"    void deleteEnrolmentsWithEventName(Name eventName);","lastModifiedDate":"2023-11-02"},{"lineNumber":124,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":125,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":126,"author":{"gitId":"wr1159"},"content":"     * Deletes all enrolments with matching memberName","lastModifiedDate":"2023-11-02"},{"lineNumber":127,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":128,"author":{"gitId":"wr1159"},"content":"    void deleteEnrolmentsWithMemberName(Name memberName);","lastModifiedDate":"2023-11-02"},{"lineNumber":129,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":130,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":131,"author":{"gitId":"dylkaw"},"content":"     * Creates the given event.","lastModifiedDate":"2023-10-23"},{"lineNumber":132,"author":{"gitId":"andrechuakj"},"content":"     * {@code enrolment} must not already exist in CcaCommander.","lastModifiedDate":"2023-10-28"},{"lineNumber":133,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":134,"author":{"gitId":"andrechuakj"},"content":"    void createEnrolment(Enrolment enrolment);","lastModifiedDate":"2023-10-28"},{"lineNumber":135,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":136,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":137,"author":{"gitId":"ph-nathan"},"content":"     *  Edit the Enrolments from the enrolment list which","lastModifiedDate":"2023-11-02"},{"lineNumber":138,"author":{"gitId":"ph-nathan"},"content":"     *  contain an event that have the same name as {@param prevName}","lastModifiedDate":"2023-11-02"},{"lineNumber":139,"author":{"gitId":"ph-nathan"},"content":"     *  to match the {@param newName} of the event","lastModifiedDate":"2023-11-02"},{"lineNumber":140,"author":{"gitId":"ph-nathan"},"content":"     * @param prevName","lastModifiedDate":"2023-11-02"},{"lineNumber":141,"author":{"gitId":"ph-nathan"},"content":"     * @param newName","lastModifiedDate":"2023-11-02"},{"lineNumber":142,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":143,"author":{"gitId":"ph-nathan"},"content":"    void editEnrolmentsWithEventName(Name prevName, Name newName);","lastModifiedDate":"2023-11-02"},{"lineNumber":144,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":145,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":146,"author":{"gitId":"ph-nathan"},"content":"     *  Edit the Enrolments from the enrolment list which","lastModifiedDate":"2023-11-02"},{"lineNumber":147,"author":{"gitId":"ph-nathan"},"content":"     *  contain a Member that have the same name as {@param prevName}","lastModifiedDate":"2023-11-02"},{"lineNumber":148,"author":{"gitId":"ph-nathan"},"content":"     *  to match the {@param newName} of the member","lastModifiedDate":"2023-11-02"},{"lineNumber":149,"author":{"gitId":"ph-nathan"},"content":"     * @param prevName","lastModifiedDate":"2023-11-02"},{"lineNumber":150,"author":{"gitId":"ph-nathan"},"content":"     * @param newName","lastModifiedDate":"2023-11-02"},{"lineNumber":151,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":152,"author":{"gitId":"ph-nathan"},"content":"    void editEnrolmentsWithMemberName(Name prevName, Name newName);","lastModifiedDate":"2023-11-02"},{"lineNumber":153,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":154,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":155,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":156,"author":{"gitId":"dylkaw"},"content":"     * Replaces the given member {@code target} with {@code editedEnrolment}.","lastModifiedDate":"2023-10-28"},{"lineNumber":157,"author":{"gitId":"dylkaw"},"content":"     * {@code target} must exist in CcaCommander.","lastModifiedDate":"2023-10-28"},{"lineNumber":158,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":159,"author":{"gitId":"dylkaw"},"content":"    void setEnrolment(Enrolment target, Enrolment editedEnrolment);","lastModifiedDate":"2023-10-28"},{"lineNumber":160,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":161,"author":{"gitId":"wr1159"},"content":"    /** Returns an unmodifiable view of the filtered member list */","lastModifiedDate":"2023-10-02"},{"lineNumber":162,"author":{"gitId":"wr1159"},"content":"    ObservableList\u003cMember\u003e getFilteredMemberList();","lastModifiedDate":"2023-10-02"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"SelwynAng"},"content":"    ObservableList\u003cEvent\u003e getFilteredEventList();","lastModifiedDate":"2023-10-14"},{"lineNumber":165,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":166,"author":{"gitId":"andrechuakj"},"content":"    ObservableList\u003cEnrolment\u003e getFilteredEnrolmentList();","lastModifiedDate":"2023-10-28"},{"lineNumber":167,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":169,"author":{"gitId":"wr1159"},"content":"     * Updates the filter of the filtered member list to filter by the given {@code predicate}.","lastModifiedDate":"2023-10-02"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":172,"author":{"gitId":"wr1159"},"content":"    void updateFilteredMemberList(Predicate\u003cMember\u003e predicate);","lastModifiedDate":"2023-10-02"},{"lineNumber":173,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":174,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":175,"author":{"gitId":"SelwynAng"},"content":"     * Updates the filter of the filtered event list to filter by the given {@code predicate}.","lastModifiedDate":"2023-10-14"},{"lineNumber":176,"author":{"gitId":"SelwynAng"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-10-14"},{"lineNumber":177,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":178,"author":{"gitId":"SelwynAng"},"content":"    void updateFilteredEventList(Predicate\u003cEvent\u003e predicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":179,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":180,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":181,"author":{"gitId":"SelwynAng"},"content":"     * Updates the filter of the filtered event list to filter by the given {@code predicate}.","lastModifiedDate":"2023-10-26"},{"lineNumber":182,"author":{"gitId":"SelwynAng"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-10-26"},{"lineNumber":183,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":184,"author":{"gitId":"andrechuakj"},"content":"    void updateFilteredEnrolmentList(Predicate\u003cEnrolment\u003e predicate);","lastModifiedDate":"2023-10-28"},{"lineNumber":185,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":186,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":187,"author":{"gitId":"ph-nathan"},"content":"     * Updates the members (enrolled in Event with {@param eventName})","lastModifiedDate":"2023-11-03"},{"lineNumber":188,"author":{"gitId":"ph-nathan"},"content":"     * with the hour and remark fields after a viewEventCommand is executed","lastModifiedDate":"2023-11-03"},{"lineNumber":189,"author":{"gitId":"ph-nathan"},"content":"     * @param eventName","lastModifiedDate":"2023-11-02"},{"lineNumber":190,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":191,"author":{"gitId":"ph-nathan"},"content":"    Collection\u003cName\u003e updateMemberHoursAndRemark(Name eventName);","lastModifiedDate":"2023-11-02"},{"lineNumber":192,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":193,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":194,"author":{"gitId":"ph-nathan"},"content":"     * Updates the events (that Member {@param memberName} is enrolled in)","lastModifiedDate":"2023-11-03"},{"lineNumber":195,"author":{"gitId":"ph-nathan"},"content":"     * with the hour and remark fields after a viewMemberCommand is executed","lastModifiedDate":"2023-11-03"},{"lineNumber":196,"author":{"gitId":"ph-nathan"},"content":"     * @param memberName","lastModifiedDate":"2023-11-02"},{"lineNumber":197,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":198,"author":{"gitId":"ph-nathan"},"content":"    Collection\u003cName\u003e updateEventHoursAndRemark(Name memberName);","lastModifiedDate":"2023-11-02"},{"lineNumber":199,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":200,"author":{"gitId":"SelwynAng"},"content":"    void commit(String commitMessage);","lastModifiedDate":"2023-10-23"},{"lineNumber":201,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":202,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":203,"author":{"gitId":"SelwynAng"},"content":"     * Returns true if there is a {@code Command} that can be undone.","lastModifiedDate":"2023-10-23"},{"lineNumber":204,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":205,"author":{"gitId":"SelwynAng"},"content":"    boolean canUndo();","lastModifiedDate":"2023-10-23"},{"lineNumber":206,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":207,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":208,"author":{"gitId":"SelwynAng"},"content":"     * Undoes the most recent undoable {@code Command}","lastModifiedDate":"2023-10-23"},{"lineNumber":209,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":210,"author":{"gitId":"SelwynAng"},"content":"    String undo();","lastModifiedDate":"2023-10-23"},{"lineNumber":211,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":212,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":213,"author":{"gitId":"SelwynAng"},"content":"     * Returns true if there is a {@code Command} that can be redone.","lastModifiedDate":"2023-10-24"},{"lineNumber":214,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":215,"author":{"gitId":"SelwynAng"},"content":"    boolean canRedo();","lastModifiedDate":"2023-10-24"},{"lineNumber":216,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":217,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":218,"author":{"gitId":"SelwynAng"},"content":"     * Redoes the most recent redoable {@code Command}","lastModifiedDate":"2023-10-24"},{"lineNumber":219,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":220,"author":{"gitId":"SelwynAng"},"content":"    String redo();","lastModifiedDate":"2023-10-24"},{"lineNumber":221,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":222,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":223,"author":{"gitId":"SelwynAng"},"content":"     * Returns a summary of all commands currently captured by this {@code Model}.","lastModifiedDate":"2023-10-23"},{"lineNumber":224,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":225,"author":{"gitId":"SelwynAng"},"content":"    VersionCaptures viewVersionCaptures();","lastModifiedDate":"2023-10-24"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"wr1159":20,"andrechuakj":29,"dylkaw":31,"SelwynAng":52,"ph-nathan":35,"-":59}},{"path":"src/main/java/seedu/ccacommander/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"wr1159"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"import java.util.Collection;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"import java.util.List;","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"wr1159"},"content":"import java.util.Optional;","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":17,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.core.GuiSettings;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.core.LogsCenter;","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.enrolment.Enrolment;","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.model.enrolment.exceptions.EnrolmentNotFoundException;","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.Event;","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Member;","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.shared.Name;","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"andrechuakj"},"content":" * Represents the in-memory model of the CcaCommander data.","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":30,"author":{"gitId":"SelwynAng"},"content":"    private final VersionedCcaCommander versionedCcaCommander;","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"wr1159"},"content":"    private final FilteredList\u003cMember\u003e filteredMembers;","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"SelwynAng"},"content":"    private final FilteredList\u003cEvent\u003e filteredEvents;","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"andrechuakj"},"content":"    private final FilteredList\u003cEnrolment\u003e filteredEnrolments;","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"andrechuakj"},"content":"     * Initializes a ModelManager with the given CcaCommander and userPrefs.","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"andrechuakj"},"content":"    public ModelManager(ReadOnlyCcaCommander ccaCommander, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"andrechuakj"},"content":"        requireAllNonNull(ccaCommander, userPrefs);","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"andrechuakj"},"content":"        logger.fine(\"Initializing with CCACommander: \" + ccaCommander + \" and user prefs \" + userPrefs);","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"SelwynAng"},"content":"        this.versionedCcaCommander \u003d new VersionedCcaCommander(ccaCommander);","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"SelwynAng"},"content":"        filteredMembers \u003d new FilteredList\u003c\u003e(this.versionedCcaCommander.getMemberList());","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"SelwynAng"},"content":"        filteredEvents \u003d new FilteredList\u003c\u003e(this.versionedCcaCommander.getEventList());","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"andrechuakj"},"content":"        filteredEnrolments \u003d new FilteredList\u003c\u003e(this.versionedCcaCommander.getEnrolmentList());","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"andrechuakj"},"content":"        this(new CcaCommander(), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"andrechuakj"},"content":"    public Path getCcaCommanderFilePath() {","lastModifiedDate":"2023-10-21"},{"lineNumber":81,"author":{"gitId":"andrechuakj"},"content":"        return userPrefs.getCcaCommanderFilePath();","lastModifiedDate":"2023-10-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"andrechuakj"},"content":"    public void setCcaCommanderFilePath(Path ccaCommanderFilePath) {","lastModifiedDate":"2023-10-21"},{"lineNumber":86,"author":{"gitId":"andrechuakj"},"content":"        requireNonNull(ccaCommanderFilePath);","lastModifiedDate":"2023-10-21"},{"lineNumber":87,"author":{"gitId":"andrechuakj"},"content":"        userPrefs.setCcaCommanderFilePath(ccaCommanderFilePath);","lastModifiedDate":"2023-10-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"andrechuakj"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d CcaCommander \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"andrechuakj"},"content":"    public void setCcaCommander(ReadOnlyCcaCommander ccaCommander) {","lastModifiedDate":"2023-10-21"},{"lineNumber":94,"author":{"gitId":"SelwynAng"},"content":"        versionedCcaCommander.resetData(ccaCommander);","lastModifiedDate":"2023-10-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"andrechuakj"},"content":"    public ReadOnlyCcaCommander getCcaCommander() {","lastModifiedDate":"2023-10-21"},{"lineNumber":99,"author":{"gitId":"SelwynAng"},"content":"        return versionedCcaCommander;","lastModifiedDate":"2023-10-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"wr1159"},"content":"    public boolean hasMember(Member member) {","lastModifiedDate":"2023-10-02"},{"lineNumber":104,"author":{"gitId":"wr1159"},"content":"        requireNonNull(member);","lastModifiedDate":"2023-10-02"},{"lineNumber":105,"author":{"gitId":"SelwynAng"},"content":"        return versionedCcaCommander.hasMember(member);","lastModifiedDate":"2023-10-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":109,"author":{"gitId":"wr1159"},"content":"    public void deleteMember(Member target) {","lastModifiedDate":"2023-10-02"},{"lineNumber":110,"author":{"gitId":"SelwynAng"},"content":"        versionedCcaCommander.removeMember(target);","lastModifiedDate":"2023-10-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":114,"author":{"gitId":"dylkaw"},"content":"    public void createMember(Member member) {","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"SelwynAng"},"content":"        versionedCcaCommander.createMember(member);","lastModifiedDate":"2023-10-23"},{"lineNumber":116,"author":{"gitId":"wr1159"},"content":"        updateFilteredMemberList(PREDICATE_SHOW_ALL_MEMBERS);","lastModifiedDate":"2023-10-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"wr1159"},"content":"    public void setMember(Member target, Member editedMember) {","lastModifiedDate":"2023-10-02"},{"lineNumber":121,"author":{"gitId":"wr1159"},"content":"        requireAllNonNull(target, editedMember);","lastModifiedDate":"2023-10-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":123,"author":{"gitId":"SelwynAng"},"content":"        versionedCcaCommander.setMember(target, editedMember);","lastModifiedDate":"2023-10-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":126,"author":{"gitId":"dylkaw"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":127,"author":{"gitId":"dylkaw"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2023-10-16"},{"lineNumber":128,"author":{"gitId":"dylkaw"},"content":"        requireNonNull(event);","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"SelwynAng"},"content":"        return versionedCcaCommander.hasEvent(event);","lastModifiedDate":"2023-10-23"},{"lineNumber":130,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"SelwynAng"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":132,"author":{"gitId":"SelwynAng"},"content":"    public void deleteEvent(Event target) {","lastModifiedDate":"2023-10-14"},{"lineNumber":133,"author":{"gitId":"SelwynAng"},"content":"        versionedCcaCommander.removeEvent(target);","lastModifiedDate":"2023-10-23"},{"lineNumber":134,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":135,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":136,"author":{"gitId":"dylkaw"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"dylkaw"},"content":"    public void createEvent(Event event) {","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"SelwynAng"},"content":"        versionedCcaCommander.createEvent(event);","lastModifiedDate":"2023-10-23"},{"lineNumber":139,"author":{"gitId":"dylkaw"},"content":"        updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2023-10-16"},{"lineNumber":140,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":141,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"dylkaw"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":143,"author":{"gitId":"dylkaw"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"dylkaw"},"content":"        requireAllNonNull(target, editedEvent);","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"SelwynAng"},"content":"        versionedCcaCommander.setEvent(target, editedEvent);","lastModifiedDate":"2023-10-23"},{"lineNumber":146,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":148,"author":{"gitId":"SelwynAng"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":149,"author":{"gitId":"andrechuakj"},"content":"    public boolean hasEnrolment(Enrolment enrolment) {","lastModifiedDate":"2023-10-28"},{"lineNumber":150,"author":{"gitId":"andrechuakj"},"content":"        requireNonNull(enrolment);","lastModifiedDate":"2023-10-28"},{"lineNumber":151,"author":{"gitId":"andrechuakj"},"content":"        return versionedCcaCommander.hasEnrolment(enrolment);","lastModifiedDate":"2023-10-28"},{"lineNumber":152,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":153,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":154,"author":{"gitId":"SelwynAng"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":155,"author":{"gitId":"SelwynAng"},"content":"    public void deleteEnrolment(Enrolment target) {","lastModifiedDate":"2023-10-28"},{"lineNumber":156,"author":{"gitId":"SelwynAng"},"content":"        versionedCcaCommander.removeEnrolment(target);","lastModifiedDate":"2023-10-28"},{"lineNumber":157,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":158,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":159,"author":{"gitId":"SelwynAng"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":160,"author":{"gitId":"wr1159"},"content":"    public void deleteEnrolmentsWithEventName(Name eventName) {","lastModifiedDate":"2023-11-02"},{"lineNumber":161,"author":{"gitId":"wr1159"},"content":"        List\u003cEnrolment\u003e enrolmentsToBeDeletedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-02"},{"lineNumber":162,"author":{"gitId":"wr1159"},"content":"        for (Enrolment enrolment: this.filteredEnrolments) {","lastModifiedDate":"2023-11-02"},{"lineNumber":163,"author":{"gitId":"wr1159"},"content":"            if (enrolment.getEventName().equals(eventName)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":164,"author":{"gitId":"wr1159"},"content":"                // The enrolments cannot directly be deleted as it will affect the iteration of enrolments here.","lastModifiedDate":"2023-11-02"},{"lineNumber":165,"author":{"gitId":"wr1159"},"content":"                enrolmentsToBeDeletedList.add(enrolment);","lastModifiedDate":"2023-11-02"},{"lineNumber":166,"author":{"gitId":"wr1159"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":167,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":168,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":169,"author":{"gitId":"wr1159"},"content":"        for (Enrolment enrolment: enrolmentsToBeDeletedList) {","lastModifiedDate":"2023-11-02"},{"lineNumber":170,"author":{"gitId":"wr1159"},"content":"            this.deleteEnrolment(enrolment);","lastModifiedDate":"2023-11-02"},{"lineNumber":171,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":172,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":173,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":174,"author":{"gitId":"wr1159"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":175,"author":{"gitId":"wr1159"},"content":"    public void deleteEnrolmentsWithMemberName(Name memberName) {","lastModifiedDate":"2023-11-02"},{"lineNumber":176,"author":{"gitId":"wr1159"},"content":"        List\u003cEnrolment\u003e enrolmentsToBeDeletedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-02"},{"lineNumber":177,"author":{"gitId":"wr1159"},"content":"        for (Enrolment enrolment: this.filteredEnrolments) {","lastModifiedDate":"2023-11-02"},{"lineNumber":178,"author":{"gitId":"wr1159"},"content":"            if (enrolment.getMemberName().equals(memberName)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":179,"author":{"gitId":"wr1159"},"content":"                // The enrolments cannot directly be deleted as it will affect the iteration of enrolments here.","lastModifiedDate":"2023-11-02"},{"lineNumber":180,"author":{"gitId":"wr1159"},"content":"                enrolmentsToBeDeletedList.add(enrolment);","lastModifiedDate":"2023-11-02"},{"lineNumber":181,"author":{"gitId":"wr1159"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":182,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":183,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":184,"author":{"gitId":"wr1159"},"content":"        for (Enrolment enrolment: enrolmentsToBeDeletedList) {","lastModifiedDate":"2023-11-02"},{"lineNumber":185,"author":{"gitId":"wr1159"},"content":"            this.deleteEnrolment(enrolment);","lastModifiedDate":"2023-11-02"},{"lineNumber":186,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":187,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":188,"author":{"gitId":"SelwynAng"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":189,"author":{"gitId":"andrechuakj"},"content":"    public void createEnrolment(Enrolment enrolment) {","lastModifiedDate":"2023-10-28"},{"lineNumber":190,"author":{"gitId":"andrechuakj"},"content":"        versionedCcaCommander.createEnrolment(enrolment);","lastModifiedDate":"2023-10-28"},{"lineNumber":191,"author":{"gitId":"andrechuakj"},"content":"        updateFilteredEnrolmentList(PREDICATE_SHOW_ALL_ENROLMENTS);","lastModifiedDate":"2023-10-28"},{"lineNumber":192,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":193,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":194,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":195,"author":{"gitId":"SelwynAng"},"content":"     *  Checks if the {@code lastShownEnrolmentList} contains a specific Enrolment object that has a Member and an","lastModifiedDate":"2023-10-29"},{"lineNumber":196,"author":{"gitId":"SelwynAng"},"content":"     *  Event that matches the given {@param memberName} and {@param eventName} respectively, and returns that","lastModifiedDate":"2023-10-29"},{"lineNumber":197,"author":{"gitId":"SelwynAng"},"content":"     *  specific Enrolment.","lastModifiedDate":"2023-10-29"},{"lineNumber":198,"author":{"gitId":"SelwynAng"},"content":"     * @param lastShownEnrolmentList","lastModifiedDate":"2023-10-29"},{"lineNumber":199,"author":{"gitId":"SelwynAng"},"content":"     * @param memberName","lastModifiedDate":"2023-10-29"},{"lineNumber":200,"author":{"gitId":"SelwynAng"},"content":"     * @param eventName","lastModifiedDate":"2023-10-29"},{"lineNumber":201,"author":{"gitId":"SelwynAng"},"content":"     * @throws EnrolmentNotFoundException if the enrolment cannot be found from the {@code lastShownEnrolmentList}","lastModifiedDate":"2023-10-29"},{"lineNumber":202,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":203,"author":{"gitId":"SelwynAng"},"content":"    public static Enrolment findEnrolmentFromList(List\u003cEnrolment\u003e lastShownEnrolmentList,","lastModifiedDate":"2023-10-29"},{"lineNumber":204,"author":{"gitId":"SelwynAng"},"content":"                                                  Name memberName, Name eventName) throws EnrolmentNotFoundException {","lastModifiedDate":"2023-10-29"},{"lineNumber":205,"author":{"gitId":"SelwynAng"},"content":"        Enrolment selectedEnrolment \u003d null;","lastModifiedDate":"2023-10-29"},{"lineNumber":206,"author":{"gitId":"SelwynAng"},"content":"        int enrolmentListPointer \u003d 0;","lastModifiedDate":"2023-10-29"},{"lineNumber":207,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":208,"author":{"gitId":"SelwynAng"},"content":"        for (int i \u003d 0; i \u003c lastShownEnrolmentList.size(); i++) {","lastModifiedDate":"2023-10-29"},{"lineNumber":209,"author":{"gitId":"SelwynAng"},"content":"            selectedEnrolment \u003d lastShownEnrolmentList.get(i);","lastModifiedDate":"2023-10-29"},{"lineNumber":210,"author":{"gitId":"SelwynAng"},"content":"            Name selectedMemberName \u003d selectedEnrolment.getMemberName();","lastModifiedDate":"2023-10-29"},{"lineNumber":211,"author":{"gitId":"SelwynAng"},"content":"            Name selectedEventName \u003d selectedEnrolment.getEventName();","lastModifiedDate":"2023-10-29"},{"lineNumber":212,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":213,"author":{"gitId":"SelwynAng"},"content":"            if (memberName.equals(selectedMemberName) \u0026\u0026 eventName.equals(selectedEventName)) {","lastModifiedDate":"2023-10-29"},{"lineNumber":214,"author":{"gitId":"SelwynAng"},"content":"                break;","lastModifiedDate":"2023-10-29"},{"lineNumber":215,"author":{"gitId":"SelwynAng"},"content":"            }","lastModifiedDate":"2023-10-29"},{"lineNumber":216,"author":{"gitId":"SelwynAng"},"content":"            enrolmentListPointer++;","lastModifiedDate":"2023-10-29"},{"lineNumber":217,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":218,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":219,"author":{"gitId":"SelwynAng"},"content":"        if (enrolmentListPointer \u003d\u003d lastShownEnrolmentList.size()) {","lastModifiedDate":"2023-10-29"},{"lineNumber":220,"author":{"gitId":"SelwynAng"},"content":"            throw new EnrolmentNotFoundException();","lastModifiedDate":"2023-10-29"},{"lineNumber":221,"author":{"gitId":"SelwynAng"},"content":"        } else {","lastModifiedDate":"2023-10-29"},{"lineNumber":222,"author":{"gitId":"SelwynAng"},"content":"            return selectedEnrolment;","lastModifiedDate":"2023-10-29"},{"lineNumber":223,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":224,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":225,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":226,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":227,"author":{"gitId":"ph-nathan"},"content":"     *  Edit the Enrolments from the enrolment list which","lastModifiedDate":"2023-11-02"},{"lineNumber":228,"author":{"gitId":"ph-nathan"},"content":"     *  contain an event that have the same name as {@param prevName}","lastModifiedDate":"2023-11-02"},{"lineNumber":229,"author":{"gitId":"ph-nathan"},"content":"     *  to match the {@param newName} of the event","lastModifiedDate":"2023-11-02"},{"lineNumber":230,"author":{"gitId":"ph-nathan"},"content":"     * @param prevName","lastModifiedDate":"2023-11-02"},{"lineNumber":231,"author":{"gitId":"ph-nathan"},"content":"     * @param newName","lastModifiedDate":"2023-11-02"},{"lineNumber":232,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":233,"author":{"gitId":"ph-nathan"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":234,"author":{"gitId":"ph-nathan"},"content":"    public void editEnrolmentsWithEventName(Name prevName, Name newName) {","lastModifiedDate":"2023-11-02"},{"lineNumber":235,"author":{"gitId":"ph-nathan"},"content":"        updateFilteredEnrolmentList(PREDICATE_SHOW_ALL_ENROLMENTS);","lastModifiedDate":"2023-11-02"},{"lineNumber":236,"author":{"gitId":"ph-nathan"},"content":"        // get the enrolments list then loop through to edit matching enrolments","lastModifiedDate":"2023-11-02"},{"lineNumber":237,"author":{"gitId":"ph-nathan"},"content":"        List\u003cEnrolment\u003e enrolmentList \u003d getFilteredEnrolmentList();","lastModifiedDate":"2023-11-02"},{"lineNumber":238,"author":{"gitId":"ph-nathan"},"content":"        for (Enrolment enrolment: enrolmentList) {","lastModifiedDate":"2023-11-02"},{"lineNumber":239,"author":{"gitId":"ph-nathan"},"content":"            if (enrolment.getEventName().equals(prevName)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":240,"author":{"gitId":"ph-nathan"},"content":"                Enrolment editedEnrolment \u003d new Enrolment(enrolment.getMemberName(), newName,","lastModifiedDate":"2023-11-02"},{"lineNumber":241,"author":{"gitId":"wr1159"},"content":"                        Optional.of(enrolment.getHours()), Optional.of(enrolment.getRemark()));","lastModifiedDate":"2023-11-02"},{"lineNumber":242,"author":{"gitId":"ph-nathan"},"content":"                setEnrolment(enrolment, editedEnrolment);","lastModifiedDate":"2023-11-02"},{"lineNumber":243,"author":{"gitId":"ph-nathan"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":244,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":245,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":246,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":247,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":248,"author":{"gitId":"ph-nathan"},"content":"     *  Edit the Enrolments from the enrolment list which","lastModifiedDate":"2023-11-02"},{"lineNumber":249,"author":{"gitId":"ph-nathan"},"content":"     *  contain a Member that have the same name as {@param prevName}","lastModifiedDate":"2023-11-02"},{"lineNumber":250,"author":{"gitId":"ph-nathan"},"content":"     *  to match the {@param newName} of the member","lastModifiedDate":"2023-11-02"},{"lineNumber":251,"author":{"gitId":"ph-nathan"},"content":"     * @param prevName","lastModifiedDate":"2023-11-02"},{"lineNumber":252,"author":{"gitId":"ph-nathan"},"content":"     * @param newName","lastModifiedDate":"2023-11-02"},{"lineNumber":253,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":254,"author":{"gitId":"ph-nathan"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":255,"author":{"gitId":"ph-nathan"},"content":"    public void editEnrolmentsWithMemberName(Name prevName, Name newName) {","lastModifiedDate":"2023-11-02"},{"lineNumber":256,"author":{"gitId":"ph-nathan"},"content":"        updateFilteredEnrolmentList(PREDICATE_SHOW_ALL_ENROLMENTS);","lastModifiedDate":"2023-11-02"},{"lineNumber":257,"author":{"gitId":"ph-nathan"},"content":"        // get the enrolments list then loop through to edit matching enrolments","lastModifiedDate":"2023-11-02"},{"lineNumber":258,"author":{"gitId":"ph-nathan"},"content":"        List\u003cEnrolment\u003e enrolmentList \u003d getFilteredEnrolmentList();","lastModifiedDate":"2023-11-02"},{"lineNumber":259,"author":{"gitId":"ph-nathan"},"content":"        for (Enrolment enrolment: enrolmentList) {","lastModifiedDate":"2023-11-02"},{"lineNumber":260,"author":{"gitId":"ph-nathan"},"content":"            if (enrolment.getMemberName().equals(prevName)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":261,"author":{"gitId":"ph-nathan"},"content":"                Enrolment editedEnrolment \u003d new Enrolment(newName, enrolment.getEventName(),","lastModifiedDate":"2023-11-02"},{"lineNumber":262,"author":{"gitId":"wr1159"},"content":"                        Optional.of(enrolment.getHours()), Optional.of(enrolment.getRemark()));","lastModifiedDate":"2023-11-02"},{"lineNumber":263,"author":{"gitId":"ph-nathan"},"content":"                setEnrolment(enrolment, editedEnrolment);","lastModifiedDate":"2023-11-02"},{"lineNumber":264,"author":{"gitId":"ph-nathan"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":265,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":266,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":267,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":268,"author":{"gitId":"dylkaw"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":269,"author":{"gitId":"dylkaw"},"content":"    public void setEnrolment(Enrolment target, Enrolment editedEnrolment) {","lastModifiedDate":"2023-10-28"},{"lineNumber":270,"author":{"gitId":"dylkaw"},"content":"        requireAllNonNull(target, editedEnrolment);","lastModifiedDate":"2023-10-28"},{"lineNumber":271,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":272,"author":{"gitId":"dylkaw"},"content":"        versionedCcaCommander.setEnrolment(target, editedEnrolment);","lastModifiedDate":"2023-10-28"},{"lineNumber":273,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":274,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":275,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":276,"author":{"gitId":"SelwynAng"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":277,"author":{"gitId":"SelwynAng"},"content":"    public void commit(String commitMessage) {","lastModifiedDate":"2023-10-24"},{"lineNumber":278,"author":{"gitId":"SelwynAng"},"content":"        versionedCcaCommander.commit(commitMessage);","lastModifiedDate":"2023-10-24"},{"lineNumber":279,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":280,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":281,"author":{"gitId":"SelwynAng"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":282,"author":{"gitId":"SelwynAng"},"content":"    public boolean canUndo() {","lastModifiedDate":"2023-10-24"},{"lineNumber":283,"author":{"gitId":"SelwynAng"},"content":"        return versionedCcaCommander.canUndo();","lastModifiedDate":"2023-10-24"},{"lineNumber":284,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":285,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":286,"author":{"gitId":"SelwynAng"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":287,"author":{"gitId":"SelwynAng"},"content":"    public String undo() {","lastModifiedDate":"2023-10-24"},{"lineNumber":288,"author":{"gitId":"SelwynAng"},"content":"        return versionedCcaCommander.undo();","lastModifiedDate":"2023-10-24"},{"lineNumber":289,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":290,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":291,"author":{"gitId":"SelwynAng"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":292,"author":{"gitId":"SelwynAng"},"content":"    public boolean canRedo() {","lastModifiedDate":"2023-10-24"},{"lineNumber":293,"author":{"gitId":"SelwynAng"},"content":"        return versionedCcaCommander.canRedo();","lastModifiedDate":"2023-10-24"},{"lineNumber":294,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":295,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":296,"author":{"gitId":"SelwynAng"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":297,"author":{"gitId":"SelwynAng"},"content":"    public String redo() {","lastModifiedDate":"2023-10-24"},{"lineNumber":298,"author":{"gitId":"SelwynAng"},"content":"        return versionedCcaCommander.redo();","lastModifiedDate":"2023-10-24"},{"lineNumber":299,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":300,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":301,"author":{"gitId":"SelwynAng"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":302,"author":{"gitId":"SelwynAng"},"content":"    public VersionCaptures viewVersionCaptures() {","lastModifiedDate":"2023-10-24"},{"lineNumber":303,"author":{"gitId":"SelwynAng"},"content":"        return versionedCcaCommander.viewVersionCaptures();","lastModifiedDate":"2023-10-24"},{"lineNumber":304,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":305,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":306,"author":{"gitId":"wr1159"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Member List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-02"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":309,"author":{"gitId":"wr1159"},"content":"     * Returns an unmodifiable view of the list of {@code Member} backed by the internal list of","lastModifiedDate":"2023-10-02"},{"lineNumber":310,"author":{"gitId":"andrechuakj"},"content":"     * {@code versionedCcaCommander}","lastModifiedDate":"2023-10-21"},{"lineNumber":311,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":313,"author":{"gitId":"wr1159"},"content":"    public ObservableList\u003cMember\u003e getFilteredMemberList() {","lastModifiedDate":"2023-10-02"},{"lineNumber":314,"author":{"gitId":"wr1159"},"content":"        return filteredMembers;","lastModifiedDate":"2023-10-02"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":317,"author":{"gitId":"SelwynAng"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":318,"author":{"gitId":"SelwynAng"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2023-10-14"},{"lineNumber":319,"author":{"gitId":"SelwynAng"},"content":"        return filteredEvents;","lastModifiedDate":"2023-10-14"},{"lineNumber":320,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":321,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":322,"author":{"gitId":"dylkaw"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":323,"author":{"gitId":"andrechuakj"},"content":"    public ObservableList\u003cEnrolment\u003e getFilteredEnrolmentList() {","lastModifiedDate":"2023-10-28"},{"lineNumber":324,"author":{"gitId":"andrechuakj"},"content":"        return filteredEnrolments;","lastModifiedDate":"2023-10-28"},{"lineNumber":325,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":326,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":328,"author":{"gitId":"wr1159"},"content":"    public void updateFilteredMemberList(Predicate\u003cMember\u003e predicate) {","lastModifiedDate":"2023-10-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":330,"author":{"gitId":"wr1159"},"content":"        filteredMembers.setPredicate(predicate);","lastModifiedDate":"2023-10-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":333,"author":{"gitId":"SelwynAng"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":334,"author":{"gitId":"SelwynAng"},"content":"    public void updateFilteredEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2023-10-14"},{"lineNumber":335,"author":{"gitId":"SelwynAng"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":336,"author":{"gitId":"SelwynAng"},"content":"        filteredEvents.setPredicate(predicate);","lastModifiedDate":"2023-10-14"},{"lineNumber":337,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":338,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":339,"author":{"gitId":"dylkaw"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":340,"author":{"gitId":"andrechuakj"},"content":"    public void updateFilteredEnrolmentList(Predicate\u003cEnrolment\u003e predicate) {","lastModifiedDate":"2023-10-28"},{"lineNumber":341,"author":{"gitId":"dylkaw"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-10-23"},{"lineNumber":342,"author":{"gitId":"andrechuakj"},"content":"        filteredEnrolments.setPredicate(predicate);","lastModifiedDate":"2023-10-28"},{"lineNumber":343,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":344,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":345,"author":{"gitId":"ph-nathan"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":346,"author":{"gitId":"ph-nathan"},"content":"    public Collection\u003cName\u003e updateMemberHoursAndRemark(Name eventName) {","lastModifiedDate":"2023-11-02"},{"lineNumber":347,"author":{"gitId":"ph-nathan"},"content":"        List\u003cMember\u003e lastShownMemberList \u003d getFilteredMemberList();","lastModifiedDate":"2023-11-02"},{"lineNumber":348,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":349,"author":{"gitId":"ph-nathan"},"content":"        updateFilteredEnrolmentList(PREDICATE_SHOW_ALL_ENROLMENTS);","lastModifiedDate":"2023-11-02"},{"lineNumber":350,"author":{"gitId":"ph-nathan"},"content":"        List\u003cEnrolment\u003e enrolmentList \u003d getFilteredEnrolmentList();","lastModifiedDate":"2023-11-02"},{"lineNumber":351,"author":{"gitId":"ph-nathan"},"content":"        Collection\u003cName\u003e memberNameCollection \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-11-02"},{"lineNumber":352,"author":{"gitId":"ph-nathan"},"content":"        for (Enrolment enrolment: enrolmentList) {","lastModifiedDate":"2023-11-02"},{"lineNumber":353,"author":{"gitId":"ph-nathan"},"content":"            if (enrolment.getEventName().equals(eventName)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":354,"author":{"gitId":"ph-nathan"},"content":"                Name memName \u003d enrolment.getMemberName();","lastModifiedDate":"2023-11-02"},{"lineNumber":355,"author":{"gitId":"ph-nathan"},"content":"                memberNameCollection.add(memName);","lastModifiedDate":"2023-11-02"},{"lineNumber":356,"author":{"gitId":"ph-nathan"},"content":"                for (Member member: lastShownMemberList) {","lastModifiedDate":"2023-11-02"},{"lineNumber":357,"author":{"gitId":"ph-nathan"},"content":"                    if (member.getName().equals(memName)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":358,"author":{"gitId":"ph-nathan"},"content":"                        member.setHours(Optional.of(enrolment.getHours()));","lastModifiedDate":"2023-11-03"},{"lineNumber":359,"author":{"gitId":"ph-nathan"},"content":"                        member.setRemark(Optional.of(enrolment.getRemark()));","lastModifiedDate":"2023-11-03"},{"lineNumber":360,"author":{"gitId":"ph-nathan"},"content":"                    }","lastModifiedDate":"2023-11-02"},{"lineNumber":361,"author":{"gitId":"ph-nathan"},"content":"                }","lastModifiedDate":"2023-11-02"},{"lineNumber":362,"author":{"gitId":"ph-nathan"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":363,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":364,"author":{"gitId":"ph-nathan"},"content":"        return memberNameCollection;","lastModifiedDate":"2023-11-02"},{"lineNumber":365,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":366,"author":{"gitId":"ph-nathan"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":367,"author":{"gitId":"ph-nathan"},"content":"    public Collection\u003cName\u003e updateEventHoursAndRemark(Name memberName) {","lastModifiedDate":"2023-11-02"},{"lineNumber":368,"author":{"gitId":"ph-nathan"},"content":"        // View all events of member","lastModifiedDate":"2023-11-02"},{"lineNumber":369,"author":{"gitId":"ph-nathan"},"content":"        // loop through enrolment list, check if each enrolment.getMemberName() \u003d member.getName()","lastModifiedDate":"2023-11-02"},{"lineNumber":370,"author":{"gitId":"ph-nathan"},"content":"        // then add enrolment.event.getName() to","lastModifiedDate":"2023-11-02"},{"lineNumber":371,"author":{"gitId":"ph-nathan"},"content":"        // Collection\u003cName\u003e eventNames","lastModifiedDate":"2023-11-02"},{"lineNumber":372,"author":{"gitId":"ph-nathan"},"content":"        List\u003cEvent\u003e lastShownEventList \u003d getFilteredEventList();","lastModifiedDate":"2023-11-02"},{"lineNumber":373,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":374,"author":{"gitId":"ph-nathan"},"content":"        updateFilteredEnrolmentList(PREDICATE_SHOW_ALL_ENROLMENTS);","lastModifiedDate":"2023-11-02"},{"lineNumber":375,"author":{"gitId":"ph-nathan"},"content":"        List\u003cEnrolment\u003e enrolmentList \u003d getFilteredEnrolmentList();","lastModifiedDate":"2023-11-02"},{"lineNumber":376,"author":{"gitId":"ph-nathan"},"content":"        Collection\u003cName\u003e eventNameCollection \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-11-02"},{"lineNumber":377,"author":{"gitId":"ph-nathan"},"content":"        for (Enrolment enrolment: enrolmentList) {","lastModifiedDate":"2023-11-02"},{"lineNumber":378,"author":{"gitId":"ph-nathan"},"content":"            if (enrolment.getMemberName().equals(memberName)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":379,"author":{"gitId":"ph-nathan"},"content":"                Name eventName \u003d enrolment.getEventName();","lastModifiedDate":"2023-11-02"},{"lineNumber":380,"author":{"gitId":"ph-nathan"},"content":"                eventNameCollection.add(eventName);","lastModifiedDate":"2023-11-02"},{"lineNumber":381,"author":{"gitId":"ph-nathan"},"content":"                for (Event event: lastShownEventList) {","lastModifiedDate":"2023-11-02"},{"lineNumber":382,"author":{"gitId":"ph-nathan"},"content":"                    if (event.getName().equals(eventName)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":383,"author":{"gitId":"ph-nathan"},"content":"                        event.setHours(Optional.of(enrolment.getHours()));","lastModifiedDate":"2023-11-03"},{"lineNumber":384,"author":{"gitId":"ph-nathan"},"content":"                        event.setRemark(Optional.of(enrolment.getRemark()));","lastModifiedDate":"2023-11-03"},{"lineNumber":385,"author":{"gitId":"ph-nathan"},"content":"                    }","lastModifiedDate":"2023-11-02"},{"lineNumber":386,"author":{"gitId":"ph-nathan"},"content":"                }","lastModifiedDate":"2023-11-02"},{"lineNumber":387,"author":{"gitId":"ph-nathan"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":388,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":389,"author":{"gitId":"ph-nathan"},"content":"        return eventNameCollection;","lastModifiedDate":"2023-11-02"},{"lineNumber":390,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":391,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":393,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":394,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":395,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":396,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":398,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":399,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":400,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":401,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":403,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":404,"author":{"gitId":"SelwynAng"},"content":"        return versionedCcaCommander.equals(otherModelManager.versionedCcaCommander)","lastModifiedDate":"2023-10-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":406,"author":{"gitId":"SelwynAng"},"content":"                \u0026\u0026 filteredMembers.equals(otherModelManager.filteredMembers)","lastModifiedDate":"2023-10-23"},{"lineNumber":407,"author":{"gitId":"andrechuakj"},"content":"                \u0026\u0026 filteredEvents.equals(otherModelManager.filteredEvents)","lastModifiedDate":"2023-10-28"},{"lineNumber":408,"author":{"gitId":"andrechuakj"},"content":"                \u0026\u0026 filteredEnrolments.equals(otherModelManager","lastModifiedDate":"2023-10-28"},{"lineNumber":409,"author":{"gitId":"andrechuakj"},"content":"                .filteredEnrolments);","lastModifiedDate":"2023-10-28"},{"lineNumber":410,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":411,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wr1159":45,"andrechuakj":37,"SelwynAng":108,"dylkaw":29,"ph-nathan":92,"-":100}},{"path":"src/main/java/seedu/ccacommander/model/ReadOnlyCcaCommander.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.enrolment.Enrolment;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.Event;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Member;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":" * Unmodifiable view of CcaCommander","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"public interface ReadOnlyCcaCommander {","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"wr1159"},"content":"     * Returns an unmodifiable view of the members list.","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"wr1159"},"content":"     * This list will not contain any duplicate members.","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"wr1159"},"content":"    ObservableList\u003cMember\u003e getMemberList();","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"wr1159"},"content":"     * Returns an unmodifiable view of the events list.","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"wr1159"},"content":"     * This list will not contain any duplicate events.","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"wr1159"},"content":"    ObservableList\u003cEvent\u003e getEventList();","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"andrechuakj"},"content":"     * Returns an unmodifiable view of the enrolment list.","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"andrechuakj"},"content":"     * This list will not contain any duplicate enrolments.","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"andrechuakj"},"content":"    ObservableList\u003cEnrolment\u003e getEnrolmentList();","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wr1159":9,"andrechuakj":9,"dylkaw":3,"-":10}},{"path":"src/main/java/seedu/ccacommander/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.core.GuiSettings;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"    Path getCcaCommanderFilePath();","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"andrechuakj":3,"-":13}},{"path":"src/main/java/seedu/ccacommander/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.core.GuiSettings;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"andrechuakj"},"content":"    private Path ccaCommanderFilePath \u003d Paths.get(\"data\" , \"ccacommander.json\");","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"andrechuakj"},"content":"        setCcaCommanderFilePath(newUserPrefs.getCcaCommanderFilePath());","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"andrechuakj"},"content":"    public Path getCcaCommanderFilePath() {","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"andrechuakj"},"content":"        return ccaCommanderFilePath;","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"andrechuakj"},"content":"    public void setCcaCommanderFilePath(Path ccaCommanderFilePath) {","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"andrechuakj"},"content":"        requireNonNull(ccaCommanderFilePath);","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"andrechuakj"},"content":"        this.ccaCommanderFilePath \u003d ccaCommanderFilePath;","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"andrechuakj"},"content":"                \u0026\u0026 ccaCommanderFilePath.equals(otherUserPrefs.ccaCommanderFilePath);","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"andrechuakj"},"content":"        return Objects.hash(guiSettings, ccaCommanderFilePath);","lastModifiedDate":"2023-10-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"andrechuakj"},"content":"        sb.append(\"\\nLocal data file location : \" + ccaCommanderFilePath);","lastModifiedDate":"2023-10-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"andrechuakj":12,"-":76}},{"path":"src/main/java/seedu/ccacommander/model/VersionCaptures.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"package seedu.ccacommander.model;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"import java.util.List;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":" * Captures the versions of CcaCommander.","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":"public class VersionCaptures {","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"    private int currentPointer;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"    private List\u003cString\u003e versionCaptures;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"     * Creates a {@code VersionCaptures} with the specified {@code currentPointer} and {@code versionCaptures}.","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"    public VersionCaptures(int currentPointer, List\u003cString\u003e versionCaptures) {","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"        requireAllNonNull(currentPointer, versionCaptures);","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"        this.versionCaptures \u003d versionCaptures;","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"        this.currentPointer \u003d currentPointer;","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":"    public List\u003cString\u003e getVersionCaptures() {","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"SelwynAng"},"content":"        return this.versionCaptures;","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"SelwynAng"},"content":"    public int getCurrentPointer() {","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"SelwynAng"},"content":"        return this.currentPointer;","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"SelwynAng"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"SelwynAng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"SelwynAng"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"SelwynAng"},"content":"                || (other instanceof VersionCaptures","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"SelwynAng"},"content":"                \u0026\u0026 ((VersionCaptures) other).getVersionCaptures().equals(getVersionCaptures())","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"SelwynAng"},"content":"                \u0026\u0026 ((VersionCaptures) other).getCurrentPointer() \u003d\u003d getCurrentPointer());","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"SelwynAng":39}},{"path":"src/main/java/seedu/ccacommander/model/VersionedCcaCommander.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"package seedu.ccacommander.model;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"import java.util.List;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.model.exceptions.RedoStateException;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.model.exceptions.UndoStateException;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":" * A CcaCommander with versions implemented.","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"public class VersionedCcaCommander extends CcaCommander {","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"    public static final String MESSAGE_FIRST_COMMIT \u003d \"Saved data is loaded.\";","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"    private List\u003cCcaCommanderVersion\u003e ccaCommanderVersionList;","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"    private int versionPointer;","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"     * Creates a {@code VersionedCcaCommander} using the Members in the {@code toCopy}.","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"     * @param toCopy","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"SelwynAng"},"content":"    public VersionedCcaCommander(ReadOnlyCcaCommander toCopy) {","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"SelwynAng"},"content":"        super(toCopy);","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"SelwynAng"},"content":"        CcaCommanderVersion initialVersion \u003d new CcaCommanderVersion(MESSAGE_FIRST_COMMIT, this);","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"SelwynAng"},"content":"        this.ccaCommanderVersionList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"SelwynAng"},"content":"        this.ccaCommanderVersionList.add(initialVersion);","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"SelwynAng"},"content":"        this.versionPointer \u003d 0;","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"SelwynAng"},"content":"     * Saves the current state of the {@code CcaCommander} with the associated {@code commitMessage}.","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"SelwynAng"},"content":"     * @throws NullPointerException if the {@code commitMessage} is null.","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"SelwynAng"},"content":"    public void commit(String commitMessage) throws NullPointerException {","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"SelwynAng"},"content":"        requireNonNull(commitMessage);","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"SelwynAng"},"content":"        purgeRedundantVersions();","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"SelwynAng"},"content":"        CcaCommanderVersion state \u003d new CcaCommanderVersion(commitMessage, this);","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"SelwynAng"},"content":"        updateVersion(state);","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"SelwynAng"},"content":"    private void purgeRedundantVersions() {","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"SelwynAng"},"content":"        this.ccaCommanderVersionList.subList(this.versionPointer + 1, this.ccaCommanderVersionList.size()).clear();","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"SelwynAng"},"content":"    private void updateVersion(CcaCommanderVersion version) {","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"SelwynAng"},"content":"        this.ccaCommanderVersionList.add(version);","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"SelwynAng"},"content":"        this.versionPointer++;","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"SelwynAng"},"content":"     * Undoes the most recent undoable command.","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"SelwynAng"},"content":"     * @return the commit message of the undone command.","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"SelwynAng"},"content":"     * @throws UndoStateException if there are no commands to undo.","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"SelwynAng"},"content":"    public String undo() throws UndoStateException {","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"SelwynAng"},"content":"        if (!canUndo()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"SelwynAng"},"content":"            throw new UndoStateException();","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"SelwynAng"},"content":"        CcaCommanderVersion currentVersion \u003d this.ccaCommanderVersionList.get(this.versionPointer);","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"SelwynAng"},"content":"        CcaCommanderVersion targetVersion \u003d this.ccaCommanderVersionList.get(this.versionPointer - 1);","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"SelwynAng"},"content":"        resetData(targetVersion.getVersionCapture());","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"SelwynAng"},"content":"        this.versionPointer--;","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"SelwynAng"},"content":"        return currentVersion.getCommitMessage();","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":73,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"SelwynAng"},"content":"     * Redoes the most recent undone command.","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"SelwynAng"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"SelwynAng"},"content":"     * @return the commit message of the redone command.","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"SelwynAng"},"content":"     * @throws RedoStateException if there are no commands to redo.","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"SelwynAng"},"content":"    public String redo() throws RedoStateException {","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"SelwynAng"},"content":"        if (!canRedo()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"SelwynAng"},"content":"            throw new RedoStateException();","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"SelwynAng"},"content":"        CcaCommanderVersion targetVersion \u003d ccaCommanderVersionList.get(versionPointer + 1);","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"SelwynAng"},"content":"        resetData(targetVersion.getVersionCapture());","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"SelwynAng"},"content":"        this.versionPointer++;","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"SelwynAng"},"content":"        return targetVersion.getCommitMessage();","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":93,"author":{"gitId":"SelwynAng"},"content":"     * Returns true if there exists a {@code Command} that can be undone.","lastModifiedDate":"2023-10-23"},{"lineNumber":94,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":95,"author":{"gitId":"SelwynAng"},"content":"    public boolean canUndo() {","lastModifiedDate":"2023-10-23"},{"lineNumber":96,"author":{"gitId":"SelwynAng"},"content":"        return this.versionPointer \u003e 0;","lastModifiedDate":"2023-10-24"},{"lineNumber":97,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":98,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":99,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":100,"author":{"gitId":"SelwynAng"},"content":"     * Returns true if there exists a {@code Command} that can be redone.","lastModifiedDate":"2023-10-24"},{"lineNumber":101,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":102,"author":{"gitId":"SelwynAng"},"content":"    public boolean canRedo() {","lastModifiedDate":"2023-10-24"},{"lineNumber":103,"author":{"gitId":"SelwynAng"},"content":"        return this.versionPointer \u003c ccaCommanderVersionList.size() - 1;","lastModifiedDate":"2023-10-24"},{"lineNumber":104,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":106,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":107,"author":{"gitId":"SelwynAng"},"content":"     * Returns a summary of all {@code Command}s currently recorded by this {@code VersionedCcaCommander}.","lastModifiedDate":"2023-10-23"},{"lineNumber":108,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":109,"author":{"gitId":"SelwynAng"},"content":"    public VersionCaptures viewVersionCaptures() {","lastModifiedDate":"2023-10-24"},{"lineNumber":110,"author":{"gitId":"SelwynAng"},"content":"        return new VersionCaptures(versionPointer, ccaCommanderVersionList.stream().map(version -\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":111,"author":{"gitId":"SelwynAng"},"content":"                version.getCommitMessage()).collect(Collectors.toUnmodifiableList()));","lastModifiedDate":"2023-10-24"},{"lineNumber":112,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":113,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":114,"author":{"gitId":"SelwynAng"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":115,"author":{"gitId":"SelwynAng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-23"},{"lineNumber":116,"author":{"gitId":"SelwynAng"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-10-23"},{"lineNumber":117,"author":{"gitId":"SelwynAng"},"content":"                || (other instanceof VersionedCcaCommander","lastModifiedDate":"2023-10-23"},{"lineNumber":118,"author":{"gitId":"SelwynAng"},"content":"                \u0026\u0026 ((VersionedCcaCommander) other).versionPointer \u003d\u003d this.versionPointer","lastModifiedDate":"2023-10-24"},{"lineNumber":119,"author":{"gitId":"SelwynAng"},"content":"                \u0026\u0026 ((VersionedCcaCommander) other).ccaCommanderVersionList.equals(this.ccaCommanderVersionList)","lastModifiedDate":"2023-10-24"},{"lineNumber":120,"author":{"gitId":"SelwynAng"},"content":"                \u0026\u0026 super.equals(other));","lastModifiedDate":"2023-10-23"},{"lineNumber":121,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":122,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"SelwynAng":122}},{"path":"src/main/java/seedu/ccacommander/model/enrolment/Enrolment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model.enrolment;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.shared.Name;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"/**","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":" * Represents an enrolment in CcaCommander.","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":" */","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":"public class Enrolment {","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"andrechuakj"},"content":"    // Identity fields","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"andrechuakj"},"content":"    private final Name memberName;","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"andrechuakj"},"content":"    private final Name eventName;","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"andrechuakj"},"content":"    // Data fields","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"andrechuakj"},"content":"    private final Optional\u003cHours\u003e hours;","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"andrechuakj"},"content":"    private final Optional\u003cRemark\u003e remark;","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"andrechuakj"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"andrechuakj"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"andrechuakj"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"andrechuakj"},"content":"    public Enrolment(Name memberName, Name eventName, Optional\u003cHours\u003e hours, Optional\u003cRemark\u003e remark) {","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"andrechuakj"},"content":"        requireAllNonNull(memberName, eventName, hours, remark);","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"andrechuakj"},"content":"        this.memberName \u003d memberName;","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"andrechuakj"},"content":"        this.eventName \u003d eventName;","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"andrechuakj"},"content":"        this.hours \u003d hours;","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"andrechuakj"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"andrechuakj"},"content":"    public Name getMemberName() {","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"andrechuakj"},"content":"        return memberName;","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"andrechuakj"},"content":"    public Name getEventName() {","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"andrechuakj"},"content":"        return eventName;","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"andrechuakj"},"content":"    public Hours getHours() {","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"andrechuakj"},"content":"        return hours.orElse(Hours.EMPTY_HOURS);","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"andrechuakj"},"content":"    public Remark getRemark() {","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"andrechuakj"},"content":"        return remark.orElse(Remark.EMPTY_REMARK);","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"andrechuakj"},"content":"    public String getMemberAndEventEnrolment() {","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"SelwynAng"},"content":"        return getMemberName().toString() + \" to \" + getEventName().toString();","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"andrechuakj"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"andrechuakj"},"content":"     * Returns true if both enrolment have the same identity fields.","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"andrechuakj"},"content":"     * This defines a weaker notion of equality between two enrolment.","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"andrechuakj"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"andrechuakj"},"content":"    public boolean isSameEnrolment(Enrolment otherEnrolment) {","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"andrechuakj"},"content":"        if (otherEnrolment \u003d\u003d this) {","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"andrechuakj"},"content":"            return true;","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"andrechuakj"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"andrechuakj"},"content":"        return otherEnrolment !\u003d null","lastModifiedDate":"2023-10-28"},{"lineNumber":66,"author":{"gitId":"andrechuakj"},"content":"                \u0026\u0026 otherEnrolment.getMemberName().equals(getMemberName())","lastModifiedDate":"2023-10-28"},{"lineNumber":67,"author":{"gitId":"andrechuakj"},"content":"                \u0026\u0026 otherEnrolment.getEventName().equals(getEventName());","lastModifiedDate":"2023-10-28"},{"lineNumber":68,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"andrechuakj"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"andrechuakj"},"content":"     * Returns true if both enrolment have the same identity and data fields.","lastModifiedDate":"2023-10-28"},{"lineNumber":72,"author":{"gitId":"andrechuakj"},"content":"     * This defines a stronger notion of equality between two enrolments.","lastModifiedDate":"2023-10-28"},{"lineNumber":73,"author":{"gitId":"andrechuakj"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"andrechuakj"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"andrechuakj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"andrechuakj"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"andrechuakj"},"content":"            return true;","lastModifiedDate":"2023-10-21"},{"lineNumber":78,"author":{"gitId":"andrechuakj"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":79,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":80,"author":{"gitId":"andrechuakj"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-21"},{"lineNumber":81,"author":{"gitId":"andrechuakj"},"content":"        if (!(other instanceof Enrolment)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":82,"author":{"gitId":"andrechuakj"},"content":"            return false;","lastModifiedDate":"2023-10-21"},{"lineNumber":83,"author":{"gitId":"andrechuakj"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":84,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":85,"author":{"gitId":"andrechuakj"},"content":"        Enrolment otherEnrolment \u003d (Enrolment) other;","lastModifiedDate":"2023-10-28"},{"lineNumber":86,"author":{"gitId":"andrechuakj"},"content":"        return memberName.equals(otherEnrolment.memberName)","lastModifiedDate":"2023-10-28"},{"lineNumber":87,"author":{"gitId":"andrechuakj"},"content":"                \u0026\u0026 eventName.equals(otherEnrolment.eventName)","lastModifiedDate":"2023-10-28"},{"lineNumber":88,"author":{"gitId":"andrechuakj"},"content":"                \u0026\u0026 hours.equals(otherEnrolment.hours)","lastModifiedDate":"2023-10-28"},{"lineNumber":89,"author":{"gitId":"andrechuakj"},"content":"                \u0026\u0026 remark.equals(otherEnrolment.remark);","lastModifiedDate":"2023-10-28"},{"lineNumber":90,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":91,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":92,"author":{"gitId":"andrechuakj"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":93,"author":{"gitId":"andrechuakj"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-22"},{"lineNumber":94,"author":{"gitId":"andrechuakj"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-10-22"},{"lineNumber":95,"author":{"gitId":"andrechuakj"},"content":"        return Objects.hash(memberName, eventName, hours, remark);","lastModifiedDate":"2023-10-22"},{"lineNumber":96,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":97,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":98,"author":{"gitId":"andrechuakj"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":99,"author":{"gitId":"andrechuakj"},"content":"    public String toString() {","lastModifiedDate":"2023-10-21"},{"lineNumber":100,"author":{"gitId":"andrechuakj"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-21"},{"lineNumber":101,"author":{"gitId":"andrechuakj"},"content":"                .add(\"member name\", memberName)","lastModifiedDate":"2023-10-21"},{"lineNumber":102,"author":{"gitId":"andrechuakj"},"content":"                .add(\"event name\", eventName)","lastModifiedDate":"2023-10-21"},{"lineNumber":103,"author":{"gitId":"andrechuakj"},"content":"                .add(\"hours\", hours.orElse(Hours.EMPTY_HOURS))","lastModifiedDate":"2023-10-30"},{"lineNumber":104,"author":{"gitId":"andrechuakj"},"content":"                .add(\"remark\", remark.orElse(Remark.EMPTY_REMARK))","lastModifiedDate":"2023-10-30"},{"lineNumber":105,"author":{"gitId":"andrechuakj"},"content":"                .toString();","lastModifiedDate":"2023-10-21"},{"lineNumber":106,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":107,"author":{"gitId":"andrechuakj"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"andrechuakj":104,"SelwynAng":3}},{"path":"src/main/java/seedu/ccacommander/model/enrolment/EnrolmentExistsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dylkaw"},"content":"package seedu.ccacommander.model.enrolment;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"dylkaw"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"dylkaw"},"content":"/**","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"dylkaw"},"content":" * Tests that a {@code Enrolment} is the same as the {@code Enrolment} given.","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"dylkaw"},"content":" */","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"dylkaw"},"content":"public class EnrolmentExistsPredicate implements Predicate\u003cEnrolment\u003e {","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"dylkaw"},"content":"    private final Enrolment enrolmentToCheck;","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"dylkaw"},"content":"    public EnrolmentExistsPredicate(Enrolment enrolmentToCheck) {","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"dylkaw"},"content":"        this.enrolmentToCheck \u003d enrolmentToCheck;","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"dylkaw"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"dylkaw"},"content":"    public boolean test(Enrolment enrolment) {","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"dylkaw"},"content":"        return enrolmentToCheck.isSameEnrolment(enrolment);","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"dylkaw"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"dylkaw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"dylkaw"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"dylkaw"},"content":"            return true;","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"dylkaw"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"dylkaw"},"content":"        if (!(other instanceof EnrolmentExistsPredicate)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"dylkaw"},"content":"            return false;","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"dylkaw"},"content":"        EnrolmentExistsPredicate otherEventNameContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"dylkaw"},"content":"                (EnrolmentExistsPredicate) other;","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"dylkaw"},"content":"        return enrolmentToCheck.equals(otherEventNameContainsKeywordsPredicate.enrolmentToCheck);","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"dylkaw"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"dylkaw"},"content":"    public String toString() {","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"dylkaw"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"dylkaw"},"content":"                .add(\"enrolmentToCheck\", enrolmentToCheck).toString();","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"dylkaw"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"dylkaw":43}},{"path":"src/main/java/seedu/ccacommander/model/enrolment/Hours.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model.enrolment;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"/**","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":" * Represents the number of hours a Member has gone for an Event.","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidHours(String)}","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":" */","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"public class Hours {","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"    public static final Hours EMPTY_HOURS \u003d new Hours(\"0\");","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"            \"Hours should be a non-negative integer up to 2147483647 and it should not be blank\";","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"andrechuakj"},"content":"    public final Integer value;","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"andrechuakj"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"andrechuakj"},"content":"     * Constructs a {@code Hours}.","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"andrechuakj"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"andrechuakj"},"content":"     * @param hours A valid number of hours in String.","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"andrechuakj"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"andrechuakj"},"content":"    public Hours(String hours) {","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"andrechuakj"},"content":"        requireNonNull(hours);","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"andrechuakj"},"content":"        checkArgument(isValidHours(hours), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"andrechuakj"},"content":"        value \u003d Integer.parseInt(hours);","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"andrechuakj"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"andrechuakj"},"content":"     * Returns true if a given number of hours is a valid hours.","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"andrechuakj"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"andrechuakj"},"content":"    public static boolean isValidHours(String test) {","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"andrechuakj"},"content":"        try {","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"andrechuakj"},"content":"            Integer i \u003d Integer.valueOf(test);","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"andrechuakj"},"content":"            return i \u003e\u003d 0;","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"andrechuakj"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"andrechuakj"},"content":"            return false;","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"andrechuakj"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"andrechuakj"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"andrechuakj"},"content":"    public String toString() {","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"andrechuakj"},"content":"        return value.toString();","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"andrechuakj"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"andrechuakj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"andrechuakj"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"andrechuakj"},"content":"            return true;","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"andrechuakj"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"andrechuakj"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"andrechuakj"},"content":"        if (!(other instanceof Hours)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"andrechuakj"},"content":"            return false;","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"andrechuakj"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"andrechuakj"},"content":"        Hours otherDate \u003d (Hours) other;","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"andrechuakj"},"content":"        return value.equals(otherDate.value);","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"andrechuakj"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"andrechuakj"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"andrechuakj"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"andrechuakj"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"andrechuakj":66}},{"path":"src/main/java/seedu/ccacommander/model/enrolment/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model.enrolment;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":" * Represents the remarks about a Member\u0027s enrolment of an Event.","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":" * * Guarantees: immutable; is valid as declared in {@link #isValidRemark(String)}","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"public class Remark {","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"    public static final Remark EMPTY_REMARK \u003d new Remark();","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Remark can take any values, and it should not be blank.\";","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":"    /*","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"andrechuakj"},"content":"     * The first character of the remark must not be a whitespace,","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"andrechuakj"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"andrechuakj"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"andrechuakj"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"andrechuakj"},"content":"    public final String value;","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"andrechuakj"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"andrechuakj"},"content":"     * Constructs a {@code Remark}.","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"andrechuakj"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"andrechuakj"},"content":"     * @param remark A valid remark.","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"andrechuakj"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"andrechuakj"},"content":"    public Remark(String remark) {","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"andrechuakj"},"content":"        requireNonNull(remark);","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"andrechuakj"},"content":"        checkArgument(isValidRemark(remark), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"andrechuakj"},"content":"        value \u003d remark;","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"andrechuakj"},"content":"    private Remark() {","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"andrechuakj"},"content":"        value \u003d \"\";","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"andrechuakj"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"andrechuakj"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"andrechuakj"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"andrechuakj"},"content":"    public static boolean isValidRemark(String test) {","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"andrechuakj"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"andrechuakj"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"andrechuakj"},"content":"    public String toString() {","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"andrechuakj"},"content":"        return value;","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"andrechuakj"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"andrechuakj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"andrechuakj"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"andrechuakj"},"content":"            return true;","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"andrechuakj"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"andrechuakj"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"andrechuakj"},"content":"        if (!(other instanceof Remark)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"andrechuakj"},"content":"            return false;","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"andrechuakj"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"andrechuakj"},"content":"        Remark otherRemark \u003d (Remark) other;","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"andrechuakj"},"content":"        return value.equals(otherRemark.value);","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"andrechuakj"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"andrechuakj"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"andrechuakj"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"andrechuakj"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"andrechuakj":70}},{"path":"src/main/java/seedu/ccacommander/model/enrolment/UniqueEnrolmentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model.enrolment;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import java.util.List;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.enrolment.exceptions.DuplicateEnrolmentException;","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.enrolment.exceptions.EnrolmentNotFoundException;","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"/**","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":" * A list of enrolment that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"andrechuakj"},"content":" * An enrolment is considered unique by comparing using {@code Enrolment#isSameEnrolment(Object)}. As such, adding","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"andrechuakj"},"content":" * and updating of enrolments uses Enrolment#isSameEnrolment(Enrolment) for equality so as to ensure that the","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"andrechuakj"},"content":" * enrolment being added or updated is unique in terms of identity in the UniqueEnrolmentList. However, the removal of","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"andrechuakj"},"content":" * an enrolment uses Enrolment#equals(Object) so as to ensure that the enrolment with exactly the same fields will be","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"andrechuakj"},"content":" * removed.","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"andrechuakj"},"content":" *","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"andrechuakj"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"andrechuakj"},"content":" *","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"andrechuakj"},"content":" * @see Enrolment#isSameEnrolment(Enrolment)","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"andrechuakj"},"content":" */","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"andrechuakj"},"content":"public class UniqueEnrolmentList implements Iterable\u003cEnrolment\u003e {","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"andrechuakj"},"content":"    private final ObservableList\u003cEnrolment\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"andrechuakj"},"content":"    private final ObservableList\u003cEnrolment\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"andrechuakj"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"andrechuakj"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"andrechuakj"},"content":"     * Returns true if the list contains an equivalent enrolment as the given argument.","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"andrechuakj"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"andrechuakj"},"content":"    public boolean contains(Enrolment enrolmentToCheck) {","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"andrechuakj"},"content":"        requireNonNull(enrolmentToCheck);","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"andrechuakj"},"content":"        return internalList.stream().anyMatch(enrolmentToCheck::isSameEnrolment);","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"andrechuakj"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"andrechuakj"},"content":"     * Adds an enrolment to the list.","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"andrechuakj"},"content":"     * The enrolment must not already exist in the list.","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"andrechuakj"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"andrechuakj"},"content":"    public void createEnrolment(Enrolment enrolmentToCreate) {","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"andrechuakj"},"content":"        requireNonNull(enrolmentToCreate);","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"andrechuakj"},"content":"        if (contains(enrolmentToCreate)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"andrechuakj"},"content":"            throw new DuplicateEnrolmentException();","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"andrechuakj"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"andrechuakj"},"content":"        internalList.add(enrolmentToCreate);","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"andrechuakj"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"andrechuakj"},"content":"     * Replaces the enrolment {@code target} in the list with {@code editedEnrolment}.","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"andrechuakj"},"content":"     * {@code targetEnrolment} must exist in the list.","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"andrechuakj"},"content":"     * The {@code editedEnrolment} must not be the same as another enrolment existing  in the list.","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"andrechuakj"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"andrechuakj"},"content":"    public void setEnrolment(Enrolment targetEnrolment, Enrolment editedEnrolment) {","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"andrechuakj"},"content":"        requireAllNonNull(targetEnrolment, editedEnrolment);","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"andrechuakj"},"content":"        int index \u003d internalList.indexOf(targetEnrolment);","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"andrechuakj"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"andrechuakj"},"content":"            throw new EnrolmentNotFoundException();","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"andrechuakj"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"andrechuakj"},"content":"        if (!targetEnrolment.isSameEnrolment(editedEnrolment) \u0026\u0026 contains(editedEnrolment)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":66,"author":{"gitId":"andrechuakj"},"content":"            throw new DuplicateEnrolmentException();","lastModifiedDate":"2023-10-28"},{"lineNumber":67,"author":{"gitId":"andrechuakj"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":68,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"andrechuakj"},"content":"        internalList.set(index, editedEnrolment);","lastModifiedDate":"2023-10-28"},{"lineNumber":70,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":71,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":72,"author":{"gitId":"andrechuakj"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":73,"author":{"gitId":"andrechuakj"},"content":"     * Removes the equivalent enrolment from the list.","lastModifiedDate":"2023-10-28"},{"lineNumber":74,"author":{"gitId":"andrechuakj"},"content":"     * The enrolment must exist in the list.","lastModifiedDate":"2023-10-28"},{"lineNumber":75,"author":{"gitId":"andrechuakj"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":76,"author":{"gitId":"andrechuakj"},"content":"    public void remove(Enrolment toRemove) {","lastModifiedDate":"2023-10-28"},{"lineNumber":77,"author":{"gitId":"andrechuakj"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-28"},{"lineNumber":78,"author":{"gitId":"andrechuakj"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":79,"author":{"gitId":"andrechuakj"},"content":"            throw new EnrolmentNotFoundException();","lastModifiedDate":"2023-10-28"},{"lineNumber":80,"author":{"gitId":"andrechuakj"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":81,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":82,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":83,"author":{"gitId":"andrechuakj"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":84,"author":{"gitId":"andrechuakj"},"content":"     * Replaces the contents of this list with {@code replacement}.","lastModifiedDate":"2023-10-28"},{"lineNumber":85,"author":{"gitId":"andrechuakj"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":86,"author":{"gitId":"andrechuakj"},"content":"    public void setEnrolments(UniqueEnrolmentList replacement) {","lastModifiedDate":"2023-10-28"},{"lineNumber":87,"author":{"gitId":"andrechuakj"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-10-28"},{"lineNumber":88,"author":{"gitId":"andrechuakj"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-10-28"},{"lineNumber":89,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":90,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":91,"author":{"gitId":"andrechuakj"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":92,"author":{"gitId":"andrechuakj"},"content":"     * Replaces the contents of this list with {@code enrolments}.","lastModifiedDate":"2023-10-28"},{"lineNumber":93,"author":{"gitId":"andrechuakj"},"content":"     * {@code enrolments} must not contain duplicate enrolments.","lastModifiedDate":"2023-10-28"},{"lineNumber":94,"author":{"gitId":"andrechuakj"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":95,"author":{"gitId":"andrechuakj"},"content":"    public void setEnrolments(List\u003cEnrolment\u003e enrolments) {","lastModifiedDate":"2023-10-28"},{"lineNumber":96,"author":{"gitId":"andrechuakj"},"content":"        requireAllNonNull(enrolments);","lastModifiedDate":"2023-10-28"},{"lineNumber":97,"author":{"gitId":"andrechuakj"},"content":"        if (!enrolmentsAreUnique(enrolments)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":98,"author":{"gitId":"andrechuakj"},"content":"            throw new DuplicateEnrolmentException();","lastModifiedDate":"2023-10-28"},{"lineNumber":99,"author":{"gitId":"andrechuakj"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":100,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":101,"author":{"gitId":"andrechuakj"},"content":"        internalList.setAll(enrolments);","lastModifiedDate":"2023-10-28"},{"lineNumber":102,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":103,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":104,"author":{"gitId":"andrechuakj"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":105,"author":{"gitId":"andrechuakj"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-10-28"},{"lineNumber":106,"author":{"gitId":"andrechuakj"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":107,"author":{"gitId":"andrechuakj"},"content":"    public ObservableList\u003cEnrolment\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-28"},{"lineNumber":108,"author":{"gitId":"andrechuakj"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-28"},{"lineNumber":109,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":110,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":111,"author":{"gitId":"andrechuakj"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":112,"author":{"gitId":"andrechuakj"},"content":"    public Iterator\u003cEnrolment\u003e iterator() {","lastModifiedDate":"2023-10-28"},{"lineNumber":113,"author":{"gitId":"andrechuakj"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-28"},{"lineNumber":114,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":115,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":116,"author":{"gitId":"andrechuakj"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":117,"author":{"gitId":"andrechuakj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-28"},{"lineNumber":118,"author":{"gitId":"andrechuakj"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-28"},{"lineNumber":119,"author":{"gitId":"andrechuakj"},"content":"            return true;","lastModifiedDate":"2023-10-28"},{"lineNumber":120,"author":{"gitId":"andrechuakj"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":121,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":122,"author":{"gitId":"andrechuakj"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-28"},{"lineNumber":123,"author":{"gitId":"andrechuakj"},"content":"        if (!(other instanceof UniqueEnrolmentList)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":124,"author":{"gitId":"andrechuakj"},"content":"            return false;","lastModifiedDate":"2023-10-28"},{"lineNumber":125,"author":{"gitId":"andrechuakj"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":126,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":127,"author":{"gitId":"andrechuakj"},"content":"        UniqueEnrolmentList otherUniqueEnrolmentList \u003d (UniqueEnrolmentList) other;","lastModifiedDate":"2023-10-28"},{"lineNumber":128,"author":{"gitId":"andrechuakj"},"content":"        return internalList.equals(otherUniqueEnrolmentList.internalList);","lastModifiedDate":"2023-10-28"},{"lineNumber":129,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":130,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":131,"author":{"gitId":"andrechuakj"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":132,"author":{"gitId":"andrechuakj"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-28"},{"lineNumber":133,"author":{"gitId":"andrechuakj"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-28"},{"lineNumber":134,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":135,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":136,"author":{"gitId":"andrechuakj"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":137,"author":{"gitId":"andrechuakj"},"content":"    public String toString() {","lastModifiedDate":"2023-10-28"},{"lineNumber":138,"author":{"gitId":"andrechuakj"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-28"},{"lineNumber":139,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":140,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":141,"author":{"gitId":"andrechuakj"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":142,"author":{"gitId":"andrechuakj"},"content":"     * Returns true if {@code enrolments} contains only unique enrolments.","lastModifiedDate":"2023-10-28"},{"lineNumber":143,"author":{"gitId":"andrechuakj"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":144,"author":{"gitId":"andrechuakj"},"content":"    private boolean enrolmentsAreUnique(List\u003cEnrolment\u003e enrolments) {","lastModifiedDate":"2023-10-28"},{"lineNumber":145,"author":{"gitId":"andrechuakj"},"content":"        for (int i \u003d 0; i \u003c enrolments.size() - 1; i++) {","lastModifiedDate":"2023-10-28"},{"lineNumber":146,"author":{"gitId":"andrechuakj"},"content":"            for (int j \u003d i + 1; j \u003c enrolments.size(); j++) {","lastModifiedDate":"2023-10-28"},{"lineNumber":147,"author":{"gitId":"andrechuakj"},"content":"                if (enrolments.get(i).isSameEnrolment(enrolments.get(j))) {","lastModifiedDate":"2023-10-28"},{"lineNumber":148,"author":{"gitId":"andrechuakj"},"content":"                    return false;","lastModifiedDate":"2023-10-28"},{"lineNumber":149,"author":{"gitId":"andrechuakj"},"content":"                }","lastModifiedDate":"2023-10-28"},{"lineNumber":150,"author":{"gitId":"andrechuakj"},"content":"            }","lastModifiedDate":"2023-10-28"},{"lineNumber":151,"author":{"gitId":"andrechuakj"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":152,"author":{"gitId":"andrechuakj"},"content":"        return true;","lastModifiedDate":"2023-10-28"},{"lineNumber":153,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":154,"author":{"gitId":"andrechuakj"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"andrechuakj":154}},{"path":"src/main/java/seedu/ccacommander/model/enrolment/exceptions/DuplicateEnrolmentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model.enrolment.exceptions;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"/**","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":" * Signals that the operation will result in duplicate Enrolment.","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":" */","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"public class DuplicateEnrolmentException extends RuntimeException {","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"    public DuplicateEnrolmentException() {","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"        super(\"Operation would result in duplicate enrolments\");","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"andrechuakj":11}},{"path":"src/main/java/seedu/ccacommander/model/enrolment/exceptions/EnrolmentNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model.enrolment.exceptions;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"/**","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":" * Signals that the operation is unable to find the specified enrolment.","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":" */","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"public class EnrolmentNotFoundException extends RuntimeException {","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"    public EnrolmentNotFoundException() {","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":"        super(\"Enrolment cannot be found\");","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"andrechuakj":7,"SelwynAng":3}},{"path":"src/main/java/seedu/ccacommander/model/event/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model.event;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":5,"author":{"gitId":"wr1159"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"wr1159"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"wr1159"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-06"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"import java.util.Optional;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wr1159"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.enrolment.Hours;","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.enrolment.Remark;","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.shared.Name;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"wr1159"},"content":"import seedu.ccacommander.model.tag.Tag;","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"wr1159"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"andrechuakj"},"content":" * Represents an Event in CcaCommander.","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"wr1159"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"wr1159"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"wr1159"},"content":"public class Event {","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"wr1159"},"content":"    // Identity fields","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"dylkaw"},"content":"    private final Name name;","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"wr1159"},"content":"    // Data fields","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"wr1159"},"content":"    private final Location location;","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"wr1159"},"content":"    private final EventDate eventDate;","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"ph-nathan"},"content":"    // Enrolment data fields","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"ph-nathan"},"content":"    private Optional\u003cHours\u003e hours;","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"ph-nathan"},"content":"    private Optional\u003cRemark\u003e remark;","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"wr1159"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"wr1159"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"wr1159"},"content":"    public Event(Name name, EventDate eventDate, Location location, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"dylkaw"},"content":"        requireAllNonNull(name, eventDate, location);","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"dylkaw"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"wr1159"},"content":"        this.eventDate \u003d eventDate;","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"wr1159"},"content":"        this.location \u003d location;","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"wr1159"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"ph-nathan"},"content":"        this.hours \u003d Optional.of(Hours.EMPTY_HOURS);","lastModifiedDate":"2023-11-03"},{"lineNumber":45,"author":{"gitId":"ph-nathan"},"content":"        this.remark \u003d Optional.of(Remark.EMPTY_REMARK);","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"dylkaw"},"content":"    public Name getName() {","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"dylkaw"},"content":"        return this.name;","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"wr1159"},"content":"    public Location getLocation() {","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"wr1159"},"content":"        return this.location;","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"wr1159"},"content":"    public EventDate getDate() {","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"wr1159"},"content":"        return this.eventDate;","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"ph-nathan"},"content":"    public Hours getHours() {","lastModifiedDate":"2023-10-29"},{"lineNumber":61,"author":{"gitId":"ph-nathan"},"content":"        return hours.orElse(Hours.EMPTY_HOURS);","lastModifiedDate":"2023-11-03"},{"lineNumber":62,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":63,"author":{"gitId":"ph-nathan"},"content":"    public Remark getRemark() {","lastModifiedDate":"2023-10-29"},{"lineNumber":64,"author":{"gitId":"ph-nathan"},"content":"        return remark.orElse(Remark.EMPTY_REMARK);","lastModifiedDate":"2023-11-03"},{"lineNumber":65,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":66,"author":{"gitId":"ph-nathan"},"content":"    public void setHours(Optional\u003cHours\u003e hours) {","lastModifiedDate":"2023-11-03"},{"lineNumber":67,"author":{"gitId":"ph-nathan"},"content":"        this.hours \u003d hours;","lastModifiedDate":"2023-10-29"},{"lineNumber":68,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":69,"author":{"gitId":"ph-nathan"},"content":"    public void setRemark(Optional\u003cRemark\u003e remark) {","lastModifiedDate":"2023-11-03"},{"lineNumber":70,"author":{"gitId":"ph-nathan"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-10-29"},{"lineNumber":71,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":72,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":73,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"wr1159"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-10-23"},{"lineNumber":75,"author":{"gitId":"wr1159"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"wr1159"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2023-10-23"},{"lineNumber":78,"author":{"gitId":"wr1159"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":81,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":82,"author":{"gitId":"wr1159"},"content":"     * Returns true if both events have the same name.","lastModifiedDate":"2023-11-03"},{"lineNumber":83,"author":{"gitId":"wr1159"},"content":"     * This defines a weaker notion of equality between two events.","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":85,"author":{"gitId":"wr1159"},"content":"    public boolean isSameEvent(Event otherEvent) {","lastModifiedDate":"2023-10-06"},{"lineNumber":86,"author":{"gitId":"wr1159"},"content":"        if (otherEvent \u003d\u003d this) {","lastModifiedDate":"2023-10-06"},{"lineNumber":87,"author":{"gitId":"wr1159"},"content":"            return true;","lastModifiedDate":"2023-10-06"},{"lineNumber":88,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":89,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":90,"author":{"gitId":"wr1159"},"content":"        return otherEvent !\u003d null","lastModifiedDate":"2023-10-06"},{"lineNumber":91,"author":{"gitId":"wr1159"},"content":"                \u0026\u0026 otherEvent.getName().equals(getName());","lastModifiedDate":"2023-11-03"},{"lineNumber":92,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":93,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":94,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":95,"author":{"gitId":"wr1159"},"content":"     * Returns true if both events have the same identity and data fields.","lastModifiedDate":"2023-10-06"},{"lineNumber":96,"author":{"gitId":"wr1159"},"content":"     * This defines a stronger notion of equality between two events.","lastModifiedDate":"2023-10-06"},{"lineNumber":97,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":98,"author":{"gitId":"wr1159"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":99,"author":{"gitId":"wr1159"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-06"},{"lineNumber":100,"author":{"gitId":"wr1159"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-06"},{"lineNumber":101,"author":{"gitId":"wr1159"},"content":"            return true;","lastModifiedDate":"2023-10-06"},{"lineNumber":102,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":103,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":104,"author":{"gitId":"wr1159"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-06"},{"lineNumber":105,"author":{"gitId":"wr1159"},"content":"        if (!(other instanceof Event)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":106,"author":{"gitId":"wr1159"},"content":"            return false;","lastModifiedDate":"2023-10-06"},{"lineNumber":107,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":108,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":109,"author":{"gitId":"wr1159"},"content":"        Event otherEvent \u003d (Event) other;","lastModifiedDate":"2023-10-06"},{"lineNumber":110,"author":{"gitId":"dylkaw"},"content":"        return this.name.equals(otherEvent.name)","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"wr1159"},"content":"                \u0026\u0026 this.location.equals(otherEvent.location)","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"wr1159"},"content":"                \u0026\u0026 this.eventDate.equals(otherEvent.eventDate)","lastModifiedDate":"2023-10-23"},{"lineNumber":113,"author":{"gitId":"wr1159"},"content":"                \u0026\u0026 this.tags.equals(otherEvent.tags);","lastModifiedDate":"2023-10-23"},{"lineNumber":114,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":115,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":116,"author":{"gitId":"wr1159"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":117,"author":{"gitId":"wr1159"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-06"},{"lineNumber":118,"author":{"gitId":"wr1159"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-10-06"},{"lineNumber":119,"author":{"gitId":"wr1159"},"content":"        return Objects.hash(this.name, this.location, this.eventDate, this.tags);","lastModifiedDate":"2023-10-23"},{"lineNumber":120,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":121,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":122,"author":{"gitId":"wr1159"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":123,"author":{"gitId":"wr1159"},"content":"    public String toString() {","lastModifiedDate":"2023-10-06"},{"lineNumber":124,"author":{"gitId":"wr1159"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-06"},{"lineNumber":125,"author":{"gitId":"dylkaw"},"content":"                .add(\"name\", name)","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"wr1159"},"content":"                .add(\"date\", eventDate)","lastModifiedDate":"2023-10-11"},{"lineNumber":127,"author":{"gitId":"wr1159"},"content":"                .add(\"location\", location)","lastModifiedDate":"2023-10-06"},{"lineNumber":128,"author":{"gitId":"wr1159"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2023-10-23"},{"lineNumber":129,"author":{"gitId":"wr1159"},"content":"                .toString();","lastModifiedDate":"2023-10-06"},{"lineNumber":130,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":131,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":132,"author":{"gitId":"wr1159"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"wr1159":100,"andrechuakj":5,"dylkaw":7,"ph-nathan":20}},{"path":"src/main/java/seedu/ccacommander/model/event/EventDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model.event;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"wr1159"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"wr1159"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"wr1159"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"wr1159"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"wr1159"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":" * Represents an Event\u0027s date in CcaCommander.","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"wr1159"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDate(String)}","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"wr1159"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"wr1159"},"content":"public class EventDate {","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"wr1159"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"wr1159"},"content":"            \"Dates should be valid dates in the format of YYYY-MM-DD, and it should not be blank\";","lastModifiedDate":"2023-11-06"},{"lineNumber":18,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"wr1159"},"content":"    public static final DateTimeFormatter LOCAL_DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"YYYY-MM-DD\");","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"wr1159"},"content":"    public final LocalDate date;","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"wr1159"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"wr1159"},"content":"     * @param dateString A valid date in String.","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"wr1159"},"content":"    public EventDate(String dateString) {","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"wr1159"},"content":"        requireNonNull(dateString);","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"wr1159"},"content":"        checkArgument(isValidDate(dateString), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"wr1159"},"content":"        date \u003d LocalDate.parse(dateString);","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"wr1159"},"content":"     * Returns true if a given date is a valid date.","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"wr1159"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"wr1159"},"content":"        try {","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"wr1159"},"content":"            LocalDate.parse(test);","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"wr1159"},"content":"            return true;","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"wr1159"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"wr1159"},"content":"            return false;","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"wr1159"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"wr1159"},"content":"    public String toString() {","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"wr1159"},"content":"        return date.toString();","lastModifiedDate":"2023-10-11"},{"lineNumber":49,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"wr1159"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":52,"author":{"gitId":"wr1159"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"wr1159"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"wr1159"},"content":"            return true;","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"wr1159"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"wr1159"},"content":"        if (!(other instanceof EventDate)) {","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"wr1159"},"content":"            return false;","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":62,"author":{"gitId":"wr1159"},"content":"        EventDate otherDate \u003d (EventDate) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"wr1159"},"content":"        return date.equals(otherDate.date);","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":65,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":66,"author":{"gitId":"wr1159"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":67,"author":{"gitId":"wr1159"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-11"},{"lineNumber":68,"author":{"gitId":"wr1159"},"content":"        return date.hashCode();","lastModifiedDate":"2023-10-11"},{"lineNumber":69,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":70,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":71,"author":{"gitId":"wr1159"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"wr1159":68,"andrechuakj":3}},{"path":"src/main/java/seedu/ccacommander/model/event/EventInNameCollectionPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"package seedu.ccacommander.model.event;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"import java.util.Collection;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.shared.Name;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":" * Tests that a {@code Event}\u0027s {@code Name} is in the given collection.","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"public class EventInNameCollectionPredicate implements Predicate\u003cEvent\u003e {","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"    private final Collection\u003cName\u003e eventNames;","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":"    public EventInNameCollectionPredicate(Collection\u003cName\u003e eventNames) {","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"        this.eventNames \u003d eventNames;","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"ph-nathan"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"ph-nathan"},"content":"    public boolean test(Event event) {","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"        return eventNames.stream().anyMatch(name -\u003e event.getName().equals(name));","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"ph-nathan"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"ph-nathan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"ph-nathan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"ph-nathan"},"content":"            return true;","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"ph-nathan"},"content":"        if (!(other instanceof EventInNameCollectionPredicate)) {","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"ph-nathan"},"content":"            return false;","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"ph-nathan"},"content":"        Set\u003cName\u003e names \u003d new HashSet\u003c\u003e(eventNames);","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"ph-nathan"},"content":"        Set\u003cName\u003e otherNames \u003d new HashSet\u003c\u003e(((EventInNameCollectionPredicate) other).eventNames);","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"ph-nathan"},"content":"        return names.equals(otherNames);","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"ph-nathan":41}},{"path":"src/main/java/seedu/ccacommander/model/event/EventNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model.event;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"dylkaw"},"content":"import java.util.List;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"dylkaw"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.util.StringUtil;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"dylkaw"},"content":" * Tests that a {@code Event}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"dylkaw"},"content":"public class EventNameContainsKeywordsPredicate implements Predicate\u003cEvent\u003e {","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"dylkaw"},"content":"    public EventNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"dylkaw"},"content":"    public boolean test(Event event) {","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"dylkaw"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(event.getName().name, keyword));","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"dylkaw"},"content":"        if (!(other instanceof EventNameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"dylkaw"},"content":"        EventNameContainsKeywordsPredicate otherEventNameContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"dylkaw"},"content":"                (EventNameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"dylkaw"},"content":"        return keywords.equals(otherEventNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"andrechuakj":3,"dylkaw":12,"-":30}},{"path":"src/main/java/seedu/ccacommander/model/event/Location.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model.event;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":3,"author":{"gitId":"wr1159"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-06"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":6,"author":{"gitId":"wr1159"},"content":"/**","lastModifiedDate":"2023-10-06"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":" * Represents an Event\u0027s location in CcaCommander.","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"wr1159"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidLocation(String)}","lastModifiedDate":"2023-10-06"},{"lineNumber":9,"author":{"gitId":"wr1159"},"content":" */","lastModifiedDate":"2023-10-06"},{"lineNumber":10,"author":{"gitId":"wr1159"},"content":"public class Location {","lastModifiedDate":"2023-10-06"},{"lineNumber":11,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":12,"author":{"gitId":"wr1159"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Location can take any values, and it should not be blank\";","lastModifiedDate":"2023-10-06"},{"lineNumber":13,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":14,"author":{"gitId":"wr1159"},"content":"    /*","lastModifiedDate":"2023-10-06"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":"     * The first character of the location must not be a whitespace,","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"wr1159"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-06"},{"lineNumber":17,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":18,"author":{"gitId":"wr1159"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2023-10-06"},{"lineNumber":19,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":20,"author":{"gitId":"wr1159"},"content":"    public final String value;","lastModifiedDate":"2023-10-06"},{"lineNumber":21,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":22,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":23,"author":{"gitId":"wr1159"},"content":"     * Constructs an {@code Location}.","lastModifiedDate":"2023-10-06"},{"lineNumber":24,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-10-06"},{"lineNumber":25,"author":{"gitId":"wr1159"},"content":"     * @param location A valid location.","lastModifiedDate":"2023-10-06"},{"lineNumber":26,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":27,"author":{"gitId":"wr1159"},"content":"    public Location(String location) {","lastModifiedDate":"2023-10-06"},{"lineNumber":28,"author":{"gitId":"wr1159"},"content":"        requireNonNull(location);","lastModifiedDate":"2023-10-06"},{"lineNumber":29,"author":{"gitId":"wr1159"},"content":"        checkArgument(isValidLocation(location), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-06"},{"lineNumber":30,"author":{"gitId":"wr1159"},"content":"        this.value \u003d location;","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":32,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":33,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-06"},{"lineNumber":34,"author":{"gitId":"wr1159"},"content":"     * Returns true if a given string is a valid location.","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-06"},{"lineNumber":36,"author":{"gitId":"wr1159"},"content":"    public static boolean isValidLocation(String test) {","lastModifiedDate":"2023-10-06"},{"lineNumber":37,"author":{"gitId":"wr1159"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-06"},{"lineNumber":38,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":39,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":40,"author":{"gitId":"wr1159"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":41,"author":{"gitId":"wr1159"},"content":"    public String toString() {","lastModifiedDate":"2023-10-06"},{"lineNumber":42,"author":{"gitId":"wr1159"},"content":"        return value;","lastModifiedDate":"2023-10-06"},{"lineNumber":43,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":44,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"wr1159"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":46,"author":{"gitId":"wr1159"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"wr1159"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-06"},{"lineNumber":48,"author":{"gitId":"wr1159"},"content":"            return true;","lastModifiedDate":"2023-10-06"},{"lineNumber":49,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":50,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":51,"author":{"gitId":"wr1159"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-06"},{"lineNumber":52,"author":{"gitId":"wr1159"},"content":"        if (!(other instanceof Location)) {","lastModifiedDate":"2023-10-06"},{"lineNumber":53,"author":{"gitId":"wr1159"},"content":"            return false;","lastModifiedDate":"2023-10-06"},{"lineNumber":54,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-10-06"},{"lineNumber":55,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":56,"author":{"gitId":"wr1159"},"content":"        Location otherLocation \u003d (Location) other;","lastModifiedDate":"2023-10-06"},{"lineNumber":57,"author":{"gitId":"wr1159"},"content":"        return value.equals(otherLocation.value);","lastModifiedDate":"2023-10-06"},{"lineNumber":58,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":59,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":60,"author":{"gitId":"wr1159"},"content":"    @Override","lastModifiedDate":"2023-10-06"},{"lineNumber":61,"author":{"gitId":"wr1159"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-06"},{"lineNumber":62,"author":{"gitId":"wr1159"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-06"},{"lineNumber":63,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-06"},{"lineNumber":64,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":65,"author":{"gitId":"wr1159"},"content":"}","lastModifiedDate":"2023-10-06"}],"authorContributionMap":{"wr1159":61,"andrechuakj":4}},{"path":"src/main/java/seedu/ccacommander/model/event/SameEventPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"package seedu.ccacommander.model.event;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":" * Tests that an {@code Event}\u0027s identity is the same as the target {@code Event}.","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"public class SameEventPredicate implements Predicate\u003cEvent\u003e {","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"    private Event target;","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":"    public SameEventPredicate(Event target) {","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":"        this.target \u003d target;","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"    public boolean test(Event event) {","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":"        return event.isSameEvent(target);","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"ph-nathan"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"ph-nathan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"ph-nathan"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"                || (other instanceof SameEventPredicate","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"ph-nathan"},"content":"                \u0026\u0026 target.equals(((SameEventPredicate) other)","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"ph-nathan"},"content":"                .target));","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"ph-nathan":28}},{"path":"src/main/java/seedu/ccacommander/model/event/UniqueEventList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model.event;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"wr1159"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"wr1159"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"wr1159"},"content":"import java.util.List;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"wr1159"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"wr1159"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.exceptions.DuplicateEventException;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"wr1159"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"wr1159"},"content":" * A list of events that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"wr1159"},"content":" * An event is considered unique by comparing using {@code Event#isSameEvent(Event)}. As such, adding and updating of","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"wr1159"},"content":" * events uses Event#isSameEvent(Event) for equality so as to ensure that the event being added or updated is","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"wr1159"},"content":" * unique in terms of identity in the UniqueEventList. However, the removal of an event uses Event#equals(Object) so","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"wr1159"},"content":" * as to ensure that the event with exactly the same fields will be removed.","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"wr1159"},"content":" *","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"wr1159"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"wr1159"},"content":" *","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"wr1159"},"content":" * @see Event#isSameEvent(Event)","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"wr1159"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"wr1159"},"content":"public class UniqueEventList implements Iterable\u003cEvent\u003e {","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"wr1159"},"content":"    private final ObservableList\u003cEvent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"wr1159"},"content":"    private final ObservableList\u003cEvent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"wr1159"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"wr1159"},"content":"     * Returns true if the list contains an equivalent event as the given argument.","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"wr1159"},"content":"    public boolean contains(Event eventToCheck) {","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"wr1159"},"content":"        requireNonNull(eventToCheck);","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"wr1159"},"content":"        return internalList.stream().anyMatch(eventToCheck::isSameEvent);","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"wr1159"},"content":"     * Adds an event to the list.","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"wr1159"},"content":"     * The event must not already exist in the list.","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"dylkaw"},"content":"    public void createEvent(Event eventToCreate) {","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"dylkaw"},"content":"        requireNonNull(eventToCreate);","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"dylkaw"},"content":"        if (contains(eventToCreate)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"wr1159"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"dylkaw"},"content":"        internalList.add(eventToCreate);","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":52,"author":{"gitId":"wr1159"},"content":"     * Replaces the event {@code target} in the list with {@code editedEvent}.","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"wr1159"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"wr1159"},"content":"     * The event identity of {@code editedEvent} must not be the same as another event existing  in the list.","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"wr1159"},"content":"    public void setEvent(Event targetEvent, Event editedEvent) {","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"wr1159"},"content":"        requireAllNonNull(targetEvent, editedEvent);","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"wr1159"},"content":"        int index \u003d internalList.indexOf(targetEvent);","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"wr1159"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"wr1159"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2023-10-11"},{"lineNumber":62,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":63,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":64,"author":{"gitId":"wr1159"},"content":"        if (!targetEvent.isSameEvent(editedEvent) \u0026\u0026 contains(editedEvent)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"wr1159"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2023-10-11"},{"lineNumber":66,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":67,"author":{"gitId":"wr1159"},"content":"        internalList.set(index, editedEvent);","lastModifiedDate":"2023-10-11"},{"lineNumber":68,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":69,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":70,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":71,"author":{"gitId":"wr1159"},"content":"     * Removes the equivalent event from the list.","lastModifiedDate":"2023-10-11"},{"lineNumber":72,"author":{"gitId":"wr1159"},"content":"     * The event must exist in the list.","lastModifiedDate":"2023-10-11"},{"lineNumber":73,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":74,"author":{"gitId":"wr1159"},"content":"    public void remove(Event toRemove) {","lastModifiedDate":"2023-10-11"},{"lineNumber":75,"author":{"gitId":"wr1159"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-11"},{"lineNumber":76,"author":{"gitId":"wr1159"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-10-11"},{"lineNumber":77,"author":{"gitId":"wr1159"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2023-10-11"},{"lineNumber":78,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":79,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":80,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":81,"author":{"gitId":"wr1159"},"content":"    public void setEvents(UniqueEventList replacement) {","lastModifiedDate":"2023-10-11"},{"lineNumber":82,"author":{"gitId":"wr1159"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-10-11"},{"lineNumber":83,"author":{"gitId":"wr1159"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-10-11"},{"lineNumber":84,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":85,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":86,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":87,"author":{"gitId":"wr1159"},"content":"     * Replaces the contents of this list with {@code events}.","lastModifiedDate":"2023-10-11"},{"lineNumber":88,"author":{"gitId":"wr1159"},"content":"     * {@code events} must not contain duplicate events.","lastModifiedDate":"2023-10-11"},{"lineNumber":89,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":90,"author":{"gitId":"wr1159"},"content":"    public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2023-10-11"},{"lineNumber":91,"author":{"gitId":"wr1159"},"content":"        requireAllNonNull(events);","lastModifiedDate":"2023-10-11"},{"lineNumber":92,"author":{"gitId":"wr1159"},"content":"        if (!eventsAreUnique(events)) {","lastModifiedDate":"2023-10-11"},{"lineNumber":93,"author":{"gitId":"wr1159"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2023-10-11"},{"lineNumber":94,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":95,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":96,"author":{"gitId":"wr1159"},"content":"        internalList.setAll(events);","lastModifiedDate":"2023-10-11"},{"lineNumber":97,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":98,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":99,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":100,"author":{"gitId":"wr1159"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-10-11"},{"lineNumber":101,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":102,"author":{"gitId":"wr1159"},"content":"    public ObservableList\u003cEvent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-11"},{"lineNumber":103,"author":{"gitId":"wr1159"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-11"},{"lineNumber":104,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":105,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":106,"author":{"gitId":"wr1159"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":107,"author":{"gitId":"wr1159"},"content":"    public Iterator\u003cEvent\u003e iterator() {","lastModifiedDate":"2023-10-11"},{"lineNumber":108,"author":{"gitId":"wr1159"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-11"},{"lineNumber":109,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":110,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":111,"author":{"gitId":"wr1159"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":112,"author":{"gitId":"wr1159"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-11"},{"lineNumber":113,"author":{"gitId":"wr1159"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-11"},{"lineNumber":114,"author":{"gitId":"wr1159"},"content":"            return true;","lastModifiedDate":"2023-10-11"},{"lineNumber":115,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":116,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":117,"author":{"gitId":"wr1159"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-11"},{"lineNumber":118,"author":{"gitId":"wr1159"},"content":"        if (!(other instanceof UniqueEventList)) {","lastModifiedDate":"2023-10-11"},{"lineNumber":119,"author":{"gitId":"wr1159"},"content":"            return false;","lastModifiedDate":"2023-10-11"},{"lineNumber":120,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":121,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":122,"author":{"gitId":"wr1159"},"content":"        UniqueEventList otherUniqueEventList \u003d (UniqueEventList) other;","lastModifiedDate":"2023-10-11"},{"lineNumber":123,"author":{"gitId":"wr1159"},"content":"        return internalList.equals(otherUniqueEventList.internalList);","lastModifiedDate":"2023-10-11"},{"lineNumber":124,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":125,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":126,"author":{"gitId":"wr1159"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":127,"author":{"gitId":"wr1159"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-11"},{"lineNumber":128,"author":{"gitId":"wr1159"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-11"},{"lineNumber":129,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":130,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":131,"author":{"gitId":"wr1159"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":132,"author":{"gitId":"wr1159"},"content":"    public String toString() {","lastModifiedDate":"2023-10-11"},{"lineNumber":133,"author":{"gitId":"wr1159"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-11"},{"lineNumber":134,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":135,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":136,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":137,"author":{"gitId":"wr1159"},"content":"     * Returns true if {@code events} contains only unique events.","lastModifiedDate":"2023-10-11"},{"lineNumber":138,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":139,"author":{"gitId":"wr1159"},"content":"    private boolean eventsAreUnique(List\u003cEvent\u003e events) {","lastModifiedDate":"2023-10-11"},{"lineNumber":140,"author":{"gitId":"wr1159"},"content":"        for (int i \u003d 0; i \u003c events.size() - 1; i++) {","lastModifiedDate":"2023-10-11"},{"lineNumber":141,"author":{"gitId":"wr1159"},"content":"            for (int j \u003d i + 1; j \u003c events.size(); j++) {","lastModifiedDate":"2023-10-11"},{"lineNumber":142,"author":{"gitId":"wr1159"},"content":"                if (events.get(i).isSameEvent(events.get(j))) {","lastModifiedDate":"2023-10-11"},{"lineNumber":143,"author":{"gitId":"wr1159"},"content":"                    return false;","lastModifiedDate":"2023-10-11"},{"lineNumber":144,"author":{"gitId":"wr1159"},"content":"                }","lastModifiedDate":"2023-10-11"},{"lineNumber":145,"author":{"gitId":"wr1159"},"content":"            }","lastModifiedDate":"2023-10-11"},{"lineNumber":146,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":147,"author":{"gitId":"wr1159"},"content":"        return true;","lastModifiedDate":"2023-10-11"},{"lineNumber":148,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":149,"author":{"gitId":"wr1159"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"wr1159":141,"andrechuakj":4,"dylkaw":4}},{"path":"src/main/java/seedu/ccacommander/model/event/exceptions/DuplicateEventException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model.event.exceptions;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"wr1159"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"wr1159"},"content":" * Signals that the operation will result in duplicate Events (Events are considered duplicates if they have the same","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"wr1159"},"content":" * identity).","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"wr1159"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"wr1159"},"content":"public class DuplicateEventException extends RuntimeException {","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"wr1159"},"content":"    public DuplicateEventException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"wr1159"},"content":"        super(\"Operation would result in duplicate events\");","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"wr1159"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"wr1159":10,"andrechuakj":1}},{"path":"src/main/java/seedu/ccacommander/model/event/exceptions/EventNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model.event.exceptions;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"wr1159"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"wr1159"},"content":" * Signals that the operation is unable to find the specified event.","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"wr1159"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"wr1159"},"content":"public class EventNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"wr1159":5,"andrechuakj":1}},{"path":"src/main/java/seedu/ccacommander/model/exceptions/RedoStateException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"package seedu.ccacommander.model.exceptions;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":" * Represents a redo error encountered by CcaCommander.","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"public class RedoStateException extends RuntimeException{","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"SelwynAng":7}},{"path":"src/main/java/seedu/ccacommander/model/exceptions/UndoStateException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"package seedu.ccacommander.model.exceptions;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":" * Represents an undo error encountered by CcaCommander.","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"public class UndoStateException extends RuntimeException {","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"SelwynAng":7}},{"path":"src/main/java/seedu/ccacommander/model/member/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model.member;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":" * Represents a Member\u0027s address in CcaCommander.","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"    public static final Address EMPTY_ADRESS \u003d new Address();","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"andrechuakj"},"content":"    private Address() {","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"andrechuakj"},"content":"        value \u003d \"\";","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!(other instanceof Address)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Address otherAddress \u003d (Address) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return value.equals(otherAddress.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"andrechuakj":8,"-":62}},{"path":"src/main/java/seedu/ccacommander/model/member/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model.member;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":" * Represents a Member\u0027s email in CcaCommander.","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"    public static final Email EMPTY_EMAIL \u003d new Email();","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"andrechuakj"},"content":"    private Email() {","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"andrechuakj"},"content":"        value \u003d \"\";","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return value.equals(otherEmail.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"andrechuakj":8,"-":76}},{"path":"src/main/java/seedu/ccacommander/model/member/Gender.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model.member;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"wr1159"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"wr1159"},"content":"import static seedu.ccacommander.commons.util.StringUtil.capitaliseWordsInString;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"wr1159"},"content":"/**","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":" * Represents a Member\u0027s gender in CcaCommander.","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"wr1159"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidGender(String)}","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"wr1159"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"wr1159"},"content":"public class Gender {","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"wr1159"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Gender should only be one of the following: \\n\"","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"wr1159"},"content":"            + \"Male, Female, or Others\";","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"wr1159"},"content":"    public final String value;","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"wr1159"},"content":"     * Constructs a {@code Gender}.","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"wr1159"},"content":"     * Trims any leading and trailing whitespaces of the gender param.","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"wr1159"},"content":"     * @param gender A valid gender.","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"wr1159"},"content":"    public Gender(String gender) {","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"wr1159"},"content":"        requireNonNull(gender);","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"wr1159"},"content":"        checkArgument(isValidGender(gender), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"wr1159"},"content":"        value \u003d gender.trim().toLowerCase();","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"wr1159"},"content":"     * Returns True if a given string is a valid gender.","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"wr1159"},"content":"    public static boolean isValidGender(String userInputGender) {","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"wr1159"},"content":"        return userInputGender.trim().toLowerCase().equals(\"male\")","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"wr1159"},"content":"                || userInputGender.trim().toLowerCase().equals(\"female\")","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"wr1159"},"content":"                || userInputGender.trim().toLowerCase().equals(\"others\");","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"wr1159"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"wr1159"},"content":"    public String toString() {","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"wr1159"},"content":"        return capitaliseWordsInString(value);","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":43,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"wr1159"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":45,"author":{"gitId":"wr1159"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-02"},{"lineNumber":46,"author":{"gitId":"wr1159"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-02"},{"lineNumber":47,"author":{"gitId":"wr1159"},"content":"            return true;","lastModifiedDate":"2023-10-02"},{"lineNumber":48,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":49,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":50,"author":{"gitId":"wr1159"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-02"},{"lineNumber":51,"author":{"gitId":"wr1159"},"content":"        if (!(other instanceof Gender)) {","lastModifiedDate":"2023-10-02"},{"lineNumber":52,"author":{"gitId":"wr1159"},"content":"            return false;","lastModifiedDate":"2023-10-02"},{"lineNumber":53,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":54,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":55,"author":{"gitId":"wr1159"},"content":"        Gender otherGender \u003d (Gender) other;","lastModifiedDate":"2023-10-02"},{"lineNumber":56,"author":{"gitId":"wr1159"},"content":"        return value.equals(otherGender.value);","lastModifiedDate":"2023-10-02"},{"lineNumber":57,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":58,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":59,"author":{"gitId":"wr1159"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":60,"author":{"gitId":"wr1159"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-02"},{"lineNumber":61,"author":{"gitId":"wr1159"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-02"},{"lineNumber":62,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":63,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":64,"author":{"gitId":"wr1159"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"wr1159":61,"andrechuakj":3}},{"path":"src/main/java/seedu/ccacommander/model/member/Member.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model.member;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"wr1159"},"content":"import static seedu.ccacommander.commons.util.StringUtil.capitaliseWordsInString;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.enrolment.Hours;","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.enrolment.Remark;","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.shared.Name;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.tag.Tag;","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"andrechuakj"},"content":" * Represents a Member in CcaCommander.","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"wr1159"},"content":"public class Member {","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"andrechuakj"},"content":"    private final Gender gender;","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"andrechuakj"},"content":"    private final Optional\u003cPhone\u003e phone;","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"andrechuakj"},"content":"    private final Optional\u003cEmail\u003e email;","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"andrechuakj"},"content":"    private final Optional\u003cAddress\u003e address;","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":33,"author":{"gitId":"ph-nathan"},"content":"    private Optional\u003cHours\u003e hours;","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"ph-nathan"},"content":"    private Optional\u003cRemark\u003e remark;","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"andrechuakj"},"content":"    public Member(Name name, Gender gender, Optional\u003cPhone\u003e phone,","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"andrechuakj"},"content":"                  Optional\u003cEmail\u003e email, Optional\u003cAddress\u003e address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"andrechuakj"},"content":"        requireAllNonNull(name, gender);","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"wr1159"},"content":"        Name capitalisedName \u003d new Name(capitaliseWordsInString(name.name));","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"wr1159"},"content":"        this.name \u003d capitalisedName;","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"andrechuakj"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"ph-nathan"},"content":"        this.hours \u003d Optional.of(Hours.EMPTY_HOURS);","lastModifiedDate":"2023-11-03"},{"lineNumber":50,"author":{"gitId":"ph-nathan"},"content":"        this.remark \u003d Optional.of(Remark.EMPTY_REMARK);","lastModifiedDate":"2023-11-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"andrechuakj"},"content":"    public Gender getGender() {","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"andrechuakj"},"content":"        return gender;","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":62,"author":{"gitId":"andrechuakj"},"content":"        return phone.orElse(Phone.EMPTY_PHONE);","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":66,"author":{"gitId":"andrechuakj"},"content":"        return email.orElse(Email.EMPTY_EMAIL);","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":70,"author":{"gitId":"andrechuakj"},"content":"        return address.orElse(Address.EMPTY_ADRESS);","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":73,"author":{"gitId":"ph-nathan"},"content":"    public Hours getHours() {","lastModifiedDate":"2023-10-29"},{"lineNumber":74,"author":{"gitId":"ph-nathan"},"content":"        return hours.orElse(Hours.EMPTY_HOURS);","lastModifiedDate":"2023-11-03"},{"lineNumber":75,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":76,"author":{"gitId":"ph-nathan"},"content":"    public Remark getRemark() {","lastModifiedDate":"2023-10-29"},{"lineNumber":77,"author":{"gitId":"ph-nathan"},"content":"        return remark.orElse(Remark.EMPTY_REMARK);","lastModifiedDate":"2023-11-03"},{"lineNumber":78,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"ph-nathan"},"content":"    public void setHours(Optional\u003cHours\u003e hours) {","lastModifiedDate":"2023-11-03"},{"lineNumber":87,"author":{"gitId":"ph-nathan"},"content":"        this.hours \u003d hours;","lastModifiedDate":"2023-10-29"},{"lineNumber":88,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":89,"author":{"gitId":"ph-nathan"},"content":"    public void setRemark(Optional\u003cRemark\u003e remark) {","lastModifiedDate":"2023-11-03"},{"lineNumber":90,"author":{"gitId":"ph-nathan"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-10-29"},{"lineNumber":91,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"wr1159"},"content":"     * Returns true if both members have the same name.","lastModifiedDate":"2023-10-02"},{"lineNumber":94,"author":{"gitId":"wr1159"},"content":"     * This defines a weaker notion of equality between two members.","lastModifiedDate":"2023-10-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"wr1159"},"content":"    public boolean isSameMember(Member otherMember) {","lastModifiedDate":"2023-10-02"},{"lineNumber":97,"author":{"gitId":"wr1159"},"content":"        if (otherMember \u003d\u003d this) {","lastModifiedDate":"2023-10-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"wr1159"},"content":"        return otherMember !\u003d null","lastModifiedDate":"2023-10-02"},{"lineNumber":102,"author":{"gitId":"wr1159"},"content":"                \u0026\u0026 otherMember.getName().equals(getName());","lastModifiedDate":"2023-11-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"wr1159"},"content":"     * Returns true if both members have the same identity and data fields.","lastModifiedDate":"2023-10-02"},{"lineNumber":107,"author":{"gitId":"wr1159"},"content":"     * This defines a stronger notion of equality between two members.","lastModifiedDate":"2023-10-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":116,"author":{"gitId":"wr1159"},"content":"        if (!(other instanceof Member)) {","lastModifiedDate":"2023-10-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"wr1159"},"content":"        Member otherMember \u003d (Member) other;","lastModifiedDate":"2023-10-02"},{"lineNumber":121,"author":{"gitId":"wr1159"},"content":"        return name.equals(otherMember.name)","lastModifiedDate":"2023-10-02"},{"lineNumber":122,"author":{"gitId":"andrechuakj"},"content":"                \u0026\u0026 gender.equals(otherMember.gender)","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"wr1159"},"content":"                \u0026\u0026 phone.equals(otherMember.phone)","lastModifiedDate":"2023-10-02"},{"lineNumber":124,"author":{"gitId":"wr1159"},"content":"                \u0026\u0026 email.equals(otherMember.email)","lastModifiedDate":"2023-10-02"},{"lineNumber":125,"author":{"gitId":"wr1159"},"content":"                \u0026\u0026 address.equals(otherMember.address)","lastModifiedDate":"2023-10-02"},{"lineNumber":126,"author":{"gitId":"wr1159"},"content":"                \u0026\u0026 tags.equals(otherMember.tags);","lastModifiedDate":"2023-10-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":139,"author":{"gitId":"andrechuakj"},"content":"                .add(\"gender\", gender)","lastModifiedDate":"2023-10-18"},{"lineNumber":140,"author":{"gitId":"andrechuakj"},"content":"                .add(\"phone\", phone.orElse(Phone.EMPTY_PHONE))","lastModifiedDate":"2023-10-30"},{"lineNumber":141,"author":{"gitId":"andrechuakj"},"content":"                .add(\"email\", email.orElse(Email.EMPTY_EMAIL))","lastModifiedDate":"2023-10-30"},{"lineNumber":142,"author":{"gitId":"andrechuakj"},"content":"                .add(\"address\", address.orElse(Address.EMPTY_ADRESS))","lastModifiedDate":"2023-10-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wr1159":20,"andrechuakj":26,"ph-nathan":18,"-":83}},{"path":"src/main/java/seedu/ccacommander/model/member/MemberInNameCollectionPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"package seedu.ccacommander.model.member;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"import java.util.Collection;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.shared.Name;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":" * Tests that a {@code Member}\u0027s {@code Name} is in the given collection.","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"public class MemberInNameCollectionPredicate implements Predicate\u003cMember\u003e {","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"    private final Collection\u003cName\u003e memberNames;","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":"    public MemberInNameCollectionPredicate(Collection\u003cName\u003e memberNames) {","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"        this.memberNames \u003d memberNames;","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"ph-nathan"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"ph-nathan"},"content":"    public boolean test(Member member) {","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"        return memberNames.stream().anyMatch(name -\u003e member.getName().equals(name));","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"ph-nathan"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"ph-nathan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"ph-nathan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"ph-nathan"},"content":"            return true;","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"ph-nathan"},"content":"        if (!(other instanceof MemberInNameCollectionPredicate)) {","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"ph-nathan"},"content":"            return false;","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"ph-nathan"},"content":"        Set\u003cName\u003e names \u003d new HashSet\u003c\u003e(memberNames);","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"ph-nathan"},"content":"        Set\u003cName\u003e otherNames \u003d new HashSet\u003c\u003e(((MemberInNameCollectionPredicate) other).memberNames);","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"ph-nathan"},"content":"        return names.equals(otherNames);","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"ph-nathan":41}},{"path":"src/main/java/seedu/ccacommander/model/member/MemberNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model.member;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.util.StringUtil;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"wr1159"},"content":" * Tests that a {@code Member}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"dylkaw"},"content":"public class MemberNameContainsKeywordsPredicate implements Predicate\u003cMember\u003e {","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"dylkaw"},"content":"    public MemberNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"wr1159"},"content":"    public boolean test(Member member) {","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"dylkaw"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(member.getName().name, keyword));","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"dylkaw"},"content":"        if (!(other instanceof MemberNameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"dylkaw"},"content":"        MemberNameContainsKeywordsPredicate otherMemberNameContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"dylkaw"},"content":"                (MemberNameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"dylkaw"},"content":"        return keywords.equals(otherMemberNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"wr1159":2,"andrechuakj":3,"dylkaw":7,"-":33}},{"path":"src/main/java/seedu/ccacommander/model/member/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model.member;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":" * Represents a Member\u0027s phone number in CcaCommander.","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"    public static final Phone EMPTY_PHONE \u003d new Phone();","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"andrechuakj"},"content":"    private Phone() {","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"andrechuakj"},"content":"        value \u003d \"\";","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"andrechuakj":8,"-":57}},{"path":"src/main/java/seedu/ccacommander/model/member/SameMemberPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"package seedu.ccacommander.model.member;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":" * Tests that a {@code Member}\u0027s identity is the same as the target {@code Event}.","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"public class SameMemberPredicate implements Predicate\u003cMember\u003e {","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"    private Member target;","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":"    public SameMemberPredicate(Member target) {","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":"        this.target \u003d target;","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"    public boolean test(Member member) {","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":"        return member.isSameMember(target);","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"ph-nathan"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"ph-nathan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"ph-nathan"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"                || (other instanceof SameMemberPredicate","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"ph-nathan"},"content":"                \u0026\u0026 target.equals(((SameMemberPredicate) other)","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"ph-nathan"},"content":"                .target));","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"ph-nathan":28}},{"path":"src/main/java/seedu/ccacommander/model/member/UniqueMemberList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model.member;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"wr1159"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"wr1159"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"wr1159"},"content":"import java.util.List;","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"wr1159"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"wr1159"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.exceptions.DuplicateMemberException;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.exceptions.MemberNotFoundException;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"wr1159"},"content":"/**","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"wr1159"},"content":" * A list of members that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"wr1159"},"content":" * A member is considered unique by comparing using {@code Member#isSameMember(Member)}. As such, adding and updating of","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"wr1159"},"content":" * members uses Member#isSameMember(Member) for equality so as to ensure that the member being added or updated is","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"wr1159"},"content":" * unique in terms of identity in the UniqueMemberList. However, the removal of a member uses Member#equals(Object) so","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"wr1159"},"content":" * as to ensure that the member with exactly the same fields will be removed.","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"wr1159"},"content":" *","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"wr1159"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"wr1159"},"content":" *","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"wr1159"},"content":" * @see Member#isSameMember(Member)","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"wr1159"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"wr1159"},"content":"public class UniqueMemberList implements Iterable\u003cMember\u003e {","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"wr1159"},"content":"    private final ObservableList\u003cMember\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"wr1159"},"content":"    private final ObservableList\u003cMember\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"wr1159"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"wr1159"},"content":"     * Returns true if the list contains an equivalent member as the given argument.","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"wr1159"},"content":"    public boolean contains(Member toCheck) {","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"wr1159"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"wr1159"},"content":"        return internalList.stream().anyMatch(toCheck::isSameMember);","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"wr1159"},"content":"     * Adds a member to the list.","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"wr1159"},"content":"     * The member must not already exist in the list.","lastModifiedDate":"2023-10-02"},{"lineNumber":42,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":43,"author":{"gitId":"wr1159"},"content":"    public void add(Member toAdd) {","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"wr1159"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-02"},{"lineNumber":45,"author":{"gitId":"wr1159"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-10-02"},{"lineNumber":46,"author":{"gitId":"wr1159"},"content":"            throw new DuplicateMemberException();","lastModifiedDate":"2023-10-02"},{"lineNumber":47,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":48,"author":{"gitId":"wr1159"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-10-02"},{"lineNumber":49,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":50,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":51,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":52,"author":{"gitId":"wr1159"},"content":"     * Replaces the member {@code target} in the list with {@code editedMember}.","lastModifiedDate":"2023-10-02"},{"lineNumber":53,"author":{"gitId":"wr1159"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-10-02"},{"lineNumber":54,"author":{"gitId":"wr1159"},"content":"     * The member identity of {@code editedMember} must not be the same as another existing member in the list.","lastModifiedDate":"2023-10-02"},{"lineNumber":55,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":56,"author":{"gitId":"wr1159"},"content":"    public void setMember(Member target, Member editedMember) {","lastModifiedDate":"2023-10-02"},{"lineNumber":57,"author":{"gitId":"wr1159"},"content":"        requireAllNonNull(target, editedMember);","lastModifiedDate":"2023-10-02"},{"lineNumber":58,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":59,"author":{"gitId":"wr1159"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-10-02"},{"lineNumber":60,"author":{"gitId":"wr1159"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-10-02"},{"lineNumber":61,"author":{"gitId":"wr1159"},"content":"            throw new MemberNotFoundException();","lastModifiedDate":"2023-10-02"},{"lineNumber":62,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":63,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":64,"author":{"gitId":"wr1159"},"content":"        if (!target.isSameMember(editedMember) \u0026\u0026 contains(editedMember)) {","lastModifiedDate":"2023-10-02"},{"lineNumber":65,"author":{"gitId":"wr1159"},"content":"            throw new DuplicateMemberException();","lastModifiedDate":"2023-10-02"},{"lineNumber":66,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":67,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":68,"author":{"gitId":"wr1159"},"content":"        internalList.set(index, editedMember);","lastModifiedDate":"2023-10-02"},{"lineNumber":69,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":70,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":71,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":72,"author":{"gitId":"wr1159"},"content":"     * Removes the equivalent member from the list.","lastModifiedDate":"2023-10-02"},{"lineNumber":73,"author":{"gitId":"wr1159"},"content":"     * The member must exist in the list.","lastModifiedDate":"2023-10-02"},{"lineNumber":74,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":75,"author":{"gitId":"wr1159"},"content":"    public void remove(Member toRemove) {","lastModifiedDate":"2023-10-02"},{"lineNumber":76,"author":{"gitId":"wr1159"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-02"},{"lineNumber":77,"author":{"gitId":"wr1159"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-10-02"},{"lineNumber":78,"author":{"gitId":"wr1159"},"content":"            throw new MemberNotFoundException();","lastModifiedDate":"2023-10-02"},{"lineNumber":79,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":80,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":81,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":82,"author":{"gitId":"wr1159"},"content":"    public void setMembers(UniqueMemberList replacement) {","lastModifiedDate":"2023-10-02"},{"lineNumber":83,"author":{"gitId":"wr1159"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-10-02"},{"lineNumber":84,"author":{"gitId":"wr1159"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-10-02"},{"lineNumber":85,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":86,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":87,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":88,"author":{"gitId":"wr1159"},"content":"     * Replaces the contents of this list with {@code members}.","lastModifiedDate":"2023-10-02"},{"lineNumber":89,"author":{"gitId":"wr1159"},"content":"     * {@code members} must not contain duplicate members.","lastModifiedDate":"2023-10-02"},{"lineNumber":90,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":91,"author":{"gitId":"wr1159"},"content":"    public void setMembers(List\u003cMember\u003e members) {","lastModifiedDate":"2023-10-02"},{"lineNumber":92,"author":{"gitId":"wr1159"},"content":"        requireAllNonNull(members);","lastModifiedDate":"2023-10-02"},{"lineNumber":93,"author":{"gitId":"wr1159"},"content":"        if (!membersAreUnique(members)) {","lastModifiedDate":"2023-10-02"},{"lineNumber":94,"author":{"gitId":"wr1159"},"content":"            throw new DuplicateMemberException();","lastModifiedDate":"2023-10-02"},{"lineNumber":95,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":96,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":97,"author":{"gitId":"wr1159"},"content":"        internalList.setAll(members);","lastModifiedDate":"2023-10-02"},{"lineNumber":98,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":99,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":100,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":101,"author":{"gitId":"wr1159"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-10-02"},{"lineNumber":102,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":103,"author":{"gitId":"wr1159"},"content":"    public ObservableList\u003cMember\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-02"},{"lineNumber":104,"author":{"gitId":"wr1159"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-02"},{"lineNumber":105,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":106,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":107,"author":{"gitId":"wr1159"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":108,"author":{"gitId":"wr1159"},"content":"    public Iterator\u003cMember\u003e iterator() {","lastModifiedDate":"2023-10-02"},{"lineNumber":109,"author":{"gitId":"wr1159"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-02"},{"lineNumber":110,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":111,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":112,"author":{"gitId":"wr1159"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":113,"author":{"gitId":"wr1159"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-02"},{"lineNumber":114,"author":{"gitId":"wr1159"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-02"},{"lineNumber":115,"author":{"gitId":"wr1159"},"content":"            return true;","lastModifiedDate":"2023-10-02"},{"lineNumber":116,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":117,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":118,"author":{"gitId":"wr1159"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-02"},{"lineNumber":119,"author":{"gitId":"wr1159"},"content":"        if (!(other instanceof UniqueMemberList)) {","lastModifiedDate":"2023-10-02"},{"lineNumber":120,"author":{"gitId":"wr1159"},"content":"            return false;","lastModifiedDate":"2023-10-02"},{"lineNumber":121,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":122,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":123,"author":{"gitId":"wr1159"},"content":"        UniqueMemberList otherUniqueMemberList \u003d (UniqueMemberList) other;","lastModifiedDate":"2023-10-02"},{"lineNumber":124,"author":{"gitId":"wr1159"},"content":"        return internalList.equals(otherUniqueMemberList.internalList);","lastModifiedDate":"2023-10-02"},{"lineNumber":125,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":126,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":127,"author":{"gitId":"wr1159"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":128,"author":{"gitId":"wr1159"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-02"},{"lineNumber":129,"author":{"gitId":"wr1159"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-02"},{"lineNumber":130,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":131,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":132,"author":{"gitId":"wr1159"},"content":"    @Override","lastModifiedDate":"2023-10-02"},{"lineNumber":133,"author":{"gitId":"wr1159"},"content":"    public String toString() {","lastModifiedDate":"2023-10-02"},{"lineNumber":134,"author":{"gitId":"wr1159"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-02"},{"lineNumber":135,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":136,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":137,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":138,"author":{"gitId":"wr1159"},"content":"     * Returns true if {@code members} contains only unique members.","lastModifiedDate":"2023-10-02"},{"lineNumber":139,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":140,"author":{"gitId":"wr1159"},"content":"    private boolean membersAreUnique(List\u003cMember\u003e members) {","lastModifiedDate":"2023-10-02"},{"lineNumber":141,"author":{"gitId":"wr1159"},"content":"        for (int i \u003d 0; i \u003c members.size() - 1; i++) {","lastModifiedDate":"2023-10-02"},{"lineNumber":142,"author":{"gitId":"wr1159"},"content":"            for (int j \u003d i + 1; j \u003c members.size(); j++) {","lastModifiedDate":"2023-10-02"},{"lineNumber":143,"author":{"gitId":"wr1159"},"content":"                if (members.get(i).isSameMember(members.get(j))) {","lastModifiedDate":"2023-10-02"},{"lineNumber":144,"author":{"gitId":"wr1159"},"content":"                    return false;","lastModifiedDate":"2023-10-02"},{"lineNumber":145,"author":{"gitId":"wr1159"},"content":"                }","lastModifiedDate":"2023-10-02"},{"lineNumber":146,"author":{"gitId":"wr1159"},"content":"            }","lastModifiedDate":"2023-10-02"},{"lineNumber":147,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-10-02"},{"lineNumber":148,"author":{"gitId":"wr1159"},"content":"        return true;","lastModifiedDate":"2023-10-02"},{"lineNumber":149,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":150,"author":{"gitId":"wr1159"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"wr1159":146,"andrechuakj":4}},{"path":"src/main/java/seedu/ccacommander/model/member/exceptions/DuplicateMemberException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model.member.exceptions;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"wr1159"},"content":" * Signals that the operation will result in duplicate Members (Members are considered duplicates if they have the same","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"wr1159"},"content":"public class DuplicateMemberException extends RuntimeException {","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"wr1159"},"content":"    public DuplicateMemberException() {","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"wr1159"},"content":"        super(\"Operation would result in duplicate members\");","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"wr1159":4,"andrechuakj":1,"-":6}},{"path":"src/main/java/seedu/ccacommander/model/member/exceptions/MemberNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model.member.exceptions;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"wr1159"},"content":"/**","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"wr1159"},"content":" * Signals that the operation is unable to find the specified member.","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"wr1159"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"wr1159"},"content":"public class MemberNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"wr1159":5,"andrechuakj":1}},{"path":"src/main/java/seedu/ccacommander/model/shared/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model.shared;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":" * Represents a Member\u0027s name in CcaCommander.","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"andrechuakj"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"dylkaw"},"content":"    public final String name;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"dylkaw"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"dylkaw"},"content":"        return name;","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"dylkaw"},"content":"        return name.equals(otherName.name);","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"dylkaw"},"content":"        return name.hashCode();","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"andrechuakj":4,"dylkaw":5,"-":58}},{"path":"src/main/java/seedu/ccacommander/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model.tag;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":" * Represents a Tag in CcaCommander.","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return tagName.equals(otherTag.tagName);","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"andrechuakj":3,"-":59}},{"path":"src/main/java/seedu/ccacommander/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model.util;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.CcaCommander;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.ReadOnlyCcaCommander;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.Event;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.EventDate;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.Location;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Address;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Email;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Gender;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Member;","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Phone;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.shared.Name;","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.tag.Tag;","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"andrechuakj"},"content":" * Contains utility methods for populating {@code CcaCommander} with sample data.","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"wr1159"},"content":"    public static Member[] getSampleMembers() {","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"wr1159"},"content":"        return new Member[] {","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"andrechuakj"},"content":"            new Member(new Name(\"Alex Yeoh\"), new Gender(\"Male\"),","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"andrechuakj"},"content":"                    Optional.of(new Phone(\"87438807\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"andrechuakj"},"content":"                    Optional.of(new Email(\"alexyeoh@example.com\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"andrechuakj"},"content":"                    Optional.of(new Address(\"Blk 30 Geylang Street 29, #06-40\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                    getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":32,"author":{"gitId":"andrechuakj"},"content":"            new Member(new Name(\"Bernice Yu\"), new Gender(\"Female\"),","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"andrechuakj"},"content":"                    Optional.of(new Phone(\"99272758\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"andrechuakj"},"content":"                    Optional.of(new Email(\"berniceyu@example.com\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"andrechuakj"},"content":"                    Optional.of(new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                    getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":37,"author":{"gitId":"andrechuakj"},"content":"            new Member(new Name(\"Charlotte Oliveiro\"), new Gender(\"Female\"),","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"andrechuakj"},"content":"                    Optional.of(new Phone(\"93210283\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"andrechuakj"},"content":"                    Optional.of(new Email(\"charlotte@example.com\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"andrechuakj"},"content":"                    Optional.of(new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                    getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":42,"author":{"gitId":"andrechuakj"},"content":"            new Member(new Name(\"David Li\"), new Gender(\"Male\"),","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"andrechuakj"},"content":"                    Optional.of(new Phone(\"91031282\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"andrechuakj"},"content":"                    Optional.of(new Email(\"lidavid@example.com\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"andrechuakj"},"content":"                    Optional.of(new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                    getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":47,"author":{"gitId":"andrechuakj"},"content":"            new Member(new Name(\"Irfan Ibrahim\"), new Gender(\"Male\"),","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"andrechuakj"},"content":"                    Optional.of(new Phone(\"92492021\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"andrechuakj"},"content":"                    Optional.of(new Email(\"irfan@example.com\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"andrechuakj"},"content":"                    Optional.of(new Address(\"Blk 47 Tampines Street 20, #17-35\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                    getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":52,"author":{"gitId":"andrechuakj"},"content":"            new Member(new Name(\"Roy Balakrishnan\"), new Gender(\"Male\"),","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"andrechuakj"},"content":"                    Optional.of(new Phone(\"92624417\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"andrechuakj"},"content":"                    Optional.of(new Email(\"royb@example.com\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"andrechuakj"},"content":"                    Optional.of(new Address(\"Blk 45 Aljunied Street 85, #11-31\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                    getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":60,"author":{"gitId":"wr1159"},"content":"    public static Event[] getSampleEvents() {","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"wr1159"},"content":"        return new Event[] {","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"wr1159"},"content":"            new Event(new Name(\"Aurora Borealis\"),","lastModifiedDate":"2023-10-20"},{"lineNumber":63,"author":{"gitId":"wr1159"},"content":"                    new EventDate(\"2023-11-30\"), new Location(\"Greenland\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"wr1159"},"content":"                    getTagSet(\"nature\")),","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"wr1159"},"content":"            new Event(new Name(\"Boxing Day\"),","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"wr1159"},"content":"                    new EventDate(\"2023-12-26\"), new Location(\"Ridge View Residential College\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"wr1159"},"content":"                    getTagSet(\"rvrc\")),","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"wr1159"},"content":"            new Event(new Name(\"Chinese New Year\"),","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"wr1159"},"content":"                    new EventDate(\"2024-02-10\"), new Location(\"Communal Hall\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"wr1159"},"content":"                    getTagSet(\"holiday\")),","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"wr1159"},"content":"            new Event(new Name(\"Dog Day\"),","lastModifiedDate":"2023-10-20"},{"lineNumber":72,"author":{"gitId":"wr1159"},"content":"                    new EventDate(\"2024-08-26\"), new Location(\"UTown Pitstop\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":73,"author":{"gitId":"wr1159"},"content":"                    getTagSet(\"animals\")),","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"wr1159"},"content":"            new Event(new Name(\"Echo Day\"),","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"wr1159"},"content":"                    new EventDate(\"2023-05-05\"), new Location(\"Batu Cave\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"wr1159"},"content":"                    getTagSet(\"nature\", \"overseas\")),","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"wr1159"},"content":"            new Event(new Name(\"Festival\"),","lastModifiedDate":"2023-10-20"},{"lineNumber":78,"author":{"gitId":"wr1159"},"content":"                    new EventDate(\"2023-10-05\"), new Location(\"Clementi 321\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"wr1159"},"content":"                    getTagSet(\"holiday\")),","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"wr1159"},"content":"        };","lastModifiedDate":"2023-10-20"},{"lineNumber":81,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":82,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":83,"author":{"gitId":"andrechuakj"},"content":"    public static ReadOnlyCcaCommander getSampleCcaCommander() {","lastModifiedDate":"2023-10-21"},{"lineNumber":84,"author":{"gitId":"andrechuakj"},"content":"        CcaCommander sampleCcaCommander \u003d new CcaCommander();","lastModifiedDate":"2023-10-22"},{"lineNumber":85,"author":{"gitId":"wr1159"},"content":"        for (Member sampleMember : getSampleMembers()) {","lastModifiedDate":"2023-10-02"},{"lineNumber":86,"author":{"gitId":"andrechuakj"},"content":"            sampleCcaCommander.createMember(sampleMember);","lastModifiedDate":"2023-10-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":88,"author":{"gitId":"wr1159"},"content":"        for (Event sampleEvent : getSampleEvents()) {","lastModifiedDate":"2023-10-20"},{"lineNumber":89,"author":{"gitId":"andrechuakj"},"content":"            sampleCcaCommander.createEvent(sampleEvent);","lastModifiedDate":"2023-10-22"},{"lineNumber":90,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":91,"author":{"gitId":"andrechuakj"},"content":"        return sampleCcaCommander;","lastModifiedDate":"2023-10-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":94,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"wr1159":28,"andrechuakj":45,"-":31}},{"path":"src/main/java/seedu/ccacommander/storage/CcaCommanderStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.storage;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.CcaCommander;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.ReadOnlyCcaCommander;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"/**","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":" * Represents a storage for {@link CcaCommander}.","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":" */","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"public interface CcaCommanderStorage {","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"andrechuakj"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"andrechuakj"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"andrechuakj"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"andrechuakj"},"content":"    Path getCcaCommanderFilePath();","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"andrechuakj"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"andrechuakj"},"content":"     * Returns CcaCommander data as a {@link ReadOnlyCcaCommander}.","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"andrechuakj"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"andrechuakj"},"content":"     *","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"andrechuakj"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"andrechuakj"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"andrechuakj"},"content":"    Optional\u003cReadOnlyCcaCommander\u003e readCcaCommander() throws DataLoadingException;","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"andrechuakj"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"andrechuakj"},"content":"     * @see #getCcaCommanderFilePath()","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"andrechuakj"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"andrechuakj"},"content":"    Optional\u003cReadOnlyCcaCommander\u003e readCcaCommander(Path filePath) throws DataLoadingException;","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"andrechuakj"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"andrechuakj"},"content":"     * Saves the given {@link ReadOnlyCcaCommander} to the storage.","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"andrechuakj"},"content":"     * @param ccaCommander cannot be null.","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"andrechuakj"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"andrechuakj"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"andrechuakj"},"content":"    void saveCcaCommander(ReadOnlyCcaCommander ccaCommander) throws IOException;","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"andrechuakj"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"andrechuakj"},"content":"     * @see #saveCcaCommander(ReadOnlyCcaCommander)","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"andrechuakj"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"andrechuakj"},"content":"    void saveCcaCommander(ReadOnlyCcaCommander addressBook, Path filePath) throws IOException;","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"andrechuakj"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"andrechuakj":46}},{"path":"src/main/java/seedu/ccacommander/storage/JsonAdaptedEnrolment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dylkaw"},"content":"package seedu.ccacommander.storage;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"dylkaw"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"dylkaw"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.enrolment.Enrolment;","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.enrolment.Hours;","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.enrolment.Remark;","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.model.shared.Name;","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"dylkaw"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":" * Jackson-friendly version of {@link Enrolment}.","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"dylkaw"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"andrechuakj"},"content":"class JsonAdaptedEnrolment {","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"andrechuakj"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Enrolment\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"dylkaw"},"content":"    private final String memberName;","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"dylkaw"},"content":"    private final String eventName;","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"dylkaw"},"content":"    private final String hours;","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"dylkaw"},"content":"    private final String remark;","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"andrechuakj"},"content":"     * Constructs a {@code JsonAdaptedEnrolment} with the given enrolment details.","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"dylkaw"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"andrechuakj"},"content":"    public JsonAdaptedEnrolment(@JsonProperty(\"memberName\") String memberName,","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"dylkaw"},"content":"                                @JsonProperty(\"eventName\") String eventName,","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"dylkaw"},"content":"                                @JsonProperty(\"hours\") String hours, @JsonProperty(\"remark\") String remark) {","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"dylkaw"},"content":"        this.memberName \u003d memberName;","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"dylkaw"},"content":"        this.eventName \u003d eventName;","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"dylkaw"},"content":"        this.hours \u003d hours;","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"dylkaw"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"andrechuakj"},"content":"     * Converts a given {@code Enrolment} into this class for Jackson use.","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"andrechuakj"},"content":"    public JsonAdaptedEnrolment(Enrolment source) {","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"dylkaw"},"content":"        memberName \u003d source.getMemberName().name;","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"dylkaw"},"content":"        eventName \u003d source.getEventName().name;","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"dylkaw"},"content":"        hours \u003d source.getHours().value.toString();","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"dylkaw"},"content":"        remark \u003d source.getRemark().value;","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"andrechuakj"},"content":"     * Converts this Jackson-friendly adapted enrolment object into the model\u0027s {@code Enrolment} object.","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"dylkaw"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"dylkaw"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted event.","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"andrechuakj"},"content":"    public Enrolment toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"dylkaw"},"content":"        if (memberName \u003d\u003d null) {","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"dylkaw"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"dylkaw"},"content":"                    \"memberName\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"dylkaw"},"content":"        if (!Name.isValidName(memberName)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"dylkaw"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"dylkaw"},"content":"        final Name modelMemberName \u003d new Name(memberName);","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"dylkaw"},"content":"        if (eventName \u003d\u003d null) {","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"dylkaw"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"dylkaw"},"content":"                    \"eventName\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"dylkaw"},"content":"        if (!Name.isValidName(eventName)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"dylkaw"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"dylkaw"},"content":"        final Name modelEventName \u003d new Name(eventName);","lastModifiedDate":"2023-10-23"},{"lineNumber":72,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":73,"author":{"gitId":"dylkaw"},"content":"        if (hours \u003d\u003d null) {","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"dylkaw"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-23"},{"lineNumber":75,"author":{"gitId":"dylkaw"},"content":"                    Hours.class.getSimpleName()));","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"andrechuakj"},"content":"        if (!hours.isEmpty() \u0026\u0026 !Hours.isValidHours(hours)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":78,"author":{"gitId":"dylkaw"},"content":"            throw new IllegalValueException(Hours.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"andrechuakj"},"content":"        final Hours modelHours \u003d hours.isEmpty() ? null : new Hours(hours);","lastModifiedDate":"2023-10-30"},{"lineNumber":81,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"dylkaw"},"content":"        if (remark \u003d\u003d null) {","lastModifiedDate":"2023-10-23"},{"lineNumber":83,"author":{"gitId":"dylkaw"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-23"},{"lineNumber":84,"author":{"gitId":"dylkaw"},"content":"                    Remark.class.getSimpleName()));","lastModifiedDate":"2023-10-23"},{"lineNumber":85,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":86,"author":{"gitId":"andrechuakj"},"content":"        if (!remark.isEmpty() \u0026\u0026 !Remark.isValidRemark(remark)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"dylkaw"},"content":"            throw new IllegalValueException(Remark.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"andrechuakj"},"content":"        final Remark modelRemark \u003d remark.isEmpty() ? null : new Remark(remark);","lastModifiedDate":"2023-10-30"},{"lineNumber":90,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":91,"author":{"gitId":"andrechuakj"},"content":"        return new Enrolment(modelMemberName, modelEventName,","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"andrechuakj"},"content":"                Optional.ofNullable(modelHours), Optional.ofNullable(modelRemark));","lastModifiedDate":"2023-10-30"},{"lineNumber":93,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":94,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":95,"author":{"gitId":"dylkaw"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"andrechuakj":20,"dylkaw":75}},{"path":"src/main/java/seedu/ccacommander/storage/JsonAdaptedEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.storage;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"wr1159"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"wr1159"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"wr1159"},"content":"import java.util.List;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"wr1159"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"wr1159"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"wr1159"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"wr1159"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.Event;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.EventDate;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.Location;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.shared.Name;","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"wr1159"},"content":"import seedu.ccacommander.model.tag.Tag;","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"wr1159"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"wr1159"},"content":" * Jackson-friendly version of {@link Event}.","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"wr1159"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"wr1159"},"content":"class JsonAdaptedEvent {","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"wr1159"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Event\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"dylkaw"},"content":"    private final String name;","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"wr1159"},"content":"    private final String eventDate;","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"wr1159"},"content":"    private final String location;","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"wr1159"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"wr1159"},"content":"     * Constructs a {@code JsonAdaptedEvent} with the given event details.","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"wr1159"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"dylkaw"},"content":"    public JsonAdaptedEvent(@JsonProperty(\"name\") String name, @JsonProperty(\"eventDate\") String eventDate,","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"wr1159"},"content":"                             @JsonProperty(\"location\") String location,","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"wr1159"},"content":"                             @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"dylkaw"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"wr1159"},"content":"        this.eventDate \u003d eventDate;","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"wr1159"},"content":"        this.location \u003d location;","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"wr1159"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"wr1159"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"wr1159"},"content":"     * Converts a given {@code Event} into this class for Jackson use.","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":49,"author":{"gitId":"wr1159"},"content":"    public JsonAdaptedEvent(Event source) {","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"dylkaw"},"content":"        name \u003d source.getName().name;","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"wr1159"},"content":"        eventDate \u003d source.getDate().date.toString();","lastModifiedDate":"2023-10-11"},{"lineNumber":52,"author":{"gitId":"wr1159"},"content":"        location \u003d source.getLocation().value;","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"wr1159"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"wr1159"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"wr1159"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"wr1159"},"content":"     * Converts this Jackson-friendly adapted event object into the model\u0027s {@code Event} object.","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"wr1159"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"wr1159"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted event.","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":63,"author":{"gitId":"wr1159"},"content":"    public Event toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-11"},{"lineNumber":64,"author":{"gitId":"wr1159"},"content":"        final List\u003cTag\u003e eventTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"wr1159"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"wr1159"},"content":"            eventTags.add(tag.toModelType());","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"dylkaw"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"wr1159"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-11"},{"lineNumber":70,"author":{"gitId":"dylkaw"},"content":"                    Name.class.getSimpleName()));","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":72,"author":{"gitId":"dylkaw"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"dylkaw"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":75,"author":{"gitId":"dylkaw"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":77,"author":{"gitId":"wr1159"},"content":"        if (eventDate \u003d\u003d null) {","lastModifiedDate":"2023-10-11"},{"lineNumber":78,"author":{"gitId":"wr1159"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-11"},{"lineNumber":79,"author":{"gitId":"wr1159"},"content":"                    EventDate.class.getSimpleName()));","lastModifiedDate":"2023-10-11"},{"lineNumber":80,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":81,"author":{"gitId":"wr1159"},"content":"        if (!EventDate.isValidDate(eventDate)) {","lastModifiedDate":"2023-10-11"},{"lineNumber":82,"author":{"gitId":"wr1159"},"content":"            throw new IllegalValueException(EventDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-11"},{"lineNumber":83,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":84,"author":{"gitId":"wr1159"},"content":"        final EventDate modelEventDate \u003d new EventDate(eventDate);","lastModifiedDate":"2023-10-11"},{"lineNumber":85,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":86,"author":{"gitId":"wr1159"},"content":"        if (location \u003d\u003d null) {","lastModifiedDate":"2023-10-11"},{"lineNumber":87,"author":{"gitId":"wr1159"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-11"},{"lineNumber":88,"author":{"gitId":"wr1159"},"content":"                    Location.class.getSimpleName()));","lastModifiedDate":"2023-10-11"},{"lineNumber":89,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":90,"author":{"gitId":"wr1159"},"content":"        if (!Location.isValidLocation(location)) {","lastModifiedDate":"2023-10-11"},{"lineNumber":91,"author":{"gitId":"wr1159"},"content":"            throw new IllegalValueException(Location.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-11"},{"lineNumber":92,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":93,"author":{"gitId":"wr1159"},"content":"        final Location modelLocation \u003d new Location(location);","lastModifiedDate":"2023-10-11"},{"lineNumber":94,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":95,"author":{"gitId":"wr1159"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(eventTags);","lastModifiedDate":"2023-10-23"},{"lineNumber":96,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":97,"author":{"gitId":"wr1159"},"content":"        return new Event(modelName, modelEventDate, modelLocation, modelTags);","lastModifiedDate":"2023-10-23"},{"lineNumber":98,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":99,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":100,"author":{"gitId":"wr1159"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"wr1159":85,"andrechuakj":6,"dylkaw":9}},{"path":"src/main/java/seedu/ccacommander/storage/JsonAdaptedMember.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.storage;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Address;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Email;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Gender;","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Member;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Phone;","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.shared.Name;","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.tag.Tag;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"wr1159"},"content":" * Jackson-friendly version of {@link Member}.","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"wr1159"},"content":"class JsonAdaptedMember {","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"wr1159"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Member\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"andrechuakj"},"content":"    private final String gender;","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"wr1159"},"content":"     * Constructs a {@code JsonAdaptedMember} with the given member details.","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"andrechuakj"},"content":"    public JsonAdaptedMember(@JsonProperty(\"name\") String name, @JsonProperty(\"gender\") String gender,","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"andrechuakj"},"content":"                             @JsonProperty(\"phone\") String phone, @JsonProperty(\"email\") String email,","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"andrechuakj"},"content":"                             @JsonProperty(\"address\") String address,","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"andrechuakj"},"content":"                             @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"andrechuakj"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"wr1159"},"content":"     * Converts a given {@code Member} into this class for Jackson use.","lastModifiedDate":"2023-10-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"wr1159"},"content":"    public JsonAdaptedMember(Member source) {","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"dylkaw"},"content":"        name \u003d source.getName().name;","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"andrechuakj"},"content":"        gender \u003d source.getGender().value;","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"wr1159"},"content":"     * Converts this Jackson-friendly adapted member object into the model\u0027s {@code Member} object.","lastModifiedDate":"2023-10-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"wr1159"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted member.","lastModifiedDate":"2023-10-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"wr1159"},"content":"    public Member toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-02"},{"lineNumber":74,"author":{"gitId":"wr1159"},"content":"        final List\u003cTag\u003e memberTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":76,"author":{"gitId":"wr1159"},"content":"            memberTags.add(tag.toModelType());","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"andrechuakj"},"content":"        if (gender \u003d\u003d null) {","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"andrechuakj"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Gender.class.getSimpleName()));","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"andrechuakj"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"andrechuakj"},"content":"        if (!Gender.isValidGender(gender)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"andrechuakj"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"andrechuakj"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"andrechuakj"},"content":"        final Gender modelGender \u003d new Gender(gender);","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"andrechuakj"},"content":"        if (!phone.isEmpty() \u0026\u0026 !Phone.isValidPhone(phone)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"andrechuakj"},"content":"        final Phone modelPhone \u003d phone.isEmpty() ? null : new Phone(phone);","lastModifiedDate":"2023-10-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"andrechuakj"},"content":"        if (!email.isEmpty() \u0026\u0026 !Email.isValidEmail(email)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"andrechuakj"},"content":"        final Email modelEmail \u003d email.isEmpty() ? null : new Email(email);","lastModifiedDate":"2023-10-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"andrechuakj"},"content":"        if (!address.isEmpty() \u0026\u0026 !Address.isValidAddress(address)) {","lastModifiedDate":"2023-11-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"andrechuakj"},"content":"        final Address modelAddress \u003d address.isEmpty() ? null : new Address(address);","lastModifiedDate":"2023-10-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"wr1159"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(memberTags);","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"andrechuakj"},"content":"        return new Member(modelName, modelGender, Optional.ofNullable(modelPhone), Optional.ofNullable(modelEmail),","lastModifiedDate":"2023-10-30"},{"lineNumber":121,"author":{"gitId":"andrechuakj"},"content":"                Optional.ofNullable(modelAddress), modelTags);","lastModifiedDate":"2023-10-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"wr1159":12,"andrechuakj":33,"dylkaw":1,"-":78}},{"path":"src/main/java/seedu/ccacommander/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.storage;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.tag.Tag;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"andrechuakj":3,"-":45}},{"path":"src/main/java/seedu/ccacommander/storage/JsonCcaCommanderStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.storage;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.core.LogsCenter;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.util.FileUtil;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.util.JsonUtil;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.ReadOnlyCcaCommander;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"andrechuakj"},"content":" * A class to access CcaCommander data stored as a json file on the hard disk.","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"andrechuakj"},"content":"public class JsonCcaCommanderStorage implements CcaCommanderStorage {","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"andrechuakj"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonCcaCommanderStorage.class);","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"andrechuakj"},"content":"    public JsonCcaCommanderStorage(Path filePath) {","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"andrechuakj"},"content":"    public Path getCcaCommanderFilePath() {","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"andrechuakj"},"content":"    public Optional\u003cReadOnlyCcaCommander\u003e readCcaCommander() throws DataLoadingException {","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"andrechuakj"},"content":"        return readCcaCommander(filePath);","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"andrechuakj"},"content":"     * Similar to {@link #readCcaCommander()}.","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"andrechuakj"},"content":"    public Optional\u003cReadOnlyCcaCommander\u003e readCcaCommander(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"andrechuakj"},"content":"        Optional\u003cJsonSerializableCcaCommander\u003e jsonCcaCommander \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"andrechuakj"},"content":"                filePath, JsonSerializableCcaCommander.class);","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"andrechuakj"},"content":"        if (!jsonCcaCommander.isPresent()) {","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"andrechuakj"},"content":"            return Optional.of(jsonCcaCommander.get().toModelType());","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2023-06-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"andrechuakj"},"content":"    public void saveCcaCommander(ReadOnlyCcaCommander ccaCommander) throws IOException {","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"andrechuakj"},"content":"        saveCcaCommander(ccaCommander, filePath);","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"andrechuakj"},"content":"     * Similar to {@link #saveCcaCommander(ReadOnlyCcaCommander)}.","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"andrechuakj"},"content":"    public void saveCcaCommander(ReadOnlyCcaCommander ccaCommander, Path filePath) throws IOException {","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"andrechuakj"},"content":"        requireNonNull(ccaCommander);","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"andrechuakj"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableCcaCommander(ccaCommander), filePath);","lastModifiedDate":"2023-10-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"andrechuakj":26,"-":54}},{"path":"src/main/java/seedu/ccacommander/storage/JsonSerializableCcaCommander.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.storage;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.CcaCommander;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.ReadOnlyCcaCommander;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.enrolment.Enrolment;","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.Event;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Member;","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"andrechuakj"},"content":" * An Immutable CcaCommander that is serializable to JSON format.","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"andrechuakj"},"content":"@JsonRootName(value \u003d \"ccacommander\")","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"andrechuakj"},"content":"class JsonSerializableCcaCommander {","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"wr1159"},"content":"    public static final String MESSAGE_DUPLICATE_MEMBER \u003d \"Members list contains duplicate member(s).\";","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"dylkaw"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"Events list contains duplicate event(s).\";","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"andrechuakj"},"content":"    public static final String MESSAGE_DUPLICATE_ENROLMENT \u003d \"Enrolment list contains duplicate enrolment(s).\";","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"wr1159"},"content":"    private final List\u003cJsonAdaptedMember\u003e members \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"dylkaw"},"content":"    private final List\u003cJsonAdaptedEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"andrechuakj"},"content":"    private final List\u003cJsonAdaptedEnrolment\u003e enrolments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"andrechuakj"},"content":"     * Constructs a {@code JsonSerializableCcaCommander} with the given members and events.","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"andrechuakj"},"content":"    public JsonSerializableCcaCommander(@JsonProperty(\"members\") List\u003cJsonAdaptedMember\u003e members,","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"dylkaw"},"content":"                                        @JsonProperty(\"events\") List\u003cJsonAdaptedEvent\u003e events,","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"andrechuakj"},"content":"                                        @JsonProperty(\"enrolments\") List\u003cJsonAdaptedEnrolment\u003e enrolments) {","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"wr1159"},"content":"        this.members.addAll(members);","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"dylkaw"},"content":"        this.events.addAll(events);","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"andrechuakj"},"content":"        this.enrolments.addAll(enrolments);","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"andrechuakj"},"content":"     * Converts a given {@code ReadOnlyCcaCommander} into this class for Jackson use.","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"andrechuakj"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableCcaCommander}.","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"andrechuakj"},"content":"    public JsonSerializableCcaCommander(ReadOnlyCcaCommander source) {","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"wr1159"},"content":"        members.addAll(source.getMemberList().stream().map(JsonAdaptedMember::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"dylkaw"},"content":"        events.addAll(source.getEventList().stream().map(JsonAdaptedEvent::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"andrechuakj"},"content":"        enrolments.addAll(source.getEnrolmentList().stream().map(JsonAdaptedEnrolment::new)","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"dylkaw"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"andrechuakj"},"content":"     * Converts this CcaCommander into the model\u0027s {@code CcaCommander} object.","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"andrechuakj"},"content":"    public CcaCommander toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"andrechuakj"},"content":"        CcaCommander ccaCommander \u003d new CcaCommander();","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"wr1159"},"content":"        for (JsonAdaptedMember jsonAdaptedMember : members) {","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"wr1159"},"content":"            Member member \u003d jsonAdaptedMember.toModelType();","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"andrechuakj"},"content":"            if (ccaCommander.hasMember(member)) {","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"wr1159"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_MEMBER);","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"andrechuakj"},"content":"            ccaCommander.createMember(member);","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"dylkaw"},"content":"        for (JsonAdaptedEvent jsonAdaptedEvent : events) {","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"dylkaw"},"content":"            Event event \u003d jsonAdaptedEvent.toModelType();","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"andrechuakj"},"content":"            if (ccaCommander.hasEvent(event)) {","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"dylkaw"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"dylkaw"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"andrechuakj"},"content":"            ccaCommander.createEvent(event);","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"andrechuakj"},"content":"        for (JsonAdaptedEnrolment jsonAdaptedEnrolment : enrolments) {","lastModifiedDate":"2023-10-28"},{"lineNumber":78,"author":{"gitId":"andrechuakj"},"content":"            Enrolment enrolment \u003d jsonAdaptedEnrolment.toModelType();","lastModifiedDate":"2023-10-28"},{"lineNumber":79,"author":{"gitId":"andrechuakj"},"content":"            if (ccaCommander.hasEnrolment(enrolment)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":80,"author":{"gitId":"andrechuakj"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_ENROLMENT);","lastModifiedDate":"2023-10-28"},{"lineNumber":81,"author":{"gitId":"dylkaw"},"content":"            }","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"andrechuakj"},"content":"            ccaCommander.createEnrolment(enrolment);","lastModifiedDate":"2023-10-28"},{"lineNumber":83,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":84,"author":{"gitId":"andrechuakj"},"content":"        return ccaCommander;","lastModifiedDate":"2023-10-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"wr1159":7,"andrechuakj":33,"dylkaw":13,"-":34}},{"path":"src/main/java/seedu/ccacommander/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.storage;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.util.JsonUtil;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.UserPrefs;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if the file format is not as expected.","lastModifiedDate":"2023-06-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"andrechuakj":5,"-":42}},{"path":"src/main/java/seedu/ccacommander/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.storage;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.ReadOnlyCcaCommander;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.UserPrefs;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"/**","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":" * API of the Storage component","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":" */","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":"public interface Storage extends CcaCommanderStorage, UserPrefsStorage {","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"andrechuakj"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"andrechuakj"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"andrechuakj"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"andrechuakj"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"andrechuakj"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"andrechuakj"},"content":"    Path getCcaCommanderFilePath();","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"andrechuakj"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"andrechuakj"},"content":"    Optional\u003cReadOnlyCcaCommander\u003e readCcaCommander() throws DataLoadingException;","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"andrechuakj"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"andrechuakj"},"content":"    void saveCcaCommander(ReadOnlyCcaCommander ccaCommander) throws IOException;","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"andrechuakj"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"andrechuakj":32}},{"path":"src/main/java/seedu/ccacommander/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.storage;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.core.LogsCenter;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.ReadOnlyCcaCommander;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.UserPrefs;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"/**","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":" * Manages storage of CcaCommander data in local storage.","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"andrechuakj"},"content":" */","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"andrechuakj"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"andrechuakj"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"andrechuakj"},"content":"    private CcaCommanderStorage ccaCommanderStorage;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"andrechuakj"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"andrechuakj"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"andrechuakj"},"content":"     * Creates a {@code StorageManager} with the given {@code CcaCommanderStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"andrechuakj"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"andrechuakj"},"content":"    public StorageManager(CcaCommanderStorage ccaCommanderStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"andrechuakj"},"content":"        this.ccaCommanderStorage \u003d ccaCommanderStorage;","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"andrechuakj"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"andrechuakj"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"andrechuakj"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"andrechuakj"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"andrechuakj"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"andrechuakj"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"andrechuakj"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"andrechuakj"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"andrechuakj"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"andrechuakj"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"andrechuakj"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"andrechuakj"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d CcaCommander methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"andrechuakj"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"andrechuakj"},"content":"    public Path getCcaCommanderFilePath() {","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"andrechuakj"},"content":"        return ccaCommanderStorage.getCcaCommanderFilePath();","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"andrechuakj"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"andrechuakj"},"content":"    public Optional\u003cReadOnlyCcaCommander\u003e readCcaCommander() throws DataLoadingException {","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"andrechuakj"},"content":"        return readCcaCommander(ccaCommanderStorage.getCcaCommanderFilePath());","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"andrechuakj"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"andrechuakj"},"content":"    public Optional\u003cReadOnlyCcaCommander\u003e readCcaCommander(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"andrechuakj"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-10-21"},{"lineNumber":64,"author":{"gitId":"andrechuakj"},"content":"        return ccaCommanderStorage.readCcaCommander(filePath);","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"andrechuakj"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"andrechuakj"},"content":"    public void saveCcaCommander(ReadOnlyCcaCommander ccaCommander) throws IOException {","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"andrechuakj"},"content":"        saveCcaCommander(ccaCommander, ccaCommanderStorage.getCcaCommanderFilePath());","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"andrechuakj"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"andrechuakj"},"content":"    public void saveCcaCommander(ReadOnlyCcaCommander ccaCommander, Path filePath) throws IOException {","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"andrechuakj"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"andrechuakj"},"content":"        ccaCommanderStorage.saveCcaCommander(ccaCommander, filePath);","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":78,"author":{"gitId":"andrechuakj"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"andrechuakj":78}},{"path":"src/main/java/seedu/ccacommander/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.storage;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.UserPrefs;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":" * Represents a storage for {@link seedu.ccacommander.model.UserPrefs}.","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if the loading of data from preference file failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"andrechuakj"},"content":"     * Saves the given {@link seedu.ccacommander.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"andrechuakj":6,"-":30}},{"path":"src/main/java/seedu/ccacommander/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.ui;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.commands.CommandResult;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"wr1159"},"content":"import seedu.ccacommander.model.CommandHistory;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"    // error style class in extensions.css","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"wr1159"},"content":"    private static final CommandHistory COMMAND_HISTORY \u003d new CommandHistory();","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":33,"author":{"gitId":"wr1159"},"content":"        commandTextField.setOnKeyPressed(event -\u003e {","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"wr1159"},"content":"            switch (event.getCode()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"wr1159"},"content":"            case UP:","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"wr1159"},"content":"                if (COMMAND_HISTORY.hasPreviousCommand()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"wr1159"},"content":"                    String previousCommand \u003d COMMAND_HISTORY.getPreviousCommand();","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"wr1159"},"content":"                    commandTextField.setText(previousCommand);","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"wr1159"},"content":"                    commandTextField.positionCaret(previousCommand.length());","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"wr1159"},"content":"                }","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"wr1159"},"content":"                break;","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"wr1159"},"content":"            case DOWN:","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"wr1159"},"content":"                if (COMMAND_HISTORY.hasNextCommand()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"wr1159"},"content":"                    String nextCommand \u003d COMMAND_HISTORY.getNextCommand();","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"wr1159"},"content":"                    commandTextField.setText(nextCommand);","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"wr1159"},"content":"                    commandTextField.positionCaret(nextCommand.length());","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"wr1159"},"content":"                } else if (COMMAND_HISTORY.isLastCommand()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"wr1159"},"content":"                    COMMAND_HISTORY.resetPointer();","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"wr1159"},"content":"                    commandTextField.setText(\"\");","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"wr1159"},"content":"                }","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"wr1159"},"content":"                break;","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"wr1159"},"content":"            case BACK_SPACE:","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"wr1159"},"content":"            case ENTER:","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"wr1159"},"content":"                COMMAND_HISTORY.resetPointer();","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"wr1159"},"content":"                break;","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"wr1159"},"content":"            default:","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"wr1159"},"content":"                break;","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"wr1159"},"content":"            }","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"wr1159"},"content":"        });","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":73,"author":{"gitId":"wr1159"},"content":"            COMMAND_HISTORY.addCommand(commandText);","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"andrechuakj"},"content":"         * @see seedu.ccacommander.logic.Logic#execute(String)","lastModifiedDate":"2023-10-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"wr1159":30,"andrechuakj":5,"ph-nathan":1,"-":78}},{"path":"src/main/java/seedu/ccacommander/ui/EventCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.ui;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"wr1159"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"wr1159"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.Event;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":" * A UI component that displays information of a {@code Event}.","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"public class EventCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":"    private static final String FXML \u003d \"EventListCard.fxml\";","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"ph-nathan"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"ph-nathan"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"ph-nathan"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"andrechuakj"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"ph-nathan"},"content":"    public final Event event;","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"ph-nathan"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"ph-nathan"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"ph-nathan"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"ph-nathan"},"content":"    private Label name;","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"ph-nathan"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"ph-nathan"},"content":"    private Label id;","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"ph-nathan"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"ph-nathan"},"content":"    private Label eventLocation;","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"ph-nathan"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"ph-nathan"},"content":"    private Label eventDate;","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"ph-nathan"},"content":"    @FXML","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"ph-nathan"},"content":"    private Label eventHours;","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"ph-nathan"},"content":"    @FXML","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"ph-nathan"},"content":"    private Label eventRemark;","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"wr1159"},"content":"    @FXML","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"wr1159"},"content":"    private FlowPane tags;","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"ph-nathan"},"content":"     * Creates a {@code EventCode} with the given {@code Event} and index to display.","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"ph-nathan"},"content":"    public EventCard(Event event, int displayedIndex, boolean displayEventHoursAndRemark) {","lastModifiedDate":"2023-11-03"},{"lineNumber":52,"author":{"gitId":"ph-nathan"},"content":"        super(FXML);","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"ph-nathan"},"content":"        this.event \u003d event;","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"ph-nathan"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"ph-nathan"},"content":"        name.setText(event.getName().name);","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"ph-nathan"},"content":"        eventLocation.setText(\"Location: \" + event.getLocation().value);","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"ph-nathan"},"content":"        eventDate.setText(\"Date: \" + event.getDate().toString());","lastModifiedDate":"2023-11-03"},{"lineNumber":58,"author":{"gitId":"wr1159"},"content":"        event.getTags().stream()","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"wr1159"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"wr1159"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"ph-nathan"},"content":"        eventHours.setText(\"Hours: \" + event.getHours().toString());","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"ph-nathan"},"content":"        eventRemark.setText(\"Remark: \" + event.getRemark());","lastModifiedDate":"2023-10-29"},{"lineNumber":63,"author":{"gitId":"ph-nathan"},"content":"        if (!displayEventHoursAndRemark) {","lastModifiedDate":"2023-11-03"},{"lineNumber":64,"author":{"gitId":"ph-nathan"},"content":"            eventHours.setVisible(false);","lastModifiedDate":"2023-10-29"},{"lineNumber":65,"author":{"gitId":"ph-nathan"},"content":"            eventRemark.setVisible(false);","lastModifiedDate":"2023-10-29"},{"lineNumber":66,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":67,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"wr1159":9,"andrechuakj":4,"ph-nathan":55}},{"path":"src/main/java/seedu/ccacommander/ui/EventListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.ui;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.core.LogsCenter;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.Event;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":" * Panel containing the list of events.","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"public class EventListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":"    private static boolean displayEventHoursAndRemark \u003d false;","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"    private static final String FXML \u003d \"EventListPanel.fxml\";","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"ph-nathan"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(EventListPanel.class);","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"ph-nathan"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"ph-nathan"},"content":"    private ListView\u003cEvent\u003e eventListView;","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"ph-nathan"},"content":"     * Creates a {@code EventListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"ph-nathan"},"content":"    public EventListPanel(ObservableList\u003cEvent\u003e eventList) {","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"ph-nathan"},"content":"        super(FXML);","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"ph-nathan"},"content":"        eventListView.setItems(eventList);","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"ph-nathan"},"content":"        eventListView.setCellFactory(listView -\u003e new EventListViewCell());","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"ph-nathan"},"content":"    public static void setDisplayEventHoursAndRemark(boolean displayEventHoursAndRemark) {","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"ph-nathan"},"content":"        EventListPanel.displayEventHoursAndRemark \u003d displayEventHoursAndRemark;","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"ph-nathan"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Event} using a {@code EventCard}.","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"ph-nathan"},"content":"    class EventListViewCell extends ListCell\u003cEvent\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"ph-nathan"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"ph-nathan"},"content":"        protected void updateItem(Event event, boolean empty) {","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"ph-nathan"},"content":"            super.updateItem(event, empty);","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"ph-nathan"},"content":"            if (empty || event \u003d\u003d null) {","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"ph-nathan"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"ph-nathan"},"content":"                setText(null);","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"ph-nathan"},"content":"            } else {","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"ph-nathan"},"content":"                setGraphic(new EventCard(event, getIndex() + 1, displayEventHoursAndRemark).getRoot());","lastModifiedDate":"2023-11-03"},{"lineNumber":49,"author":{"gitId":"ph-nathan"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"andrechuakj":3,"ph-nathan":50}},{"path":"src/main/java/seedu/ccacommander/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.ui;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.core.LogsCenter;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s1-cs2103t-f11-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"andrechuakj":2,"ph-nathan":1,"-":99}},{"path":"src/main/java/seedu/ccacommander/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.ui;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.ui.Stylesheet.constructStylesheet;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.core.GuiSettings;","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.core.LogsCenter;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.Logic;","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.commands.CommandResult;","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"wr1159"},"content":"    private MemberListPanel memberListPanel;","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"ph-nathan"},"content":"    private EventListPanel eventListPanel;","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":41,"author":{"gitId":"ph-nathan"},"content":"    private Stylesheet stylesheet;","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"ph-nathan"},"content":"    private StackPane memberListPanelPlaceholder;","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"ph-nathan"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"ph-nathan"},"content":"    private StackPane eventListPanelPlaceholder;","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"ph-nathan"},"content":"        GuiSettings guiSettings \u003d logic.getGuiSettings();","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"ph-nathan"},"content":"        setWindowDefaultSize(guiSettings);","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"ph-nathan"},"content":"        applyStylesheet(constructStylesheet(guiSettings.getStylesheet()));","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"wr1159"},"content":"        memberListPanel \u003d new MemberListPanel(logic.getFilteredMemberList());","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"ph-nathan"},"content":"        memberListPanelPlaceholder.getChildren().add(memberListPanel.getRoot());","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"ph-nathan"},"content":"        eventListPanel \u003d new EventListPanel(logic.getFilteredEventList());","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"ph-nathan"},"content":"        eventListPanelPlaceholder.getChildren().add(eventListPanel.getRoot());","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"andrechuakj"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getCcaCommanderFilePath());","lastModifiedDate":"2023-10-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"ph-nathan"},"content":"    private void applyStylesheet(Stylesheet newStylesheet) {","lastModifiedDate":"2023-11-02"},{"lineNumber":168,"author":{"gitId":"ph-nathan"},"content":"        ObservableList\u003cString\u003e uiStyleSheet \u003d primaryStage.getScene().getStylesheets();","lastModifiedDate":"2023-11-02"},{"lineNumber":169,"author":{"gitId":"ph-nathan"},"content":"        uiStyleSheet.clear();","lastModifiedDate":"2023-11-02"},{"lineNumber":170,"author":{"gitId":"ph-nathan"},"content":"        String switchedStyleSheet \u003d newStylesheet.getStylesheet();","lastModifiedDate":"2023-11-02"},{"lineNumber":171,"author":{"gitId":"ph-nathan"},"content":"        uiStyleSheet.add(switchedStyleSheet);","lastModifiedDate":"2023-11-02"},{"lineNumber":172,"author":{"gitId":"ph-nathan"},"content":"        uiStyleSheet.add(Stylesheet.EXTENSION.getStylesheet());","lastModifiedDate":"2023-11-02"},{"lineNumber":173,"author":{"gitId":"ph-nathan"},"content":"        this.stylesheet \u003d newStylesheet;","lastModifiedDate":"2023-11-02"},{"lineNumber":174,"author":{"gitId":"ph-nathan"},"content":"        logger.info(String.format(Stylesheet.SUCCESS_MESSAGE, stylesheet));","lastModifiedDate":"2023-11-02"},{"lineNumber":175,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":176,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":177,"author":{"gitId":"ph-nathan"},"content":"    /** Sets stylesheet to Light Theme. */","lastModifiedDate":"2023-11-02"},{"lineNumber":178,"author":{"gitId":"ph-nathan"},"content":"    @FXML","lastModifiedDate":"2023-11-02"},{"lineNumber":179,"author":{"gitId":"ph-nathan"},"content":"    public void applyLightTheme() {","lastModifiedDate":"2023-11-02"},{"lineNumber":180,"author":{"gitId":"ph-nathan"},"content":"        applyStylesheet(Stylesheet.LIGHT);","lastModifiedDate":"2023-11-02"},{"lineNumber":181,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":182,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":183,"author":{"gitId":"ph-nathan"},"content":"    /** Sets stylesheet to Dark Theme. */","lastModifiedDate":"2023-11-02"},{"lineNumber":184,"author":{"gitId":"ph-nathan"},"content":"    @FXML","lastModifiedDate":"2023-11-02"},{"lineNumber":185,"author":{"gitId":"ph-nathan"},"content":"    public void applyDarkTheme() {","lastModifiedDate":"2023-11-02"},{"lineNumber":186,"author":{"gitId":"ph-nathan"},"content":"        applyStylesheet(Stylesheet.DARK);","lastModifiedDate":"2023-11-02"},{"lineNumber":187,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":188,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":195,"author":{"gitId":"ph-nathan"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY(), stylesheet.toString());","lastModifiedDate":"2023-11-02"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":201,"author":{"gitId":"wr1159"},"content":"    public MemberListPanel getMemberListPanel() {","lastModifiedDate":"2023-10-12"},{"lineNumber":202,"author":{"gitId":"wr1159"},"content":"        return memberListPanel;","lastModifiedDate":"2023-10-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"andrechuakj"},"content":"     * @see seedu.ccacommander.logic.Logic#execute(String)","lastModifiedDate":"2023-10-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"wr1159":4,"andrechuakj":9,"ph-nathan":37,"-":181}},{"path":"src/main/java/seedu/ccacommander/ui/MemberCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.ui;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Member;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":" * A UI component that displays information of a {@code Member}.","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"wr1159"},"content":"public class MemberCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"wr1159"},"content":"    private static final String FXML \u003d \"MemberListCard.fxml\";","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"andrechuakj"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"wr1159"},"content":"    public final Member member;","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"andrechuakj"},"content":"    private Label gender;","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"andrechuakj"},"content":"    @FXML","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"ph-nathan"},"content":"    private Label memberHours;","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"ph-nathan"},"content":"    @FXML","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"ph-nathan"},"content":"    private Label memberRemark;","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"ph-nathan"},"content":"    @FXML","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"wr1159"},"content":"     * Creates a {@code MemberCode} with the given {@code Member} and index to display.","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"ph-nathan"},"content":"    public MemberCard(Member member, int displayedIndex, boolean displayMemberHoursAndRemark) {","lastModifiedDate":"2023-11-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"wr1159"},"content":"        this.member \u003d member;","lastModifiedDate":"2023-10-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"dylkaw"},"content":"        name.setText(member.getName().name);","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"ph-nathan"},"content":"        gender.setText(\"Gender: \" + member.getGender().toString());","lastModifiedDate":"2023-11-03"},{"lineNumber":59,"author":{"gitId":"ph-nathan"},"content":"        phone.setText(\"Phone: \" + member.getPhone().value);","lastModifiedDate":"2023-11-03"},{"lineNumber":60,"author":{"gitId":"ph-nathan"},"content":"        address.setText(\"Address: \" + member.getAddress().value);","lastModifiedDate":"2023-11-03"},{"lineNumber":61,"author":{"gitId":"ph-nathan"},"content":"        email.setText(\"Email: \" + member.getEmail().value);","lastModifiedDate":"2023-11-03"},{"lineNumber":62,"author":{"gitId":"ph-nathan"},"content":"        memberHours.setText(\"Hours: \" + member.getHours().toString());","lastModifiedDate":"2023-10-29"},{"lineNumber":63,"author":{"gitId":"ph-nathan"},"content":"        memberRemark.setText(\"Remark: \" + member.getRemark());","lastModifiedDate":"2023-10-29"},{"lineNumber":64,"author":{"gitId":"ph-nathan"},"content":"        if (!displayMemberHoursAndRemark) {","lastModifiedDate":"2023-11-03"},{"lineNumber":65,"author":{"gitId":"ph-nathan"},"content":"            memberHours.setVisible(false);","lastModifiedDate":"2023-10-29"},{"lineNumber":66,"author":{"gitId":"ph-nathan"},"content":"            memberRemark.setVisible(false);","lastModifiedDate":"2023-10-29"},{"lineNumber":67,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":68,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":69,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":70,"author":{"gitId":"wr1159"},"content":"        member.getTags().stream()","lastModifiedDate":"2023-10-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"wr1159":6,"andrechuakj":5,"dylkaw":1,"ph-nathan":18,"-":44}},{"path":"src/main/java/seedu/ccacommander/ui/MemberListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.ui;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.core.LogsCenter;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Member;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"wr1159"},"content":" * Panel containing the list of members.","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"wr1159"},"content":"public class MemberListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":"    private static boolean displayMemberHoursAndRemark \u003d false;","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"wr1159"},"content":"    private static final String FXML \u003d \"MemberListPanel.fxml\";","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"wr1159"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(MemberListPanel.class);","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"wr1159"},"content":"    private ListView\u003cMember\u003e memberListView;","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"wr1159"},"content":"     * Creates a {@code MemberListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"wr1159"},"content":"    public MemberListPanel(ObservableList\u003cMember\u003e memberList) {","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"wr1159"},"content":"        memberListView.setItems(memberList);","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"ph-nathan"},"content":"        memberListView.setCellFactory(listView -\u003e new MemberListViewCell());","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":33,"author":{"gitId":"ph-nathan"},"content":"    public static void setDisplayMemberHoursAndRemark(boolean displayMemberHoursAndRemark) {","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"ph-nathan"},"content":"        MemberListPanel.displayMemberHoursAndRemark \u003d displayMemberHoursAndRemark;","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"wr1159"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Member} using a {@code MemberCard}.","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":40,"author":{"gitId":"ph-nathan"},"content":"    class MemberListViewCell extends ListCell\u003cMember\u003e {","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"wr1159"},"content":"        protected void updateItem(Member member, boolean empty) {","lastModifiedDate":"2023-10-02"},{"lineNumber":43,"author":{"gitId":"wr1159"},"content":"            super.updateItem(member, empty);","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"wr1159"},"content":"            if (empty || member \u003d\u003d null) {","lastModifiedDate":"2023-10-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"ph-nathan"},"content":"                setGraphic(new MemberCard(member, getIndex() + 1, displayMemberHoursAndRemark).getRoot());","lastModifiedDate":"2023-11-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"wr1159":12,"andrechuakj":3,"ph-nathan":8,"-":31}},{"path":"src/main/java/seedu/ccacommander/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.ui;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"andrechuakj":1,"-":27}},{"path":"src/main/java/seedu/ccacommander/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.ui;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"andrechuakj":1,"-":27}},{"path":"src/main/java/seedu/ccacommander/ui/Stylesheet.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"package seedu.ccacommander.ui;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"/**","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":" * A class to encapsulate the stylesheet setting and path.","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"public enum Stylesheet {","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":"    LIGHT(\"LightTheme.css\"),","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"    DARK(\"DarkTheme.css\"),","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"    EXTENSION(\"Extensions.css\");","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":"    public static final String SUCCESS_MESSAGE \u003d \"Stylesheet switched to: %1$s.\";","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"    public static final Stylesheet DEFAULT_STYLESHEET \u003d LIGHT;","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"    private static final String DIRECTORY \u003d \"/view/\";","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"    private final String path;","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"    Stylesheet(String path) {","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"ph-nathan"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"     * Creates a {@code Stylesheet} object given a {@code String}.","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"ph-nathan"},"content":"     *","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"ph-nathan"},"content":"     * If the given {@code String} does not match any of the stylesheets,","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"ph-nathan"},"content":"     * return the default stylesheet instead.","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"ph-nathan"},"content":"    public static Stylesheet constructStylesheet(String stylesheetString) {","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"ph-nathan"},"content":"        for (Stylesheet stylesheet : Stylesheet.values()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"ph-nathan"},"content":"            if (stylesheet.path.equals(stylesheetString)) {","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"ph-nathan"},"content":"                return stylesheet;","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"ph-nathan"},"content":"            }","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"ph-nathan"},"content":"        return DEFAULT_STYLESHEET;","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"ph-nathan"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"ph-nathan"},"content":"    public String toString() {","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"ph-nathan"},"content":"        return path;","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"ph-nathan"},"content":"    public String getStylesheet() {","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"ph-nathan"},"content":"        return getClass().getResource(DIRECTORY + path).toExternalForm();","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"ph-nathan":45}},{"path":"src/main/java/seedu/ccacommander/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.ui;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"andrechuakj":1,"-":12}},{"path":"src/main/java/seedu/ccacommander/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.ui;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.MainApp;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.core.LogsCenter;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.util.StringUtil;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.Logic;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/logo.png\";","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"andrechuakj":5,"ph-nathan":1,"-":82}},{"path":"src/main/java/seedu/ccacommander/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.ui;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.MainApp;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"andrechuakj":2,"-":86}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"\u003cHBox styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" spacing\u003d\"10\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":"  \u003cTextField styleClass\u003d\"command-text-region\" fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" HBox.hgrow\u003d\"ALWAYS\" promptText\u003d\"Enter command here...\"/\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"ph-nathan":8,"-":5}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"    -fx-font-family: \"Nunito\";","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":".menu-bar {","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":".menu-bar .label {","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"ph-nathan"},"content":"    -fx-font-family: \"Nunito\";","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"ph-nathan"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"ph-nathan"},"content":".menu .left-container {","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-color: black;","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"ph-nathan"},"content":"/* context-menu is the style for the dropdown options of menu-bar*/","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"ph-nathan"},"content":".context-menu {","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"ph-nathan"},"content":".context-menu .label {","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"ph-nathan"},"content":"/* title is for CCACommander*/","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"ph-nathan"},"content":".title {","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"ph-nathan"},"content":"    -fx-font-family: \"Poppins\";","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"ph-nathan"},"content":"    -fx-font-weight: 700;","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"ph-nathan"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"ph-nathan"},"content":"    -fx-padding: 5px 10px;","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-radius: 5px;","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"ph-nathan"},"content":"    -fx-effect: innershadow(three-pass-box, derive(#3b3b3b, -10%) , 4, 0, 0, 0);","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-color: linear-gradient(from 100% 100% to 100% 100%, derive(#1d1d1d, 50%), #a6a6a6);","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"ph-nathan"},"content":"/* stack-pane is the command-text-field + button, right now if set to black , button will blend in","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"ph-nathan"},"content":"   but the rim outside the command-text-field will still be beige color */","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"ph-nathan"},"content":".stack-pane {","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"ph-nathan"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"ph-nathan"},"content":"/* command text-box */","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"ph-nathan"},"content":".command-text-region {","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"ph-nathan"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"ph-nathan"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"ph-nathan"},"content":"    -fx-font-family: \"Nunito\";","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-color: derive(#1d1d1d, 40%);","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-radius: 5 5 5 5;","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"ph-nathan"},"content":"    -fx-effect: dropshadow(three-pass-box, #823ecf, 19, 0, 0, 0);","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"ph-nathan"},"content":"    -fx-border-radius: 5;","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"ph-nathan"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"ph-nathan"},"content":"#commandTextField {","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"ph-nathan"},"content":"    -fx-border-color: #383838 #383838 #383838 #383838;","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"ph-nathan"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"ph-nathan"},"content":"/* result display box below the command text box*/","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"ph-nathan"},"content":".text-area {","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"ph-nathan"},"content":"    -fx-focus-color: transparent;","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"ph-nathan"},"content":"    -fx-border-style: none;","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"ph-nathan"},"content":"    -fx-border-radius: 0.0px;","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"ph-nathan"},"content":".text-area:focused .content {","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-color: black;","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"ph-nathan"},"content":".result-display {","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"ph-nathan"},"content":"    -fx-font-family: \"Nunito\";","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"ph-nathan"},"content":"    -fx-font-weight: lighter;","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"ph-nathan"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"ph-nathan"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"ph-nathan"},"content":"    -fx-effect: innershadow(three-pass-box, derive(#3b3b3b, -10%) , 4, 0, 0, 0);","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"ph-nathan"},"content":"#resultDisplay .content {","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"ph-nathan"},"content":"/* pane-with-border is used in VBox containing member-list + members title and the VBox containing event-list + events title */","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"ph-nathan"},"content":".pane-with-border {","lastModifiedDate":"2023-11-01"},{"lineNumber":101,"author":{"gitId":"ph-nathan"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-11-02"},{"lineNumber":102,"author":{"gitId":"ph-nathan"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"ph-nathan"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":106,"author":{"gitId":"ph-nathan"},"content":"/* cardPane is also eventListCard and memberListCard */","lastModifiedDate":"2023-11-01"},{"lineNumber":107,"author":{"gitId":"ph-nathan"},"content":"#cardPane {","lastModifiedDate":"2023-11-01"},{"lineNumber":108,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"ph-nathan"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2023-11-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-11-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":112,"author":{"gitId":"ph-nathan"},"content":"/* listTitle is for members and events titles */","lastModifiedDate":"2023-11-01"},{"lineNumber":113,"author":{"gitId":"ph-nathan"},"content":".listTitle {","lastModifiedDate":"2023-11-01"},{"lineNumber":114,"author":{"gitId":"ph-nathan"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2023-11-01"},{"lineNumber":115,"author":{"gitId":"ph-nathan"},"content":"    -fx-font-family: \"Poppins\";","lastModifiedDate":"2023-11-01"},{"lineNumber":116,"author":{"gitId":"ph-nathan"},"content":"    -fx-font-weight: 700;","lastModifiedDate":"2023-11-01"},{"lineNumber":117,"author":{"gitId":"ph-nathan"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-11-02"},{"lineNumber":118,"author":{"gitId":"ph-nathan"},"content":"    -fx-padding: 5px 10px;","lastModifiedDate":"2023-11-01"},{"lineNumber":119,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-color: linear-gradient(from 0% 0% to 100% 100%, #fdfcfb, #e2d1c3);","lastModifiedDate":"2023-11-02"},{"lineNumber":120,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-radius: 5px;","lastModifiedDate":"2023-11-01"},{"lineNumber":121,"author":{"gitId":"ph-nathan"},"content":"    -fx-effect: innershadow(three-pass-box, derive(#3b3b3b, -10%) , 4, 0, 0, 0);","lastModifiedDate":"2023-11-01"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"ph-nathan"},"content":"/* list-view is for the member list and event list*/","lastModifiedDate":"2023-11-01"},{"lineNumber":125,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":128,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-11-02"},{"lineNumber":129,"author":{"gitId":"ph-nathan"},"content":"    -fx-effect: innershadow(three-pass-box, derive(#3b3b3b, -10%) , 4, 0, 0, 0);","lastModifiedDate":"2023-11-01"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"ph-nathan"},"content":"/*note: .list-cell will cover all even, odd AND empty cells */","lastModifiedDate":"2023-11-01"},{"lineNumber":133,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"ph-nathan"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-11-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":141,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-color: linear-gradient(from 0% 0% to 100% 100%, #5b3c80, #010314);","lastModifiedDate":"2023-11-02"},{"lineNumber":142,"author":{"gitId":"ph-nathan"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-11-02"},{"lineNumber":143,"author":{"gitId":"ph-nathan"},"content":"    -fx-effect: innershadow(three-pass-box, derive(#3b3b3b, -10%) , 4, 0, 0, 0);","lastModifiedDate":"2023-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":146,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":147,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-color: linear-gradient(from 25% 25% to 100% 100%, derive(#1d1d1d, 10%), derive(#1d1d1d, 70%));","lastModifiedDate":"2023-11-02"},{"lineNumber":148,"author":{"gitId":"ph-nathan"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-11-02"},{"lineNumber":149,"author":{"gitId":"ph-nathan"},"content":"    -fx-effect: innershadow(three-pass-box, derive(#3b3b3b, -10%) , 4, 0, 0, 0);","lastModifiedDate":"2023-10-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":152,"author":{"gitId":"ph-nathan"},"content":"/* when the cell is selected */","lastModifiedDate":"2023-11-01"},{"lineNumber":153,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"ph-nathan"},"content":"    -fx-effect: dropshadow(three-pass-box, #1F51FF, 20, 0, 0, 0);","lastModifiedDate":"2023-11-02"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":157,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"ph-nathan"},"content":"    -fx-text-fill: white; /* black */","lastModifiedDate":"2023-11-02"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"ph-nathan"},"content":"    -fx-font-family: \"Nunito\";","lastModifiedDate":"2023-10-19"},{"lineNumber":163,"author":{"gitId":"ph-nathan"},"content":"    -fx-font-weight: 700;","lastModifiedDate":"2023-10-18"},{"lineNumber":164,"author":{"gitId":"ph-nathan"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2023-10-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"ph-nathan"},"content":"    -fx-font-family: \"Nunito\";","lastModifiedDate":"2023-10-19"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"ph-nathan"},"content":"/* tags inside each cell */","lastModifiedDate":"2023-11-01"},{"lineNumber":173,"author":{"gitId":"ph-nathan"},"content":"#tags {","lastModifiedDate":"2023-11-01"},{"lineNumber":174,"author":{"gitId":"ph-nathan"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2023-11-01"},{"lineNumber":175,"author":{"gitId":"ph-nathan"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2023-11-01"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"ph-nathan"},"content":"#tags .label {","lastModifiedDate":"2023-11-01"},{"lineNumber":179,"author":{"gitId":"ph-nathan"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-11-01"},{"lineNumber":180,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2023-11-01"},{"lineNumber":181,"author":{"gitId":"ph-nathan"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-11-01"},{"lineNumber":182,"author":{"gitId":"ph-nathan"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-11-01"},{"lineNumber":183,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-11-01"},{"lineNumber":184,"author":{"gitId":"ph-nathan"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2023-11-01"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":187,"author":{"gitId":"ph-nathan"},"content":"/* the data/ccacommander footer */","lastModifiedDate":"2023-11-01"},{"lineNumber":188,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"ph-nathan"},"content":"    -fx-font-family: \"Nunito\";","lastModifiedDate":"2023-10-19"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"ph-nathan"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2023-10-18"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-10-18"},{"lineNumber":219,"author":{"gitId":"ph-nathan"},"content":"    -fx-font-family: \"Nunito\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2023-10-18"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-10-19"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"ph-nathan"},"content":"/* dialog-pane is used for alert dialogs */","lastModifiedDate":"2023-11-01"},{"lineNumber":252,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-color: #EDDFC9;","lastModifiedDate":"2023-10-18"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-color: #EDDFC9;","lastModifiedDate":"2023-10-18"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"ph-nathan"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-10-18"},{"lineNumber":264,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":268,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"ph-nathan"},"content":"/* scroll-bar (used in event, member lists, result display) */","lastModifiedDate":"2023-11-01"},{"lineNumber":278,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":279,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-11-02"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":282,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":285,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":287,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":296,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"ph-nathan":122,"-":180}},{"path":"src/main/resources/view/EventListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"wr1159"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"ph-nathan"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"ph-nathan"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"ph-nathan"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"ph-nathan"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"ph-nathan"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"ph-nathan"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"ph-nathan"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"ph-nathan"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"ph-nathan"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"ph-nathan"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"wr1159"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"ph-nathan"},"content":"            \u003cLabel fx:id\u003d\"eventLocation\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$eventLocation\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"ph-nathan"},"content":"            \u003cLabel fx:id\u003d\"eventDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$eventDate\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"ph-nathan"},"content":"            \u003cLabel fx:id\u003d\"eventHours\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$hours\" /\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"ph-nathan"},"content":"            \u003cLabel fx:id\u003d\"eventRemark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"ph-nathan"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"ph-nathan"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"ph-nathan"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"wr1159":2,"ph-nathan":35}},{"path":"src/main/resources/view/EventListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":"    \u003cListView fx:id\u003d\"eventListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"ph-nathan":8}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"    -fx-background: transparent;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ph-nathan":1,"-":19}},{"path":"src/main/resources/view/LightTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":".background {","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-color: #EDDFC9;","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":".label {","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"    -fx-font-family: \"Nunito\";","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":".menu-bar {","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":".menu-bar .label {","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"ph-nathan"},"content":"    -fx-font-family: \"Nunito\";","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"ph-nathan"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"ph-nathan"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"ph-nathan"},"content":".menu .left-container {","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-color: black;","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"ph-nathan"},"content":"/* context-menu is the style for the dropdown options of menu-bar*/","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"ph-nathan"},"content":".context-menu {","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"ph-nathan"},"content":".context-menu .label {","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"ph-nathan"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"ph-nathan"},"content":"/* title is for CCACommander*/","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"ph-nathan"},"content":".title {","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"ph-nathan"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"ph-nathan"},"content":"    -fx-font-family: \"Poppins\";","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"ph-nathan"},"content":"    -fx-font-weight: 700;","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"ph-nathan"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"ph-nathan"},"content":"    -fx-padding: 5px 10px;","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-radius: 5px;","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"ph-nathan"},"content":"    -fx-effect: innershadow(three-pass-box, derive(#3b3b3b, -10%) , 4, 0, 0, 0);","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-color: linear-gradient(from 100% 100% to 100% 100%, derive(#1d1d1d, 50%), #a6a6a6);","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"ph-nathan"},"content":"/* stack-pane is the command-text-field + button, right now if set to black , button will blend in","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"ph-nathan"},"content":"   but the rim outside the command-text-field will still be beige color */","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"ph-nathan"},"content":".stack-pane {","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"ph-nathan"},"content":"     -fx-background-color: #EDDFC9;","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"ph-nathan"},"content":"/* command text-box */","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"ph-nathan"},"content":".command-text-region {","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"ph-nathan"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"ph-nathan"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"ph-nathan"},"content":"    -fx-font-family: \"Nunito\";","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-color: derive(#FFFAE4, 30%);","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-radius: 5 5 5 5;","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"ph-nathan"},"content":"    -fx-effect: innershadow(three-pass-box, #1d1d1d, 10, 0, 0, 0);","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"ph-nathan"},"content":"    -fx-border-radius: 5;","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"ph-nathan"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"ph-nathan"},"content":"#commandTextField {","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"ph-nathan"},"content":"    -fx-border-color: #383838 #383838 #383838 #383838;","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"ph-nathan"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"ph-nathan"},"content":"/* result display box below the command text box*/","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"ph-nathan"},"content":".result-display {","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-color: #F0EFE7;","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"ph-nathan"},"content":"    -fx-font-family: \"Nunito\";","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"ph-nathan"},"content":"    -fx-font-weight: lighter;","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"ph-nathan"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"ph-nathan"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"ph-nathan"},"content":"    -fx-effect: innershadow(three-pass-box, derive(#3b3b3b, -10%) , 4, 0, 0, 0);","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"ph-nathan"},"content":"#resultDisplay .content {","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-color: transparent, #F0EFE7, transparent, #F0EFE7;","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"ph-nathan"},"content":"/* pane-with-border is used in VBox containing member-list + members title and the VBox containing event-list + events title */","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"ph-nathan"},"content":".pane-with-border {","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"ph-nathan"},"content":"     -fx-background-color: #EDDFC9;","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"ph-nathan"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"ph-nathan"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"ph-nathan"},"content":"/* cardPane is also eventListCard and memberListCard */","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"ph-nathan"},"content":"#cardPane {","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"ph-nathan"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"ph-nathan"},"content":"/* listTitle is for members and events titles */","lastModifiedDate":"2023-11-02"},{"lineNumber":101,"author":{"gitId":"ph-nathan"},"content":".listTitle {","lastModifiedDate":"2023-11-02"},{"lineNumber":102,"author":{"gitId":"ph-nathan"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"ph-nathan"},"content":"    -fx-font-family: \"Poppins\";","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"ph-nathan"},"content":"    -fx-font-weight: 700;","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"ph-nathan"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"ph-nathan"},"content":"    -fx-padding: 5px 10px;","lastModifiedDate":"2023-11-02"},{"lineNumber":107,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-color: linear-gradient(from 25% 25% to 100% 100%, derive(#1d1d1d, 20%), derive(#1d1d1d, 70%));","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-radius: 5px;","lastModifiedDate":"2023-11-02"},{"lineNumber":109,"author":{"gitId":"ph-nathan"},"content":"    -fx-effect: innershadow(three-pass-box, derive(#3b3b3b, -10%) , 4, 0, 0, 0);","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":111,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":112,"author":{"gitId":"ph-nathan"},"content":"/* list-view is for the member list and event list*/","lastModifiedDate":"2023-11-02"},{"lineNumber":113,"author":{"gitId":"ph-nathan"},"content":".list-view {","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"ph-nathan"},"content":"    -fx-padding: 0;","lastModifiedDate":"2023-11-02"},{"lineNumber":116,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-color: derive(#EDDFC9, 20%);","lastModifiedDate":"2023-11-02"},{"lineNumber":117,"author":{"gitId":"ph-nathan"},"content":"    -fx-effect: innershadow(three-pass-box, derive(#3b3b3b, -10%) , 4, 0, 0, 0);","lastModifiedDate":"2023-11-02"},{"lineNumber":118,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":119,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":120,"author":{"gitId":"ph-nathan"},"content":"/*note: .list-cell will cover all even, odd AND empty cells */","lastModifiedDate":"2023-11-02"},{"lineNumber":121,"author":{"gitId":"ph-nathan"},"content":".list-cell {","lastModifiedDate":"2023-11-02"},{"lineNumber":122,"author":{"gitId":"ph-nathan"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2023-11-02"},{"lineNumber":123,"author":{"gitId":"ph-nathan"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2023-11-02"},{"lineNumber":124,"author":{"gitId":"ph-nathan"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-11-02"},{"lineNumber":125,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":126,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":127,"author":{"gitId":"ph-nathan"},"content":".list-cell:filled:even {","lastModifiedDate":"2023-11-02"},{"lineNumber":128,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-color: linear-gradient(from 0% 0% to 100% 100%, #fdfcfb, #e2d1c3);","lastModifiedDate":"2023-11-02"},{"lineNumber":129,"author":{"gitId":"ph-nathan"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2023-11-02"},{"lineNumber":130,"author":{"gitId":"ph-nathan"},"content":"    -fx-effect: innershadow(three-pass-box, derive(#3b3b3b, -10%) , 4, 0, 0, 0);","lastModifiedDate":"2023-11-02"},{"lineNumber":131,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":132,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":133,"author":{"gitId":"ph-nathan"},"content":".list-cell:filled:odd {","lastModifiedDate":"2023-11-02"},{"lineNumber":134,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-color: linear-gradient(from 0% 0% to 100% 100%, #ECECEC, #44355B);","lastModifiedDate":"2023-11-02"},{"lineNumber":135,"author":{"gitId":"ph-nathan"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-11-02"},{"lineNumber":136,"author":{"gitId":"ph-nathan"},"content":"    -fx-effect: innershadow(three-pass-box, derive(#3b3b3b, -10%) , 4, 0, 0, 0);","lastModifiedDate":"2023-11-02"},{"lineNumber":137,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":138,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":139,"author":{"gitId":"ph-nathan"},"content":"/* when the cell is selected */","lastModifiedDate":"2023-11-02"},{"lineNumber":140,"author":{"gitId":"ph-nathan"},"content":".list-cell:filled:selected {","lastModifiedDate":"2023-11-02"},{"lineNumber":141,"author":{"gitId":"ph-nathan"},"content":"    -fx-border-color: #9434F4;","lastModifiedDate":"2023-11-02"},{"lineNumber":142,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":143,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":144,"author":{"gitId":"ph-nathan"},"content":".list-cell .label {","lastModifiedDate":"2023-11-02"},{"lineNumber":145,"author":{"gitId":"ph-nathan"},"content":"    -fx-text-fill: #010504; /* black */","lastModifiedDate":"2023-11-02"},{"lineNumber":146,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":147,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":148,"author":{"gitId":"ph-nathan"},"content":".cell_big_label {","lastModifiedDate":"2023-11-02"},{"lineNumber":149,"author":{"gitId":"ph-nathan"},"content":"    -fx-font-family: \"Nunito\";","lastModifiedDate":"2023-11-02"},{"lineNumber":150,"author":{"gitId":"ph-nathan"},"content":"    -fx-font-weight: 700;","lastModifiedDate":"2023-11-02"},{"lineNumber":151,"author":{"gitId":"ph-nathan"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2023-11-02"},{"lineNumber":152,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":153,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":154,"author":{"gitId":"ph-nathan"},"content":".cell_small_label {","lastModifiedDate":"2023-11-02"},{"lineNumber":155,"author":{"gitId":"ph-nathan"},"content":"    -fx-font-family: \"Nunito\";","lastModifiedDate":"2023-11-02"},{"lineNumber":156,"author":{"gitId":"ph-nathan"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2023-11-02"},{"lineNumber":157,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":158,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":159,"author":{"gitId":"ph-nathan"},"content":"/* tags inside each cell */","lastModifiedDate":"2023-11-02"},{"lineNumber":160,"author":{"gitId":"ph-nathan"},"content":"#tags {","lastModifiedDate":"2023-11-02"},{"lineNumber":161,"author":{"gitId":"ph-nathan"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2023-11-02"},{"lineNumber":162,"author":{"gitId":"ph-nathan"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2023-11-02"},{"lineNumber":163,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":164,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":165,"author":{"gitId":"ph-nathan"},"content":"#tags .label {","lastModifiedDate":"2023-11-02"},{"lineNumber":166,"author":{"gitId":"ph-nathan"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-11-02"},{"lineNumber":167,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2023-11-02"},{"lineNumber":168,"author":{"gitId":"ph-nathan"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-11-02"},{"lineNumber":169,"author":{"gitId":"ph-nathan"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-11-02"},{"lineNumber":170,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-11-02"},{"lineNumber":171,"author":{"gitId":"ph-nathan"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2023-11-02"},{"lineNumber":172,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":173,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":174,"author":{"gitId":"ph-nathan"},"content":"/* the data/ccacommander footer */","lastModifiedDate":"2023-11-02"},{"lineNumber":175,"author":{"gitId":"ph-nathan"},"content":".status-bar {","lastModifiedDate":"2023-11-02"},{"lineNumber":176,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-11-02"},{"lineNumber":177,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":178,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":179,"author":{"gitId":"ph-nathan"},"content":".status-bar .label {","lastModifiedDate":"2023-11-02"},{"lineNumber":180,"author":{"gitId":"ph-nathan"},"content":"    -fx-font-family: \"Nunito\";","lastModifiedDate":"2023-11-02"},{"lineNumber":181,"author":{"gitId":"ph-nathan"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-11-02"},{"lineNumber":182,"author":{"gitId":"ph-nathan"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2023-11-02"},{"lineNumber":183,"author":{"gitId":"ph-nathan"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2023-11-02"},{"lineNumber":184,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":185,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":186,"author":{"gitId":"ph-nathan"},"content":".status-bar-with-border {","lastModifiedDate":"2023-11-02"},{"lineNumber":187,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-11-02"},{"lineNumber":188,"author":{"gitId":"ph-nathan"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2023-11-02"},{"lineNumber":189,"author":{"gitId":"ph-nathan"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-11-02"},{"lineNumber":190,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":191,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":192,"author":{"gitId":"ph-nathan"},"content":".status-bar-with-border .label {","lastModifiedDate":"2023-11-02"},{"lineNumber":193,"author":{"gitId":"ph-nathan"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-11-02"},{"lineNumber":194,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":195,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":196,"author":{"gitId":"ph-nathan"},"content":"/*","lastModifiedDate":"2023-11-02"},{"lineNumber":197,"author":{"gitId":"ph-nathan"},"content":" * Metro style Push Button","lastModifiedDate":"2023-11-02"},{"lineNumber":198,"author":{"gitId":"ph-nathan"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2023-11-02"},{"lineNumber":199,"author":{"gitId":"ph-nathan"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2023-11-02"},{"lineNumber":200,"author":{"gitId":"ph-nathan"},"content":" */","lastModifiedDate":"2023-11-02"},{"lineNumber":201,"author":{"gitId":"ph-nathan"},"content":".button {","lastModifiedDate":"2023-11-02"},{"lineNumber":202,"author":{"gitId":"ph-nathan"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2023-11-02"},{"lineNumber":203,"author":{"gitId":"ph-nathan"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2023-11-02"},{"lineNumber":204,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2023-11-02"},{"lineNumber":205,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-11-02"},{"lineNumber":206,"author":{"gitId":"ph-nathan"},"content":"    -fx-font-family: \"Nunito\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2023-11-02"},{"lineNumber":207,"author":{"gitId":"ph-nathan"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-11-02"},{"lineNumber":208,"author":{"gitId":"ph-nathan"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2023-11-02"},{"lineNumber":209,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":210,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":211,"author":{"gitId":"ph-nathan"},"content":".button:hover {","lastModifiedDate":"2023-11-02"},{"lineNumber":212,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-11-02"},{"lineNumber":213,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":214,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":215,"author":{"gitId":"ph-nathan"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2023-11-02"},{"lineNumber":216,"author":{"gitId":"ph-nathan"},"content":"  -fx-background-color: white;","lastModifiedDate":"2023-11-02"},{"lineNumber":217,"author":{"gitId":"ph-nathan"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2023-11-02"},{"lineNumber":218,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":219,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":220,"author":{"gitId":"ph-nathan"},"content":".button:focused {","lastModifiedDate":"2023-11-02"},{"lineNumber":221,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":222,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":223,"author":{"gitId":"ph-nathan"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2023-11-02"},{"lineNumber":224,"author":{"gitId":"ph-nathan"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2023-11-02"},{"lineNumber":225,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-11-02"},{"lineNumber":226,"author":{"gitId":"ph-nathan"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-11-02"},{"lineNumber":227,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":228,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":229,"author":{"gitId":"ph-nathan"},"content":".button:default {","lastModifiedDate":"2023-11-02"},{"lineNumber":230,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2023-11-02"},{"lineNumber":231,"author":{"gitId":"ph-nathan"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2023-11-02"},{"lineNumber":232,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":233,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":234,"author":{"gitId":"ph-nathan"},"content":".button:default:hover {","lastModifiedDate":"2023-11-02"},{"lineNumber":235,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2023-11-02"},{"lineNumber":236,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":237,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":238,"author":{"gitId":"ph-nathan"},"content":"/* dialog-pane is used for alert dialogs */","lastModifiedDate":"2023-11-02"},{"lineNumber":239,"author":{"gitId":"ph-nathan"},"content":".dialog-pane {","lastModifiedDate":"2023-11-02"},{"lineNumber":240,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-color: #EDDFC9;","lastModifiedDate":"2023-11-02"},{"lineNumber":241,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":242,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":243,"author":{"gitId":"ph-nathan"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2023-11-02"},{"lineNumber":244,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-color: #EDDFC9;","lastModifiedDate":"2023-11-02"},{"lineNumber":245,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":246,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":247,"author":{"gitId":"ph-nathan"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2023-11-02"},{"lineNumber":248,"author":{"gitId":"ph-nathan"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2023-11-02"},{"lineNumber":249,"author":{"gitId":"ph-nathan"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-11-02"},{"lineNumber":250,"author":{"gitId":"ph-nathan"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-11-02"},{"lineNumber":251,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":252,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":253,"author":{"gitId":"ph-nathan"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2023-11-02"},{"lineNumber":254,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2023-11-02"},{"lineNumber":255,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":256,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":257,"author":{"gitId":"ph-nathan"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2023-11-02"},{"lineNumber":258,"author":{"gitId":"ph-nathan"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2023-11-02"},{"lineNumber":259,"author":{"gitId":"ph-nathan"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2023-11-02"},{"lineNumber":260,"author":{"gitId":"ph-nathan"},"content":"    -fx-fill: white;","lastModifiedDate":"2023-11-02"},{"lineNumber":261,"author":{"gitId":"ph-nathan"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-11-02"},{"lineNumber":262,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":263,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":264,"author":{"gitId":"ph-nathan"},"content":"/* scroll-bar (used in event, member lists, result display) */","lastModifiedDate":"2023-11-02"},{"lineNumber":265,"author":{"gitId":"ph-nathan"},"content":".scroll-bar {","lastModifiedDate":"2023-11-02"},{"lineNumber":266,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-color: #EDDFC9","lastModifiedDate":"2023-11-02"},{"lineNumber":267,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":268,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":269,"author":{"gitId":"ph-nathan"},"content":".scroll-bar .thumb {","lastModifiedDate":"2023-11-02"},{"lineNumber":270,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2023-11-02"},{"lineNumber":271,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2023-11-02"},{"lineNumber":272,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":273,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":274,"author":{"gitId":"ph-nathan"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2023-11-02"},{"lineNumber":275,"author":{"gitId":"ph-nathan"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-11-02"},{"lineNumber":276,"author":{"gitId":"ph-nathan"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-11-02"},{"lineNumber":277,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":278,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":279,"author":{"gitId":"ph-nathan"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2023-11-02"},{"lineNumber":280,"author":{"gitId":"ph-nathan"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2023-11-02"},{"lineNumber":281,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":282,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":283,"author":{"gitId":"ph-nathan"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2023-11-02"},{"lineNumber":284,"author":{"gitId":"ph-nathan"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2023-11-02"},{"lineNumber":285,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":286,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":287,"author":{"gitId":"ph-nathan"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2023-11-02"},{"lineNumber":288,"author":{"gitId":"ph-nathan"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2023-11-02"},{"lineNumber":289,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"ph-nathan":289}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"         title\u003d\"CCACommander Ultra Promax Xtra 9000PLUS\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"    \u003cImage url\u003d\"@/images/logo.png\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"        \u003cURL value\u003d\"@LightTheme.css\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"ph-nathan"},"content":"        \u003cHBox style\u003d\"-fx-background-color: derive(#1d1d1d, 20%);\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"ph-nathan"},"content":"          \u003cMenuBar styleClass\u003d\"menu-bar\" fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"              \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"ph-nathan"},"content":"            \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Theme\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"ph-nathan"},"content":"              \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#applyLightTheme\" text\u003d\"Light\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"ph-nathan"},"content":"              \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#applyDarkTheme\" text\u003d\"Dark\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"ph-nathan"},"content":"            \u003c/Menu\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"              \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"ph-nathan"},"content":"          \u003cLabel styleClass\u003d\"title\" text\u003d\"CCACommander Ultra Promax Xtra 9000PLUS\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"ph-nathan"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":50,"author":{"gitId":"ph-nathan"},"content":"        \u003cStackPane HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"ph-nathan"},"content":"                   minHeight\u003d\"110\" prefHeight\u003d\"110\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":57,"author":{"gitId":"ph-nathan"},"content":"          \u003cHBox VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"ph-nathan"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"ph-nathan"},"content":"              \u003cVBox fx:id\u003d\"memberList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" spacing \u003d \"10\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                  \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":63,"author":{"gitId":"ph-nathan"},"content":"                \u003cLabel styleClass\u003d\"listTitle\" text\u003d\"Members\"/\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"ph-nathan"},"content":"                \u003cStackPane fx:id\u003d\"memberListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"              \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":66,"author":{"gitId":"ph-nathan"},"content":"              \u003cVBox fx:id\u003d\"eventList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" spacing \u003d \"10\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"ph-nathan"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"ph-nathan"},"content":"                  \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"ph-nathan"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"ph-nathan"},"content":"                \u003cLabel styleClass\u003d\"listTitle\" text\u003d\"Events\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"ph-nathan"},"content":"                \u003cStackPane fx:id\u003d\"eventListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"ph-nathan"},"content":"              \u003c/VBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"ph-nathan"},"content":"            \u003c/children\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"ph-nathan"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"ph-nathan":32,"-":51}},{"path":"src/main/resources/view/MemberListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"andrechuakj"},"content":"      \u003cLabel fx:id\u003d\"gender\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$gender\" /\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"ph-nathan"},"content":"      \u003cLabel fx:id\u003d\"memberHours\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$hours\" /\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"ph-nathan"},"content":"      \u003cLabel fx:id\u003d\"memberRemark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"andrechuakj":1,"ph-nathan":2,"-":36}},{"path":"src/main/resources/view/MemberListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":7,"author":{"gitId":"wr1159"},"content":"  \u003cListView fx:id\u003d\"memberListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wr1159":1,"-":7}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" xmlns\u003d\"http://javafx.com/javafx/17\" styleClass\u003d\"stack-pane\"","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\"/\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"ph-nathan":1,"-":8}},{"path":"src/test/java/seedu/ccacommander/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expected \u003d AppParameters.class.getCanonicalName() + \"{configPath\u003d\" + appParameters.getConfigPath() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(expected, appParameters.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(appParameters.equals(new AppParameters()));","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(appParameters.equals(appParameters));","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different config path -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        otherAppParameters.setConfigPath(Paths.get(\"configPath\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(otherAppParameters));","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"andrechuakj":1,"-":88}},{"path":"src/test/java/seedu/ccacommander/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.commons.core;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        String expected \u003d Config.class.getCanonicalName() + \"{logLevel\u003d\" + config.getLogLevel()","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"                + \", userPrefsFilePath\u003d\" + config.getUserPrefsFilePath() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(expected, config.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"andrechuakj":1,"-":26}},{"path":"src/test/java/seedu/ccacommander/commons/core/GuiSettingsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.commons.core;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class GuiSettingsTest {","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        String expected \u003d GuiSettings.class.getCanonicalName() + \"{windowWidth\u003d\" + guiSettings.getWindowWidth()","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"                + \", windowHeight\u003d\" + guiSettings.getWindowHeight() + \", windowCoordinates\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"                + guiSettings.getWindowCoordinates() + \", stylesheet\u003d\" + guiSettings.getStylesheet() + \"}\";","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertEquals(expected, guiSettings.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-23"}],"authorContributionMap":{"andrechuakj":1,"ph-nathan":1,"-":14}},{"path":"src/test/java/seedu/ccacommander/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.commons.core;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"andrechuakj":2,"-":133}},{"path":"src/test/java/seedu/ccacommander/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.commons.core.index;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"SelwynAng"},"content":"        final Index fifthIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"SelwynAng"},"content":"        assertTrue(fifthIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"SelwynAng"},"content":"        assertTrue(fifthIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"SelwynAng"},"content":"        assertTrue(fifthIndex.equals(fifthIndex));","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"SelwynAng"},"content":"        assertFalse(fifthIndex.equals(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"SelwynAng"},"content":"        assertFalse(fifthIndex.equals(5.0f));","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"SelwynAng"},"content":"        assertFalse(fifthIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromZeroBased(0);","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expected \u003d Index.class.getCanonicalName() + \"{zeroBasedIndex\u003d\" + index.getZeroBased() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(expected, index.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"andrechuakj":2,"SelwynAng":7,"-":58}},{"path":"src/test/java/seedu/ccacommander/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.commons.util;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":"        assertNotNull(AppUtil.getImage(\"/images/logo.png\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"andrechuakj":2,"ph-nathan":1,"-":33}},{"path":"src/test/java/seedu/ccacommander/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.commons.util;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"andrechuakj":3,"-":105}},{"path":"src/test/java/seedu/ccacommander/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.commons.util;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.core.Config;","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"andrechuakj":4,"-":112}},{"path":"src/test/java/seedu/ccacommander/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.commons.util;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"andrechuakj":2,"-":21}},{"path":"src/test/java/seedu/ccacommander/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.commons.util;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.testutil.SerializableTestClass;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.testutil.TestUtil;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"andrechuakj":3,"-":42}},{"path":"src/test/java/seedu/ccacommander/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.commons.util;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"wr1159"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":144,"author":{"gitId":"wr1159"},"content":"    //---------------- Tests for capitaliseWordsInString --------------------------------------","lastModifiedDate":"2023-10-23"},{"lineNumber":145,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":146,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":147,"author":{"gitId":"wr1159"},"content":"    public void capitaliseWordsInString_validInput_correctResult() {","lastModifiedDate":"2023-10-24"},{"lineNumber":148,"author":{"gitId":"wr1159"},"content":"        assertEquals(\"Caps\", StringUtil.capitaliseWordsInString(\"caps\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":149,"author":{"gitId":"wr1159"},"content":"        assertEquals(\"Ca\", StringUtil.capitaliseWordsInString(\"ca\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":150,"author":{"gitId":"wr1159"},"content":"        assertEquals(\"C\", StringUtil.capitaliseWordsInString(\"c\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":151,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":152,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":153,"author":{"gitId":"wr1159"},"content":"        assertEquals(\"John Doe\", StringUtil.capitaliseWordsInString(\"john doe\")); // Lower case","lastModifiedDate":"2023-10-24"},{"lineNumber":154,"author":{"gitId":"wr1159"},"content":"        assertEquals(\"John Doe\", StringUtil.capitaliseWordsInString(\"jOHN dOE\")); // Mixed case","lastModifiedDate":"2023-10-24"},{"lineNumber":155,"author":{"gitId":"wr1159"},"content":"        assertEquals(\"John Doe\", StringUtil.capitaliseWordsInString(\"JOHN DOE\")); // All caps","lastModifiedDate":"2023-10-24"},{"lineNumber":156,"author":{"gitId":"wr1159"},"content":"        assertEquals(\"John Doe\", StringUtil.capitaliseWordsInString(\"john    doe\")); // Multiple space","lastModifiedDate":"2023-10-24"},{"lineNumber":157,"author":{"gitId":"wr1159"},"content":"        assertEquals(\"John Doe\", StringUtil.capitaliseWordsInString(\"     john doe\")); // Leading space","lastModifiedDate":"2023-10-24"},{"lineNumber":158,"author":{"gitId":"wr1159"},"content":"        assertEquals(\"John Doe\", StringUtil.capitaliseWordsInString(\"john doe    \")); // Trailing space","lastModifiedDate":"2023-10-24"},{"lineNumber":159,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":160,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":161,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":162,"author":{"gitId":"wr1159"},"content":"    public void capitaliseWordInString_blankInput_correctResult() {","lastModifiedDate":"2023-10-23"},{"lineNumber":163,"author":{"gitId":"wr1159"},"content":"        assertEquals(\"\", StringUtil.capitaliseWordsInString(\"\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":164,"author":{"gitId":"wr1159"},"content":"        assertEquals(\"\", StringUtil.capitaliseWordsInString(\" \"));","lastModifiedDate":"2023-10-23"},{"lineNumber":165,"author":{"gitId":"wr1159"},"content":"        assertEquals(\"\", StringUtil.capitaliseWordsInString(\"     \"));","lastModifiedDate":"2023-10-23"},{"lineNumber":166,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"wr1159":24,"andrechuakj":2,"-":141}},{"path":"src/test/java/seedu/ccacommander/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.GENDER_DESC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalMembers.AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":22,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.commands.CommandResult;","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.commands.CreateMemberCommand;","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.commands.ListCommand;","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.ModelManager;","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.ReadOnlyCcaCommander;","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.UserPrefs;","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Member;","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.storage.JsonCcaCommanderStorage;","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.storage.StorageManager;","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.testutil.MemberBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"andrechuakj"},"content":"        JsonCcaCommanderStorage ccaCommanderStorage \u003d","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"andrechuakj"},"content":"                new JsonCcaCommanderStorage(temporaryFolder.resolve(\"ccacommander.json\"));","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"andrechuakj"},"content":"        StorageManager storage \u003d new StorageManager(ccaCommanderStorage, userPrefsStorage);","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"SelwynAng"},"content":"        String deleteCommand \u003d \"deleteMember 9\";","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"wr1159"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"wr1159"},"content":"    public void getFilteredMemberList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"wr1159"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredMemberList().remove(0));","lastModifiedDate":"2023-10-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"SelwynAng"},"content":"    public void getFilteredEventList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"SelwynAng"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredEventList().remove(0));","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"andrechuakj"},"content":"        Model expectedModel \u003d new ModelManager(model.getCcaCommander(), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"andrechuakj"},"content":"        // Inject LogicManager with an CcaCommanderStorage that throws the IOException e when saving","lastModifiedDate":"2023-10-21"},{"lineNumber":159,"author":{"gitId":"andrechuakj"},"content":"        JsonCcaCommanderStorage ccaCommanderStorage \u003d new JsonCcaCommanderStorage(prefPath) {","lastModifiedDate":"2023-10-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"andrechuakj"},"content":"            public void saveCcaCommander(ReadOnlyCcaCommander ccaCommander, Path filePath)","lastModifiedDate":"2023-10-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"andrechuakj"},"content":"        StorageManager storage \u003d new StorageManager(ccaCommanderStorage, userPrefsStorage);","lastModifiedDate":"2023-10-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"andrechuakj"},"content":"        // Triggers the saveCcaCommander method by executing a create command","lastModifiedDate":"2023-10-21"},{"lineNumber":174,"author":{"gitId":"andrechuakj"},"content":"        String createMemberCommand \u003d CreateMemberCommand.COMMAND_WORD + NAME_DESC_AMY + GENDER_DESC_AMY","lastModifiedDate":"2023-10-18"},{"lineNumber":175,"author":{"gitId":"andrechuakj"},"content":"                + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":176,"author":{"gitId":"wr1159"},"content":"        Member expectedMember \u003d new MemberBuilder(AMY).withTags().build();","lastModifiedDate":"2023-10-02"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":178,"author":{"gitId":"dylkaw"},"content":"        expectedModel.createMember(expectedMember);","lastModifiedDate":"2023-10-16"},{"lineNumber":179,"author":{"gitId":"SelwynAng"},"content":"        expectedModel.commit(String.format(CreateMemberCommand.MESSAGE_COMMIT, expectedMember.getName()));","lastModifiedDate":"2023-10-23"},{"lineNumber":180,"author":{"gitId":"dylkaw"},"content":"        assertCommandFailure(createMemberCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"wr1159":4,"andrechuakj":35,"SelwynAng":5,"dylkaw":2,"-":136}},{"path":"src/test/java/seedu/ccacommander/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.commands;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalCcaCommander.getTypicalCcaCommander;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.CcaCommander;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.ModelManager;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.UserPrefs;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"andrechuakj"},"content":"    public void execute_emptyCcaCommander_success() {","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"        expectedModel.commit(ClearCommand.MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"andrechuakj"},"content":"    public void execute_nonEmptyCcaCommander_success() {","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"andrechuakj"},"content":"        Model model \u003d new ModelManager(getTypicalCcaCommander(), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"andrechuakj"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalCcaCommander(), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"andrechuakj"},"content":"        expectedModel.setCcaCommander(new CcaCommander());","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"SelwynAng"},"content":"        expectedModel.commit(ClearCommand.MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"andrechuakj":12,"SelwynAng":2,"-":20}},{"path":"src/test/java/seedu/ccacommander/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.commands;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expected \u003d CommandResult.class.getCanonicalName() + \"{feedbackToUser\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                + commandResult.getFeedbackToUser() + \", showHelp\u003d\" + commandResult.isShowHelp()","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                + \", exit\u003d\" + commandResult.isExit() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, commandResult.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"andrechuakj":1,"-":62}},{"path":"src/test/java/seedu/ccacommander/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.commands;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_EVENT;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_HOURS;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_MEMBER;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalEnrolments.ALICE_AURORA;","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalEnrolments.BENSON_BOXING;","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.core.index.Index;","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.CcaCommander;","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.model.enrolment.Enrolment;","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.model.enrolment.EnrolmentExistsPredicate;","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.model.enrolment.Hours;","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.model.enrolment.Remark;","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.Event;","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.EventNameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Member;","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.MemberNameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.testutil.EditEnrolmentDescriptorBuilder;","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.testutil.EditEventDescriptorBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.testutil.EditMemberDescriptorBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"andrechuakj"},"content":"    public static final String VALID_GENDER_AMY \u003d \"Female\";","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"andrechuakj"},"content":"    public static final String VALID_GENDER_BOB \u003d \"Male\";","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"wr1159"},"content":"    public static final String VALID_NAME_AURORA \u003d \"Aurora Borealis\";","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"wr1159"},"content":"    public static final String VALID_NAME_ANIMAL \u003d \"Animal Day\";","lastModifiedDate":"2023-11-03"},{"lineNumber":61,"author":{"gitId":"wr1159"},"content":"    public static final String VALID_NAME_BOXING \u003d \"Boxing Day\";","lastModifiedDate":"2023-10-11"},{"lineNumber":62,"author":{"gitId":"wr1159"},"content":"    public static final String VALID_DATE_AURORA \u003d \"2023-11-30\";","lastModifiedDate":"2023-10-11"},{"lineNumber":63,"author":{"gitId":"wr1159"},"content":"    public static final String VALID_DATE_ANIMAL \u003d \"2023-11-03\";","lastModifiedDate":"2023-11-03"},{"lineNumber":64,"author":{"gitId":"wr1159"},"content":"    public static final String VALID_DATE_BOXING \u003d \"2023-12-26\";","lastModifiedDate":"2023-10-11"},{"lineNumber":65,"author":{"gitId":"wr1159"},"content":"    public static final String VALID_LOCATION_AURORA \u003d \"Greenland\";","lastModifiedDate":"2023-10-11"},{"lineNumber":66,"author":{"gitId":"wr1159"},"content":"    public static final String VALID_LOCATION_ANIMAL \u003d \"Mendai Zoo\";","lastModifiedDate":"2023-11-03"},{"lineNumber":67,"author":{"gitId":"wr1159"},"content":"    public static final String VALID_LOCATION_BOXING \u003d \"Ridge View Residential College\";","lastModifiedDate":"2023-10-11"},{"lineNumber":68,"author":{"gitId":"wr1159"},"content":"    public static final String VALID_TAG_AURORA \u003d \"nature\";","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"wr1159"},"content":"    public static final String VALID_TAG_ANIMAL \u003d \"nature\";","lastModifiedDate":"2023-11-03"},{"lineNumber":70,"author":{"gitId":"wr1159"},"content":"    public static final String VALID_TAG_BOXING \u003d \"rvrc\";","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":72,"author":{"gitId":"dylkaw"},"content":"    public static final String VALID_MEMBER_INDEX_ONE \u003d \"1\";","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"dylkaw"},"content":"    public static final String VALID_EVENT_INDEX_TWO \u003d \"2\";","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"dylkaw"},"content":"    public static final String VALID_HOURS_AURORA \u003d \"3\";","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"dylkaw"},"content":"    public static final String VALID_HOURS_BOXING \u003d \"7\";","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"dylkaw"},"content":"    public static final String VALID_REMARK_AURORA \u003d \"Role: Photographer\";","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"dylkaw"},"content":"    public static final String VALID_REMARK_BOXING \u003d \"Bring boxing gloves\";","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"andrechuakj"},"content":"    public static final String GENDER_DESC_AMY \u003d \" \" + PREFIX_GENDER + VALID_GENDER_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"andrechuakj"},"content":"    public static final String GENDER_DESC_BOB \u003d \" \" + PREFIX_GENDER + VALID_GENDER_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"dylkaw"},"content":"    public static final String NAME_DESC_AURORA \u003d \" \" + PREFIX_NAME + VALID_NAME_AURORA;","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"dylkaw"},"content":"    public static final String NAME_DESC_BOXING \u003d \" \" + PREFIX_NAME + VALID_NAME_BOXING;","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"dylkaw"},"content":"    public static final String DATE_DESC_AURORA \u003d \" \" + PREFIX_DATE + VALID_DATE_AURORA;","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"dylkaw"},"content":"    public static final String DATE_DESC_BOXING \u003d \" \" + PREFIX_DATE + VALID_DATE_BOXING;","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"dylkaw"},"content":"    public static final String LOCATION_DESC_AURORA \u003d \" \" + PREFIX_LOCATION + VALID_LOCATION_AURORA;","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"dylkaw"},"content":"    public static final String LOCATION_DESC_BOXING \u003d \" \" + PREFIX_LOCATION + VALID_LOCATION_BOXING;","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"dylkaw"},"content":"    public static final String MEMBER_INDEX_DESC_ONE \u003d \" \" + PREFIX_MEMBER + VALID_MEMBER_INDEX_ONE;","lastModifiedDate":"2023-10-24"},{"lineNumber":99,"author":{"gitId":"dylkaw"},"content":"    public static final String EVENT_INDEX_DESC_TWO \u003d \" \" + PREFIX_EVENT + VALID_EVENT_INDEX_TWO;","lastModifiedDate":"2023-10-24"},{"lineNumber":100,"author":{"gitId":"dylkaw"},"content":"    public static final String HOURS_DESC_AURORA \u003d \" \" + PREFIX_HOURS + VALID_HOURS_AURORA;","lastModifiedDate":"2023-10-24"},{"lineNumber":101,"author":{"gitId":"dylkaw"},"content":"    public static final String REMARK_DESC_AURORA \u003d \" \" + PREFIX_REMARK + VALID_REMARK_AURORA;","lastModifiedDate":"2023-10-24"},{"lineNumber":102,"author":{"gitId":"wr1159"},"content":"    public static final String TAGS_DESC_AURORA \u003d \" \" + PREFIX_TAG + VALID_TAG_AURORA;","lastModifiedDate":"2023-10-23"},{"lineNumber":103,"author":{"gitId":"ph-nathan"},"content":"    public static final String TAGS_DESC_BOXING \u003d \" \" + PREFIX_TAG + VALID_TAG_BOXING;","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":106,"author":{"gitId":"andrechuakj"},"content":"    public static final String INVALID_GENDER_DESC \u003d \" \" + PREFIX_GENDER + \"F\"; // \"F\" not allowed in gender","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":111,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":112,"author":{"gitId":"dylkaw"},"content":"    public static final String INVALID_LOCATION_DESC \u003d \" \" + PREFIX_LOCATION + \"  \"; // cannot be spaces only","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"dylkaw"},"content":"    public static final String INVALID_DATE_DESC \u003d \" \" + PREFIX_DATE + \"2005 12 12\"; // wrong date format","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":115,"author":{"gitId":"dylkaw"},"content":"    public static final String INVALID_MEMBER_INDEX_DESC \u003d \" \" + PREFIX_MEMBER + \"-2\"; // cannot be negative","lastModifiedDate":"2023-10-24"},{"lineNumber":116,"author":{"gitId":"dylkaw"},"content":"    public static final String INVALID_EVENT_INDEX_DESC \u003d \" \" + PREFIX_EVENT + \"-2\"; // cannot be negative","lastModifiedDate":"2023-10-24"},{"lineNumber":117,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":118,"author":{"gitId":"andrechuakj"},"content":"    public static final String INVALID_HOURS_DESC \u003d \" \" + PREFIX_HOURS + \"twenty\"; // cannot be alphabets","lastModifiedDate":"2023-10-22"},{"lineNumber":119,"author":{"gitId":"dylkaw"},"content":"    public static final String INVALID_REMARK_DESC \u003d \" \" + PREFIX_REMARK + \" \"; // cannot be blank","lastModifiedDate":"2023-10-24"},{"lineNumber":120,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":124,"author":{"gitId":"dylkaw"},"content":"    public static final Index VALID_INDEX_ONE \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-24"},{"lineNumber":125,"author":{"gitId":"dylkaw"},"content":"    public static final Index VALID_INDEX_TWO \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-10-24"},{"lineNumber":126,"author":{"gitId":"dylkaw"},"content":"    public static final Hours VALID_HOURS_A \u003d ALICE_AURORA.getHours();","lastModifiedDate":"2023-10-24"},{"lineNumber":127,"author":{"gitId":"dylkaw"},"content":"    public static final Hours VALID_HOURS_B \u003d BENSON_BOXING.getHours();","lastModifiedDate":"2023-10-24"},{"lineNumber":128,"author":{"gitId":"dylkaw"},"content":"    public static final Remark VALID_REMARK_A \u003d ALICE_AURORA.getRemark();","lastModifiedDate":"2023-10-24"},{"lineNumber":129,"author":{"gitId":"dylkaw"},"content":"    public static final Remark VALID_REMARK_B \u003d BENSON_BOXING.getRemark();","lastModifiedDate":"2023-10-24"},{"lineNumber":130,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":131,"author":{"gitId":"ph-nathan"},"content":"    public static final EditMemberCommand.EditMemberDescriptor DESC_AMY;","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"ph-nathan"},"content":"    public static final EditMemberCommand.EditMemberDescriptor DESC_BOB;","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":135,"author":{"gitId":"andrechuakj"},"content":"        DESC_AMY \u003d new EditMemberDescriptorBuilder().withName(VALID_NAME_AMY).withGender(VALID_GENDER_AMY)","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":138,"author":{"gitId":"andrechuakj"},"content":"        DESC_BOB \u003d new EditMemberDescriptorBuilder().withName(VALID_NAME_BOB).withGender(VALID_GENDER_BOB)","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":143,"author":{"gitId":"ph-nathan"},"content":"    public static final EditEventCommand.EditEventDescriptor DESC_AURORA;","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"ph-nathan"},"content":"    public static final EditEventCommand.EditEventDescriptor DESC_BOXING;","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"ph-nathan"},"content":"    static {","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"ph-nathan"},"content":"        DESC_AURORA \u003d new EditEventDescriptorBuilder().withName(VALID_NAME_AURORA).withLocation(VALID_LOCATION_AURORA)","lastModifiedDate":"2023-10-26"},{"lineNumber":148,"author":{"gitId":"ph-nathan"},"content":"                .withDate(VALID_DATE_AURORA)","lastModifiedDate":"2023-10-26"},{"lineNumber":149,"author":{"gitId":"ph-nathan"},"content":"                .withTags(VALID_TAG_AURORA).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":150,"author":{"gitId":"ph-nathan"},"content":"        DESC_BOXING \u003d new EditEventDescriptorBuilder().withName(VALID_NAME_BOXING).withLocation(VALID_LOCATION_BOXING)","lastModifiedDate":"2023-10-26"},{"lineNumber":151,"author":{"gitId":"ph-nathan"},"content":"                .withDate(VALID_DATE_BOXING)","lastModifiedDate":"2023-10-26"},{"lineNumber":152,"author":{"gitId":"ph-nathan"},"content":"                .withTags(VALID_TAG_BOXING).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":153,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":154,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":155,"author":{"gitId":"dylkaw"},"content":"    public static final EditEnrolmentCommand.EditEnrolmentDescriptor DESC_AMY_AURORA;","lastModifiedDate":"2023-10-28"},{"lineNumber":156,"author":{"gitId":"dylkaw"},"content":"    public static final EditEnrolmentCommand.EditEnrolmentDescriptor DESC_BOB_BOXING;","lastModifiedDate":"2023-10-28"},{"lineNumber":157,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":158,"author":{"gitId":"dylkaw"},"content":"    static {","lastModifiedDate":"2023-10-28"},{"lineNumber":159,"author":{"gitId":"dylkaw"},"content":"        DESC_AMY_AURORA \u003d new EditEnrolmentDescriptorBuilder()","lastModifiedDate":"2023-10-28"},{"lineNumber":160,"author":{"gitId":"dylkaw"},"content":"                .withMemberName(VALID_NAME_AMY)","lastModifiedDate":"2023-10-28"},{"lineNumber":161,"author":{"gitId":"dylkaw"},"content":"                .withEventName(VALID_NAME_AURORA)","lastModifiedDate":"2023-10-28"},{"lineNumber":162,"author":{"gitId":"dylkaw"},"content":"                .withHours(VALID_HOURS_AURORA)","lastModifiedDate":"2023-10-28"},{"lineNumber":163,"author":{"gitId":"dylkaw"},"content":"                .withRemark(VALID_REMARK_AURORA).build();","lastModifiedDate":"2023-10-28"},{"lineNumber":164,"author":{"gitId":"dylkaw"},"content":"        DESC_BOB_BOXING \u003d new EditEnrolmentDescriptorBuilder()","lastModifiedDate":"2023-10-28"},{"lineNumber":165,"author":{"gitId":"dylkaw"},"content":"                .withMemberName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-28"},{"lineNumber":166,"author":{"gitId":"dylkaw"},"content":"                .withEventName(VALID_NAME_BOXING)","lastModifiedDate":"2023-10-28"},{"lineNumber":167,"author":{"gitId":"dylkaw"},"content":"                .withHours(VALID_HOURS_BOXING)","lastModifiedDate":"2023-10-28"},{"lineNumber":168,"author":{"gitId":"dylkaw"},"content":"                .withRemark(VALID_REMARK_BOXING).build();","lastModifiedDate":"2023-10-28"},{"lineNumber":169,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":170,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":201,"author":{"gitId":"andrechuakj"},"content":"     * - the CcaCommander, filtered member list, filtered event list, selected member and selected event","lastModifiedDate":"2023-10-21"},{"lineNumber":202,"author":{"gitId":"SelwynAng"},"content":"     *   in {@code actualModel} remain unchanged","lastModifiedDate":"2023-10-19"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":207,"author":{"gitId":"andrechuakj"},"content":"        CcaCommander expectedCcaCommander \u003d new CcaCommander(actualModel.getCcaCommander());","lastModifiedDate":"2023-10-21"},{"lineNumber":208,"author":{"gitId":"ph-nathan"},"content":"        List\u003cMember\u003e expectedFilteredMemberList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredMemberList());","lastModifiedDate":"2023-10-19"},{"lineNumber":209,"author":{"gitId":"SelwynAng"},"content":"        List\u003cEvent\u003e expectedFilteredEventList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredEventList());","lastModifiedDate":"2023-10-19"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":212,"author":{"gitId":"andrechuakj"},"content":"        assertEquals(expectedCcaCommander, actualModel.getCcaCommander());","lastModifiedDate":"2023-10-21"},{"lineNumber":213,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(expectedFilteredMemberList, actualModel.getFilteredMemberList());","lastModifiedDate":"2023-10-19"},{"lineNumber":214,"author":{"gitId":"SelwynAng"},"content":"        assertEquals(expectedFilteredEventList, actualModel.getFilteredEventList());","lastModifiedDate":"2023-10-19"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":217,"author":{"gitId":"wr1159"},"content":"     * Updates {@code model}\u0027s filtered list to show only the member at the given {@code targetIndex} in the","lastModifiedDate":"2023-10-02"},{"lineNumber":218,"author":{"gitId":"andrechuakj"},"content":"     * {@code model}\u0027s CcaCommander.","lastModifiedDate":"2023-10-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":220,"author":{"gitId":"wr1159"},"content":"    public static void showMemberAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-10-12"},{"lineNumber":221,"author":{"gitId":"wr1159"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredMemberList().size());","lastModifiedDate":"2023-10-02"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":223,"author":{"gitId":"wr1159"},"content":"        Member member \u003d model.getFilteredMemberList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-02"},{"lineNumber":224,"author":{"gitId":"dylkaw"},"content":"        final String[] splitName \u003d member.getName().name.split(\"\\\\s+\");","lastModifiedDate":"2023-10-16"},{"lineNumber":225,"author":{"gitId":"dylkaw"},"content":"        model.updateFilteredMemberList(new MemberNameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-10-16"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":227,"author":{"gitId":"wr1159"},"content":"        assertEquals(1, model.getFilteredMemberList().size());","lastModifiedDate":"2023-10-02"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":230,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":231,"author":{"gitId":"SelwynAng"},"content":"     * Updates {@code model}\u0027s filtered list to show only the event at the given {@code targetIndex} in the","lastModifiedDate":"2023-10-14"},{"lineNumber":232,"author":{"gitId":"andrechuakj"},"content":"     * {@code model}\u0027s CcaCommander.","lastModifiedDate":"2023-10-21"},{"lineNumber":233,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":234,"author":{"gitId":"SelwynAng"},"content":"    public static void showEventAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-10-14"},{"lineNumber":235,"author":{"gitId":"SelwynAng"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredEventList().size());","lastModifiedDate":"2023-10-14"},{"lineNumber":236,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":237,"author":{"gitId":"SelwynAng"},"content":"        Event event \u003d model.getFilteredEventList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-14"},{"lineNumber":238,"author":{"gitId":"dylkaw"},"content":"        final String[] splitName \u003d event.getName().name.split(\"\\\\s+\");","lastModifiedDate":"2023-10-16"},{"lineNumber":239,"author":{"gitId":"dylkaw"},"content":"        model.updateFilteredEventList(new EventNameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-10-16"},{"lineNumber":240,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":241,"author":{"gitId":"SelwynAng"},"content":"        assertEquals(1, model.getFilteredEventList().size());","lastModifiedDate":"2023-10-15"},{"lineNumber":242,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":243,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":244,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":245,"author":{"gitId":"dylkaw"},"content":"     * Updates {@code model}\u0027s filtered list to show only the enrolment at the given {@code targetIndex} in the","lastModifiedDate":"2023-10-28"},{"lineNumber":246,"author":{"gitId":"dylkaw"},"content":"     * {@code model}\u0027s CcaCommander.","lastModifiedDate":"2023-10-28"},{"lineNumber":247,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":248,"author":{"gitId":"dylkaw"},"content":"    public static void showEnrolmentAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-10-28"},{"lineNumber":249,"author":{"gitId":"dylkaw"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredEnrolmentList().size());","lastModifiedDate":"2023-10-28"},{"lineNumber":250,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":251,"author":{"gitId":"dylkaw"},"content":"        Enrolment enrolment \u003d model.getFilteredEnrolmentList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-28"},{"lineNumber":252,"author":{"gitId":"dylkaw"},"content":"        model.updateFilteredEnrolmentList(new EnrolmentExistsPredicate(enrolment));","lastModifiedDate":"2023-10-28"},{"lineNumber":253,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":254,"author":{"gitId":"dylkaw"},"content":"        assertEquals(1, model.getFilteredEnrolmentList().size());","lastModifiedDate":"2023-10-28"},{"lineNumber":255,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":256,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"wr1159":19,"andrechuakj":40,"dylkaw":70,"SelwynAng":13,"ph-nathan":17,"-":97}},{"path":"src/test/java/seedu/ccacommander/logic/commands/CreateEventCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.commands;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalCcaCommander.getTypicalCcaCommander;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"dylkaw"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"dylkaw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.Messages;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.ModelManager;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.UserPrefs;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.Event;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.testutil.EventBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"dylkaw"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"dylkaw"},"content":" * Contains integration tests (interaction with the Model) for {@code CreateEventCommand}.","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"dylkaw"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"dylkaw"},"content":"public class CreateEventCommandIntegrationTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"dylkaw"},"content":"    private Model model;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"dylkaw"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"dylkaw"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"andrechuakj"},"content":"        model \u003d new ModelManager(getTypicalCcaCommander(), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"dylkaw"},"content":"    public void execute_newEvent_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"dylkaw"},"content":"        Event validEvent \u003d new EventBuilder().build();","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"SelwynAng"},"content":"        String commitMessage \u003d String.format(CreateEventCommand.MESSAGE_COMMIT, validEvent.getName());","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"andrechuakj"},"content":"        Model expectedModel \u003d new ModelManager(model.getCcaCommander(), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"dylkaw"},"content":"        expectedModel.createEvent(validEvent);","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"SelwynAng"},"content":"        expectedModel.commit(commitMessage);","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"dylkaw"},"content":"        assertCommandSuccess(new CreateEventCommand(validEvent), model,","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"dylkaw"},"content":"                String.format(CreateEventCommand.MESSAGE_SUCCESS, Messages.format(validEvent)),","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"dylkaw"},"content":"                expectedModel);","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"dylkaw"},"content":"    public void execute_duplicateEvent_throwsCommandException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"andrechuakj"},"content":"        Event memberInList \u003d model.getCcaCommander().getEventList().get(0);","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"dylkaw"},"content":"        assertCommandFailure(new CreateEventCommand(memberInList), model,","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"dylkaw"},"content":"                CreateEventCommand.MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"dylkaw"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"andrechuakj":13,"dylkaw":35,"SelwynAng":2}},{"path":"src/test/java/seedu/ccacommander/logic/commands/CreateEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.commands;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"dylkaw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"dylkaw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"dylkaw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"dylkaw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalEvents.BOXING_DAY;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"dylkaw"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"dylkaw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"dylkaw"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"import java.util.Collection;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"dylkaw"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"dylkaw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"dylkaw"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.core.GuiSettings;","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.Messages;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.CcaCommander;","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.ReadOnlyCcaCommander;","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.model.VersionCaptures;","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.enrolment.Enrolment;","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.Event;","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Member;","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.shared.Name;","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.testutil.EventBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"dylkaw"},"content":"public class CreateEventCommandTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"dylkaw"},"content":"    public void constructor_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"dylkaw"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CreateEventCommand(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"dylkaw"},"content":"    public void execute_eventAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"dylkaw"},"content":"        ModelStubAcceptingEventAdded modelStub \u003d new ModelStubAcceptingEventAdded();","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"dylkaw"},"content":"        Event validEvent \u003d new EventBuilder().build();","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"dylkaw"},"content":"        CommandResult commandResult \u003d new CreateEventCommand(validEvent).execute(modelStub);","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"dylkaw"},"content":"        assertEquals(String.format(CreateEventCommand.MESSAGE_SUCCESS, Messages.format(validEvent)),","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"dylkaw"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"dylkaw"},"content":"        assertEquals(Arrays.asList(validEvent), modelStub.eventsAdded);","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"dylkaw"},"content":"    public void execute_duplicateEvent_throwsCommandException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"dylkaw"},"content":"        Event validEvent \u003d new EventBuilder().build();","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"dylkaw"},"content":"        CreateEventCommand createEventCommand \u003d new CreateEventCommand(validEvent);","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"dylkaw"},"content":"        ModelStub modelStub \u003d new ModelStubWithEvent(validEvent);","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"dylkaw"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"dylkaw"},"content":"                CreateEventCommand.MESSAGE_DUPLICATE_EVENT, () -\u003e createEventCommand.execute(modelStub));","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"dylkaw"},"content":"    public void equals() {","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"dylkaw"},"content":"        Event party \u003d new EventBuilder().withName(\"Party\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"dylkaw"},"content":"        Event marathon \u003d new EventBuilder().withName(\"Marathon\").build();","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"dylkaw"},"content":"        CreateEventCommand addPartyCommand \u003d new CreateEventCommand(party);","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"dylkaw"},"content":"        CreateEventCommand addMarathonCommand \u003d new CreateEventCommand(marathon);","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"dylkaw"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"dylkaw"},"content":"        assertTrue(addPartyCommand.equals(addPartyCommand));","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"dylkaw"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"dylkaw"},"content":"        CreateEventCommand addPartyCommandCopy \u003d new CreateEventCommand(party);","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"dylkaw"},"content":"        assertTrue(addPartyCommand.equals(addPartyCommandCopy));","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"dylkaw"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"dylkaw"},"content":"        assertFalse(addPartyCommand.equals(1));","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"dylkaw"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"dylkaw"},"content":"        assertFalse(addPartyCommand.equals(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"dylkaw"},"content":"        // different member -\u003e returns false","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"dylkaw"},"content":"        assertFalse(addPartyCommand.equals(addMarathonCommand));","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"dylkaw"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"dylkaw"},"content":"        CreateEventCommand createEventCommand \u003d new CreateEventCommand(BOXING_DAY);","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"dylkaw"},"content":"        String expected \u003d CreateEventCommand.class.getCanonicalName() + \"{toAdd\u003d\" + BOXING_DAY + \"}\";","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"dylkaw"},"content":"        assertEquals(expected, createEventCommand.toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"dylkaw"},"content":"     * A default model stub that has all the methods failing.","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"dylkaw"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"dylkaw"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"dylkaw"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"dylkaw"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"dylkaw"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"andrechuakj"},"content":"        public Path getCcaCommanderFilePath() {","lastModifiedDate":"2023-10-21"},{"lineNumber":119,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"andrechuakj"},"content":"        public void setCcaCommanderFilePath(Path ccaCommanderFilePath) {","lastModifiedDate":"2023-10-21"},{"lineNumber":124,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"dylkaw"},"content":"        public void createMember(Member member) {","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"andrechuakj"},"content":"        public void setCcaCommander(ReadOnlyCcaCommander newData) {","lastModifiedDate":"2023-10-21"},{"lineNumber":134,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"andrechuakj"},"content":"        public ReadOnlyCcaCommander getCcaCommander() {","lastModifiedDate":"2023-10-21"},{"lineNumber":139,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":143,"author":{"gitId":"dylkaw"},"content":"        public boolean hasMember(Member member) {","lastModifiedDate":"2023-10-17"},{"lineNumber":144,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":147,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":148,"author":{"gitId":"dylkaw"},"content":"        public void deleteMember(Member target) {","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":150,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":151,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":152,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":153,"author":{"gitId":"dylkaw"},"content":"        public void setMember(Member target, Member editedMember) {","lastModifiedDate":"2023-10-17"},{"lineNumber":154,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":155,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":156,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":157,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":158,"author":{"gitId":"dylkaw"},"content":"        public void createEvent(Event event) {","lastModifiedDate":"2023-10-17"},{"lineNumber":159,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":160,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":161,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":162,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":163,"author":{"gitId":"dylkaw"},"content":"        public boolean hasEvent(Event event) {","lastModifiedDate":"2023-10-17"},{"lineNumber":164,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":165,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":167,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":168,"author":{"gitId":"dylkaw"},"content":"        public void deleteEvent(Event target) {","lastModifiedDate":"2023-10-17"},{"lineNumber":169,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":171,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":172,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":173,"author":{"gitId":"dylkaw"},"content":"        public void setEvent(Event event, Event editedEvent) {","lastModifiedDate":"2023-10-17"},{"lineNumber":174,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":175,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":176,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":177,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":178,"author":{"gitId":"andrechuakj"},"content":"        public void createEnrolment(Enrolment enrolment) {","lastModifiedDate":"2023-10-28"},{"lineNumber":179,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-23"},{"lineNumber":180,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":181,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":182,"author":{"gitId":"ph-nathan"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":183,"author":{"gitId":"ph-nathan"},"content":"        public void editEnrolmentsWithEventName(Name prevName, Name newName) {","lastModifiedDate":"2023-11-02"},{"lineNumber":184,"author":{"gitId":"ph-nathan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":185,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":186,"author":{"gitId":"ph-nathan"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":187,"author":{"gitId":"ph-nathan"},"content":"        public void editEnrolmentsWithMemberName(Name prevName, Name newName) {","lastModifiedDate":"2023-11-02"},{"lineNumber":188,"author":{"gitId":"ph-nathan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":189,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":190,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":191,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":192,"author":{"gitId":"andrechuakj"},"content":"        public boolean hasEnrolment(Enrolment enrolment) {","lastModifiedDate":"2023-10-28"},{"lineNumber":193,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-23"},{"lineNumber":194,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":195,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":196,"author":{"gitId":"SelwynAng"},"content":"        @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":197,"author":{"gitId":"SelwynAng"},"content":"        public void deleteEnrolment(Enrolment target) {","lastModifiedDate":"2023-10-28"},{"lineNumber":198,"author":{"gitId":"SelwynAng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-28"},{"lineNumber":199,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":200,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":201,"author":{"gitId":"wr1159"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":202,"author":{"gitId":"wr1159"},"content":"        public void deleteEnrolmentsWithEventName(Name eventName) {","lastModifiedDate":"2023-11-02"},{"lineNumber":203,"author":{"gitId":"wr1159"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":204,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":205,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":206,"author":{"gitId":"wr1159"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":207,"author":{"gitId":"wr1159"},"content":"        public void deleteEnrolmentsWithMemberName(Name memberName) {","lastModifiedDate":"2023-11-02"},{"lineNumber":208,"author":{"gitId":"wr1159"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":209,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":210,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":211,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":212,"author":{"gitId":"dylkaw"},"content":"        public void setEnrolment(Enrolment enrolment, Enrolment editedEnrolment) {","lastModifiedDate":"2023-10-28"},{"lineNumber":213,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-28"},{"lineNumber":214,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":215,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":216,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":217,"author":{"gitId":"dylkaw"},"content":"        public ObservableList\u003cMember\u003e getFilteredMemberList() {","lastModifiedDate":"2023-10-17"},{"lineNumber":218,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":219,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":220,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":221,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":222,"author":{"gitId":"dylkaw"},"content":"        public void updateFilteredMemberList(Predicate\u003cMember\u003e predicate) {","lastModifiedDate":"2023-10-17"},{"lineNumber":223,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":224,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":225,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":226,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":227,"author":{"gitId":"dylkaw"},"content":"        public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2023-10-17"},{"lineNumber":228,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":229,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":230,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":231,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":232,"author":{"gitId":"dylkaw"},"content":"        public void updateFilteredEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2023-10-17"},{"lineNumber":233,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":234,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":235,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":236,"author":{"gitId":"SelwynAng"},"content":"        @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":237,"author":{"gitId":"andrechuakj"},"content":"        public ObservableList\u003cEnrolment\u003e getFilteredEnrolmentList() {","lastModifiedDate":"2023-10-28"},{"lineNumber":238,"author":{"gitId":"SelwynAng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-23"},{"lineNumber":239,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":240,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":241,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":242,"author":{"gitId":"andrechuakj"},"content":"        public void updateFilteredEnrolmentList(Predicate\u003cEnrolment\u003e enrolment) {","lastModifiedDate":"2023-10-28"},{"lineNumber":243,"author":{"gitId":"SelwynAng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":244,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":245,"author":{"gitId":"ph-nathan"},"content":"        @Override","lastModifiedDate":"2023-11-03"},{"lineNumber":246,"author":{"gitId":"ph-nathan"},"content":"        public Collection\u003cName\u003e updateMemberHoursAndRemark(Name eventName) {","lastModifiedDate":"2023-11-03"},{"lineNumber":247,"author":{"gitId":"ph-nathan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-03"},{"lineNumber":248,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":249,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":250,"author":{"gitId":"ph-nathan"},"content":"        @Override","lastModifiedDate":"2023-11-03"},{"lineNumber":251,"author":{"gitId":"ph-nathan"},"content":"        public Collection\u003cName\u003e updateEventHoursAndRemark(Name memberName) {","lastModifiedDate":"2023-11-03"},{"lineNumber":252,"author":{"gitId":"ph-nathan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-03"},{"lineNumber":253,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":254,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":255,"author":{"gitId":"SelwynAng"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":256,"author":{"gitId":"SelwynAng"},"content":"        public void commit(String commitMessage) {","lastModifiedDate":"2023-10-26"},{"lineNumber":257,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-23"},{"lineNumber":258,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":259,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":260,"author":{"gitId":"SelwynAng"},"content":"        @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":261,"author":{"gitId":"SelwynAng"},"content":"        public boolean canUndo() {","lastModifiedDate":"2023-10-23"},{"lineNumber":262,"author":{"gitId":"SelwynAng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-23"},{"lineNumber":263,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":264,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":265,"author":{"gitId":"SelwynAng"},"content":"        @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":266,"author":{"gitId":"SelwynAng"},"content":"        public String undo() {","lastModifiedDate":"2023-10-23"},{"lineNumber":267,"author":{"gitId":"SelwynAng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-23"},{"lineNumber":268,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":269,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":270,"author":{"gitId":"SelwynAng"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":271,"author":{"gitId":"SelwynAng"},"content":"        public boolean canRedo() {","lastModifiedDate":"2023-10-24"},{"lineNumber":272,"author":{"gitId":"SelwynAng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":273,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":274,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":275,"author":{"gitId":"SelwynAng"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":276,"author":{"gitId":"SelwynAng"},"content":"        public String redo() {","lastModifiedDate":"2023-10-24"},{"lineNumber":277,"author":{"gitId":"SelwynAng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":278,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":279,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":280,"author":{"gitId":"SelwynAng"},"content":"        @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":281,"author":{"gitId":"SelwynAng"},"content":"        public VersionCaptures viewVersionCaptures() {","lastModifiedDate":"2023-10-24"},{"lineNumber":282,"author":{"gitId":"SelwynAng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-23"},{"lineNumber":283,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":284,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":285,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":286,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":287,"author":{"gitId":"dylkaw"},"content":"     * A Model stub that contains a single member.","lastModifiedDate":"2023-10-17"},{"lineNumber":288,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":289,"author":{"gitId":"dylkaw"},"content":"    private class ModelStubWithEvent extends ModelStub {","lastModifiedDate":"2023-10-17"},{"lineNumber":290,"author":{"gitId":"dylkaw"},"content":"        private final Event event;","lastModifiedDate":"2023-10-17"},{"lineNumber":291,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":292,"author":{"gitId":"dylkaw"},"content":"        ModelStubWithEvent(Event event) {","lastModifiedDate":"2023-10-17"},{"lineNumber":293,"author":{"gitId":"dylkaw"},"content":"            requireNonNull(event);","lastModifiedDate":"2023-10-17"},{"lineNumber":294,"author":{"gitId":"dylkaw"},"content":"            this.event \u003d event;","lastModifiedDate":"2023-10-17"},{"lineNumber":295,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":296,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":297,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":298,"author":{"gitId":"dylkaw"},"content":"        public boolean hasEvent(Event event) {","lastModifiedDate":"2023-10-17"},{"lineNumber":299,"author":{"gitId":"dylkaw"},"content":"            requireNonNull(event);","lastModifiedDate":"2023-10-17"},{"lineNumber":300,"author":{"gitId":"dylkaw"},"content":"            return this.event.isSameEvent(event);","lastModifiedDate":"2023-10-17"},{"lineNumber":301,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":302,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":303,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":304,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":305,"author":{"gitId":"dylkaw"},"content":"     * A Model stub that always accept the event being added.","lastModifiedDate":"2023-10-17"},{"lineNumber":306,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":307,"author":{"gitId":"dylkaw"},"content":"    private class ModelStubAcceptingEventAdded extends ModelStub {","lastModifiedDate":"2023-10-17"},{"lineNumber":308,"author":{"gitId":"dylkaw"},"content":"        final ArrayList\u003cEvent\u003e eventsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":309,"author":{"gitId":"SelwynAng"},"content":"        final ArrayList\u003cString\u003e commitMessages \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-23"},{"lineNumber":310,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":311,"author":{"gitId":"SelwynAng"},"content":"        @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":312,"author":{"gitId":"SelwynAng"},"content":"        public void commit(String commitMessage) {","lastModifiedDate":"2023-10-23"},{"lineNumber":313,"author":{"gitId":"SelwynAng"},"content":"            commitMessages.add(commitMessage);","lastModifiedDate":"2023-10-23"},{"lineNumber":314,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":315,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":316,"author":{"gitId":"dylkaw"},"content":"        public boolean hasEvent(Event event) {","lastModifiedDate":"2023-10-17"},{"lineNumber":317,"author":{"gitId":"dylkaw"},"content":"            requireNonNull(event);","lastModifiedDate":"2023-10-17"},{"lineNumber":318,"author":{"gitId":"dylkaw"},"content":"            return eventsAdded.stream().anyMatch(event::isSameEvent);","lastModifiedDate":"2023-10-17"},{"lineNumber":319,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":320,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":321,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":322,"author":{"gitId":"dylkaw"},"content":"        public void createEvent(Event event) {","lastModifiedDate":"2023-10-17"},{"lineNumber":323,"author":{"gitId":"dylkaw"},"content":"            requireNonNull(event);","lastModifiedDate":"2023-10-17"},{"lineNumber":324,"author":{"gitId":"dylkaw"},"content":"            eventsAdded.add(event);","lastModifiedDate":"2023-10-17"},{"lineNumber":325,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":326,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":327,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":328,"author":{"gitId":"andrechuakj"},"content":"        public ReadOnlyCcaCommander getCcaCommander() {","lastModifiedDate":"2023-10-21"},{"lineNumber":329,"author":{"gitId":"andrechuakj"},"content":"            return new CcaCommander();","lastModifiedDate":"2023-10-21"},{"lineNumber":330,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":331,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":332,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":333,"author":{"gitId":"dylkaw"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"wr1159":10,"andrechuakj":24,"dylkaw":230,"SelwynAng":47,"ph-nathan":22}},{"path":"src/test/java/seedu/ccacommander/logic/commands/CreateMemberCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.commands;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalCcaCommander.getTypicalCcaCommander;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.Messages;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.ModelManager;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.UserPrefs;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Member;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.testutil.MemberBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"dylkaw"},"content":" * Contains integration tests (interaction with the Model) for {@code CreateMemberCommand}.","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"dylkaw"},"content":"public class CreateMemberCommandIntegrationTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"andrechuakj"},"content":"        model \u003d new ModelManager(getTypicalCcaCommander(), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"wr1159"},"content":"    public void execute_newMember_success() {","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"wr1159"},"content":"        Member validMember \u003d new MemberBuilder().build();","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"SelwynAng"},"content":"        String commitMessage \u003d String.format(CreateMemberCommand.MESSAGE_COMMIT, validMember.getName());","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"andrechuakj"},"content":"        Model expectedModel \u003d new ModelManager(model.getCcaCommander(), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"dylkaw"},"content":"        expectedModel.createMember(validMember);","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"SelwynAng"},"content":"        expectedModel.commit(commitMessage);","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"dylkaw"},"content":"        assertCommandSuccess(new CreateMemberCommand(validMember), model,","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"dylkaw"},"content":"                String.format(CreateMemberCommand.MESSAGE_SUCCESS, Messages.format(validMember)),","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"wr1159"},"content":"    public void execute_duplicateMember_throwsCommandException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"andrechuakj"},"content":"        Member memberInList \u003d model.getCcaCommander().getMemberList().get(0);","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"dylkaw"},"content":"        assertCommandFailure(new CreateMemberCommand(memberInList), model,","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"dylkaw"},"content":"                CreateMemberCommand.MESSAGE_DUPLICATE_MEMBER);","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"wr1159":3,"andrechuakj":13,"dylkaw":7,"SelwynAng":2,"-":25}},{"path":"src/test/java/seedu/ccacommander/logic/commands/CreateMemberCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.commands;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalMembers.ALICE;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"import java.util.Collection;","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.core.GuiSettings;","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.Messages;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.CcaCommander;","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.ReadOnlyCcaCommander;","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.model.VersionCaptures;","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.enrolment.Enrolment;","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.Event;","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Member;","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.shared.Name;","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.testutil.MemberBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"dylkaw"},"content":"public class CreateMemberCommandTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"wr1159"},"content":"    public void constructor_nullMember_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"dylkaw"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CreateMemberCommand(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"wr1159"},"content":"    public void execute_memberAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"wr1159"},"content":"        ModelStubAcceptingMemberAdded modelStub \u003d new ModelStubAcceptingMemberAdded();","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"wr1159"},"content":"        Member validMember \u003d new MemberBuilder().build();","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"dylkaw"},"content":"        CommandResult commandResult \u003d new CreateMemberCommand(validMember).execute(modelStub);","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"dylkaw"},"content":"        assertEquals(String.format(CreateMemberCommand.MESSAGE_SUCCESS, Messages.format(validMember)),","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"wr1159"},"content":"        assertEquals(Arrays.asList(validMember), modelStub.membersAdded);","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"wr1159"},"content":"    public void execute_duplicateMember_throwsCommandException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"wr1159"},"content":"        Member validMember \u003d new MemberBuilder().build();","lastModifiedDate":"2023-10-02"},{"lineNumber":55,"author":{"gitId":"dylkaw"},"content":"        CreateMemberCommand createMemberCommand \u003d new CreateMemberCommand(validMember);","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"wr1159"},"content":"        ModelStub modelStub \u003d new ModelStubWithMember(validMember);","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"dylkaw"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"dylkaw"},"content":"                CreateMemberCommand.MESSAGE_DUPLICATE_MEMBER, () -\u003e createMemberCommand.execute(modelStub));","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"wr1159"},"content":"        Member alice \u003d new MemberBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-10-02"},{"lineNumber":65,"author":{"gitId":"wr1159"},"content":"        Member bob \u003d new MemberBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-10-02"},{"lineNumber":66,"author":{"gitId":"dylkaw"},"content":"        CreateMemberCommand addAliceCommand \u003d new CreateMemberCommand(alice);","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"dylkaw"},"content":"        CreateMemberCommand addBobCommand \u003d new CreateMemberCommand(bob);","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"dylkaw"},"content":"        CreateMemberCommand addAliceCommandCopy \u003d new CreateMemberCommand(alice);","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"wr1159"},"content":"        // different member -\u003e returns false","lastModifiedDate":"2023-10-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"dylkaw"},"content":"        CreateMemberCommand createMemberCommand \u003d new CreateMemberCommand(ALICE);","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"dylkaw"},"content":"        String expected \u003d CreateMemberCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"dylkaw"},"content":"        assertEquals(expected, createMemberCommand.toString());","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"andrechuakj"},"content":"        public Path getCcaCommanderFilePath() {","lastModifiedDate":"2023-10-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"andrechuakj"},"content":"        public void setCcaCommanderFilePath(Path ccaCommanderFilePath) {","lastModifiedDate":"2023-10-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"dylkaw"},"content":"        public void createMember(Member member) {","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"andrechuakj"},"content":"        public void setCcaCommander(ReadOnlyCcaCommander newData) {","lastModifiedDate":"2023-10-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"andrechuakj"},"content":"        public ReadOnlyCcaCommander getCcaCommander() {","lastModifiedDate":"2023-10-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"wr1159"},"content":"        public boolean hasMember(Member member) {","lastModifiedDate":"2023-10-02"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"wr1159"},"content":"        public void deleteMember(Member target) {","lastModifiedDate":"2023-10-02"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"wr1159"},"content":"        public void setMember(Member target, Member editedMember) {","lastModifiedDate":"2023-10-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":158,"author":{"gitId":"dylkaw"},"content":"        public void createEvent(Event event) {","lastModifiedDate":"2023-10-17"},{"lineNumber":159,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":160,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":161,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":162,"author":{"gitId":"dylkaw"},"content":"        public boolean hasEvent(Event event) {","lastModifiedDate":"2023-10-17"},{"lineNumber":163,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":164,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":165,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"SelwynAng"},"content":"        @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":167,"author":{"gitId":"SelwynAng"},"content":"        public void deleteEvent(Event target) {","lastModifiedDate":"2023-10-14"},{"lineNumber":168,"author":{"gitId":"SelwynAng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-14"},{"lineNumber":169,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":170,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":171,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":172,"author":{"gitId":"dylkaw"},"content":"        public void setEvent(Event event, Event editedEvent) {","lastModifiedDate":"2023-10-17"},{"lineNumber":173,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-17"},{"lineNumber":174,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":175,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":176,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":177,"author":{"gitId":"andrechuakj"},"content":"        public void createEnrolment(Enrolment enrolment) {","lastModifiedDate":"2023-10-28"},{"lineNumber":178,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-23"},{"lineNumber":179,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":180,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":181,"author":{"gitId":"ph-nathan"},"content":"        public void editEnrolmentsWithEventName(Name prevName, Name newName) {","lastModifiedDate":"2023-11-02"},{"lineNumber":182,"author":{"gitId":"ph-nathan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":183,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":184,"author":{"gitId":"ph-nathan"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":185,"author":{"gitId":"ph-nathan"},"content":"        public void editEnrolmentsWithMemberName(Name prevName, Name newName) {","lastModifiedDate":"2023-11-02"},{"lineNumber":186,"author":{"gitId":"ph-nathan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":187,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":188,"author":{"gitId":"ph-nathan"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":189,"author":{"gitId":"andrechuakj"},"content":"        public boolean hasEnrolment(Enrolment enrolment) {","lastModifiedDate":"2023-10-28"},{"lineNumber":190,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-23"},{"lineNumber":191,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":192,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":193,"author":{"gitId":"SelwynAng"},"content":"        @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":194,"author":{"gitId":"SelwynAng"},"content":"        public void deleteEnrolment(Enrolment target) {","lastModifiedDate":"2023-10-28"},{"lineNumber":195,"author":{"gitId":"SelwynAng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-28"},{"lineNumber":196,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":197,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":198,"author":{"gitId":"wr1159"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":199,"author":{"gitId":"wr1159"},"content":"        public void deleteEnrolmentsWithEventName(Name eventName) {","lastModifiedDate":"2023-11-02"},{"lineNumber":200,"author":{"gitId":"wr1159"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":201,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":202,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":203,"author":{"gitId":"wr1159"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":204,"author":{"gitId":"wr1159"},"content":"        public void deleteEnrolmentsWithMemberName(Name memberName) {","lastModifiedDate":"2023-11-02"},{"lineNumber":205,"author":{"gitId":"wr1159"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":206,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":207,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":208,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":209,"author":{"gitId":"dylkaw"},"content":"        public void setEnrolment(Enrolment enrolment, Enrolment editedEnrolment) {","lastModifiedDate":"2023-10-28"},{"lineNumber":210,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-28"},{"lineNumber":211,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":212,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"wr1159"},"content":"        public ObservableList\u003cMember\u003e getFilteredMemberList() {","lastModifiedDate":"2023-10-02"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"wr1159"},"content":"        public void updateFilteredMemberList(Predicate\u003cMember\u003e predicate) {","lastModifiedDate":"2023-10-02"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":223,"author":{"gitId":"SelwynAng"},"content":"        @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":224,"author":{"gitId":"SelwynAng"},"content":"        public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2023-10-14"},{"lineNumber":225,"author":{"gitId":"SelwynAng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-14"},{"lineNumber":226,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":227,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":228,"author":{"gitId":"SelwynAng"},"content":"        @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":229,"author":{"gitId":"SelwynAng"},"content":"        public void updateFilteredEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2023-10-14"},{"lineNumber":230,"author":{"gitId":"SelwynAng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-14"},{"lineNumber":231,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":232,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":233,"author":{"gitId":"SelwynAng"},"content":"        @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":234,"author":{"gitId":"andrechuakj"},"content":"        public ObservableList\u003cEnrolment\u003e getFilteredEnrolmentList() {","lastModifiedDate":"2023-10-28"},{"lineNumber":235,"author":{"gitId":"SelwynAng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-23"},{"lineNumber":236,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":237,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":238,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":239,"author":{"gitId":"andrechuakj"},"content":"        public void updateFilteredEnrolmentList(Predicate\u003cEnrolment\u003e enrolment) {","lastModifiedDate":"2023-10-28"},{"lineNumber":240,"author":{"gitId":"SelwynAng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":241,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":242,"author":{"gitId":"ph-nathan"},"content":"        @Override","lastModifiedDate":"2023-11-03"},{"lineNumber":243,"author":{"gitId":"ph-nathan"},"content":"        public Collection\u003cName\u003e updateMemberHoursAndRemark(Name eventName) {","lastModifiedDate":"2023-11-03"},{"lineNumber":244,"author":{"gitId":"ph-nathan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-03"},{"lineNumber":245,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":246,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":247,"author":{"gitId":"ph-nathan"},"content":"        @Override","lastModifiedDate":"2023-11-03"},{"lineNumber":248,"author":{"gitId":"ph-nathan"},"content":"        public Collection\u003cName\u003e updateEventHoursAndRemark(Name memberName) {","lastModifiedDate":"2023-11-03"},{"lineNumber":249,"author":{"gitId":"ph-nathan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-03"},{"lineNumber":250,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":251,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":252,"author":{"gitId":"SelwynAng"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":253,"author":{"gitId":"SelwynAng"},"content":"        public void commit(String commitMessage) {","lastModifiedDate":"2023-10-26"},{"lineNumber":254,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-23"},{"lineNumber":255,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":256,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":257,"author":{"gitId":"SelwynAng"},"content":"        @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":258,"author":{"gitId":"SelwynAng"},"content":"        public boolean canUndo() {","lastModifiedDate":"2023-10-23"},{"lineNumber":259,"author":{"gitId":"SelwynAng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-23"},{"lineNumber":260,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":261,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":262,"author":{"gitId":"SelwynAng"},"content":"        @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":263,"author":{"gitId":"SelwynAng"},"content":"        public String undo() {","lastModifiedDate":"2023-10-23"},{"lineNumber":264,"author":{"gitId":"SelwynAng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-23"},{"lineNumber":265,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":266,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":267,"author":{"gitId":"SelwynAng"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":268,"author":{"gitId":"SelwynAng"},"content":"        public boolean canRedo() {","lastModifiedDate":"2023-10-24"},{"lineNumber":269,"author":{"gitId":"SelwynAng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":270,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":271,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":272,"author":{"gitId":"SelwynAng"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":273,"author":{"gitId":"SelwynAng"},"content":"        public String redo() {","lastModifiedDate":"2023-10-24"},{"lineNumber":274,"author":{"gitId":"SelwynAng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":275,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":276,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":277,"author":{"gitId":"SelwynAng"},"content":"        @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":278,"author":{"gitId":"SelwynAng"},"content":"        public VersionCaptures viewVersionCaptures() {","lastModifiedDate":"2023-10-24"},{"lineNumber":279,"author":{"gitId":"SelwynAng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-23"},{"lineNumber":280,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":284,"author":{"gitId":"wr1159"},"content":"     * A Model stub that contains a single member.","lastModifiedDate":"2023-10-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":286,"author":{"gitId":"wr1159"},"content":"    private class ModelStubWithMember extends ModelStub {","lastModifiedDate":"2023-10-12"},{"lineNumber":287,"author":{"gitId":"wr1159"},"content":"        private final Member member;","lastModifiedDate":"2023-10-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":289,"author":{"gitId":"wr1159"},"content":"        ModelStubWithMember(Member member) {","lastModifiedDate":"2023-10-12"},{"lineNumber":290,"author":{"gitId":"wr1159"},"content":"            requireNonNull(member);","lastModifiedDate":"2023-10-02"},{"lineNumber":291,"author":{"gitId":"wr1159"},"content":"            this.member \u003d member;","lastModifiedDate":"2023-10-02"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":295,"author":{"gitId":"wr1159"},"content":"        public boolean hasMember(Member member) {","lastModifiedDate":"2023-10-02"},{"lineNumber":296,"author":{"gitId":"wr1159"},"content":"            requireNonNull(member);","lastModifiedDate":"2023-10-02"},{"lineNumber":297,"author":{"gitId":"wr1159"},"content":"            return this.member.isSameMember(member);","lastModifiedDate":"2023-10-02"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":302,"author":{"gitId":"wr1159"},"content":"     * A Model stub that always accept the member being added.","lastModifiedDate":"2023-10-02"},{"lineNumber":303,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":304,"author":{"gitId":"wr1159"},"content":"    private class ModelStubAcceptingMemberAdded extends ModelStub {","lastModifiedDate":"2023-10-12"},{"lineNumber":305,"author":{"gitId":"wr1159"},"content":"        final ArrayList\u003cMember\u003e membersAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":306,"author":{"gitId":"SelwynAng"},"content":"        final ArrayList\u003cString\u003e commitMessages \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-23"},{"lineNumber":307,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":308,"author":{"gitId":"SelwynAng"},"content":"        @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":309,"author":{"gitId":"SelwynAng"},"content":"        public void commit(String commitMessage) {","lastModifiedDate":"2023-10-23"},{"lineNumber":310,"author":{"gitId":"SelwynAng"},"content":"            commitMessages.add(commitMessage);","lastModifiedDate":"2023-10-23"},{"lineNumber":311,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":314,"author":{"gitId":"wr1159"},"content":"        public boolean hasMember(Member member) {","lastModifiedDate":"2023-10-02"},{"lineNumber":315,"author":{"gitId":"wr1159"},"content":"            requireNonNull(member);","lastModifiedDate":"2023-10-02"},{"lineNumber":316,"author":{"gitId":"wr1159"},"content":"            return membersAdded.stream().anyMatch(member::isSameMember);","lastModifiedDate":"2023-10-12"},{"lineNumber":317,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":320,"author":{"gitId":"dylkaw"},"content":"        public void createMember(Member member) {","lastModifiedDate":"2023-10-16"},{"lineNumber":321,"author":{"gitId":"wr1159"},"content":"            requireNonNull(member);","lastModifiedDate":"2023-10-02"},{"lineNumber":322,"author":{"gitId":"wr1159"},"content":"            membersAdded.add(member);","lastModifiedDate":"2023-10-12"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":326,"author":{"gitId":"andrechuakj"},"content":"        public ReadOnlyCcaCommander getCcaCommander() {","lastModifiedDate":"2023-10-21"},{"lineNumber":327,"author":{"gitId":"andrechuakj"},"content":"            return new CcaCommander();","lastModifiedDate":"2023-10-21"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":331,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"wr1159":43,"andrechuakj":24,"SelwynAng":61,"dylkaw":45,"ph-nathan":19,"-":139}},{"path":"src/test/java/seedu/ccacommander/logic/commands/DeleteEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.commands;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.showEventAtIndex;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalCcaCommander.getTypicalCcaCommander;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"wr1159"},"content":"import static seedu.ccacommander.testutil.TypicalIndexes.INDEX_FIRST_ENROLMENT;","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalIndexes.INDEX_SECOND_EVENT;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.core.index.Index;","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.Messages;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.ModelManager;","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.UserPrefs;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"wr1159"},"content":"import seedu.ccacommander.model.enrolment.Enrolment;","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.Event;","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"SelwynAng"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"SelwynAng"},"content":" * {@code DeleteEventCommand}.","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"SelwynAng"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"SelwynAng"},"content":"public class DeleteEventCommandTest {","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"andrechuakj"},"content":"    private Model model \u003d new ModelManager(getTypicalCcaCommander(), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"SelwynAng"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"SelwynAng"},"content":"        Event eventToDelete \u003d model.getFilteredEventList().get(INDEX_FIRST_EVENT.getZeroBased());","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"wr1159"},"content":"        Enrolment enrolmentToDelete \u003d model.getFilteredEnrolmentList().get(INDEX_FIRST_ENROLMENT.getZeroBased());","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"SelwynAng"},"content":"        DeleteEventCommand deleteEventCommand \u003d new DeleteEventCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"SelwynAng"},"content":"        String commitMessage \u003d String.format(DeleteEventCommand.MESSAGE_COMMIT, eventToDelete.getName());","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"SelwynAng"},"content":"        String expectedMessage \u003d String.format(DeleteEventCommand.MESSAGE_DELETE_EVENT_SUCCESS,","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"SelwynAng"},"content":"                Messages.format(eventToDelete));","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"andrechuakj"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getCcaCommander(), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"SelwynAng"},"content":"        expectedModel.deleteEvent(eventToDelete);","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"wr1159"},"content":"        expectedModel.deleteEnrolment(enrolmentToDelete);","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"SelwynAng"},"content":"        expectedModel.commit(commitMessage);","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"SelwynAng"},"content":"        assertCommandSuccess(deleteEventCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"SelwynAng"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"SelwynAng"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredEventList().size() + 1);","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"SelwynAng"},"content":"        DeleteEventCommand deleteEventCommand \u003d new DeleteEventCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"SelwynAng"},"content":"        assertCommandFailure(deleteEventCommand, model, Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"SelwynAng"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"SelwynAng"},"content":"        showEventAtIndex(model, INDEX_FIRST_EVENT);","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"SelwynAng"},"content":"        Event eventToDelete \u003d model.getFilteredEventList().get(INDEX_FIRST_EVENT.getZeroBased());","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"wr1159"},"content":"        Enrolment enrolmentToDelete \u003d model.getFilteredEnrolmentList().get(INDEX_FIRST_ENROLMENT.getZeroBased());","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"SelwynAng"},"content":"        DeleteEventCommand deleteEventCommand \u003d new DeleteEventCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"SelwynAng"},"content":"        String commitMessage \u003d String.format(DeleteEventCommand.MESSAGE_COMMIT, eventToDelete.getName());","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"SelwynAng"},"content":"        String expectedMessage \u003d String.format(DeleteEventCommand.MESSAGE_DELETE_EVENT_SUCCESS,","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"SelwynAng"},"content":"                Messages.format(eventToDelete));","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"andrechuakj"},"content":"        Model expectedModel \u003d new ModelManager(model.getCcaCommander(), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"SelwynAng"},"content":"        expectedModel.deleteEvent(eventToDelete);","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"wr1159"},"content":"        expectedModel.deleteEnrolment(enrolmentToDelete);","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"SelwynAng"},"content":"        expectedModel.commit(commitMessage);","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"SelwynAng"},"content":"        showNoEvent(expectedModel);","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"SelwynAng"},"content":"        assertCommandSuccess(deleteEventCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"SelwynAng"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"SelwynAng"},"content":"        showEventAtIndex(model, INDEX_FIRST_EVENT);","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"SelwynAng"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_EVENT;","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"andrechuakj"},"content":"        // ensures that outOfBoundIndex is still in bounds of CcaCommander list","lastModifiedDate":"2023-10-21"},{"lineNumber":85,"author":{"gitId":"andrechuakj"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getCcaCommander().getEventList().size());","lastModifiedDate":"2023-10-21"},{"lineNumber":86,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"SelwynAng"},"content":"        DeleteEventCommand deleteEventCommand \u003d new DeleteEventCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"SelwynAng"},"content":"        assertCommandFailure(deleteEventCommand, model, Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":91,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"SelwynAng"},"content":"    public void equals() {","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"SelwynAng"},"content":"        DeleteEventCommand deleteEventFirstCommand \u003d new DeleteEventCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"SelwynAng"},"content":"        DeleteEventCommand deleteEventSecondCommand \u003d new DeleteEventCommand(INDEX_SECOND_EVENT);","lastModifiedDate":"2023-10-14"},{"lineNumber":96,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":97,"author":{"gitId":"SelwynAng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-14"},{"lineNumber":98,"author":{"gitId":"SelwynAng"},"content":"        assertTrue(deleteEventFirstCommand.equals(deleteEventFirstCommand));","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":100,"author":{"gitId":"SelwynAng"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"SelwynAng"},"content":"        DeleteEventCommand deleteEventFirstCommandCopy \u003d new DeleteEventCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"SelwynAng"},"content":"        assertTrue(deleteEventFirstCommand.equals(deleteEventFirstCommandCopy));","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":104,"author":{"gitId":"SelwynAng"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"SelwynAng"},"content":"        assertFalse(deleteEventFirstCommand.equals(1));","lastModifiedDate":"2023-10-14"},{"lineNumber":106,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":107,"author":{"gitId":"SelwynAng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":108,"author":{"gitId":"SelwynAng"},"content":"        assertFalse(deleteEventFirstCommand.equals(null));","lastModifiedDate":"2023-10-14"},{"lineNumber":109,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":110,"author":{"gitId":"SelwynAng"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"SelwynAng"},"content":"        assertFalse(deleteEventFirstCommand.equals(deleteEventSecondCommand));","lastModifiedDate":"2023-10-14"},{"lineNumber":112,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":113,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":114,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":115,"author":{"gitId":"SelwynAng"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-14"},{"lineNumber":116,"author":{"gitId":"SelwynAng"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-14"},{"lineNumber":117,"author":{"gitId":"SelwynAng"},"content":"        DeleteEventCommand deleteEventCommand \u003d new DeleteEventCommand(targetIndex);","lastModifiedDate":"2023-10-14"},{"lineNumber":118,"author":{"gitId":"SelwynAng"},"content":"        String expected \u003d DeleteEventCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2023-10-14"},{"lineNumber":119,"author":{"gitId":"SelwynAng"},"content":"        assertEquals(expected, deleteEventCommand.toString());","lastModifiedDate":"2023-10-14"},{"lineNumber":120,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":121,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":122,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":123,"author":{"gitId":"SelwynAng"},"content":"     * Updates {@code model}\u0027s filtered event list to show no one.","lastModifiedDate":"2023-10-14"},{"lineNumber":124,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":125,"author":{"gitId":"SelwynAng"},"content":"    private void showNoEvent(Model model) {","lastModifiedDate":"2023-10-14"},{"lineNumber":126,"author":{"gitId":"SelwynAng"},"content":"        model.updateFilteredEventList(p -\u003e false);","lastModifiedDate":"2023-10-14"},{"lineNumber":127,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":128,"author":{"gitId":"SelwynAng"},"content":"        assertTrue(model.getFilteredEventList().isEmpty());","lastModifiedDate":"2023-10-14"},{"lineNumber":129,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":130,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"wr1159":6,"andrechuakj":18,"SelwynAng":106}},{"path":"src/test/java/seedu/ccacommander/logic/commands/DeleteMemberCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.commands;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.showMemberAtIndex;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalCcaCommander.getTypicalCcaCommander;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"wr1159"},"content":"import static seedu.ccacommander.testutil.TypicalIndexes.INDEX_FIRST_ENROLMENT;","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalIndexes.INDEX_FIRST_MEMBER;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalIndexes.INDEX_SECOND_MEMBER;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.core.index.Index;","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.Messages;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.ModelManager;","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.UserPrefs;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"wr1159"},"content":"import seedu.ccacommander.model.enrolment.Enrolment;","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Member;","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":26,"author":{"gitId":"SelwynAng"},"content":" * {@code DeleteMemberCommand}.","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"SelwynAng"},"content":"public class DeleteMemberCommandTest {","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"andrechuakj"},"content":"    private Model model \u003d new ModelManager(getTypicalCcaCommander(), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":34,"author":{"gitId":"wr1159"},"content":"        Member memberToDelete \u003d model.getFilteredMemberList().get(INDEX_FIRST_MEMBER.getZeroBased());","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"wr1159"},"content":"        Enrolment enrolmentToDelete \u003d model.getFilteredEnrolmentList().get(INDEX_FIRST_ENROLMENT.getZeroBased());","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"SelwynAng"},"content":"        DeleteMemberCommand deleteMemberCommand \u003d new DeleteMemberCommand(INDEX_FIRST_MEMBER);","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"SelwynAng"},"content":"        String commitMessage \u003d String.format(DeleteMemberCommand.MESSAGE_COMMIT, memberToDelete.getName());","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"SelwynAng"},"content":"        String expectedMessage \u003d String.format(DeleteMemberCommand.MESSAGE_DELETE_MEMBER_SUCCESS,","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"wr1159"},"content":"                Messages.format(memberToDelete));","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"andrechuakj"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getCcaCommander(), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"wr1159"},"content":"        expectedModel.deleteMember(memberToDelete);","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"wr1159"},"content":"        expectedModel.deleteEnrolment(enrolmentToDelete);","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"SelwynAng"},"content":"        expectedModel.commit(commitMessage);","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"SelwynAng"},"content":"        assertCommandSuccess(deleteMemberCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"wr1159"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredMemberList().size() + 1);","lastModifiedDate":"2023-10-02"},{"lineNumber":53,"author":{"gitId":"SelwynAng"},"content":"        DeleteMemberCommand deleteMemberCommand \u003d new DeleteMemberCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"SelwynAng"},"content":"        assertCommandFailure(deleteMemberCommand, model, Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"wr1159"},"content":"        showMemberAtIndex(model, INDEX_FIRST_MEMBER);","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"wr1159"},"content":"        Member memberToDelete \u003d model.getFilteredMemberList().get(INDEX_FIRST_MEMBER.getZeroBased());","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"wr1159"},"content":"        Enrolment enrolmentToDelete \u003d model.getFilteredEnrolmentList().get(INDEX_FIRST_ENROLMENT.getZeroBased());","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"SelwynAng"},"content":"        DeleteMemberCommand deleteMemberCommand \u003d new DeleteMemberCommand(INDEX_FIRST_MEMBER);","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"SelwynAng"},"content":"        String commitMessage \u003d String.format(DeleteMemberCommand.MESSAGE_COMMIT, memberToDelete.getName());","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"SelwynAng"},"content":"        String expectedMessage \u003d String.format(DeleteMemberCommand.MESSAGE_DELETE_MEMBER_SUCCESS,","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"wr1159"},"content":"                Messages.format(memberToDelete));","lastModifiedDate":"2023-10-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"andrechuakj"},"content":"        Model expectedModel \u003d new ModelManager(model.getCcaCommander(), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"wr1159"},"content":"        expectedModel.deleteEnrolment(enrolmentToDelete);","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"wr1159"},"content":"        expectedModel.deleteMember(memberToDelete);","lastModifiedDate":"2023-10-02"},{"lineNumber":73,"author":{"gitId":"SelwynAng"},"content":"        expectedModel.commit(commitMessage);","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"wr1159"},"content":"        showNoMember(expectedModel);","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"SelwynAng"},"content":"        assertCommandSuccess(deleteMemberCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"wr1159"},"content":"        showMemberAtIndex(model, INDEX_FIRST_MEMBER);","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"wr1159"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_MEMBER;","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"andrechuakj"},"content":"        // ensures that outOfBoundIndex is still in bounds of CcaCommander list","lastModifiedDate":"2023-10-21"},{"lineNumber":85,"author":{"gitId":"andrechuakj"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getCcaCommander().getMemberList().size());","lastModifiedDate":"2023-10-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"SelwynAng"},"content":"        DeleteMemberCommand deleteMemberCommand \u003d new DeleteMemberCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"SelwynAng"},"content":"        assertCommandFailure(deleteMemberCommand, model, Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"SelwynAng"},"content":"        DeleteMemberCommand deleteMemberFirstCommand \u003d new DeleteMemberCommand(INDEX_FIRST_MEMBER);","lastModifiedDate":"2023-10-14"},{"lineNumber":95,"author":{"gitId":"SelwynAng"},"content":"        DeleteMemberCommand deleteMemberSecondCommand \u003d new DeleteMemberCommand(INDEX_SECOND_MEMBER);","lastModifiedDate":"2023-10-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"SelwynAng"},"content":"        assertTrue(deleteMemberFirstCommand.equals(deleteMemberFirstCommand));","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"SelwynAng"},"content":"        DeleteMemberCommand deleteMemberFirstCommandCopy \u003d new DeleteMemberCommand(INDEX_FIRST_MEMBER);","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"SelwynAng"},"content":"        assertTrue(deleteMemberFirstCommand.equals(deleteMemberFirstCommandCopy));","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"SelwynAng"},"content":"        assertFalse(deleteMemberFirstCommand.equals(1));","lastModifiedDate":"2023-10-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"SelwynAng"},"content":"        assertFalse(deleteMemberFirstCommand.equals(null));","lastModifiedDate":"2023-10-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"wr1159"},"content":"        // different member -\u003e returns false","lastModifiedDate":"2023-10-02"},{"lineNumber":111,"author":{"gitId":"SelwynAng"},"content":"        assertFalse(deleteMemberFirstCommand.equals(deleteMemberSecondCommand));","lastModifiedDate":"2023-10-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":117,"author":{"gitId":"SelwynAng"},"content":"        DeleteMemberCommand deleteMemberCommand \u003d new DeleteMemberCommand(targetIndex);","lastModifiedDate":"2023-10-14"},{"lineNumber":118,"author":{"gitId":"SelwynAng"},"content":"        String expected \u003d DeleteMemberCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2023-10-14"},{"lineNumber":119,"author":{"gitId":"SelwynAng"},"content":"        assertEquals(expected, deleteMemberCommand.toString());","lastModifiedDate":"2023-10-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"SelwynAng"},"content":"     * Updates {@code model}\u0027s filtered member list to show no one.","lastModifiedDate":"2023-10-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"wr1159"},"content":"    private void showNoMember(Model model) {","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"wr1159"},"content":"        model.updateFilteredMemberList(p -\u003e false);","lastModifiedDate":"2023-10-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"wr1159"},"content":"        assertTrue(model.getFilteredMemberList().isEmpty());","lastModifiedDate":"2023-10-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"wr1159":21,"andrechuakj":18,"SelwynAng":28,"-":63}},{"path":"src/test/java/seedu/ccacommander/logic/commands/EditEnrolmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dylkaw"},"content":"package seedu.ccacommander.logic.commands;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"dylkaw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"dylkaw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"dylkaw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.DESC_AMY_AURORA;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.DESC_BOB_BOXING;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_HOURS_BOXING;","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_REMARK_BOXING;","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.showEnrolmentAtIndex;","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.showEventAtIndex;","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.showMemberAtIndex;","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.testutil.TypicalCcaCommander.getTypicalCcaCommander;","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.testutil.TypicalIndexes.INDEX_FIRST_ENROLMENT;","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.testutil.TypicalIndexes.INDEX_FIRST_MEMBER;","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.testutil.TypicalIndexes.INDEX_SECOND_ENROLMENT;","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.testutil.TypicalIndexes.INDEX_SECOND_EVENT;","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.testutil.TypicalIndexes.INDEX_SECOND_MEMBER;","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"dylkaw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.commons.core.index.Index;","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.logic.Messages;","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.logic.commands.EditEnrolmentCommand.EditEnrolmentDescriptor;","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.model.CcaCommander;","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.model.Model;","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.model.ModelManager;","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.model.UserPrefs;","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.model.enrolment.Enrolment;","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.testutil.EditEnrolmentDescriptorBuilder;","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.testutil.EnrolmentBuilder;","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"dylkaw"},"content":"/**","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"dylkaw"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditEnrolmentCommand.","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"dylkaw"},"content":" */","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"dylkaw"},"content":"public class EditEnrolmentCommandTest {","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"dylkaw"},"content":"    private Model model \u003d new ModelManager(getTypicalCcaCommander(), new UserPrefs());","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"dylkaw"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"dylkaw"},"content":"        Enrolment editedEnrolment \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"dylkaw"},"content":"                new EnrolmentBuilder().withHours(VALID_HOURS_BOXING).withRemark(VALID_REMARK_BOXING).build();","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"dylkaw"},"content":"        EditEnrolmentDescriptor descriptor \u003d new EditEnrolmentDescriptorBuilder(editedEnrolment).build();","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"dylkaw"},"content":"        EditEnrolmentCommand editEnrolmentCommand \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"dylkaw"},"content":"                new EditEnrolmentCommand(INDEX_FIRST_MEMBER, INDEX_FIRST_EVENT, descriptor);","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"dylkaw"},"content":"        String commitMessage \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"dylkaw"},"content":"                String.format(EditEnrolmentCommand.MESSAGE_COMMIT, editedEnrolment.getMemberAndEventEnrolment());","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"dylkaw"},"content":"        String expectedMessage \u003d String.format(EditEnrolmentCommand.MESSAGE_EDIT_ENROLMENT_SUCCESS,","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"dylkaw"},"content":"                Messages.format(editedEnrolment));","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"dylkaw"},"content":"        Model expectedModel \u003d new ModelManager(new CcaCommander(model.getCcaCommander()), new UserPrefs());","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"dylkaw"},"content":"        expectedModel.setEnrolment(model.getFilteredEnrolmentList().get(0), editedEnrolment);","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"dylkaw"},"content":"        expectedModel.commit(commitMessage);","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"dylkaw"},"content":"        assertCommandSuccess(editEnrolmentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"dylkaw"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"dylkaw"},"content":"        Index indexLastMember \u003d Index.fromOneBased(model.getFilteredMemberList().size());","lastModifiedDate":"2023-10-28"},{"lineNumber":66,"author":{"gitId":"dylkaw"},"content":"        Index indexLastEvent \u003d Index.fromOneBased(model.getFilteredEventList().size());","lastModifiedDate":"2023-10-28"},{"lineNumber":67,"author":{"gitId":"dylkaw"},"content":"        Index indexLastEnrolment \u003d Index.fromOneBased(model.getFilteredEnrolmentList().size());","lastModifiedDate":"2023-10-28"},{"lineNumber":68,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"dylkaw"},"content":"        Enrolment lastEnrolment \u003d model.getFilteredEnrolmentList().get(indexLastEnrolment.getZeroBased());","lastModifiedDate":"2023-10-28"},{"lineNumber":70,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":71,"author":{"gitId":"dylkaw"},"content":"        EnrolmentBuilder enrolmentInList \u003d new EnrolmentBuilder(lastEnrolment);","lastModifiedDate":"2023-10-28"},{"lineNumber":72,"author":{"gitId":"dylkaw"},"content":"        Enrolment editedEnrolment \u003d enrolmentInList.withHours(VALID_HOURS_BOXING).build();","lastModifiedDate":"2023-10-28"},{"lineNumber":73,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":74,"author":{"gitId":"dylkaw"},"content":"        EditEnrolmentDescriptor descriptor \u003d new EditEnrolmentDescriptorBuilder(editedEnrolment).build();","lastModifiedDate":"2023-10-28"},{"lineNumber":75,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":76,"author":{"gitId":"dylkaw"},"content":"        EditEnrolmentCommand editEnrolmentCommand \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":77,"author":{"gitId":"dylkaw"},"content":"                new EditEnrolmentCommand(indexLastMember, indexLastEvent, descriptor);","lastModifiedDate":"2023-10-28"},{"lineNumber":78,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":79,"author":{"gitId":"dylkaw"},"content":"        String commitMessage \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":80,"author":{"gitId":"dylkaw"},"content":"                String.format(EditEnrolmentCommand.MESSAGE_COMMIT, editedEnrolment.getMemberAndEventEnrolment());","lastModifiedDate":"2023-10-28"},{"lineNumber":81,"author":{"gitId":"dylkaw"},"content":"        String expectedMessage \u003d String.format(EditEnrolmentCommand.MESSAGE_EDIT_ENROLMENT_SUCCESS,","lastModifiedDate":"2023-10-28"},{"lineNumber":82,"author":{"gitId":"dylkaw"},"content":"                Messages.format(editedEnrolment));","lastModifiedDate":"2023-10-28"},{"lineNumber":83,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":84,"author":{"gitId":"dylkaw"},"content":"        Model expectedModel \u003d new ModelManager(new CcaCommander(model.getCcaCommander()), new UserPrefs());","lastModifiedDate":"2023-10-28"},{"lineNumber":85,"author":{"gitId":"dylkaw"},"content":"        expectedModel.setEnrolment(lastEnrolment, editedEnrolment);","lastModifiedDate":"2023-10-28"},{"lineNumber":86,"author":{"gitId":"dylkaw"},"content":"        expectedModel.commit(commitMessage);","lastModifiedDate":"2023-10-28"},{"lineNumber":87,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":88,"author":{"gitId":"dylkaw"},"content":"        assertCommandSuccess(editEnrolmentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-28"},{"lineNumber":89,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":90,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":91,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":92,"author":{"gitId":"dylkaw"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2023-10-28"},{"lineNumber":93,"author":{"gitId":"dylkaw"},"content":"        showEnrolmentAtIndex(model, INDEX_FIRST_ENROLMENT);","lastModifiedDate":"2023-10-28"},{"lineNumber":94,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":95,"author":{"gitId":"dylkaw"},"content":"        Enrolment enrolmentInFilteredList \u003d model.getFilteredEnrolmentList()","lastModifiedDate":"2023-10-28"},{"lineNumber":96,"author":{"gitId":"dylkaw"},"content":"                .get(INDEX_FIRST_ENROLMENT.getZeroBased());","lastModifiedDate":"2023-10-28"},{"lineNumber":97,"author":{"gitId":"dylkaw"},"content":"        Enrolment editedEnrolment \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":98,"author":{"gitId":"dylkaw"},"content":"                new EnrolmentBuilder(enrolmentInFilteredList).withHours(VALID_HOURS_BOXING).build();","lastModifiedDate":"2023-10-28"},{"lineNumber":99,"author":{"gitId":"dylkaw"},"content":"        EditEnrolmentCommand editEnrolmentCommand \u003d new EditEnrolmentCommand(INDEX_FIRST_MEMBER, INDEX_FIRST_EVENT,","lastModifiedDate":"2023-10-28"},{"lineNumber":100,"author":{"gitId":"dylkaw"},"content":"                new EditEnrolmentDescriptorBuilder().withHours(VALID_HOURS_BOXING).build());","lastModifiedDate":"2023-10-28"},{"lineNumber":101,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":102,"author":{"gitId":"dylkaw"},"content":"        String commitMessage \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":103,"author":{"gitId":"dylkaw"},"content":"                String.format(EditEnrolmentCommand.MESSAGE_COMMIT, editedEnrolment.getMemberAndEventEnrolment());","lastModifiedDate":"2023-10-28"},{"lineNumber":104,"author":{"gitId":"dylkaw"},"content":"        String expectedMessage \u003d String.format(EditEnrolmentCommand.MESSAGE_EDIT_ENROLMENT_SUCCESS,","lastModifiedDate":"2023-10-28"},{"lineNumber":105,"author":{"gitId":"dylkaw"},"content":"                Messages.format(editedEnrolment));","lastModifiedDate":"2023-10-28"},{"lineNumber":106,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":107,"author":{"gitId":"dylkaw"},"content":"        Model expectedModel \u003d new ModelManager(new CcaCommander(model.getCcaCommander()), new UserPrefs());","lastModifiedDate":"2023-10-28"},{"lineNumber":108,"author":{"gitId":"dylkaw"},"content":"        expectedModel.setEnrolment(model.getFilteredEnrolmentList().get(0), editedEnrolment);","lastModifiedDate":"2023-10-28"},{"lineNumber":109,"author":{"gitId":"dylkaw"},"content":"        expectedModel.commit(commitMessage);","lastModifiedDate":"2023-10-28"},{"lineNumber":110,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":111,"author":{"gitId":"dylkaw"},"content":"        assertCommandSuccess(editEnrolmentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-28"},{"lineNumber":112,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":113,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":114,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":115,"author":{"gitId":"SelwynAng"},"content":"    public void execute_invalidMemberIndexUnfilteredList_failure() {","lastModifiedDate":"2023-11-01"},{"lineNumber":116,"author":{"gitId":"dylkaw"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredMemberList().size() + 1);","lastModifiedDate":"2023-10-28"},{"lineNumber":117,"author":{"gitId":"dylkaw"},"content":"        EditEnrolmentDescriptor descriptor \u003d new EditEnrolmentDescriptorBuilder().withHours(VALID_HOURS_BOXING).build();","lastModifiedDate":"2023-10-28"},{"lineNumber":118,"author":{"gitId":"dylkaw"},"content":"        EditEnrolmentCommand editEventCommand \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":119,"author":{"gitId":"dylkaw"},"content":"                new EditEnrolmentCommand(outOfBoundIndex, INDEX_SECOND_ENROLMENT, descriptor);","lastModifiedDate":"2023-10-28"},{"lineNumber":120,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":121,"author":{"gitId":"dylkaw"},"content":"        assertCommandFailure(editEventCommand, model, Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-28"},{"lineNumber":122,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":123,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":124,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":125,"author":{"gitId":"SelwynAng"},"content":"    public void execute_invalidEventIndexUnfilteredList_failure() {","lastModifiedDate":"2023-11-01"},{"lineNumber":126,"author":{"gitId":"dylkaw"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredEventList().size() + 1);","lastModifiedDate":"2023-10-28"},{"lineNumber":127,"author":{"gitId":"dylkaw"},"content":"        EditEnrolmentDescriptor descriptor \u003d new EditEnrolmentDescriptorBuilder().withHours(VALID_HOURS_BOXING).build();","lastModifiedDate":"2023-10-28"},{"lineNumber":128,"author":{"gitId":"dylkaw"},"content":"        EditEnrolmentCommand editEventCommand \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":129,"author":{"gitId":"dylkaw"},"content":"                new EditEnrolmentCommand(INDEX_FIRST_MEMBER, outOfBoundIndex, descriptor);","lastModifiedDate":"2023-10-28"},{"lineNumber":130,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":131,"author":{"gitId":"dylkaw"},"content":"        assertCommandFailure(editEventCommand, model, Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-28"},{"lineNumber":132,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":133,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":134,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":135,"author":{"gitId":"dylkaw"},"content":"    public void execute_enrolmentDoesNotExist_failure() {","lastModifiedDate":"2023-10-30"},{"lineNumber":136,"author":{"gitId":"dylkaw"},"content":"        EditEnrolmentDescriptor descriptor \u003d new EditEnrolmentDescriptorBuilder().withHours(VALID_HOURS_BOXING).build();","lastModifiedDate":"2023-10-30"},{"lineNumber":137,"author":{"gitId":"SelwynAng"},"content":"        EditEnrolmentCommand editEnrolmentCommand \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":138,"author":{"gitId":"dylkaw"},"content":"                new EditEnrolmentCommand(INDEX_FIRST_MEMBER, INDEX_SECOND_EVENT, descriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":139,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":140,"author":{"gitId":"SelwynAng"},"content":"        assertCommandFailure(editEnrolmentCommand, model, String.format(Messages.MESSAGE_ENROLMENT_DOES_NOT_EXIST,","lastModifiedDate":"2023-11-01"},{"lineNumber":141,"author":{"gitId":"dylkaw"},"content":"                INDEX_FIRST_MEMBER.getOneBased(), INDEX_SECOND_EVENT.getOneBased()));","lastModifiedDate":"2023-10-30"},{"lineNumber":142,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":143,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":144,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":145,"author":{"gitId":"dylkaw"},"content":"     * Edit filtered list where member index is larger than size of filtered member list,","lastModifiedDate":"2023-10-28"},{"lineNumber":146,"author":{"gitId":"dylkaw"},"content":"     * but smaller than size of CcaCommander","lastModifiedDate":"2023-10-28"},{"lineNumber":147,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":148,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":149,"author":{"gitId":"dylkaw"},"content":"    public void execute_invalidMemberIndexFilteredList_failure() {","lastModifiedDate":"2023-10-28"},{"lineNumber":150,"author":{"gitId":"dylkaw"},"content":"        showMemberAtIndex(model, INDEX_FIRST_MEMBER);","lastModifiedDate":"2023-10-28"},{"lineNumber":151,"author":{"gitId":"dylkaw"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_MEMBER;","lastModifiedDate":"2023-10-28"},{"lineNumber":152,"author":{"gitId":"dylkaw"},"content":"        // ensures that outOfBoundIndex is still in bounds of CcaCommander list","lastModifiedDate":"2023-10-28"},{"lineNumber":153,"author":{"gitId":"dylkaw"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getCcaCommander().getMemberList().size());","lastModifiedDate":"2023-10-28"},{"lineNumber":154,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":155,"author":{"gitId":"dylkaw"},"content":"        EditEnrolmentCommand editEventCommand \u003d new EditEnrolmentCommand(outOfBoundIndex, INDEX_SECOND_EVENT,","lastModifiedDate":"2023-10-28"},{"lineNumber":156,"author":{"gitId":"dylkaw"},"content":"                new EditEnrolmentDescriptorBuilder().withHours(VALID_HOURS_BOXING).build());","lastModifiedDate":"2023-10-28"},{"lineNumber":157,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":158,"author":{"gitId":"dylkaw"},"content":"        assertCommandFailure(editEventCommand, model, Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-28"},{"lineNumber":159,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":160,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":161,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":162,"author":{"gitId":"dylkaw"},"content":"     * Edit filtered list where event index is larger than size of filtered event list,","lastModifiedDate":"2023-10-28"},{"lineNumber":163,"author":{"gitId":"dylkaw"},"content":"     * but smaller than size of CcaCommander","lastModifiedDate":"2023-10-28"},{"lineNumber":164,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":165,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":166,"author":{"gitId":"dylkaw"},"content":"    public void execute_invalidEventIndexFilteredList_failure() {","lastModifiedDate":"2023-10-28"},{"lineNumber":167,"author":{"gitId":"dylkaw"},"content":"        showEventAtIndex(model, INDEX_FIRST_EVENT);","lastModifiedDate":"2023-10-28"},{"lineNumber":168,"author":{"gitId":"dylkaw"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_EVENT;","lastModifiedDate":"2023-10-28"},{"lineNumber":169,"author":{"gitId":"dylkaw"},"content":"        // ensures that outOfBoundIndex is still in bounds of CcaCommander list","lastModifiedDate":"2023-10-28"},{"lineNumber":170,"author":{"gitId":"dylkaw"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getCcaCommander().getEventList().size());","lastModifiedDate":"2023-10-28"},{"lineNumber":171,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":172,"author":{"gitId":"dylkaw"},"content":"        EditEnrolmentCommand editEventCommand \u003d new EditEnrolmentCommand(INDEX_FIRST_MEMBER, outOfBoundIndex,","lastModifiedDate":"2023-10-28"},{"lineNumber":173,"author":{"gitId":"dylkaw"},"content":"                new EditEnrolmentDescriptorBuilder().withHours(VALID_HOURS_BOXING).build());","lastModifiedDate":"2023-10-28"},{"lineNumber":174,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":175,"author":{"gitId":"dylkaw"},"content":"        assertCommandFailure(editEventCommand, model, Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-28"},{"lineNumber":176,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":177,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":178,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":179,"author":{"gitId":"dylkaw"},"content":"    public void equals() {","lastModifiedDate":"2023-10-28"},{"lineNumber":180,"author":{"gitId":"dylkaw"},"content":"        final EditEnrolmentCommand standardCommand \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":181,"author":{"gitId":"dylkaw"},"content":"                new EditEnrolmentCommand(INDEX_FIRST_MEMBER, INDEX_FIRST_EVENT, DESC_AMY_AURORA);","lastModifiedDate":"2023-10-28"},{"lineNumber":182,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":183,"author":{"gitId":"dylkaw"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-28"},{"lineNumber":184,"author":{"gitId":"dylkaw"},"content":"        EditEnrolmentDescriptor copyDescriptor \u003d new EditEnrolmentDescriptor(DESC_AMY_AURORA);","lastModifiedDate":"2023-10-28"},{"lineNumber":185,"author":{"gitId":"dylkaw"},"content":"        EditEnrolmentCommand commandWithSameValues \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":186,"author":{"gitId":"dylkaw"},"content":"                new EditEnrolmentCommand(INDEX_FIRST_MEMBER, INDEX_FIRST_EVENT, copyDescriptor);","lastModifiedDate":"2023-10-28"},{"lineNumber":187,"author":{"gitId":"dylkaw"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-10-28"},{"lineNumber":188,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":189,"author":{"gitId":"dylkaw"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-28"},{"lineNumber":190,"author":{"gitId":"dylkaw"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-10-28"},{"lineNumber":191,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":192,"author":{"gitId":"dylkaw"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-28"},{"lineNumber":193,"author":{"gitId":"dylkaw"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-10-28"},{"lineNumber":194,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":195,"author":{"gitId":"dylkaw"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-28"},{"lineNumber":196,"author":{"gitId":"dylkaw"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-10-28"},{"lineNumber":197,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":198,"author":{"gitId":"dylkaw"},"content":"        // different member index -\u003e returns false","lastModifiedDate":"2023-10-28"},{"lineNumber":199,"author":{"gitId":"dylkaw"},"content":"        assertFalse(standardCommand.equals(","lastModifiedDate":"2023-10-28"},{"lineNumber":200,"author":{"gitId":"dylkaw"},"content":"                new EditEnrolmentCommand(INDEX_SECOND_MEMBER, INDEX_FIRST_EVENT, DESC_AMY_AURORA)));","lastModifiedDate":"2023-10-28"},{"lineNumber":201,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":202,"author":{"gitId":"dylkaw"},"content":"        // different event index -\u003e returns false","lastModifiedDate":"2023-10-28"},{"lineNumber":203,"author":{"gitId":"dylkaw"},"content":"        assertFalse(standardCommand.equals(","lastModifiedDate":"2023-10-28"},{"lineNumber":204,"author":{"gitId":"dylkaw"},"content":"                new EditEnrolmentCommand(INDEX_FIRST_MEMBER, INDEX_SECOND_EVENT, DESC_AMY_AURORA)));","lastModifiedDate":"2023-10-28"},{"lineNumber":205,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":206,"author":{"gitId":"dylkaw"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2023-10-28"},{"lineNumber":207,"author":{"gitId":"dylkaw"},"content":"        assertFalse(standardCommand.equals(","lastModifiedDate":"2023-10-28"},{"lineNumber":208,"author":{"gitId":"dylkaw"},"content":"                new EditEnrolmentCommand(INDEX_FIRST_MEMBER, INDEX_FIRST_EVENT, DESC_BOB_BOXING)));","lastModifiedDate":"2023-10-28"},{"lineNumber":209,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":210,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":211,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":212,"author":{"gitId":"dylkaw"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-28"},{"lineNumber":213,"author":{"gitId":"dylkaw"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-28"},{"lineNumber":214,"author":{"gitId":"dylkaw"},"content":"        EditEnrolmentDescriptor editEnrolmentDescriptor \u003d new EditEnrolmentDescriptor();","lastModifiedDate":"2023-10-28"},{"lineNumber":215,"author":{"gitId":"dylkaw"},"content":"        EditEnrolmentCommand editEventCommand \u003d new EditEnrolmentCommand(index, index, editEnrolmentDescriptor);","lastModifiedDate":"2023-10-28"},{"lineNumber":216,"author":{"gitId":"dylkaw"},"content":"        String expected \u003d EditEnrolmentCommand.class.getCanonicalName() + \"{memberIndex\u003d\" + index + \", eventIndex\u003d\"","lastModifiedDate":"2023-10-28"},{"lineNumber":217,"author":{"gitId":"dylkaw"},"content":"                + index + \", editEnrolmentDescriptor\u003d\" + editEnrolmentDescriptor + \"}\";","lastModifiedDate":"2023-10-28"},{"lineNumber":218,"author":{"gitId":"dylkaw"},"content":"        assertEquals(expected, editEventCommand.toString());","lastModifiedDate":"2023-10-28"},{"lineNumber":219,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":220,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":221,"author":{"gitId":"dylkaw"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"dylkaw":217,"SelwynAng":4}},{"path":"src/test/java/seedu/ccacommander/logic/commands/EditEnrolmentDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dylkaw"},"content":"package seedu.ccacommander.logic.commands;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"dylkaw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"dylkaw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"dylkaw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.DESC_AMY_AURORA;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.DESC_BOB_BOXING;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_HOURS_BOXING;","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_NAME_BOXING;","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_REMARK_BOXING;","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"dylkaw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.logic.commands.EditEnrolmentCommand.EditEnrolmentDescriptor;","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.testutil.EditEnrolmentDescriptorBuilder;","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"dylkaw"},"content":"public class EditEnrolmentDescriptorTest {","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"dylkaw"},"content":"    public void equals() {","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"dylkaw"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"dylkaw"},"content":"        EditEnrolmentDescriptor descriptorWithSameValues \u003d new EditEnrolmentDescriptor(DESC_AMY_AURORA);","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"dylkaw"},"content":"        assertTrue(DESC_AMY_AURORA.equals(descriptorWithSameValues));","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"dylkaw"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"dylkaw"},"content":"        assertTrue(DESC_AMY_AURORA.equals(DESC_AMY_AURORA));","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"dylkaw"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"dylkaw"},"content":"        assertFalse(DESC_AMY_AURORA.equals(null));","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"dylkaw"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"dylkaw"},"content":"        assertFalse(DESC_AMY_AURORA.equals(5));","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"dylkaw"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"dylkaw"},"content":"        assertFalse(DESC_AMY_AURORA.equals(DESC_BOB_BOXING));","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"dylkaw"},"content":"        // different memberName -\u003e returns false","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"dylkaw"},"content":"        EditEnrolmentDescriptor editedAmyAurora \u003d new EditEnrolmentDescriptorBuilder(DESC_AMY_AURORA)","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"dylkaw"},"content":"                .withMemberName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"dylkaw"},"content":"        assertFalse(DESC_AMY_AURORA.equals(editedAmyAurora));","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"dylkaw"},"content":"        // different eventName -\u003e returns false","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"dylkaw"},"content":"        editedAmyAurora \u003d new EditEnrolmentDescriptorBuilder(DESC_AMY_AURORA).withEventName(VALID_NAME_BOXING).build();","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"dylkaw"},"content":"        assertFalse(DESC_AMY_AURORA.equals(editedAmyAurora));","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"dylkaw"},"content":"        // different hours -\u003e returns false","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"dylkaw"},"content":"        editedAmyAurora \u003d new EditEnrolmentDescriptorBuilder(DESC_AMY_AURORA).withHours(VALID_HOURS_BOXING).build();","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"dylkaw"},"content":"        assertFalse(DESC_AMY_AURORA.equals(editedAmyAurora));","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"dylkaw"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"dylkaw"},"content":"        editedAmyAurora \u003d new EditEnrolmentDescriptorBuilder(DESC_AMY_AURORA).withRemark(VALID_REMARK_BOXING).build();","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"dylkaw"},"content":"        assertFalse(DESC_AMY_AURORA.equals(editedAmyAurora));","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"dylkaw"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"dylkaw"},"content":"        EditEnrolmentDescriptor editEnrolmentDescriptor \u003d new EditEnrolmentDescriptor();","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"dylkaw"},"content":"        String expected \u003d EditEnrolmentDescriptor.class.getCanonicalName() + \"{memberName\u003d\"","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"dylkaw"},"content":"                + editEnrolmentDescriptor.getMemberName().orElse(null) + \", eventName\u003d\"","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"dylkaw"},"content":"                + editEnrolmentDescriptor.getEventName().orElse(null) + \", hours\u003d\"","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"dylkaw"},"content":"                + editEnrolmentDescriptor.getHours().orElse(null) + \", remark\u003d\"","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"dylkaw"},"content":"                + editEnrolmentDescriptor.getRemark().orElse(null) + \"}\";","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"dylkaw"},"content":"        assertEquals(expected, editEnrolmentDescriptor.toString());","lastModifiedDate":"2023-10-28"},{"lineNumber":66,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":67,"author":{"gitId":"dylkaw"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"dylkaw":67}},{"path":"src/test/java/seedu/ccacommander/logic/commands/EditEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"package seedu.ccacommander.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.DESC_AURORA;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.DESC_BOXING;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"wr1159"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_LOCATION_ANIMAL;","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"wr1159"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_NAME_ANIMAL;","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_NAME_AURORA;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"wr1159"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_TAG_ANIMAL;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.showEventAtIndex;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.testutil.TypicalCcaCommander.getTypicalCcaCommander;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.testutil.TypicalIndexes.INDEX_SECOND_EVENT;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"ph-nathan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.commons.core.index.Index;","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.logic.Messages;","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.logic.commands.EditEventCommand.EditEventDescriptor;","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.CcaCommander;","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.Model;","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.ModelManager;","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.UserPrefs;","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.event.Event;","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.shared.Name;","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.testutil.EditEventDescriptorBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.testutil.EventBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"ph-nathan"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"ph-nathan"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditEventCommand.","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"ph-nathan"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"ph-nathan"},"content":"public class EditEventCommandTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"ph-nathan"},"content":"    private Model model \u003d new ModelManager(getTypicalCcaCommander(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"ph-nathan"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"ph-nathan"},"content":"        Event editedEvent \u003d new EventBuilder().build();","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"ph-nathan"},"content":"        EditEventCommand.EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder(editedEvent).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"ph-nathan"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(INDEX_FIRST_EVENT, descriptor);","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"ph-nathan"},"content":"        String commitMessage \u003d String.format(EditEventCommand.MESSAGE_COMMIT, editedEvent.getName());","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"ph-nathan"},"content":"        String expectedMessage \u003d String.format(EditEventCommand.MESSAGE_EDIT_EVENT_SUCCESS,","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"ph-nathan"},"content":"                Messages.format(editedEvent));","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"ph-nathan"},"content":"        Model expectedModel \u003d new ModelManager(new CcaCommander(model.getCcaCommander()), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"ph-nathan"},"content":"        expectedModel.setEvent(model.getFilteredEventList().get(0), editedEvent);","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"ph-nathan"},"content":"        expectedModel.commit(commitMessage);","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"ph-nathan"},"content":"        Name prevName \u003d model.getFilteredEventList().get(0).getName();","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"ph-nathan"},"content":"        Name newName \u003d editedEvent.getName();","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"ph-nathan"},"content":"        // If event\u0027s name is edited, the corresponding enrolment objects are edited also","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"ph-nathan"},"content":"        if (!prevName.equals(newName)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"ph-nathan"},"content":"            expectedModel.editEnrolmentsWithEventName(prevName, newName);","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"ph-nathan"},"content":"        assertCommandSuccess(editEventCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"ph-nathan"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"ph-nathan"},"content":"        Index indexLastEvent \u003d Index.fromOneBased(model.getFilteredEventList().size());","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"ph-nathan"},"content":"        Event lastEvent \u003d model.getFilteredEventList().get(indexLastEvent.getZeroBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"ph-nathan"},"content":"        EventBuilder eventInList \u003d new EventBuilder(lastEvent);","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"wr1159"},"content":"        Event editedEvent \u003d eventInList.withName(VALID_NAME_ANIMAL).withLocation(VALID_LOCATION_ANIMAL)","lastModifiedDate":"2023-11-03"},{"lineNumber":72,"author":{"gitId":"wr1159"},"content":"                .withTags(VALID_TAG_ANIMAL).build();","lastModifiedDate":"2023-11-03"},{"lineNumber":73,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"wr1159"},"content":"        EditEventCommand.EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder().withName(VALID_NAME_ANIMAL)","lastModifiedDate":"2023-11-03"},{"lineNumber":75,"author":{"gitId":"wr1159"},"content":"                .withLocation(VALID_LOCATION_ANIMAL).withTags(VALID_TAG_ANIMAL).build();","lastModifiedDate":"2023-11-03"},{"lineNumber":76,"author":{"gitId":"ph-nathan"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(indexLastEvent, descriptor);","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"ph-nathan"},"content":"        String commitMessage \u003d String.format(EditEventCommand.MESSAGE_COMMIT, editedEvent.getName());","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"ph-nathan"},"content":"        String expectedMessage \u003d String.format(EditEventCommand.MESSAGE_EDIT_EVENT_SUCCESS,","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"ph-nathan"},"content":"                Messages.format(editedEvent));","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"ph-nathan"},"content":"        Model expectedModel \u003d new ModelManager(new CcaCommander(model.getCcaCommander()), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"ph-nathan"},"content":"        expectedModel.setEvent(lastEvent, editedEvent);","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":85,"author":{"gitId":"ph-nathan"},"content":"        Name prevName \u003d lastEvent.getName();","lastModifiedDate":"2023-10-30"},{"lineNumber":86,"author":{"gitId":"ph-nathan"},"content":"        Name newName \u003d editedEvent.getName();","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"ph-nathan"},"content":"        if (!prevName.equals(newName)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":89,"author":{"gitId":"ph-nathan"},"content":"            expectedModel.editEnrolmentsWithEventName(prevName, newName);","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":91,"author":{"gitId":"ph-nathan"},"content":"        expectedModel.commit(commitMessage);","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"ph-nathan"},"content":"        assertCommandSuccess(editEventCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"ph-nathan"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"ph-nathan"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(INDEX_FIRST_EVENT,","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"ph-nathan"},"content":"                new EditEventCommand.EditEventDescriptor());","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"ph-nathan"},"content":"        Event editedEvent \u003d model.getFilteredEventList().get(INDEX_FIRST_EVENT.getZeroBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"ph-nathan"},"content":"        String commitMessage \u003d String.format(EditEventCommand.MESSAGE_COMMIT, editedEvent.getName());","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"ph-nathan"},"content":"        String expectedMessage \u003d String.format(EditEventCommand.MESSAGE_EDIT_EVENT_SUCCESS,","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"ph-nathan"},"content":"                Messages.format(editedEvent));","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"ph-nathan"},"content":"        Model expectedModel \u003d new ModelManager(new CcaCommander(model.getCcaCommander()), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"ph-nathan"},"content":"        expectedModel.commit(commitMessage);","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"ph-nathan"},"content":"        assertCommandSuccess(editEventCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"ph-nathan"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"ph-nathan"},"content":"        showEventAtIndex(model, INDEX_FIRST_EVENT);","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"ph-nathan"},"content":"        Event eventInFilteredList \u003d model.getFilteredEventList().get(INDEX_FIRST_EVENT.getZeroBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"ph-nathan"},"content":"        Event editedEvent \u003d new EventBuilder(eventInFilteredList).withName(VALID_NAME_AURORA).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"ph-nathan"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(INDEX_FIRST_EVENT,","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"ph-nathan"},"content":"                new EditEventDescriptorBuilder().withName(VALID_NAME_AURORA).build());","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"ph-nathan"},"content":"        String commitMessage \u003d String.format(EditEventCommand.MESSAGE_COMMIT, editedEvent.getName());","lastModifiedDate":"2023-10-26"},{"lineNumber":122,"author":{"gitId":"ph-nathan"},"content":"        String expectedMessage \u003d String.format(EditEventCommand.MESSAGE_EDIT_EVENT_SUCCESS,","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"ph-nathan"},"content":"                Messages.format(editedEvent));","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"ph-nathan"},"content":"        Model expectedModel \u003d new ModelManager(new CcaCommander(model.getCcaCommander()), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"ph-nathan"},"content":"        expectedModel.setEvent(model.getFilteredEventList().get(0), editedEvent);","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"ph-nathan"},"content":"        expectedModel.commit(commitMessage);","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"ph-nathan"},"content":"        Name prevName \u003d model.getFilteredEventList().get(0).getName();","lastModifiedDate":"2023-11-01"},{"lineNumber":130,"author":{"gitId":"ph-nathan"},"content":"        Name newName \u003d editedEvent.getName();","lastModifiedDate":"2023-11-01"},{"lineNumber":131,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":132,"author":{"gitId":"ph-nathan"},"content":"        if (!prevName.equals(newName)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":133,"author":{"gitId":"ph-nathan"},"content":"            expectedModel.editEnrolmentsWithEventName(prevName, newName);","lastModifiedDate":"2023-11-02"},{"lineNumber":134,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":135,"author":{"gitId":"ph-nathan"},"content":"        assertCommandSuccess(editEventCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":138,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"ph-nathan"},"content":"    public void execute_duplicateEventUnfilteredList_failure() {","lastModifiedDate":"2023-10-26"},{"lineNumber":140,"author":{"gitId":"ph-nathan"},"content":"        Event firstEvent \u003d model.getFilteredEventList().get(INDEX_FIRST_EVENT.getZeroBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":141,"author":{"gitId":"ph-nathan"},"content":"        EditEventCommand.EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder(firstEvent).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":142,"author":{"gitId":"ph-nathan"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(INDEX_SECOND_EVENT, descriptor);","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"ph-nathan"},"content":"        assertCommandFailure(editEventCommand, model, EditEventCommand.MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":148,"author":{"gitId":"ph-nathan"},"content":"    public void execute_duplicateEventFilteredList_failure() {","lastModifiedDate":"2023-10-26"},{"lineNumber":149,"author":{"gitId":"ph-nathan"},"content":"        showEventAtIndex(model, INDEX_FIRST_EVENT);","lastModifiedDate":"2023-10-26"},{"lineNumber":150,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":151,"author":{"gitId":"ph-nathan"},"content":"        // edit event in filtered list into a duplicate in CcaCommander","lastModifiedDate":"2023-10-26"},{"lineNumber":152,"author":{"gitId":"ph-nathan"},"content":"        Event eventInList \u003d model.getCcaCommander().getEventList().get(INDEX_SECOND_EVENT.getZeroBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":153,"author":{"gitId":"ph-nathan"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(INDEX_FIRST_EVENT,","lastModifiedDate":"2023-10-26"},{"lineNumber":154,"author":{"gitId":"ph-nathan"},"content":"                new EditEventDescriptorBuilder(eventInList).build());","lastModifiedDate":"2023-10-26"},{"lineNumber":155,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":156,"author":{"gitId":"ph-nathan"},"content":"        assertCommandFailure(editEventCommand, model, EditEventCommand.MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2023-10-26"},{"lineNumber":157,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":158,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":159,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":160,"author":{"gitId":"ph-nathan"},"content":"    public void execute_invalidEventIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-26"},{"lineNumber":161,"author":{"gitId":"ph-nathan"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredEventList().size() + 1);","lastModifiedDate":"2023-10-26"},{"lineNumber":162,"author":{"gitId":"ph-nathan"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder().withName(VALID_NAME_AURORA).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":163,"author":{"gitId":"ph-nathan"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2023-10-26"},{"lineNumber":164,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":165,"author":{"gitId":"ph-nathan"},"content":"        assertCommandFailure(editEventCommand, model, Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-26"},{"lineNumber":166,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":167,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":168,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":169,"author":{"gitId":"ph-nathan"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-10-26"},{"lineNumber":170,"author":{"gitId":"ph-nathan"},"content":"     * but smaller than size of CcaCommander","lastModifiedDate":"2023-10-26"},{"lineNumber":171,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":172,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":173,"author":{"gitId":"ph-nathan"},"content":"    public void execute_invalidEventIndexFilteredList_failure() {","lastModifiedDate":"2023-10-26"},{"lineNumber":174,"author":{"gitId":"ph-nathan"},"content":"        showEventAtIndex(model, INDEX_FIRST_EVENT);","lastModifiedDate":"2023-10-26"},{"lineNumber":175,"author":{"gitId":"ph-nathan"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_EVENT;","lastModifiedDate":"2023-10-26"},{"lineNumber":176,"author":{"gitId":"ph-nathan"},"content":"        // ensures that outOfBoundIndex is still in bounds of CcaCommander list","lastModifiedDate":"2023-10-26"},{"lineNumber":177,"author":{"gitId":"ph-nathan"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getCcaCommander().getEventList().size());","lastModifiedDate":"2023-10-26"},{"lineNumber":178,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":179,"author":{"gitId":"ph-nathan"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(outOfBoundIndex,","lastModifiedDate":"2023-10-26"},{"lineNumber":180,"author":{"gitId":"ph-nathan"},"content":"                new EditEventDescriptorBuilder().withName(VALID_NAME_AURORA).build());","lastModifiedDate":"2023-10-26"},{"lineNumber":181,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":182,"author":{"gitId":"ph-nathan"},"content":"        assertCommandFailure(editEventCommand, model, Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-26"},{"lineNumber":183,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":184,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":185,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":186,"author":{"gitId":"ph-nathan"},"content":"    public void equals() {","lastModifiedDate":"2023-10-26"},{"lineNumber":187,"author":{"gitId":"ph-nathan"},"content":"        final EditEventCommand standardCommand \u003d new EditEventCommand(INDEX_FIRST_EVENT, DESC_AURORA);","lastModifiedDate":"2023-10-26"},{"lineNumber":188,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":189,"author":{"gitId":"ph-nathan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":190,"author":{"gitId":"ph-nathan"},"content":"        EditEventDescriptor copyDescriptor \u003d new EditEventDescriptor(DESC_AURORA);","lastModifiedDate":"2023-10-26"},{"lineNumber":191,"author":{"gitId":"ph-nathan"},"content":"        EditEventCommand commandWithSameValues \u003d new EditEventCommand(INDEX_FIRST_EVENT, copyDescriptor);","lastModifiedDate":"2023-10-26"},{"lineNumber":192,"author":{"gitId":"ph-nathan"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-10-26"},{"lineNumber":193,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":194,"author":{"gitId":"ph-nathan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":195,"author":{"gitId":"ph-nathan"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-10-26"},{"lineNumber":196,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":197,"author":{"gitId":"ph-nathan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":198,"author":{"gitId":"ph-nathan"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-10-26"},{"lineNumber":199,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":200,"author":{"gitId":"ph-nathan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":201,"author":{"gitId":"ph-nathan"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-10-26"},{"lineNumber":202,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":203,"author":{"gitId":"ph-nathan"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":204,"author":{"gitId":"ph-nathan"},"content":"        assertFalse(standardCommand.equals(new EditEventCommand(INDEX_SECOND_EVENT, DESC_AURORA)));","lastModifiedDate":"2023-10-26"},{"lineNumber":205,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":206,"author":{"gitId":"ph-nathan"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":207,"author":{"gitId":"ph-nathan"},"content":"        assertFalse(standardCommand.equals(new EditEventCommand(INDEX_FIRST_EVENT, DESC_BOXING)));","lastModifiedDate":"2023-10-26"},{"lineNumber":208,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":209,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":210,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":211,"author":{"gitId":"ph-nathan"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-26"},{"lineNumber":212,"author":{"gitId":"ph-nathan"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-26"},{"lineNumber":213,"author":{"gitId":"ph-nathan"},"content":"        EditEventDescriptor editEventDescriptor \u003d new EditEventCommand.EditEventDescriptor();","lastModifiedDate":"2023-10-26"},{"lineNumber":214,"author":{"gitId":"ph-nathan"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(index, editEventDescriptor);","lastModifiedDate":"2023-10-26"},{"lineNumber":215,"author":{"gitId":"ph-nathan"},"content":"        String expected \u003d EditEventCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editEventDescriptor\u003d\"","lastModifiedDate":"2023-10-26"},{"lineNumber":216,"author":{"gitId":"ph-nathan"},"content":"                + editEventDescriptor + \"}\";","lastModifiedDate":"2023-10-26"},{"lineNumber":217,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(expected, editEventCommand.toString());","lastModifiedDate":"2023-10-26"},{"lineNumber":218,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":219,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":220,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"wr1159":7,"ph-nathan":213}},{"path":"src/test/java/seedu/ccacommander/logic/commands/EditEventDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"package seedu.ccacommander.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.DESC_AURORA;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.DESC_BOXING;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_DATE_BOXING;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_LOCATION_BOXING;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_NAME_BOXING;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_TAG_BOXING;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.logic.commands.EditEventCommand.EditEventDescriptor;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.testutil.EditEventDescriptorBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"public class EditEventDescriptorTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"ph-nathan"},"content":"    public void equals() {","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"ph-nathan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"        EditEventCommand.EditEventDescriptor descriptorWithSameValues \u003d new EditEventDescriptor(DESC_AURORA);","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"ph-nathan"},"content":"        assertTrue(DESC_AURORA.equals(descriptorWithSameValues));","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"ph-nathan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"ph-nathan"},"content":"        assertTrue(DESC_AURORA.equals(DESC_AURORA));","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"ph-nathan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"ph-nathan"},"content":"        assertFalse(DESC_AURORA.equals(null));","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"ph-nathan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"ph-nathan"},"content":"        assertFalse(DESC_AURORA.equals(5));","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"ph-nathan"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"ph-nathan"},"content":"        assertFalse(DESC_AURORA.equals(DESC_BOXING));","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"ph-nathan"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"ph-nathan"},"content":"        EditEventDescriptor editedAurora \u003d new EditEventDescriptorBuilder(DESC_AURORA)","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"ph-nathan"},"content":"                .withName(VALID_NAME_BOXING).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"ph-nathan"},"content":"        assertFalse(DESC_AURORA.equals(editedAurora));","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"ph-nathan"},"content":"        // different location -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"ph-nathan"},"content":"        editedAurora \u003d new EditEventDescriptorBuilder(DESC_AURORA).withLocation(VALID_LOCATION_BOXING).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"ph-nathan"},"content":"        assertFalse(DESC_AURORA.equals(editedAurora));","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"ph-nathan"},"content":"        // different date -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"ph-nathan"},"content":"        editedAurora \u003d new EditEventDescriptorBuilder(DESC_AURORA).withDate(VALID_DATE_BOXING).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"ph-nathan"},"content":"        assertFalse(DESC_AURORA.equals(editedAurora));","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"ph-nathan"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"ph-nathan"},"content":"        editedAurora \u003d new EditEventDescriptorBuilder(DESC_AURORA).withTags(VALID_TAG_BOXING).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"ph-nathan"},"content":"        assertFalse(DESC_AURORA.equals(editedAurora));","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"ph-nathan"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"ph-nathan"},"content":"        EditEventCommand.EditEventDescriptor editEventDescriptor \u003d new EditEventCommand.EditEventDescriptor();","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"ph-nathan"},"content":"        String expected \u003d EditEventCommand.EditEventDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"ph-nathan"},"content":"                + editEventDescriptor.getName().orElse(null) + \", location\u003d\"","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"ph-nathan"},"content":"                + editEventDescriptor.getLocation().orElse(null) + \", date\u003d\"","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"ph-nathan"},"content":"                + editEventDescriptor.getDate().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"ph-nathan"},"content":"                + editEventDescriptor.getTags().orElse(null) + \"}\";","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(expected, editEventDescriptor.toString());","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"ph-nathan":67}},{"path":"src/test/java/seedu/ccacommander/logic/commands/EditMemberCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.commands;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.showMemberAtIndex;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalCcaCommander.getTypicalCcaCommander;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalIndexes.INDEX_FIRST_MEMBER;","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalIndexes.INDEX_SECOND_MEMBER;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.core.index.Index;","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.Messages;","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.logic.commands.EditMemberCommand.EditMemberDescriptor;","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.CcaCommander;","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.ModelManager;","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.UserPrefs;","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Member;","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.shared.Name;","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.testutil.EditMemberDescriptorBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.testutil.MemberBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":33,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"ph-nathan"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditMemberCommand.","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"ph-nathan"},"content":"public class EditMemberCommandTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":39,"author":{"gitId":"andrechuakj"},"content":"    private Model model \u003d new ModelManager(getTypicalCcaCommander(), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"wr1159"},"content":"        Member editedMember \u003d new MemberBuilder().build();","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"ph-nathan"},"content":"        EditMemberCommand.EditMemberDescriptor descriptor \u003d new EditMemberDescriptorBuilder(editedMember).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"ph-nathan"},"content":"        EditMemberCommand editMemberCommand \u003d new EditMemberCommand(INDEX_FIRST_MEMBER, descriptor);","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"ph-nathan"},"content":"        String commitMessage \u003d String.format(EditMemberCommand.MESSAGE_COMMIT, editedMember.getName());","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"ph-nathan"},"content":"        String expectedMessage \u003d String.format(EditMemberCommand.MESSAGE_EDIT_MEMBER_SUCCESS,","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"ph-nathan"},"content":"                Messages.format(editedMember));","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"andrechuakj"},"content":"        Model expectedModel \u003d new ModelManager(new CcaCommander(model.getCcaCommander()), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"wr1159"},"content":"        expectedModel.setMember(model.getFilteredMemberList().get(0), editedMember);","lastModifiedDate":"2023-10-02"},{"lineNumber":53,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"ph-nathan"},"content":"        Name prevName \u003d model.getFilteredMemberList().get(0).getName();","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"ph-nathan"},"content":"        Name newName \u003d editedMember.getName();","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"ph-nathan"},"content":"        if (!prevName.equals(newName)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"ph-nathan"},"content":"            expectedModel.editEnrolmentsWithMemberName(prevName, newName);","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"ph-nathan"},"content":"        expectedModel.commit(commitMessage);","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"ph-nathan"},"content":"        assertCommandSuccess(editMemberCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"wr1159"},"content":"        Index indexLastMember \u003d Index.fromOneBased(model.getFilteredMemberList().size());","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"wr1159"},"content":"        Member lastMember \u003d model.getFilteredMemberList().get(indexLastMember.getZeroBased());","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"wr1159"},"content":"        MemberBuilder memberInList \u003d new MemberBuilder(lastMember);","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"wr1159"},"content":"        Member editedMember \u003d memberInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"ph-nathan"},"content":"        EditMemberCommand.EditMemberDescriptor descriptor \u003d new EditMemberDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"ph-nathan"},"content":"        EditMemberCommand editMemberCommand \u003d new EditMemberCommand(indexLastMember, descriptor);","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"ph-nathan"},"content":"        String commitMessage \u003d String.format(EditMemberCommand.MESSAGE_COMMIT, editedMember.getName());","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"ph-nathan"},"content":"        String expectedMessage \u003d String.format(EditMemberCommand.MESSAGE_EDIT_MEMBER_SUCCESS,","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"ph-nathan"},"content":"                Messages.format(editedMember));","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"andrechuakj"},"content":"        Model expectedModel \u003d new ModelManager(new CcaCommander(model.getCcaCommander()), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":83,"author":{"gitId":"wr1159"},"content":"        expectedModel.setMember(lastMember, editedMember);","lastModifiedDate":"2023-10-02"},{"lineNumber":84,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":85,"author":{"gitId":"ph-nathan"},"content":"        Name prevName \u003d lastMember.getName();","lastModifiedDate":"2023-10-30"},{"lineNumber":86,"author":{"gitId":"ph-nathan"},"content":"        Name newName \u003d editedMember.getName();","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"ph-nathan"},"content":"        if (!prevName.equals(newName)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"ph-nathan"},"content":"            expectedModel.editEnrolmentsWithMemberName(prevName, newName);","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"ph-nathan"},"content":"        expectedModel.commit(commitMessage);","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"ph-nathan"},"content":"        assertCommandSuccess(editMemberCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"ph-nathan"},"content":"        EditMemberCommand editMemberCommand \u003d new EditMemberCommand(INDEX_FIRST_MEMBER,","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"ph-nathan"},"content":"                                                                    new EditMemberCommand.EditMemberDescriptor());","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"wr1159"},"content":"        Member editedMember \u003d model.getFilteredMemberList().get(INDEX_FIRST_MEMBER.getZeroBased());","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"ph-nathan"},"content":"        String commitMessage \u003d String.format(EditMemberCommand.MESSAGE_COMMIT, editedMember.getName());","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"ph-nathan"},"content":"        String expectedMessage \u003d String.format(EditMemberCommand.MESSAGE_EDIT_MEMBER_SUCCESS,","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"ph-nathan"},"content":"                                               Messages.format(editedMember));","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"andrechuakj"},"content":"        Model expectedModel \u003d new ModelManager(new CcaCommander(model.getCcaCommander()), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":107,"author":{"gitId":"SelwynAng"},"content":"        expectedModel.commit(commitMessage);","lastModifiedDate":"2023-10-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":109,"author":{"gitId":"ph-nathan"},"content":"        assertCommandSuccess(editMemberCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"wr1159"},"content":"        showMemberAtIndex(model, INDEX_FIRST_MEMBER);","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"wr1159"},"content":"        Member memberInFilteredList \u003d model.getFilteredMemberList().get(INDEX_FIRST_MEMBER.getZeroBased());","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"ph-nathan"},"content":"        Member editedMember \u003d new MemberBuilder(memberInFilteredList).withName(VALID_NAME_AMY).build();","lastModifiedDate":"2023-11-01"},{"lineNumber":118,"author":{"gitId":"ph-nathan"},"content":"        EditMemberCommand editMemberCommand \u003d new EditMemberCommand(INDEX_FIRST_MEMBER,","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"ph-nathan"},"content":"                new EditMemberDescriptorBuilder().withName(VALID_NAME_AMY).build());","lastModifiedDate":"2023-11-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"ph-nathan"},"content":"        String commitMessage \u003d String.format(EditMemberCommand.MESSAGE_COMMIT, editedMember.getName());","lastModifiedDate":"2023-10-26"},{"lineNumber":122,"author":{"gitId":"ph-nathan"},"content":"        String expectedMessage \u003d String.format(EditMemberCommand.MESSAGE_EDIT_MEMBER_SUCCESS,","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"ph-nathan"},"content":"                                               Messages.format(editedMember));","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"andrechuakj"},"content":"        Model expectedModel \u003d new ModelManager(new CcaCommander(model.getCcaCommander()), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":126,"author":{"gitId":"wr1159"},"content":"        expectedModel.setMember(model.getFilteredMemberList().get(0), editedMember);","lastModifiedDate":"2023-10-02"},{"lineNumber":127,"author":{"gitId":"ph-nathan"},"content":"        expectedModel.commit(commitMessage);","lastModifiedDate":"2023-11-01"},{"lineNumber":128,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":129,"author":{"gitId":"ph-nathan"},"content":"        Name prevName \u003d model.getFilteredMemberList().get(0).getName();","lastModifiedDate":"2023-10-30"},{"lineNumber":130,"author":{"gitId":"ph-nathan"},"content":"        Name newName \u003d editedMember.getName();","lastModifiedDate":"2023-10-30"},{"lineNumber":131,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":132,"author":{"gitId":"ph-nathan"},"content":"        if (!prevName.equals(newName)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":133,"author":{"gitId":"ph-nathan"},"content":"            expectedModel.editEnrolmentsWithMemberName(prevName, newName);","lastModifiedDate":"2023-11-02"},{"lineNumber":134,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"ph-nathan"},"content":"        assertCommandSuccess(editMemberCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"wr1159"},"content":"    public void execute_duplicateMemberUnfilteredList_failure() {","lastModifiedDate":"2023-10-12"},{"lineNumber":141,"author":{"gitId":"wr1159"},"content":"        Member firstMember \u003d model.getFilteredMemberList().get(INDEX_FIRST_MEMBER.getZeroBased());","lastModifiedDate":"2023-10-12"},{"lineNumber":142,"author":{"gitId":"ph-nathan"},"content":"        EditMemberCommand.EditMemberDescriptor descriptor \u003d new EditMemberDescriptorBuilder(firstMember).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"ph-nathan"},"content":"        EditMemberCommand editMemberCommand \u003d new EditMemberCommand(INDEX_SECOND_MEMBER, descriptor);","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"ph-nathan"},"content":"        assertCommandFailure(editMemberCommand, model, EditMemberCommand.MESSAGE_DUPLICATE_MEMBER);","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"wr1159"},"content":"    public void execute_duplicateMemberFilteredList_failure() {","lastModifiedDate":"2023-10-12"},{"lineNumber":150,"author":{"gitId":"wr1159"},"content":"        showMemberAtIndex(model, INDEX_FIRST_MEMBER);","lastModifiedDate":"2023-10-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"andrechuakj"},"content":"        // edit member in filtered list into a duplicate in CcaCommander","lastModifiedDate":"2023-10-21"},{"lineNumber":153,"author":{"gitId":"andrechuakj"},"content":"        Member memberInList \u003d model.getCcaCommander().getMemberList().get(INDEX_SECOND_MEMBER.getZeroBased());","lastModifiedDate":"2023-10-21"},{"lineNumber":154,"author":{"gitId":"ph-nathan"},"content":"        EditMemberCommand editMemberCommand \u003d new EditMemberCommand(INDEX_FIRST_MEMBER,","lastModifiedDate":"2023-10-26"},{"lineNumber":155,"author":{"gitId":"wr1159"},"content":"                new EditMemberDescriptorBuilder(memberInList).build());","lastModifiedDate":"2023-10-02"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":157,"author":{"gitId":"ph-nathan"},"content":"        assertCommandFailure(editMemberCommand, model, EditMemberCommand.MESSAGE_DUPLICATE_MEMBER);","lastModifiedDate":"2023-10-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":161,"author":{"gitId":"wr1159"},"content":"    public void execute_invalidMemberIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-12"},{"lineNumber":162,"author":{"gitId":"wr1159"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredMemberList().size() + 1);","lastModifiedDate":"2023-10-02"},{"lineNumber":163,"author":{"gitId":"wr1159"},"content":"        EditMemberDescriptor descriptor \u003d new EditMemberDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-02"},{"lineNumber":164,"author":{"gitId":"ph-nathan"},"content":"        EditMemberCommand editMemberCommand \u003d new EditMemberCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2023-10-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":166,"author":{"gitId":"ph-nathan"},"content":"        assertCommandFailure(editMemberCommand, model, Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":171,"author":{"gitId":"andrechuakj"},"content":"     * but smaller than size of CcaCommander","lastModifiedDate":"2023-10-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":174,"author":{"gitId":"wr1159"},"content":"    public void execute_invalidMemberIndexFilteredList_failure() {","lastModifiedDate":"2023-10-12"},{"lineNumber":175,"author":{"gitId":"wr1159"},"content":"        showMemberAtIndex(model, INDEX_FIRST_MEMBER);","lastModifiedDate":"2023-10-12"},{"lineNumber":176,"author":{"gitId":"wr1159"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_MEMBER;","lastModifiedDate":"2023-10-12"},{"lineNumber":177,"author":{"gitId":"andrechuakj"},"content":"        // ensures that outOfBoundIndex is still in bounds of CcaCommander list","lastModifiedDate":"2023-10-21"},{"lineNumber":178,"author":{"gitId":"andrechuakj"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getCcaCommander().getMemberList().size());","lastModifiedDate":"2023-10-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":180,"author":{"gitId":"ph-nathan"},"content":"        EditMemberCommand editMemberCommand \u003d new EditMemberCommand(outOfBoundIndex,","lastModifiedDate":"2023-10-26"},{"lineNumber":181,"author":{"gitId":"wr1159"},"content":"                new EditMemberDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-10-02"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":183,"author":{"gitId":"ph-nathan"},"content":"        assertCommandFailure(editMemberCommand, model, Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":188,"author":{"gitId":"ph-nathan"},"content":"        final EditMemberCommand standardCommand \u003d new EditMemberCommand(INDEX_FIRST_MEMBER, DESC_AMY);","lastModifiedDate":"2023-10-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":191,"author":{"gitId":"wr1159"},"content":"        EditMemberDescriptor copyDescriptor \u003d new EditMemberDescriptor(DESC_AMY);","lastModifiedDate":"2023-10-02"},{"lineNumber":192,"author":{"gitId":"ph-nathan"},"content":"        EditMemberCommand commandWithSameValues \u003d new EditMemberCommand(INDEX_FIRST_MEMBER, copyDescriptor);","lastModifiedDate":"2023-10-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":205,"author":{"gitId":"ph-nathan"},"content":"        assertFalse(standardCommand.equals(new EditMemberCommand(INDEX_SECOND_MEMBER, DESC_AMY)));","lastModifiedDate":"2023-10-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":208,"author":{"gitId":"ph-nathan"},"content":"        assertFalse(standardCommand.equals(new EditMemberCommand(INDEX_FIRST_MEMBER, DESC_BOB)));","lastModifiedDate":"2023-10-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":214,"author":{"gitId":"ph-nathan"},"content":"        EditMemberDescriptor editMemberDescriptor \u003d new EditMemberCommand.EditMemberDescriptor();","lastModifiedDate":"2023-10-26"},{"lineNumber":215,"author":{"gitId":"ph-nathan"},"content":"        EditMemberCommand editMemberCommand \u003d new EditMemberCommand(index, editMemberDescriptor);","lastModifiedDate":"2023-10-26"},{"lineNumber":216,"author":{"gitId":"ph-nathan"},"content":"        String expected \u003d EditMemberCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editMemberDescriptor\u003d\"","lastModifiedDate":"2023-10-26"},{"lineNumber":217,"author":{"gitId":"wr1159"},"content":"                + editMemberDescriptor + \"}\";","lastModifiedDate":"2023-10-02"},{"lineNumber":218,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(expected, editMemberCommand.toString());","lastModifiedDate":"2023-10-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"wr1159":25,"andrechuakj":31,"SelwynAng":1,"ph-nathan":72,"-":92}},{"path":"src/test/java/seedu/ccacommander/logic/commands/EditMemberDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.commands;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.logic.commands.EditMemberCommand.EditMemberDescriptor;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.testutil.EditMemberDescriptorBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"wr1159"},"content":"public class EditMemberDescriptorTest {","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"ph-nathan"},"content":"        EditMemberCommand.EditMemberDescriptor descriptorWithSameValues \u003d new EditMemberDescriptor(DESC_AMY);","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"wr1159"},"content":"        EditMemberDescriptor editedAmy \u003d new EditMemberDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"wr1159"},"content":"        editedAmy \u003d new EditMemberDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"wr1159"},"content":"        editedAmy \u003d new EditMemberDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-10-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"andrechuakj"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"wr1159"},"content":"        editedAmy \u003d new EditMemberDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-10-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"wr1159"},"content":"        editedAmy \u003d new EditMemberDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"ph-nathan"},"content":"        EditMemberCommand.EditMemberDescriptor editMemberDescriptor \u003d new EditMemberCommand.EditMemberDescriptor();","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"ph-nathan"},"content":"        String expected \u003d EditMemberCommand.EditMemberDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"andrechuakj"},"content":"                + editMemberDescriptor.getGender().orElse(null) + \", gender\u003d\"","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"wr1159"},"content":"                + editMemberDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2023-10-02"},{"lineNumber":66,"author":{"gitId":"wr1159"},"content":"                + editMemberDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2023-10-02"},{"lineNumber":67,"author":{"gitId":"andrechuakj"},"content":"                + editMemberDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"wr1159"},"content":"                + editMemberDescriptor.getAddress().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2023-10-02"},{"lineNumber":69,"author":{"gitId":"wr1159"},"content":"                + editMemberDescriptor.getTags().orElse(null) + \"}\";","lastModifiedDate":"2023-10-02"},{"lineNumber":70,"author":{"gitId":"wr1159"},"content":"        assertEquals(expected, editMemberDescriptor.toString());","lastModifiedDate":"2023-10-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"wr1159":11,"andrechuakj":12,"ph-nathan":4,"-":45}},{"path":"src/test/java/seedu/ccacommander/logic/commands/EnrolCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dylkaw"},"content":"package seedu.ccacommander.logic.commands;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_HOURS_A;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_INDEX_ONE;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_INDEX_TWO;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_REMARK_A;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.testutil.TypicalCcaCommander.getTypicalCcaCommander;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalEnrolments.ALICE_AURORA;","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalEnrolments.BENSON_BOXING;","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"dylkaw"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"dylkaw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.logic.Messages;","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.model.Model;","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.model.ModelManager;","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.model.UserPrefs;","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.enrolment.Enrolment;","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.testutil.EnrolmentBuilder;","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"dylkaw"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"dylkaw"},"content":" * Contains integration tests (interaction with the Model) for {@code EnrolCommand}.","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"dylkaw"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"dylkaw"},"content":"public class EnrolCommandIntegrationTest {","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"dylkaw"},"content":"    private Model model;","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"dylkaw"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"dylkaw"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"dylkaw"},"content":"        model \u003d new ModelManager(getTypicalCcaCommander(), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"andrechuakj"},"content":"    public void execute_newEnrolment_success() {","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"andrechuakj"},"content":"        Enrolment validEnrolment \u003d new EnrolmentBuilder().withMemberName(ALICE_AURORA.getMemberName().name)","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"dylkaw"},"content":"                .withEventName(BENSON_BOXING.getEventName().name)","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"dylkaw"},"content":"                .withHours(ALICE_AURORA.getHours().value.toString())","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"dylkaw"},"content":"                .withRemark(ALICE_AURORA.getRemark().value)","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"dylkaw"},"content":"                .build();","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"SelwynAng"},"content":"        String commitMessage \u003d String.format(EnrolCommand.MESSAGE_COMMIT,","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"andrechuakj"},"content":"                validEnrolment.getMemberAndEventEnrolment());","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"dylkaw"},"content":"        Model expectedModel \u003d new ModelManager(model.getCcaCommander(), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"andrechuakj"},"content":"        expectedModel.createEnrolment(validEnrolment);","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"SelwynAng"},"content":"        expectedModel.commit(commitMessage);","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"andrechuakj"},"content":"        assertCommandSuccess(new EnrolCommand(VALID_INDEX_ONE, VALID_INDEX_TWO, Optional.of(VALID_HOURS_A),","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"andrechuakj"},"content":"                        Optional.of(VALID_REMARK_A)),","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"andrechuakj"},"content":"                model,","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"andrechuakj"},"content":"                String.format(EnrolCommand.MESSAGE_SUCCESS, Messages.format(validEnrolment)),","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"dylkaw"},"content":"                expectedModel);","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"dylkaw"},"content":"    public void execute_duplicateEvent_throwsCommandException() {","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"andrechuakj"},"content":"        assertCommandFailure(new EnrolCommand(VALID_INDEX_ONE, VALID_INDEX_ONE, Optional.of(VALID_HOURS_A),","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"andrechuakj"},"content":"                        Optional.of(VALID_REMARK_A)),","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"andrechuakj"},"content":"                model,","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"andrechuakj"},"content":"                EnrolCommand.MESSAGE_DUPLICATE_ENROLMENT);","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"dylkaw"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"andrechuakj":19,"dylkaw":45,"SelwynAng":2}},{"path":"src/test/java/seedu/ccacommander/logic/commands/EnrolCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dylkaw"},"content":"package seedu.ccacommander.logic.commands;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"dylkaw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"dylkaw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"dylkaw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"dylkaw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_HOURS_A;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_HOURS_B;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_INDEX_ONE;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_INDEX_TWO;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_REMARK_A;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_REMARK_B;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalEnrolments.ALICE_AURORA;","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.testutil.TypicalEvents.AURORA_BOREALIS;","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.testutil.TypicalMembers.ALICE;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"dylkaw"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"dylkaw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"dylkaw"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"ph-nathan"},"content":"import java.util.Collection;","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"andrechuakj"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"dylkaw"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"dylkaw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"dylkaw"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"dylkaw"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.commons.core.GuiSettings;","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.logic.Messages;","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.model.CcaCommander;","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.model.Model;","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.model.ReadOnlyCcaCommander;","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.model.VersionCaptures;","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.enrolment.Enrolment;","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.model.event.Event;","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.model.event.UniqueEventList;","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.model.member.Member;","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.model.member.UniqueMemberList;","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.shared.Name;","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.testutil.EnrolmentBuilder;","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"dylkaw"},"content":"public class EnrolCommandTest {","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"dylkaw"},"content":"    public void constructor_nullFields_throwsNullPointerException() {","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"dylkaw"},"content":"        assertThrows(NullPointerException.class, () -\u003e new EnrolCommand(null, null, null, null));","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"andrechuakj"},"content":"    public void execute_enrolmentAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"andrechuakj"},"content":"        ModelStubAcceptingEnrolmentAdded modelStub \u003d new ModelStubAcceptingEnrolmentAdded();","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"andrechuakj"},"content":"        Enrolment validEnrolment \u003d new EnrolmentBuilder().build();","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"dylkaw"},"content":"        CommandResult commandResult \u003d","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"andrechuakj"},"content":"                new EnrolCommand(VALID_INDEX_ONE, VALID_INDEX_ONE,","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"andrechuakj"},"content":"                        Optional.of(VALID_HOURS_A), Optional.of(VALID_REMARK_A))","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"dylkaw"},"content":"                        .execute(modelStub);","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"andrechuakj"},"content":"        assertEquals(String.format(EnrolCommand.MESSAGE_SUCCESS, Messages.format(validEnrolment)),","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"dylkaw"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"andrechuakj"},"content":"        assertEquals(Arrays.asList(validEnrolment), modelStub.enrolmentsAdded);","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"andrechuakj"},"content":"    public void execute_duplicateEnrolment_throwsCommandException() {","lastModifiedDate":"2023-10-28"},{"lineNumber":68,"author":{"gitId":"dylkaw"},"content":"        EnrolCommand enrolCommand \u003d","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"andrechuakj"},"content":"                new EnrolCommand(VALID_INDEX_ONE, VALID_INDEX_ONE,","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"andrechuakj"},"content":"                        Optional.of(VALID_HOURS_A), Optional.of(VALID_REMARK_A));","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"andrechuakj"},"content":"        ModelStubWithEnrolment modelStub \u003d new ModelStubWithEnrolment(ALICE_AURORA);","lastModifiedDate":"2023-10-28"},{"lineNumber":72,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"dylkaw"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"andrechuakj"},"content":"                EnrolCommand.MESSAGE_DUPLICATE_ENROLMENT, () -\u003e enrolCommand.execute(modelStub));","lastModifiedDate":"2023-10-28"},{"lineNumber":75,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"dylkaw"},"content":"    public void equals() {","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"dylkaw"},"content":"        EnrolCommand enrolEventOneCommand \u003d","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"andrechuakj"},"content":"                new EnrolCommand(VALID_INDEX_ONE, VALID_INDEX_ONE,","lastModifiedDate":"2023-10-30"},{"lineNumber":81,"author":{"gitId":"andrechuakj"},"content":"                        Optional.of(VALID_HOURS_A), Optional.of(VALID_REMARK_A));","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"dylkaw"},"content":"        EnrolCommand enrolEventTwoCommand \u003d","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"andrechuakj"},"content":"                new EnrolCommand(VALID_INDEX_TWO, VALID_INDEX_TWO,","lastModifiedDate":"2023-10-30"},{"lineNumber":84,"author":{"gitId":"andrechuakj"},"content":"                        Optional.of(VALID_HOURS_B), Optional.of(VALID_REMARK_B));","lastModifiedDate":"2023-10-30"},{"lineNumber":85,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"dylkaw"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"dylkaw"},"content":"        assertTrue(enrolEventOneCommand.equals(enrolEventOneCommand));","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"dylkaw"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"dylkaw"},"content":"        EnrolCommand enrolEventOneCommandCopy \u003d","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"andrechuakj"},"content":"                new EnrolCommand(VALID_INDEX_ONE, VALID_INDEX_ONE,","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"andrechuakj"},"content":"                        Optional.of(VALID_HOURS_A), Optional.of(VALID_REMARK_A));","lastModifiedDate":"2023-10-30"},{"lineNumber":93,"author":{"gitId":"dylkaw"},"content":"        assertTrue(enrolEventOneCommand.equals(enrolEventOneCommandCopy));","lastModifiedDate":"2023-10-24"},{"lineNumber":94,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":95,"author":{"gitId":"dylkaw"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":96,"author":{"gitId":"dylkaw"},"content":"        assertFalse(enrolEventOneCommand.equals(1));","lastModifiedDate":"2023-10-24"},{"lineNumber":97,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":98,"author":{"gitId":"dylkaw"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":99,"author":{"gitId":"dylkaw"},"content":"        assertFalse(enrolEventOneCommand.equals(null));","lastModifiedDate":"2023-10-24"},{"lineNumber":100,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":101,"author":{"gitId":"dylkaw"},"content":"        // different member -\u003e returns false","lastModifiedDate":"2023-10-24"},{"lineNumber":102,"author":{"gitId":"dylkaw"},"content":"        assertFalse(enrolEventOneCommand.equals(enrolEventTwoCommand));","lastModifiedDate":"2023-10-24"},{"lineNumber":103,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":104,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":106,"author":{"gitId":"dylkaw"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-24"},{"lineNumber":107,"author":{"gitId":"dylkaw"},"content":"        EnrolCommand enrolCommand \u003d","lastModifiedDate":"2023-10-24"},{"lineNumber":108,"author":{"gitId":"andrechuakj"},"content":"                new EnrolCommand(VALID_INDEX_ONE, VALID_INDEX_ONE,","lastModifiedDate":"2023-10-30"},{"lineNumber":109,"author":{"gitId":"andrechuakj"},"content":"                        Optional.of(VALID_HOURS_A), Optional.of(VALID_REMARK_A));","lastModifiedDate":"2023-10-30"},{"lineNumber":110,"author":{"gitId":"dylkaw"},"content":"        String expected \u003d EnrolCommand.class.getCanonicalName() + \"{member index\u003d\" + VALID_INDEX_ONE","lastModifiedDate":"2023-10-24"},{"lineNumber":111,"author":{"gitId":"andrechuakj"},"content":"                + \", event index\u003d\" + VALID_INDEX_ONE + \", hours\u003d\" + Optional.of(VALID_HOURS_A)","lastModifiedDate":"2023-10-30"},{"lineNumber":112,"author":{"gitId":"andrechuakj"},"content":"                + \", remark\u003d\" + Optional.of(VALID_REMARK_A) + \"}\";","lastModifiedDate":"2023-10-30"},{"lineNumber":113,"author":{"gitId":"dylkaw"},"content":"        assertEquals(enrolCommand.toString(), expected);","lastModifiedDate":"2023-10-24"},{"lineNumber":114,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":115,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":116,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":117,"author":{"gitId":"dylkaw"},"content":"     * A default model stub that has all the methods failing.","lastModifiedDate":"2023-10-24"},{"lineNumber":118,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":119,"author":{"gitId":"dylkaw"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2023-10-24"},{"lineNumber":120,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":121,"author":{"gitId":"dylkaw"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-10-24"},{"lineNumber":122,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":123,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":124,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":125,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":126,"author":{"gitId":"dylkaw"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-10-24"},{"lineNumber":127,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":128,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":129,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":130,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":131,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":132,"author":{"gitId":"dylkaw"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-10-24"},{"lineNumber":133,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":134,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":135,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":136,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":137,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":138,"author":{"gitId":"dylkaw"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-10-24"},{"lineNumber":139,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":140,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":141,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":142,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":143,"author":{"gitId":"dylkaw"},"content":"        public Path getCcaCommanderFilePath() {","lastModifiedDate":"2023-10-24"},{"lineNumber":144,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":145,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":146,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":147,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":148,"author":{"gitId":"dylkaw"},"content":"        public void setCcaCommanderFilePath(Path ccaCommanderFilePath) {","lastModifiedDate":"2023-10-24"},{"lineNumber":149,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":150,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":151,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":152,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":153,"author":{"gitId":"dylkaw"},"content":"        public void setCcaCommander(ReadOnlyCcaCommander newData) {","lastModifiedDate":"2023-10-28"},{"lineNumber":154,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":155,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":156,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":157,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":158,"author":{"gitId":"dylkaw"},"content":"        public ReadOnlyCcaCommander getCcaCommander() {","lastModifiedDate":"2023-10-28"},{"lineNumber":159,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":160,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":161,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":162,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":163,"author":{"gitId":"dylkaw"},"content":"        public void createMember(Member member) {","lastModifiedDate":"2023-10-28"},{"lineNumber":164,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":165,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":166,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":167,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":168,"author":{"gitId":"dylkaw"},"content":"        public boolean hasMember(Member member) {","lastModifiedDate":"2023-10-24"},{"lineNumber":169,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":170,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":171,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":172,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":173,"author":{"gitId":"dylkaw"},"content":"        public void deleteMember(Member target) {","lastModifiedDate":"2023-10-24"},{"lineNumber":174,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":175,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":176,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":177,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":178,"author":{"gitId":"dylkaw"},"content":"        public void setMember(Member target, Member editedMember) {","lastModifiedDate":"2023-10-24"},{"lineNumber":179,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":180,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":181,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":182,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":183,"author":{"gitId":"dylkaw"},"content":"        public void createEvent(Event event) {","lastModifiedDate":"2023-10-24"},{"lineNumber":184,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":185,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":186,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":187,"author":{"gitId":"dylkaw"},"content":"        public boolean hasEvent(Event event) {","lastModifiedDate":"2023-10-24"},{"lineNumber":188,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":189,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":190,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":191,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":192,"author":{"gitId":"dylkaw"},"content":"        public void deleteEvent(Event target) {","lastModifiedDate":"2023-10-24"},{"lineNumber":193,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":194,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":195,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":196,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":197,"author":{"gitId":"dylkaw"},"content":"        public void setEvent(Event event, Event editedEvent) {","lastModifiedDate":"2023-10-24"},{"lineNumber":198,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":199,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":200,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":201,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":202,"author":{"gitId":"andrechuakj"},"content":"        public void createEnrolment(Enrolment enrolment) {","lastModifiedDate":"2023-10-28"},{"lineNumber":203,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":204,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":205,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":206,"author":{"gitId":"andrechuakj"},"content":"        public boolean hasEnrolment(Enrolment enrolment) {","lastModifiedDate":"2023-10-28"},{"lineNumber":207,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":208,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":209,"author":{"gitId":"ph-nathan"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":210,"author":{"gitId":"ph-nathan"},"content":"        public void editEnrolmentsWithEventName(Name prevName, Name newName) {","lastModifiedDate":"2023-11-02"},{"lineNumber":211,"author":{"gitId":"ph-nathan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":212,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":213,"author":{"gitId":"ph-nathan"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":214,"author":{"gitId":"ph-nathan"},"content":"        public void editEnrolmentsWithMemberName(Name prevName, Name newName) {","lastModifiedDate":"2023-11-02"},{"lineNumber":215,"author":{"gitId":"ph-nathan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":216,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":217,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":218,"author":{"gitId":"SelwynAng"},"content":"        @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":219,"author":{"gitId":"SelwynAng"},"content":"        public void deleteEnrolment(Enrolment target) {","lastModifiedDate":"2023-10-28"},{"lineNumber":220,"author":{"gitId":"SelwynAng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-28"},{"lineNumber":221,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":222,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":223,"author":{"gitId":"wr1159"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":224,"author":{"gitId":"wr1159"},"content":"        public void deleteEnrolmentsWithEventName(Name eventName) {","lastModifiedDate":"2023-11-02"},{"lineNumber":225,"author":{"gitId":"wr1159"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":226,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":227,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":228,"author":{"gitId":"wr1159"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":229,"author":{"gitId":"wr1159"},"content":"        public void deleteEnrolmentsWithMemberName(Name memberName) {","lastModifiedDate":"2023-11-02"},{"lineNumber":230,"author":{"gitId":"wr1159"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":231,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":232,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":233,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":234,"author":{"gitId":"dylkaw"},"content":"        public void setEnrolment(Enrolment enrolment, Enrolment editedEnrolment) {","lastModifiedDate":"2023-10-28"},{"lineNumber":235,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-28"},{"lineNumber":236,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":237,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":238,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":239,"author":{"gitId":"dylkaw"},"content":"        public ObservableList\u003cMember\u003e getFilteredMemberList() {","lastModifiedDate":"2023-10-24"},{"lineNumber":240,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":241,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":242,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":243,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":244,"author":{"gitId":"dylkaw"},"content":"        public void updateFilteredMemberList(Predicate\u003cMember\u003e predicate) {","lastModifiedDate":"2023-10-24"},{"lineNumber":245,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":246,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":247,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":248,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":249,"author":{"gitId":"dylkaw"},"content":"        public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2023-10-24"},{"lineNumber":250,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":251,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":252,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":253,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":254,"author":{"gitId":"dylkaw"},"content":"        public void updateFilteredEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2023-10-24"},{"lineNumber":255,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":256,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":257,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":258,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":259,"author":{"gitId":"andrechuakj"},"content":"        public ObservableList\u003cEnrolment\u003e getFilteredEnrolmentList() {","lastModifiedDate":"2023-10-28"},{"lineNumber":260,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":261,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":262,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":263,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":264,"author":{"gitId":"andrechuakj"},"content":"        public void updateFilteredEnrolmentList(Predicate\u003cEnrolment\u003e enrolment) {","lastModifiedDate":"2023-10-28"},{"lineNumber":265,"author":{"gitId":"dylkaw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":266,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":267,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":268,"author":{"gitId":"ph-nathan"},"content":"        @Override","lastModifiedDate":"2023-11-03"},{"lineNumber":269,"author":{"gitId":"ph-nathan"},"content":"        public Collection\u003cName\u003e updateMemberHoursAndRemark(Name eventName) {","lastModifiedDate":"2023-11-03"},{"lineNumber":270,"author":{"gitId":"ph-nathan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-03"},{"lineNumber":271,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":272,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":273,"author":{"gitId":"ph-nathan"},"content":"        @Override","lastModifiedDate":"2023-11-03"},{"lineNumber":274,"author":{"gitId":"ph-nathan"},"content":"        public Collection\u003cName\u003e updateEventHoursAndRemark(Name memberName) {","lastModifiedDate":"2023-11-03"},{"lineNumber":275,"author":{"gitId":"ph-nathan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-03"},{"lineNumber":276,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":277,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":278,"author":{"gitId":"SelwynAng"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":279,"author":{"gitId":"SelwynAng"},"content":"        public void commit(String commitMessage) {","lastModifiedDate":"2023-10-26"},{"lineNumber":280,"author":{"gitId":"SelwynAng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":281,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":282,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":283,"author":{"gitId":"SelwynAng"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":284,"author":{"gitId":"SelwynAng"},"content":"        public boolean canUndo() {","lastModifiedDate":"2023-10-26"},{"lineNumber":285,"author":{"gitId":"SelwynAng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":286,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":287,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":288,"author":{"gitId":"SelwynAng"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":289,"author":{"gitId":"SelwynAng"},"content":"        public String undo() {","lastModifiedDate":"2023-10-26"},{"lineNumber":290,"author":{"gitId":"SelwynAng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":291,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":292,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":293,"author":{"gitId":"SelwynAng"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":294,"author":{"gitId":"SelwynAng"},"content":"        public boolean canRedo() {","lastModifiedDate":"2023-10-26"},{"lineNumber":295,"author":{"gitId":"SelwynAng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":296,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":297,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":298,"author":{"gitId":"SelwynAng"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":299,"author":{"gitId":"SelwynAng"},"content":"        public String redo() {","lastModifiedDate":"2023-10-26"},{"lineNumber":300,"author":{"gitId":"SelwynAng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":301,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":302,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":303,"author":{"gitId":"SelwynAng"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":304,"author":{"gitId":"SelwynAng"},"content":"        public VersionCaptures viewVersionCaptures() {","lastModifiedDate":"2023-10-26"},{"lineNumber":305,"author":{"gitId":"SelwynAng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":306,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":307,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":308,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":309,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":310,"author":{"gitId":"andrechuakj"},"content":"     * A Model stub that contains a single enrolment.","lastModifiedDate":"2023-10-28"},{"lineNumber":311,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":312,"author":{"gitId":"andrechuakj"},"content":"    private class ModelStubWithEnrolment extends ModelStub {","lastModifiedDate":"2023-10-28"},{"lineNumber":313,"author":{"gitId":"dylkaw"},"content":"        final UniqueMemberList members \u003d new UniqueMemberList();","lastModifiedDate":"2023-10-24"},{"lineNumber":314,"author":{"gitId":"dylkaw"},"content":"        final UniqueEventList events \u003d new UniqueEventList();","lastModifiedDate":"2023-10-24"},{"lineNumber":315,"author":{"gitId":"andrechuakj"},"content":"        private final Enrolment enrolment;","lastModifiedDate":"2023-10-28"},{"lineNumber":316,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":317,"author":{"gitId":"andrechuakj"},"content":"        ModelStubWithEnrolment(Enrolment enrolment) {","lastModifiedDate":"2023-10-28"},{"lineNumber":318,"author":{"gitId":"andrechuakj"},"content":"            requireNonNull(enrolment);","lastModifiedDate":"2023-10-28"},{"lineNumber":319,"author":{"gitId":"dylkaw"},"content":"            events.createEvent(AURORA_BOREALIS);","lastModifiedDate":"2023-10-24"},{"lineNumber":320,"author":{"gitId":"dylkaw"},"content":"            members.add(ALICE);","lastModifiedDate":"2023-10-24"},{"lineNumber":321,"author":{"gitId":"andrechuakj"},"content":"            this.enrolment \u003d enrolment;","lastModifiedDate":"2023-10-28"},{"lineNumber":322,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":323,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":324,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":325,"author":{"gitId":"dylkaw"},"content":"        public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2023-10-24"},{"lineNumber":326,"author":{"gitId":"dylkaw"},"content":"            return new FilteredList\u003c\u003e(events.asUnmodifiableObservableList());","lastModifiedDate":"2023-10-24"},{"lineNumber":327,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":328,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":329,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":330,"author":{"gitId":"dylkaw"},"content":"        public ObservableList\u003cMember\u003e getFilteredMemberList() {","lastModifiedDate":"2023-10-24"},{"lineNumber":331,"author":{"gitId":"dylkaw"},"content":"            return new FilteredList\u003c\u003e(members.asUnmodifiableObservableList());","lastModifiedDate":"2023-10-24"},{"lineNumber":332,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":333,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":334,"author":{"gitId":"andrechuakj"},"content":"        public boolean hasEnrolment(Enrolment enrolment) {","lastModifiedDate":"2023-10-28"},{"lineNumber":335,"author":{"gitId":"andrechuakj"},"content":"            requireNonNull(enrolment);","lastModifiedDate":"2023-10-28"},{"lineNumber":336,"author":{"gitId":"andrechuakj"},"content":"            return this.enrolment.isSameEnrolment(enrolment);","lastModifiedDate":"2023-10-28"},{"lineNumber":337,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":338,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":339,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":340,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":341,"author":{"gitId":"andrechuakj"},"content":"     * A Model stub that always accept the enrolment being added.","lastModifiedDate":"2023-10-28"},{"lineNumber":342,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":343,"author":{"gitId":"andrechuakj"},"content":"    private class ModelStubAcceptingEnrolmentAdded extends ModelStub {","lastModifiedDate":"2023-10-28"},{"lineNumber":344,"author":{"gitId":"dylkaw"},"content":"        final UniqueMemberList members \u003d new UniqueMemberList();","lastModifiedDate":"2023-10-24"},{"lineNumber":345,"author":{"gitId":"dylkaw"},"content":"        final UniqueEventList events \u003d new UniqueEventList();","lastModifiedDate":"2023-10-24"},{"lineNumber":346,"author":{"gitId":"andrechuakj"},"content":"        final ArrayList\u003cEnrolment\u003e enrolmentsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-28"},{"lineNumber":347,"author":{"gitId":"SelwynAng"},"content":"        final ArrayList\u003cString\u003e commitMessages \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-26"},{"lineNumber":348,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":349,"author":{"gitId":"andrechuakj"},"content":"        public ModelStubAcceptingEnrolmentAdded() {","lastModifiedDate":"2023-10-28"},{"lineNumber":350,"author":{"gitId":"dylkaw"},"content":"            events.createEvent(AURORA_BOREALIS);","lastModifiedDate":"2023-10-24"},{"lineNumber":351,"author":{"gitId":"dylkaw"},"content":"            members.add(ALICE);","lastModifiedDate":"2023-10-24"},{"lineNumber":352,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":353,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":354,"author":{"gitId":"SelwynAng"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":355,"author":{"gitId":"SelwynAng"},"content":"        public void commit(String commitMessage) {","lastModifiedDate":"2023-10-26"},{"lineNumber":356,"author":{"gitId":"SelwynAng"},"content":"            commitMessages.add(commitMessage);","lastModifiedDate":"2023-10-26"},{"lineNumber":357,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":358,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":359,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":360,"author":{"gitId":"andrechuakj"},"content":"        public boolean hasEnrolment(Enrolment enrolment) {","lastModifiedDate":"2023-10-28"},{"lineNumber":361,"author":{"gitId":"andrechuakj"},"content":"            requireNonNull(enrolment);","lastModifiedDate":"2023-10-28"},{"lineNumber":362,"author":{"gitId":"andrechuakj"},"content":"            return enrolmentsAdded.stream().anyMatch(enrolment::isSameEnrolment);","lastModifiedDate":"2023-10-28"},{"lineNumber":363,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":364,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":365,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":366,"author":{"gitId":"andrechuakj"},"content":"        public void createEnrolment(Enrolment enrolment) {","lastModifiedDate":"2023-10-28"},{"lineNumber":367,"author":{"gitId":"andrechuakj"},"content":"            requireNonNull(enrolment);","lastModifiedDate":"2023-10-28"},{"lineNumber":368,"author":{"gitId":"andrechuakj"},"content":"            enrolmentsAdded.add(enrolment);","lastModifiedDate":"2023-10-28"},{"lineNumber":369,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":370,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":371,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":372,"author":{"gitId":"dylkaw"},"content":"        public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2023-10-24"},{"lineNumber":373,"author":{"gitId":"dylkaw"},"content":"            return new FilteredList\u003c\u003e(events.asUnmodifiableObservableList());","lastModifiedDate":"2023-10-24"},{"lineNumber":374,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":375,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":376,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":377,"author":{"gitId":"dylkaw"},"content":"        public ObservableList\u003cMember\u003e getFilteredMemberList() {","lastModifiedDate":"2023-10-24"},{"lineNumber":378,"author":{"gitId":"dylkaw"},"content":"            return new FilteredList\u003c\u003e(members.asUnmodifiableObservableList());","lastModifiedDate":"2023-10-24"},{"lineNumber":379,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":380,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":381,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":382,"author":{"gitId":"dylkaw"},"content":"        public ReadOnlyCcaCommander getCcaCommander() {","lastModifiedDate":"2023-10-24"},{"lineNumber":383,"author":{"gitId":"dylkaw"},"content":"            return new CcaCommander();","lastModifiedDate":"2023-10-24"},{"lineNumber":384,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":385,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":386,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":387,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":388,"author":{"gitId":"dylkaw"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"wr1159":10,"andrechuakj":49,"dylkaw":264,"SelwynAng":44,"ph-nathan":21}},{"path":"src/test/java/seedu/ccacommander/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.commands;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.ModelManager;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"andrechuakj":5,"-":15}},{"path":"src/test/java/seedu/ccacommander/logic/commands/FindEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"package seedu.ccacommander.logic.commands;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.logic.Messages.MESSAGE_EVENTS_LISTED_OVERVIEW;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.testutil.TypicalCcaCommander.getTypicalCcaCommander;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.testutil.TypicalEvents.AURORA_BOREALIS;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.testutil.TypicalEvents.BOXING_DAY;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.testutil.TypicalEvents.CHINESE_NEW_YEAR;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.model.Model;","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.model.ModelManager;","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.model.UserPrefs;","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.model.event.EventNameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":" * Contains integration tests (interaction with the Model) for {@code FindEventCommand}.","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"SelwynAng"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"SelwynAng"},"content":"public class FindEventCommandTest {","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"SelwynAng"},"content":"    private Model model \u003d new ModelManager(getTypicalCcaCommander(), new UserPrefs());","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"SelwynAng"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalCcaCommander(), new UserPrefs());","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"SelwynAng"},"content":"    public void equals() {","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"SelwynAng"},"content":"        EventNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"SelwynAng"},"content":"                new EventNameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"SelwynAng"},"content":"        EventNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"SelwynAng"},"content":"                new EventNameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"SelwynAng"},"content":"        FindEventCommand findFirstEventCommand \u003d new FindEventCommand(firstPredicate);","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"SelwynAng"},"content":"        FindEventCommand findSecondEventCommand \u003d new FindEventCommand(secondPredicate);","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"SelwynAng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"SelwynAng"},"content":"        assertTrue(findFirstEventCommand.equals(findFirstEventCommand));","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"SelwynAng"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"SelwynAng"},"content":"        FindEventCommand findFirstEventCommandCopy \u003d new FindEventCommand(firstPredicate);","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"SelwynAng"},"content":"        assertTrue(findFirstEventCommand.equals(findFirstEventCommandCopy));","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"SelwynAng"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"SelwynAng"},"content":"        assertFalse(findFirstEventCommand.equals(1));","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"SelwynAng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"SelwynAng"},"content":"        assertFalse(findFirstEventCommand.equals(null));","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"SelwynAng"},"content":"        // different member -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"SelwynAng"},"content":"        assertFalse(findFirstEventCommand.equals(findSecondEventCommand));","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"SelwynAng"},"content":"    public void execute_zeroKeywords_noEventFound() {","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"SelwynAng"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EVENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"SelwynAng"},"content":"        EventNameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"SelwynAng"},"content":"        FindEventCommand command \u003d new FindEventCommand(predicate);","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"SelwynAng"},"content":"        expectedModel.updateFilteredEventList(predicate);","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"SelwynAng"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"SelwynAng"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredEventList());","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"SelwynAng"},"content":"    public void execute_multipleKeywords_multipleEventsFound() {","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"SelwynAng"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EVENTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"SelwynAng"},"content":"        EventNameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Aurora Boxing Chinese\");","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"SelwynAng"},"content":"        FindEventCommand command \u003d new FindEventCommand(predicate);","lastModifiedDate":"2023-10-23"},{"lineNumber":72,"author":{"gitId":"SelwynAng"},"content":"        expectedModel.updateFilteredEventList(predicate);","lastModifiedDate":"2023-10-23"},{"lineNumber":73,"author":{"gitId":"SelwynAng"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"SelwynAng"},"content":"        assertEquals(Arrays.asList(AURORA_BOREALIS, BOXING_DAY, CHINESE_NEW_YEAR), model.getFilteredEventList());","lastModifiedDate":"2023-10-23"},{"lineNumber":75,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":78,"author":{"gitId":"SelwynAng"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"SelwynAng"},"content":"        EventNameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"SelwynAng"},"content":"                new EventNameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":81,"author":{"gitId":"SelwynAng"},"content":"        FindEventCommand findEventCommand \u003d new FindEventCommand(predicate);","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"SelwynAng"},"content":"        String expected \u003d FindEventCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2023-10-23"},{"lineNumber":83,"author":{"gitId":"SelwynAng"},"content":"        assertEquals(expected, findEventCommand.toString());","lastModifiedDate":"2023-10-23"},{"lineNumber":84,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":85,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":86,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":87,"author":{"gitId":"SelwynAng"},"content":"     * Parses {@code userInput} into a {@code EventNameContainsKeywordsPredicate}.","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"SelwynAng"},"content":"    private EventNameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2023-10-23"},{"lineNumber":90,"author":{"gitId":"SelwynAng"},"content":"        return new EventNameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-10-23"},{"lineNumber":91,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":92,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"SelwynAng":92}},{"path":"src/test/java/seedu/ccacommander/logic/commands/FindMemberCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.commands;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.Messages.MESSAGE_MEMBERS_LISTED_OVERVIEW;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalCcaCommander.getTypicalCcaCommander;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalMembers.CARL;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalMembers.ELLE;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalMembers.FIONA;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.ModelManager;","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.UserPrefs;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.MemberNameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":" * Contains integration tests (interaction with the Model) for {@code FindMemberCommand}.","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"SelwynAng"},"content":"public class FindMemberCommandTest {","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"andrechuakj"},"content":"    private Model model \u003d new ModelManager(getTypicalCcaCommander(), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"andrechuakj"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalCcaCommander(), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"dylkaw"},"content":"        MemberNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"dylkaw"},"content":"                new MemberNameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"dylkaw"},"content":"        MemberNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"dylkaw"},"content":"                new MemberNameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"SelwynAng"},"content":"        FindMemberCommand findFirstMemberCommand \u003d new FindMemberCommand(firstPredicate);","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"SelwynAng"},"content":"        FindMemberCommand findSecondMemberCommand \u003d new FindMemberCommand(secondPredicate);","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"SelwynAng"},"content":"        assertTrue(findFirstMemberCommand.equals(findFirstMemberCommand));","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"SelwynAng"},"content":"        FindMemberCommand findFirstMemberCommandCopy \u003d new FindMemberCommand(firstPredicate);","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"SelwynAng"},"content":"        assertTrue(findFirstMemberCommand.equals(findFirstMemberCommandCopy));","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"SelwynAng"},"content":"        assertFalse(findFirstMemberCommand.equals(1));","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"SelwynAng"},"content":"        assertFalse(findFirstMemberCommand.equals(null));","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"wr1159"},"content":"        // different member -\u003e returns false","lastModifiedDate":"2023-10-02"},{"lineNumber":54,"author":{"gitId":"SelwynAng"},"content":"        assertFalse(findFirstMemberCommand.equals(findSecondMemberCommand));","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"wr1159"},"content":"    public void execute_zeroKeywords_noMemberFound() {","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"wr1159"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MEMBERS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-10-02"},{"lineNumber":60,"author":{"gitId":"dylkaw"},"content":"        MemberNameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"SelwynAng"},"content":"        FindMemberCommand command \u003d new FindMemberCommand(predicate);","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"wr1159"},"content":"        expectedModel.updateFilteredMemberList(predicate);","lastModifiedDate":"2023-10-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"wr1159"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredMemberList());","lastModifiedDate":"2023-10-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"wr1159"},"content":"    public void execute_multipleKeywords_multipleMembersFound() {","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"wr1159"},"content":"        String expectedMessage \u003d String.format(MESSAGE_MEMBERS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-10-02"},{"lineNumber":70,"author":{"gitId":"SelwynAng"},"content":"        MemberNameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Carl Elle Fiona\");","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"SelwynAng"},"content":"        FindMemberCommand command \u003d new FindMemberCommand(predicate);","lastModifiedDate":"2023-10-23"},{"lineNumber":72,"author":{"gitId":"wr1159"},"content":"        expectedModel.updateFilteredMemberList(predicate);","lastModifiedDate":"2023-10-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"wr1159"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredMemberList());","lastModifiedDate":"2023-10-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"dylkaw"},"content":"        MemberNameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"dylkaw"},"content":"                new MemberNameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"SelwynAng"},"content":"        FindMemberCommand findMemberCommand \u003d new FindMemberCommand(predicate);","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"SelwynAng"},"content":"        String expected \u003d FindMemberCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2023-10-23"},{"lineNumber":83,"author":{"gitId":"SelwynAng"},"content":"        assertEquals(expected, findMemberCommand.toString());","lastModifiedDate":"2023-10-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"dylkaw"},"content":"     * Parses {@code userInput} into a {@code MemberNameContainsKeywordsPredicate}.","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":89,"author":{"gitId":"dylkaw"},"content":"    private MemberNameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"dylkaw"},"content":"        return new MemberNameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"wr1159":9,"andrechuakj":13,"SelwynAng":16,"dylkaw":10,"-":44}},{"path":"src/test/java/seedu/ccacommander/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.commands;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.ModelManager;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"andrechuakj":5,"-":15}},{"path":"src/test/java/seedu/ccacommander/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.commands;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.showMemberAtIndex;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalCcaCommander.getTypicalCcaCommander;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalIndexes.INDEX_FIRST_MEMBER;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.ModelManager;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.UserPrefs;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"andrechuakj"},"content":"        model \u003d new ModelManager(getTypicalCcaCommander(), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"andrechuakj"},"content":"        expectedModel \u003d new ModelManager(model.getCcaCommander(), new UserPrefs());","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"wr1159"},"content":"        showMemberAtIndex(model, INDEX_FIRST_MEMBER);","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"wr1159":1,"andrechuakj":10,"-":28}},{"path":"src/test/java/seedu/ccacommander/logic/commands/RedoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"package seedu.ccacommander.logic.commands;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.testutil.TypicalCcaCommander.getTypicalCcaCommander;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.model.Model;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.model.ModelManager;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.model.UserPrefs;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"public class RedoCommandTest {","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"    public static final String COMMIT_MESSAGE \u003d \"Commit Message\";","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"    private Model model;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"        model \u003d new ModelManager(getTypicalCcaCommander(), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"        expectedModel \u003d new ModelManager(getTypicalCcaCommander(), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"SelwynAng"},"content":"    public void execute_hasNextState_throwsCommandException() {","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"SelwynAng"},"content":"        model.commit(COMMIT_MESSAGE);","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"SelwynAng"},"content":"        model.undo();","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"SelwynAng"},"content":"        String expectedMessage \u003d String.format(RedoCommand.MESSAGE_SUCCESS_REDO, COMMIT_MESSAGE);","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"SelwynAng"},"content":"        expectedModel.commit(COMMIT_MESSAGE);","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"SelwynAng"},"content":"        assertCommandSuccess(new RedoCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"SelwynAng"},"content":"    public void execute_noNextState_throwsCommandException() {","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"SelwynAng"},"content":"        model.commit(COMMIT_MESSAGE);","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"SelwynAng"},"content":"        assertCommandFailure(new RedoCommand(), model, RedoCommand.MESSAGE_NO_AVAILABLE_COMMAND);","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"SelwynAng":41}},{"path":"src/test/java/seedu/ccacommander/logic/commands/UndoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"package seedu.ccacommander.logic.commands;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.testutil.TypicalCcaCommander.getTypicalCcaCommander;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.model.Model;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.model.ModelManager;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.model.UserPrefs;","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"public class UndoCommandTest {","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"    public static final String COMMIT_MESSAGE \u003d \"Commit Message\";","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"    private Model model;","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"        model \u003d new ModelManager(getTypicalCcaCommander(), new UserPrefs());","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"        expectedModel \u003d new ModelManager(getTypicalCcaCommander(), new UserPrefs());","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"SelwynAng"},"content":"    public void execute_hasPreviousState_success() {","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"SelwynAng"},"content":"        model.commit(COMMIT_MESSAGE);","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"SelwynAng"},"content":"        String expectedMessage \u003d String.format(UndoCommand.MESSAGE_SUCCESS_UNDO, COMMIT_MESSAGE);","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"SelwynAng"},"content":"        expectedModel.commit(COMMIT_MESSAGE);","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"SelwynAng"},"content":"        expectedModel.undo();","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"SelwynAng"},"content":"        assertCommandSuccess(new UndoCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"SelwynAng"},"content":"    public void execute_noPreviousState_throwsCommandException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"SelwynAng"},"content":"        assertCommandFailure(new UndoCommand(), model, UndoCommand.MESSAGE_NO_AVAILABLE_COMMAND);","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"SelwynAng":40}},{"path":"src/test/java/seedu/ccacommander/logic/commands/UnenrolCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"package seedu.ccacommander.logic.commands;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.testutil.TypicalCcaCommander.getTypicalCcaCommander;","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.testutil.TypicalIndexes.INDEX_FIRST_ENROLMENT;","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.testutil.TypicalIndexes.INDEX_FIRST_MEMBER;","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.testutil.TypicalIndexes.INDEX_SECOND_EVENT;","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.testutil.TypicalIndexes.INDEX_SECOND_MEMBER;","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.commons.core.index.Index;","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.logic.Messages;","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.model.Model;","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.model.ModelManager;","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.model.UserPrefs;","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.model.enrolment.Enrolment;","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.model.event.Event;","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.model.member.Member;","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"SelwynAng"},"content":"/**","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"SelwynAng"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"SelwynAng"},"content":" * {@code UnenrolCommand}.","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"SelwynAng"},"content":" */","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"SelwynAng"},"content":"public class UnenrolCommandTest {","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"SelwynAng"},"content":"    private Model model \u003d new ModelManager(getTypicalCcaCommander(), new UserPrefs());","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"SelwynAng"},"content":"    public void execute_validUnenrolmentUnfilteredList_success() {","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"SelwynAng"},"content":"        Enrolment enrolmentToDelete \u003d model.getFilteredEnrolmentList().get(INDEX_FIRST_ENROLMENT.getZeroBased());","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"SelwynAng"},"content":"        UnenrolCommand unenrolCommand \u003d new UnenrolCommand(INDEX_FIRST_MEMBER, INDEX_FIRST_EVENT);","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"SelwynAng"},"content":"        String commitMessage \u003d String.format(UnenrolCommand.MESSAGE_COMMIT,","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"SelwynAng"},"content":"                enrolmentToDelete.getMemberAndEventEnrolment());","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"SelwynAng"},"content":"        String expectedMessage \u003d String.format(UnenrolCommand.MESSAGE_DELETE_ENROLMENT_SUCCESS,","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"SelwynAng"},"content":"                Messages.format(enrolmentToDelete));","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"SelwynAng"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getCcaCommander(), new UserPrefs());","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"SelwynAng"},"content":"        expectedModel.deleteEnrolment(enrolmentToDelete);","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"SelwynAng"},"content":"        expectedModel.commit(commitMessage);","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"SelwynAng"},"content":"        assertCommandSuccess(unenrolCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"SelwynAng"},"content":"    public void execute_unenrolmentForNonExistentEnrolmentUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"SelwynAng"},"content":"        UnenrolCommand unenrolCommand \u003d new UnenrolCommand(INDEX_FIRST_MEMBER, INDEX_SECOND_EVENT);","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"SelwynAng"},"content":"        String expectedFailedMessage \u003d String.format(Messages.MESSAGE_ENROLMENT_DOES_NOT_EXIST,","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"SelwynAng"},"content":"                INDEX_FIRST_MEMBER.getOneBased(), INDEX_SECOND_EVENT.getOneBased());","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"SelwynAng"},"content":"        assertCommandFailure(unenrolCommand, model, expectedFailedMessage);","lastModifiedDate":"2023-10-29"},{"lineNumber":57,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":60,"author":{"gitId":"SelwynAng"},"content":"    public void execute_duplicateUnenrolmentUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-29"},{"lineNumber":61,"author":{"gitId":"SelwynAng"},"content":"        Enrolment enrolmentToDelete \u003d model.getFilteredEnrolmentList().get(INDEX_FIRST_ENROLMENT.getZeroBased());","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"SelwynAng"},"content":"        UnenrolCommand unenrolCommand \u003d new UnenrolCommand(INDEX_FIRST_MEMBER, INDEX_FIRST_EVENT);","lastModifiedDate":"2023-10-29"},{"lineNumber":63,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":64,"author":{"gitId":"SelwynAng"},"content":"        String commitMessage \u003d String.format(UnenrolCommand.MESSAGE_COMMIT,","lastModifiedDate":"2023-10-29"},{"lineNumber":65,"author":{"gitId":"SelwynAng"},"content":"                enrolmentToDelete.getMemberAndEventEnrolment());","lastModifiedDate":"2023-10-29"},{"lineNumber":66,"author":{"gitId":"SelwynAng"},"content":"        String expectedSuccessMessage \u003d String.format(UnenrolCommand.MESSAGE_DELETE_ENROLMENT_SUCCESS,","lastModifiedDate":"2023-10-29"},{"lineNumber":67,"author":{"gitId":"SelwynAng"},"content":"                Messages.format(enrolmentToDelete));","lastModifiedDate":"2023-10-29"},{"lineNumber":68,"author":{"gitId":"SelwynAng"},"content":"        String expectedFailedMessage \u003d String.format(Messages.MESSAGE_ENROLMENT_DOES_NOT_EXIST,","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"SelwynAng"},"content":"                INDEX_FIRST_MEMBER.getOneBased(), INDEX_FIRST_EVENT.getOneBased());","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":71,"author":{"gitId":"SelwynAng"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getCcaCommander(), new UserPrefs());","lastModifiedDate":"2023-10-29"},{"lineNumber":72,"author":{"gitId":"SelwynAng"},"content":"        expectedModel.deleteEnrolment(enrolmentToDelete);","lastModifiedDate":"2023-10-29"},{"lineNumber":73,"author":{"gitId":"SelwynAng"},"content":"        expectedModel.commit(commitMessage);","lastModifiedDate":"2023-10-29"},{"lineNumber":74,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":75,"author":{"gitId":"SelwynAng"},"content":"        assertCommandSuccess(unenrolCommand, model, expectedSuccessMessage, expectedModel);","lastModifiedDate":"2023-10-29"},{"lineNumber":76,"author":{"gitId":"SelwynAng"},"content":"        assertCommandFailure(unenrolCommand, model, expectedFailedMessage);","lastModifiedDate":"2023-10-29"},{"lineNumber":77,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":78,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":79,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":80,"author":{"gitId":"SelwynAng"},"content":"    public void execute_unenrolmentAfterDeleteMember_throwsCommandException() {","lastModifiedDate":"2023-10-29"},{"lineNumber":81,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":82,"author":{"gitId":"SelwynAng"},"content":"        UnenrolCommand unenrolCommand \u003d new UnenrolCommand(INDEX_FIRST_MEMBER, INDEX_FIRST_EVENT);","lastModifiedDate":"2023-10-29"},{"lineNumber":83,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":84,"author":{"gitId":"SelwynAng"},"content":"        // Delete the first member first and assert if the command is successful","lastModifiedDate":"2023-10-29"},{"lineNumber":85,"author":{"gitId":"SelwynAng"},"content":"        Member memberToDelete \u003d model.getFilteredMemberList().get(INDEX_FIRST_MEMBER.getZeroBased());","lastModifiedDate":"2023-10-29"},{"lineNumber":86,"author":{"gitId":"wr1159"},"content":"        Enrolment enrolmentToDelete \u003d model.getFilteredEnrolmentList().get(INDEX_FIRST_ENROLMENT.getZeroBased());","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"SelwynAng"},"content":"        DeleteMemberCommand deleteMemberCommand \u003d new DeleteMemberCommand(INDEX_FIRST_MEMBER);","lastModifiedDate":"2023-10-29"},{"lineNumber":88,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":89,"author":{"gitId":"SelwynAng"},"content":"        String commitMessage \u003d String.format(DeleteMemberCommand.MESSAGE_COMMIT, memberToDelete.getName());","lastModifiedDate":"2023-10-29"},{"lineNumber":90,"author":{"gitId":"SelwynAng"},"content":"        String expectedMessage \u003d String.format(DeleteMemberCommand.MESSAGE_DELETE_MEMBER_SUCCESS,","lastModifiedDate":"2023-10-29"},{"lineNumber":91,"author":{"gitId":"SelwynAng"},"content":"                Messages.format(memberToDelete));","lastModifiedDate":"2023-10-29"},{"lineNumber":92,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":93,"author":{"gitId":"SelwynAng"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getCcaCommander(), new UserPrefs());","lastModifiedDate":"2023-10-29"},{"lineNumber":94,"author":{"gitId":"SelwynAng"},"content":"        expectedModel.deleteMember(memberToDelete);","lastModifiedDate":"2023-10-29"},{"lineNumber":95,"author":{"gitId":"wr1159"},"content":"        expectedModel.deleteEnrolment(enrolmentToDelete);","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"SelwynAng"},"content":"        expectedModel.commit(commitMessage);","lastModifiedDate":"2023-10-29"},{"lineNumber":97,"author":{"gitId":"SelwynAng"},"content":"        assertCommandSuccess(deleteMemberCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-29"},{"lineNumber":98,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":99,"author":{"gitId":"SelwynAng"},"content":"        // Proceed to unenrol first member from first event, should throw CommandException as first member","lastModifiedDate":"2023-10-29"},{"lineNumber":100,"author":{"gitId":"SelwynAng"},"content":"        // is no longer existent","lastModifiedDate":"2023-10-29"},{"lineNumber":101,"author":{"gitId":"SelwynAng"},"content":"        String expectedFailedMessage \u003d String.format(Messages.MESSAGE_ENROLMENT_DOES_NOT_EXIST,","lastModifiedDate":"2023-11-01"},{"lineNumber":102,"author":{"gitId":"SelwynAng"},"content":"                INDEX_FIRST_MEMBER.getOneBased(), INDEX_FIRST_EVENT.getOneBased());","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"SelwynAng"},"content":"        assertCommandFailure(unenrolCommand, model, expectedFailedMessage);","lastModifiedDate":"2023-10-29"},{"lineNumber":104,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":105,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":106,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":107,"author":{"gitId":"SelwynAng"},"content":"    public void execute_unenrolmentAfterDeleteEvent_throwsCommandException() {","lastModifiedDate":"2023-10-29"},{"lineNumber":108,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":109,"author":{"gitId":"SelwynAng"},"content":"        UnenrolCommand unenrolCommand \u003d new UnenrolCommand(INDEX_FIRST_MEMBER, INDEX_FIRST_EVENT);","lastModifiedDate":"2023-10-29"},{"lineNumber":110,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":111,"author":{"gitId":"SelwynAng"},"content":"        // Delete the first event first and assert if the command is successful","lastModifiedDate":"2023-10-29"},{"lineNumber":112,"author":{"gitId":"SelwynAng"},"content":"        Event eventToDelete \u003d model.getFilteredEventList().get(INDEX_FIRST_EVENT.getZeroBased());","lastModifiedDate":"2023-10-29"},{"lineNumber":113,"author":{"gitId":"wr1159"},"content":"        Enrolment enrolmentToDelete \u003d model.getFilteredEnrolmentList().get(INDEX_FIRST_ENROLMENT.getZeroBased());","lastModifiedDate":"2023-11-02"},{"lineNumber":114,"author":{"gitId":"SelwynAng"},"content":"        DeleteEventCommand deleteEventCommand \u003d new DeleteEventCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2023-10-29"},{"lineNumber":115,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":116,"author":{"gitId":"SelwynAng"},"content":"        String commitMessage \u003d String.format(deleteEventCommand.MESSAGE_COMMIT, eventToDelete.getName());","lastModifiedDate":"2023-10-29"},{"lineNumber":117,"author":{"gitId":"SelwynAng"},"content":"        String expectedMessage \u003d String.format(DeleteEventCommand.MESSAGE_DELETE_EVENT_SUCCESS,","lastModifiedDate":"2023-10-29"},{"lineNumber":118,"author":{"gitId":"SelwynAng"},"content":"                Messages.format(eventToDelete));","lastModifiedDate":"2023-10-29"},{"lineNumber":119,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":120,"author":{"gitId":"SelwynAng"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getCcaCommander(), new UserPrefs());","lastModifiedDate":"2023-10-29"},{"lineNumber":121,"author":{"gitId":"SelwynAng"},"content":"        expectedModel.deleteEvent(eventToDelete);","lastModifiedDate":"2023-10-29"},{"lineNumber":122,"author":{"gitId":"wr1159"},"content":"        expectedModel.deleteEnrolment(enrolmentToDelete);","lastModifiedDate":"2023-11-02"},{"lineNumber":123,"author":{"gitId":"SelwynAng"},"content":"        expectedModel.commit(commitMessage);","lastModifiedDate":"2023-10-29"},{"lineNumber":124,"author":{"gitId":"SelwynAng"},"content":"        assertCommandSuccess(deleteEventCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-29"},{"lineNumber":125,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":126,"author":{"gitId":"SelwynAng"},"content":"        // Proceed to unenrol first member from first event, should throw CommandException as first event","lastModifiedDate":"2023-10-29"},{"lineNumber":127,"author":{"gitId":"SelwynAng"},"content":"        // is no longer existent","lastModifiedDate":"2023-10-29"},{"lineNumber":128,"author":{"gitId":"SelwynAng"},"content":"        String expectedFailedMessage \u003d String.format(Messages.MESSAGE_ENROLMENT_DOES_NOT_EXIST,","lastModifiedDate":"2023-11-01"},{"lineNumber":129,"author":{"gitId":"SelwynAng"},"content":"                INDEX_FIRST_MEMBER.getOneBased(), INDEX_FIRST_EVENT.getOneBased());","lastModifiedDate":"2023-11-01"},{"lineNumber":130,"author":{"gitId":"SelwynAng"},"content":"        assertCommandFailure(unenrolCommand, model, expectedFailedMessage);","lastModifiedDate":"2023-10-29"},{"lineNumber":131,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":132,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":133,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":134,"author":{"gitId":"SelwynAng"},"content":"    public void execute_invalidMemberIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-28"},{"lineNumber":135,"author":{"gitId":"SelwynAng"},"content":"        Index outOfBoundMemberIndex \u003d Index.fromZeroBased(model.getFilteredMemberList().size() + 1);","lastModifiedDate":"2023-10-28"},{"lineNumber":136,"author":{"gitId":"SelwynAng"},"content":"        Index eventIndex \u003d Index.fromZeroBased(1);","lastModifiedDate":"2023-10-28"},{"lineNumber":137,"author":{"gitId":"SelwynAng"},"content":"        UnenrolCommand unenrolCommand \u003d new UnenrolCommand(outOfBoundMemberIndex, eventIndex);","lastModifiedDate":"2023-10-28"},{"lineNumber":138,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":139,"author":{"gitId":"SelwynAng"},"content":"        assertCommandFailure(unenrolCommand, model, Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-28"},{"lineNumber":140,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":141,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":142,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":143,"author":{"gitId":"SelwynAng"},"content":"    public void execute_invalidEventIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-28"},{"lineNumber":144,"author":{"gitId":"SelwynAng"},"content":"        Index memberIndex \u003d Index.fromZeroBased(1);","lastModifiedDate":"2023-10-28"},{"lineNumber":145,"author":{"gitId":"SelwynAng"},"content":"        Index outOfBoundEventIndex \u003d Index.fromZeroBased(model.getFilteredEventList().size() + 1);","lastModifiedDate":"2023-10-28"},{"lineNumber":146,"author":{"gitId":"SelwynAng"},"content":"        UnenrolCommand unenrolCommand \u003d new UnenrolCommand(memberIndex, outOfBoundEventIndex);","lastModifiedDate":"2023-10-28"},{"lineNumber":147,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":148,"author":{"gitId":"SelwynAng"},"content":"        assertCommandFailure(unenrolCommand, model, Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-28"},{"lineNumber":149,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":150,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":151,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":152,"author":{"gitId":"SelwynAng"},"content":"    public void execute_invalidMemberEventIndexesUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-28"},{"lineNumber":153,"author":{"gitId":"SelwynAng"},"content":"        Index outOfBoundMemberIndex \u003d Index.fromZeroBased(model.getFilteredMemberList().size() + 1);","lastModifiedDate":"2023-10-28"},{"lineNumber":154,"author":{"gitId":"SelwynAng"},"content":"        Index outOfBoundEventIndex \u003d Index.fromZeroBased(model.getFilteredEventList().size() + 1);","lastModifiedDate":"2023-10-28"},{"lineNumber":155,"author":{"gitId":"SelwynAng"},"content":"        UnenrolCommand unenrolCommand \u003d new UnenrolCommand(outOfBoundMemberIndex, outOfBoundEventIndex);","lastModifiedDate":"2023-10-28"},{"lineNumber":156,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":157,"author":{"gitId":"SelwynAng"},"content":"        assertCommandFailure(unenrolCommand, model, Messages.MESSAGE_INVALID_MEMBER_AND_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-28"},{"lineNumber":158,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":159,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":160,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":161,"author":{"gitId":"SelwynAng"},"content":"    public void equals() {","lastModifiedDate":"2023-10-28"},{"lineNumber":162,"author":{"gitId":"SelwynAng"},"content":"        UnenrolCommand unenrolFirstCommand \u003d new UnenrolCommand(INDEX_FIRST_MEMBER, INDEX_FIRST_EVENT);","lastModifiedDate":"2023-10-28"},{"lineNumber":163,"author":{"gitId":"SelwynAng"},"content":"        UnenrolCommand unenrolSecondCommand \u003d new UnenrolCommand(INDEX_SECOND_MEMBER, INDEX_SECOND_EVENT);","lastModifiedDate":"2023-10-28"},{"lineNumber":164,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":165,"author":{"gitId":"SelwynAng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-28"},{"lineNumber":166,"author":{"gitId":"SelwynAng"},"content":"        assertTrue(unenrolFirstCommand.equals(unenrolFirstCommand));","lastModifiedDate":"2023-10-28"},{"lineNumber":167,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":168,"author":{"gitId":"SelwynAng"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-28"},{"lineNumber":169,"author":{"gitId":"SelwynAng"},"content":"        UnenrolCommand unenrolFirstCommandCopy \u003d new UnenrolCommand(INDEX_FIRST_MEMBER, INDEX_FIRST_EVENT);","lastModifiedDate":"2023-10-28"},{"lineNumber":170,"author":{"gitId":"SelwynAng"},"content":"        assertTrue(unenrolFirstCommand.equals(unenrolFirstCommandCopy));","lastModifiedDate":"2023-10-28"},{"lineNumber":171,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":172,"author":{"gitId":"SelwynAng"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-28"},{"lineNumber":173,"author":{"gitId":"SelwynAng"},"content":"        assertFalse(unenrolFirstCommand.equals(1));","lastModifiedDate":"2023-10-28"},{"lineNumber":174,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":175,"author":{"gitId":"SelwynAng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-28"},{"lineNumber":176,"author":{"gitId":"SelwynAng"},"content":"        assertFalse(unenrolFirstCommand.equals(null));","lastModifiedDate":"2023-10-28"},{"lineNumber":177,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":178,"author":{"gitId":"SelwynAng"},"content":"        // different member -\u003e returns false","lastModifiedDate":"2023-10-28"},{"lineNumber":179,"author":{"gitId":"SelwynAng"},"content":"        assertFalse(unenrolFirstCommand.equals(unenrolSecondCommand));","lastModifiedDate":"2023-10-28"},{"lineNumber":180,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":181,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":182,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":183,"author":{"gitId":"SelwynAng"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-28"},{"lineNumber":184,"author":{"gitId":"SelwynAng"},"content":"        Index memberIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-28"},{"lineNumber":185,"author":{"gitId":"SelwynAng"},"content":"        Index eventIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-28"},{"lineNumber":186,"author":{"gitId":"SelwynAng"},"content":"        UnenrolCommand unenrolCommand \u003d new UnenrolCommand(memberIndex, eventIndex);","lastModifiedDate":"2023-10-28"},{"lineNumber":187,"author":{"gitId":"SelwynAng"},"content":"        String expected \u003d UnenrolCommand.class.getCanonicalName() + \"{memberIndex\u003d\" + memberIndex","lastModifiedDate":"2023-10-28"},{"lineNumber":188,"author":{"gitId":"SelwynAng"},"content":"                + \", eventIndex\u003d\" + eventIndex + \"}\";","lastModifiedDate":"2023-10-28"},{"lineNumber":189,"author":{"gitId":"SelwynAng"},"content":"        assertEquals(expected, unenrolCommand.toString());","lastModifiedDate":"2023-10-28"},{"lineNumber":190,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":191,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":192,"author":{"gitId":"SelwynAng"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":193,"author":{"gitId":"SelwynAng"},"content":"     * Updates {@code model}\u0027s filtered enrolment list to show no one.","lastModifiedDate":"2023-10-28"},{"lineNumber":194,"author":{"gitId":"SelwynAng"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":195,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":196,"author":{"gitId":"SelwynAng"},"content":"    private void showNoEnrolment(Model model) {","lastModifiedDate":"2023-10-28"},{"lineNumber":197,"author":{"gitId":"SelwynAng"},"content":"        model.updateFilteredEnrolmentList(p -\u003e false);","lastModifiedDate":"2023-10-28"},{"lineNumber":198,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":199,"author":{"gitId":"SelwynAng"},"content":"        assertTrue(model.getFilteredEnrolmentList().isEmpty());","lastModifiedDate":"2023-10-28"},{"lineNumber":200,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":201,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"wr1159":4,"SelwynAng":197}},{"path":"src/test/java/seedu/ccacommander/logic/commands/ViewEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"package seedu.ccacommander.logic.commands;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.showEventAtIndex;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.showMemberAtIndex;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.testutil.TypicalCcaCommander.getTypicalCcaCommander;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.testutil.TypicalIndexes.INDEX_FIRST_MEMBER;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.testutil.TypicalIndexes.INDEX_SECOND_EVENT;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"import java.util.List;","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.commons.core.index.Index;","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.Model;","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.ModelManager;","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.UserPrefs;","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.event.Event;","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.shared.Name;","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"ph-nathan"},"content":"public class ViewEventCommandTest {","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"ph-nathan"},"content":"    private Model model;","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"ph-nathan"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"ph-nathan"},"content":"    @BeforeEach","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"ph-nathan"},"content":"    public void setUp() {","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"ph-nathan"},"content":"        model \u003d new ModelManager(getTypicalCcaCommander(), new UserPrefs());","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"ph-nathan"},"content":"        expectedModel \u003d new ModelManager(model.getCcaCommander(), new UserPrefs());","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"ph-nathan"},"content":"    public void execute_indexSpecifiedListsNotFiltered_showsMembersInEvent() {","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"ph-nathan"},"content":"        showMembersInEventAtIndex(expectedModel, INDEX_FIRST_EVENT);","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(expectedModel.getFilteredEnrolmentList(), model.getFilteredEnrolmentList());","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(expectedModel.getFilteredMemberList(), model.getFilteredMemberList());","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(expectedModel.getFilteredEventList(), model.getFilteredEventList());","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"ph-nathan"},"content":"    public void execute_indexSpecifiedMemberListIsFiltered_showsMembersInEvent() {","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"ph-nathan"},"content":"        showMemberAtIndex(model, INDEX_FIRST_MEMBER);","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"ph-nathan"},"content":"        showMemberAtIndex(expectedModel, INDEX_FIRST_MEMBER);","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"ph-nathan"},"content":"        showMembersInEventAtIndex(expectedModel, INDEX_FIRST_EVENT);","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"ph-nathan"},"content":"        showMembersInEventAtIndex(model, INDEX_FIRST_EVENT);","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(expectedModel.getFilteredEnrolmentList(), model.getFilteredEnrolmentList());","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(expectedModel.getFilteredMemberList(), model.getFilteredMemberList());","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(expectedModel.getFilteredEventList(), model.getFilteredEventList());","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"ph-nathan"},"content":"    public void execute_indexSpecifiedEventListIsFiltered_showsMembersInEvent() {","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"ph-nathan"},"content":"        showEventAtIndex(model, INDEX_SECOND_EVENT);","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"ph-nathan"},"content":"        showEventAtIndex(expectedModel, INDEX_SECOND_EVENT);","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"ph-nathan"},"content":"        showMembersInEventAtIndex(expectedModel, INDEX_FIRST_EVENT);","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"ph-nathan"},"content":"        showMembersInEventAtIndex(model, INDEX_FIRST_EVENT);","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(expectedModel.getFilteredEnrolmentList(), model.getFilteredEnrolmentList());","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(expectedModel.getFilteredMemberList(), model.getFilteredMemberList());","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(expectedModel.getFilteredEventList(), model.getFilteredEventList());","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"ph-nathan"},"content":"    public void execute_invalidEventIndex_throwsCommandException() {","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"ph-nathan"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"ph-nathan"},"content":"        Index targetIndex \u003d Index.fromOneBased(1); // No events in the model","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"ph-nathan"},"content":"        ViewEventCommand viewEventCommand \u003d new ViewEventCommand(targetIndex);","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"ph-nathan"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"ph-nathan"},"content":"                MESSAGE_INVALID_EVENT_DISPLAYED_INDEX, () -\u003e viewEventCommand.execute(model));","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"ph-nathan"},"content":"    public void equals() {","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"ph-nathan"},"content":"        Index index1 \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"ph-nathan"},"content":"        Index index2 \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"ph-nathan"},"content":"        ViewEventCommand viewEventCommand1 \u003d new ViewEventCommand(index1);","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"ph-nathan"},"content":"        ViewEventCommand viewEventCommand2 \u003d new ViewEventCommand(index2);","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"ph-nathan"},"content":"        // Same object -\u003e returns true","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(viewEventCommand1, viewEventCommand1);","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"ph-nathan"},"content":"        // Same values -\u003e returns true","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"ph-nathan"},"content":"        ViewEventCommand viewEventCommand1Copy \u003d new ViewEventCommand(index1);","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(viewEventCommand1, viewEventCommand1Copy);","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"ph-nathan"},"content":"        // Different types -\u003e returns false","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(false, viewEventCommand1.equals(1));","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"ph-nathan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(false, viewEventCommand1.equals(null));","lastModifiedDate":"2023-11-01"},{"lineNumber":101,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":102,"author":{"gitId":"ph-nathan"},"content":"        // Different command -\u003e returns false","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(false, viewEventCommand1.equals(viewEventCommand2));","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"ph-nathan"},"content":"     * Updates {@code model}\u0027s {@code filteredMembers} list to show only the members in the {@code Event}","lastModifiedDate":"2023-11-01"},{"lineNumber":107,"author":{"gitId":"ph-nathan"},"content":"     * as specified by the given {@code eventIndex} in the {@code model}\u0027s displayed event list.","lastModifiedDate":"2023-11-01"},{"lineNumber":108,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"ph-nathan"},"content":"    private Event showMembersInEventAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-11-01"},{"lineNumber":110,"author":{"gitId":"ph-nathan"},"content":"        List\u003cEvent\u003e lastShownEventList \u003d model.getFilteredEventList();","lastModifiedDate":"2023-11-01"},{"lineNumber":111,"author":{"gitId":"ph-nathan"},"content":"        Event event \u003d lastShownEventList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-11-01"},{"lineNumber":112,"author":{"gitId":"ph-nathan"},"content":"        Name eventName \u003d event.getName();","lastModifiedDate":"2023-11-01"},{"lineNumber":113,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":114,"author":{"gitId":"ph-nathan"},"content":"        model.updateMemberHoursAndRemark(eventName);","lastModifiedDate":"2023-11-02"},{"lineNumber":115,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":116,"author":{"gitId":"ph-nathan"},"content":"        return event;","lastModifiedDate":"2023-11-01"},{"lineNumber":117,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":118,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":119,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"ph-nathan":119}},{"path":"src/test/java/seedu/ccacommander/logic/commands/ViewMemberCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"package seedu.ccacommander.logic.commands;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.Messages.MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.showEventAtIndex;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.showMemberAtIndex;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.testutil.TypicalCcaCommander.getTypicalCcaCommander;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.testutil.TypicalIndexes.INDEX_FIRST_MEMBER;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.testutil.TypicalIndexes.INDEX_SECOND_EVENT;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"import java.util.List;","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.commons.core.index.Index;","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.Model;","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.ModelManager;","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.UserPrefs;","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.member.Member;","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.shared.Name;","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"ph-nathan"},"content":"public class ViewMemberCommandTest {","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"ph-nathan"},"content":"    private Model model;","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"ph-nathan"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"ph-nathan"},"content":"    @BeforeEach","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"ph-nathan"},"content":"    public void setUp() {","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"ph-nathan"},"content":"        model \u003d new ModelManager(getTypicalCcaCommander(), new UserPrefs());","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"ph-nathan"},"content":"        expectedModel \u003d new ModelManager(model.getCcaCommander(), new UserPrefs());","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"ph-nathan"},"content":"    public void execute_indexSpecifiedListsNotFiltered_showsEventsOfMember() {","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"ph-nathan"},"content":"        showEventsOfMemberAtIndex(expectedModel, INDEX_FIRST_EVENT);","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(expectedModel.getFilteredEnrolmentList(), model.getFilteredEnrolmentList());","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(expectedModel.getFilteredMemberList(), model.getFilteredMemberList());","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(expectedModel.getFilteredEventList(), model.getFilteredEventList());","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"ph-nathan"},"content":"    public void execute_indexSpecifiedMemberListIsFiltered_showsMembersInEvent() {","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"ph-nathan"},"content":"        showMemberAtIndex(model, INDEX_FIRST_MEMBER);","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"ph-nathan"},"content":"        showMemberAtIndex(expectedModel, INDEX_FIRST_MEMBER);","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"ph-nathan"},"content":"        showEventsOfMemberAtIndex(expectedModel, INDEX_FIRST_MEMBER);","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"ph-nathan"},"content":"        showEventsOfMemberAtIndex(model, INDEX_FIRST_MEMBER);","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(expectedModel.getFilteredEnrolmentList(), model.getFilteredEnrolmentList());","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(expectedModel.getFilteredMemberList(), model.getFilteredMemberList());","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(expectedModel.getFilteredEventList(), model.getFilteredEventList());","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"ph-nathan"},"content":"    public void execute_indexSpecifiedEventListIsFiltered_showsMembersInEvent() {","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"ph-nathan"},"content":"        showEventAtIndex(model, INDEX_SECOND_EVENT);","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"ph-nathan"},"content":"        showEventAtIndex(expectedModel, INDEX_SECOND_EVENT);","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"ph-nathan"},"content":"        showEventsOfMemberAtIndex(expectedModel, INDEX_FIRST_MEMBER);","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"ph-nathan"},"content":"        showEventsOfMemberAtIndex(model, INDEX_FIRST_MEMBER);","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(expectedModel.getFilteredEnrolmentList(), model.getFilteredEnrolmentList());","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(expectedModel.getFilteredMemberList(), model.getFilteredMemberList());","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(expectedModel.getFilteredEventList(), model.getFilteredEventList());","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"ph-nathan"},"content":"    public void execute_invalidMemberIndex_throwsCommandException() {","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"ph-nathan"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"ph-nathan"},"content":"        Index targetIndex \u003d Index.fromOneBased(1); // No events in the model","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"ph-nathan"},"content":"        ViewMemberCommand viewMemberCommand \u003d new ViewMemberCommand(targetIndex);","lastModifiedDate":"2023-11-01"},{"lineNumber":73,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"ph-nathan"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"ph-nathan"},"content":"                MESSAGE_INVALID_MEMBER_DISPLAYED_INDEX, () -\u003e viewMemberCommand.execute(model));","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"ph-nathan"},"content":"    public void equals() {","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"ph-nathan"},"content":"        Index index1 \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"ph-nathan"},"content":"        Index index2 \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"ph-nathan"},"content":"        ViewMemberCommand viewMemberCommand1 \u003d new ViewMemberCommand(index1);","lastModifiedDate":"2023-11-01"},{"lineNumber":83,"author":{"gitId":"ph-nathan"},"content":"        ViewMemberCommand viewMemberCommand2 \u003d new ViewMemberCommand(index2);","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"ph-nathan"},"content":"        // Same object -\u003e returns true","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(viewMemberCommand1, viewMemberCommand1);","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"ph-nathan"},"content":"        // Same values -\u003e returns true","lastModifiedDate":"2023-11-01"},{"lineNumber":89,"author":{"gitId":"ph-nathan"},"content":"        ViewMemberCommand viewMemberCommand1Copy \u003d new ViewMemberCommand(index1);","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(viewMemberCommand1, viewMemberCommand1Copy);","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"ph-nathan"},"content":"        // Different types -\u003e returns false","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(false, viewMemberCommand1.equals(1));","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"ph-nathan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(false, viewMemberCommand1.equals(null));","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"ph-nathan"},"content":"        // Different command -\u003e returns false","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(false, viewMemberCommand1.equals(viewMemberCommand2));","lastModifiedDate":"2023-11-01"},{"lineNumber":100,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":101,"author":{"gitId":"ph-nathan"},"content":"    private Member showEventsOfMemberAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-11-01"},{"lineNumber":102,"author":{"gitId":"ph-nathan"},"content":"        List\u003cMember\u003e lastShownMemberList \u003d model.getFilteredMemberList();","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"ph-nathan"},"content":"        Member member \u003d lastShownMemberList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"ph-nathan"},"content":"        Name memberName \u003d member.getName();","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":107,"author":{"gitId":"ph-nathan"},"content":"        model.updateEventHoursAndRemark(memberName);","lastModifiedDate":"2023-11-03"},{"lineNumber":108,"author":{"gitId":"ph-nathan"},"content":"        return member;","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":110,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"ph-nathan":110}},{"path":"src/test/java/seedu/ccacommander/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.parser;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"andrechuakj":1,"-":149}},{"path":"src/test/java/seedu/ccacommander/logic/parser/CcaCommanderParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.parser;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.testutil.TypicalHours.HOURS_ZERO;","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalIndexes.INDEX_FIRST_MEMBER;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.testutil.TypicalRemarks.REMARK_ONE;","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"wr1159"},"content":"import java.util.Optional;","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.commands.ClearCommand;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.commands.CreateEventCommand;","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.commands.CreateMemberCommand;","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.commands.DeleteEventCommand;","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.commands.DeleteMemberCommand;","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.logic.commands.EditEventCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.logic.commands.EditEventCommand.EditEventDescriptor;","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.logic.commands.EditMemberCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.logic.commands.EditMemberCommand.EditMemberDescriptor;","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.logic.commands.EnrolCommand;","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.commands.ExitCommand;","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.logic.commands.FindEventCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.logic.commands.FindMemberCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.commands.ListCommand;","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.logic.commands.RedoCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.logic.commands.UndoCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.logic.commands.UnenrolCommand;","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.Event;","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.model.event.EventNameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Member;","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.MemberNameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.testutil.EditEventDescriptorBuilder;","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.testutil.EditMemberDescriptorBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.testutil.EventBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.testutil.EventUtil;","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.testutil.MemberBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.testutil.MemberUtil;","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"andrechuakj"},"content":"public class CcaCommanderParserTest {","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"andrechuakj"},"content":"    private final CcaCommanderParser parser \u003d new CcaCommanderParser();","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"dylkaw"},"content":"    public void parseCommand_createMember() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"wr1159"},"content":"        Member member \u003d new MemberBuilder().build();","lastModifiedDate":"2023-10-02"},{"lineNumber":58,"author":{"gitId":"dylkaw"},"content":"        CreateMemberCommand command \u003d (CreateMemberCommand) parser.parseCommand(","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"dylkaw"},"content":"                MemberUtil.getCreateMemberCommand(member));","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"dylkaw"},"content":"        assertEquals(new CreateMemberCommand(member), command);","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"SelwynAng"},"content":"    public void parseCommand_deleteMember() throws Exception {","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"SelwynAng"},"content":"        DeleteMemberCommand command \u003d (DeleteMemberCommand) parser.parseCommand(","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"SelwynAng"},"content":"                DeleteMemberCommand.COMMAND_WORD + \" \" + INDEX_FIRST_MEMBER.getOneBased());","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"SelwynAng"},"content":"        assertEquals(new DeleteMemberCommand(INDEX_FIRST_MEMBER), command);","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"dylkaw"},"content":"    public void parseCommand_createEvent() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"dylkaw"},"content":"        Event event \u003d new EventBuilder().build();","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"dylkaw"},"content":"        CreateEventCommand command \u003d (CreateEventCommand) parser.parseCommand(","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"dylkaw"},"content":"                EventUtil.getCreateEventCommand(event));","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"dylkaw"},"content":"        assertEquals(new CreateEventCommand(event), command);","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"SelwynAng"},"content":"    public void parseCommand_deleteEvent() throws Exception {","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"SelwynAng"},"content":"        DeleteEventCommand command \u003d (DeleteEventCommand) parser.parseCommand(","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"SelwynAng"},"content":"                DeleteEventCommand.COMMAND_WORD + \" \" + INDEX_FIRST_EVENT.getOneBased());","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"SelwynAng"},"content":"        assertEquals(new DeleteEventCommand(INDEX_FIRST_EVENT), command);","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"ph-nathan"},"content":"    public void parseCommand_editMember() throws Exception {","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"wr1159"},"content":"        Member member \u003d new MemberBuilder().build();","lastModifiedDate":"2023-10-02"},{"lineNumber":94,"author":{"gitId":"wr1159"},"content":"        EditMemberDescriptor descriptor \u003d new EditMemberDescriptorBuilder(member).build();","lastModifiedDate":"2023-10-02"},{"lineNumber":95,"author":{"gitId":"ph-nathan"},"content":"        EditMemberCommand command \u003d (EditMemberCommand) parser.parseCommand(EditMemberCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"wr1159"},"content":"                + INDEX_FIRST_MEMBER.getOneBased() + \" \" + MemberUtil.getEditMemberDescriptorDetails(descriptor));","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(new EditMemberCommand(INDEX_FIRST_MEMBER, descriptor), command);","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"ph-nathan"},"content":"    public void parseCommand_editEvent() throws Exception {","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"ph-nathan"},"content":"        Event event \u003d new EventBuilder().build();","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"ph-nathan"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder(event).build();","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"ph-nathan"},"content":"        EditEventCommand command \u003d (EditEventCommand) parser.parseCommand(EditEventCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"ph-nathan"},"content":"                + INDEX_FIRST_EVENT.getOneBased() + \" \" + EventUtil.getEditEventDescriptorDetails(descriptor));","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(new EditEventCommand(INDEX_FIRST_EVENT, descriptor), command);","lastModifiedDate":"2023-10-27"},{"lineNumber":107,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"SelwynAng"},"content":"    public void parseCommand_findMember() throws Exception {","lastModifiedDate":"2023-10-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":118,"author":{"gitId":"SelwynAng"},"content":"        FindMemberCommand command \u003d (FindMemberCommand) parser.parseCommand(","lastModifiedDate":"2023-10-23"},{"lineNumber":119,"author":{"gitId":"SelwynAng"},"content":"                FindMemberCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-10-23"},{"lineNumber":120,"author":{"gitId":"SelwynAng"},"content":"        assertEquals(new FindMemberCommand(new MemberNameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2023-10-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":123,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":124,"author":{"gitId":"SelwynAng"},"content":"    public void parseCommand_findEvent() throws Exception {","lastModifiedDate":"2023-10-23"},{"lineNumber":125,"author":{"gitId":"SelwynAng"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2023-10-23"},{"lineNumber":126,"author":{"gitId":"SelwynAng"},"content":"        FindEventCommand command \u003d (FindEventCommand) parser.parseCommand(","lastModifiedDate":"2023-10-23"},{"lineNumber":127,"author":{"gitId":"SelwynAng"},"content":"                FindEventCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-10-23"},{"lineNumber":128,"author":{"gitId":"SelwynAng"},"content":"        assertEquals(new FindEventCommand(new EventNameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2023-10-23"},{"lineNumber":129,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":130,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":131,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":132,"author":{"gitId":"SelwynAng"},"content":"    public void parseCommand_enrol() throws Exception {","lastModifiedDate":"2023-10-28"},{"lineNumber":133,"author":{"gitId":"SelwynAng"},"content":"        EnrolCommand command \u003d (EnrolCommand) parser.parseCommand(","lastModifiedDate":"2023-10-28"},{"lineNumber":134,"author":{"gitId":"SelwynAng"},"content":"                EnrolCommand.COMMAND_WORD","lastModifiedDate":"2023-10-28"},{"lineNumber":135,"author":{"gitId":"SelwynAng"},"content":"                        + \" m/\" + INDEX_FIRST_MEMBER.getOneBased()","lastModifiedDate":"2023-10-28"},{"lineNumber":136,"author":{"gitId":"SelwynAng"},"content":"                        + \" e/\" + INDEX_FIRST_EVENT.getOneBased()","lastModifiedDate":"2023-10-28"},{"lineNumber":137,"author":{"gitId":"SelwynAng"},"content":"                        + \" h/\" + HOURS_ZERO.toString()","lastModifiedDate":"2023-10-28"},{"lineNumber":138,"author":{"gitId":"SelwynAng"},"content":"                        + \" r/\" + REMARK_ONE.toString());","lastModifiedDate":"2023-10-28"},{"lineNumber":139,"author":{"gitId":"wr1159"},"content":"        assertEquals(new EnrolCommand(INDEX_FIRST_MEMBER, INDEX_FIRST_EVENT, Optional.of(HOURS_ZERO),","lastModifiedDate":"2023-11-02"},{"lineNumber":140,"author":{"gitId":"wr1159"},"content":"                Optional.of(REMARK_ONE)), command);","lastModifiedDate":"2023-11-02"},{"lineNumber":141,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":142,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":143,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":144,"author":{"gitId":"SelwynAng"},"content":"    public void parseCommand_unenrol() throws Exception {","lastModifiedDate":"2023-10-28"},{"lineNumber":145,"author":{"gitId":"SelwynAng"},"content":"        UnenrolCommand command \u003d (UnenrolCommand) parser.parseCommand(","lastModifiedDate":"2023-10-28"},{"lineNumber":146,"author":{"gitId":"SelwynAng"},"content":"                UnenrolCommand.COMMAND_WORD","lastModifiedDate":"2023-10-28"},{"lineNumber":147,"author":{"gitId":"SelwynAng"},"content":"                        + \" m/\" + INDEX_FIRST_MEMBER.getOneBased()","lastModifiedDate":"2023-10-28"},{"lineNumber":148,"author":{"gitId":"SelwynAng"},"content":"                        + \" e/\" + INDEX_FIRST_EVENT.getOneBased());","lastModifiedDate":"2023-10-28"},{"lineNumber":149,"author":{"gitId":"SelwynAng"},"content":"        assertEquals(new UnenrolCommand(INDEX_FIRST_MEMBER, INDEX_FIRST_EVENT), command);","lastModifiedDate":"2023-10-28"},{"lineNumber":150,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":151,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":152,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":153,"author":{"gitId":"SelwynAng"},"content":"    public void parseCommand_undo() throws Exception {","lastModifiedDate":"2023-10-23"},{"lineNumber":154,"author":{"gitId":"SelwynAng"},"content":"        assertTrue(parser.parseCommand(UndoCommand.COMMAND_WORD) instanceof UndoCommand);","lastModifiedDate":"2023-10-23"},{"lineNumber":155,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":156,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":157,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":158,"author":{"gitId":"SelwynAng"},"content":"    public void parseCommand_redo() throws Exception {","lastModifiedDate":"2023-10-24"},{"lineNumber":159,"author":{"gitId":"SelwynAng"},"content":"        assertTrue(parser.parseCommand(RedoCommand.COMMAND_WORD) instanceof RedoCommand);","lastModifiedDate":"2023-10-24"},{"lineNumber":160,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":161,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"wr1159":7,"andrechuakj":25,"SelwynAng":62,"dylkaw":12,"ph-nathan":17,"-":61}},{"path":"src/test/java/seedu/ccacommander/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.parser;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.commands.Command;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"andrechuakj":3,"-":36}},{"path":"src/test/java/seedu/ccacommander/logic/parser/CreateEventCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.parser;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.DATE_DESC_AURORA;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.DATE_DESC_BOXING;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.INVALID_DATE_DESC;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.INVALID_LOCATION_DESC;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.LOCATION_DESC_AURORA;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.LOCATION_DESC_BOXING;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.NAME_DESC_AURORA;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.NAME_DESC_BOXING;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"wr1159"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.TAGS_DESC_AURORA;","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_DATE_BOXING;","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_LOCATION_BOXING;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_NAME_BOXING;","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalEvents.AURORA_BOREALIS;","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"dylkaw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.Messages;","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.commands.CreateEventCommand;","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.Event;","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.EventDate;","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.Location;","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.shared.Name;","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.testutil.EventBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"dylkaw"},"content":"public class CreateEventCommandParserTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"dylkaw"},"content":"    private CreateEventCommandParser parser \u003d new CreateEventCommandParser();","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"dylkaw"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"dylkaw"},"content":"        Event expectedEvent \u003d new EventBuilder(AURORA_BOREALIS).build();","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"dylkaw"},"content":"        // whitespace only preamble","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"dylkaw"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"wr1159"},"content":"                PREAMBLE_WHITESPACE + NAME_DESC_AURORA + LOCATION_DESC_AURORA + DATE_DESC_AURORA","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"wr1159"},"content":"                        + TAGS_DESC_AURORA,","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"dylkaw"},"content":"                new CreateEventCommand(expectedEvent));","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"dylkaw"},"content":"    public void parse_repeatedValue_failure() {","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"dylkaw"},"content":"        String validExpectedEventString \u003d NAME_DESC_AURORA + LOCATION_DESC_AURORA + DATE_DESC_AURORA;","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"dylkaw"},"content":"        // multiple names","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"dylkaw"},"content":"        assertParseFailure(parser, NAME_DESC_BOXING + validExpectedEventString,","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"dylkaw"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"dylkaw"},"content":"        // multiple locations","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"dylkaw"},"content":"        assertParseFailure(parser, LOCATION_DESC_BOXING + validExpectedEventString,","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"dylkaw"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_LOCATION));","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"dylkaw"},"content":"        // multiple dates","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"dylkaw"},"content":"        assertParseFailure(parser, DATE_DESC_BOXING + validExpectedEventString,","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"dylkaw"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_DATE));","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"dylkaw"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"dylkaw"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"dylkaw"},"content":"                validExpectedEventString + NAME_DESC_BOXING + LOCATION_DESC_BOXING + DATE_DESC_BOXING","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"dylkaw"},"content":"                        + validExpectedEventString,","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"dylkaw"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_LOCATION, PREFIX_DATE));","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"dylkaw"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"dylkaw"},"content":"        // invalid name","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"dylkaw"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedEventString,","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"dylkaw"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"dylkaw"},"content":"        // invalid location","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"dylkaw"},"content":"        assertParseFailure(parser, INVALID_LOCATION_DESC + validExpectedEventString,","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"dylkaw"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_LOCATION));","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"dylkaw"},"content":"        // invalid date","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"dylkaw"},"content":"        assertParseFailure(parser, INVALID_DATE_DESC + validExpectedEventString,","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"dylkaw"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_DATE));","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"dylkaw"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"dylkaw"},"content":"        // invalid name","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"dylkaw"},"content":"        assertParseFailure(parser, validExpectedEventString + INVALID_NAME_DESC,","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"dylkaw"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"dylkaw"},"content":"        // invalid location","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"dylkaw"},"content":"        assertParseFailure(parser, validExpectedEventString + INVALID_LOCATION_DESC,","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"dylkaw"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_LOCATION));","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"dylkaw"},"content":"        // invalid date","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"dylkaw"},"content":"        assertParseFailure(parser, validExpectedEventString + INVALID_DATE_DESC,","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"dylkaw"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_DATE));","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"dylkaw"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"dylkaw"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, CreateEventCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"dylkaw"},"content":"        // missing name prefix","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"dylkaw"},"content":"        assertParseFailure(parser, VALID_NAME_BOXING + LOCATION_DESC_BOXING + DATE_DESC_BOXING,","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"dylkaw"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"dylkaw"},"content":"        // missing location prefix","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"dylkaw"},"content":"        assertParseFailure(parser, NAME_DESC_BOXING + VALID_LOCATION_BOXING + DATE_DESC_BOXING,","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"dylkaw"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"dylkaw"},"content":"        // missing date prefix","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"dylkaw"},"content":"        assertParseFailure(parser, NAME_DESC_BOXING + LOCATION_DESC_BOXING + VALID_DATE_BOXING,","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"dylkaw"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"dylkaw"},"content":"        // all prefixes missing","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"dylkaw"},"content":"        assertParseFailure(parser, VALID_NAME_BOXING + VALID_LOCATION_BOXING + VALID_DATE_BOXING,","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"dylkaw"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"dylkaw"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"dylkaw"},"content":"        // invalid name","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"dylkaw"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + LOCATION_DESC_BOXING + DATE_DESC_BOXING,","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"dylkaw"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"dylkaw"},"content":"        // invalid location","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"dylkaw"},"content":"        assertParseFailure(parser, NAME_DESC_BOXING + INVALID_LOCATION_DESC + DATE_DESC_BOXING,","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"dylkaw"},"content":"                Location.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"dylkaw"},"content":"        // invalid date","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"dylkaw"},"content":"        assertParseFailure(parser, NAME_DESC_BOXING + LOCATION_DESC_BOXING + INVALID_DATE_DESC,","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"dylkaw"},"content":"                EventDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"dylkaw"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"dylkaw"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + LOCATION_DESC_BOXING + INVALID_DATE_DESC,","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"dylkaw"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"dylkaw"},"content":"        // non-empty preamble","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"dylkaw"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOXING + LOCATION_DESC_BOXING","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"dylkaw"},"content":"                        + DATE_DESC_BOXING,","lastModifiedDate":"2023-10-17"},{"lineNumber":143,"author":{"gitId":"dylkaw"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, CreateEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":144,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"dylkaw"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"wr1159":3,"andrechuakj":29,"dylkaw":113}},{"path":"src/test/java/seedu/ccacommander/logic/parser/CreateMemberCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.parser;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.GENDER_DESC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.GENDER_DESC_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.INVALID_GENDER_DESC;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalMembers.AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalMembers.BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.Messages;","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.commands.CreateMemberCommand;","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Address;","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Email;","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Gender;","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Member;","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Phone;","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.shared.Name;","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.tag.Tag;","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.testutil.MemberBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"dylkaw"},"content":"public class CreateMemberCommandParserTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"dylkaw"},"content":"    private CreateMemberCommandParser parser \u003d new CreateMemberCommandParser();","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"wr1159"},"content":"        Member expectedMember \u003d new MemberBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"andrechuakj"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + GENDER_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"andrechuakj"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new CreateMemberCommand(expectedMember));","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"wr1159"},"content":"        Member expectedMemberMultipleTags \u003d new MemberBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"andrechuakj"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + GENDER_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"andrechuakj"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"dylkaw"},"content":"                new CreateMemberCommand(expectedMemberMultipleTags));","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"andrechuakj"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + GENDER_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"andrechuakj"},"content":"        // multiple genders","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"andrechuakj"},"content":"        assertParseFailure(parser, GENDER_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"andrechuakj"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_GENDER));","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"andrechuakj"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + GENDER_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"andrechuakj"},"content":"                        + ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"andrechuakj"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_GENDER, PREFIX_ADDRESS,","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"andrechuakj"},"content":"                        PREFIX_EMAIL, PREFIX_PHONE));","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"andrechuakj"},"content":"        // invalid gender","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"andrechuakj"},"content":"        assertParseFailure(parser, INVALID_GENDER_DESC + validExpectedPersonString,","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"andrechuakj"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_GENDER));","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":124,"author":{"gitId":"andrechuakj"},"content":"        // invalid address","lastModifiedDate":"2023-10-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":134,"author":{"gitId":"andrechuakj"},"content":"        // invalid gender","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"andrechuakj"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_GENDER_DESC,","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"andrechuakj"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_GENDER));","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":146,"author":{"gitId":"andrechuakj"},"content":"        // invalid address","lastModifiedDate":"2023-10-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":154,"author":{"gitId":"andrechuakj"},"content":"        Member expectedMemberNoTags \u003d new MemberBuilder(AMY).withTags().build();","lastModifiedDate":"2023-10-30"},{"lineNumber":155,"author":{"gitId":"andrechuakj"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + GENDER_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"andrechuakj"},"content":"                        + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2023-10-18"},{"lineNumber":157,"author":{"gitId":"andrechuakj"},"content":"                new CreateMemberCommand(expectedMemberNoTags));","lastModifiedDate":"2023-10-30"},{"lineNumber":158,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":159,"author":{"gitId":"andrechuakj"},"content":"        // missing phone","lastModifiedDate":"2023-10-30"},{"lineNumber":160,"author":{"gitId":"andrechuakj"},"content":"        Member expectedMemberNoPhone \u003d new MemberBuilder(AMY).withPhone().build();","lastModifiedDate":"2023-10-30"},{"lineNumber":161,"author":{"gitId":"andrechuakj"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + GENDER_DESC_AMY","lastModifiedDate":"2023-10-30"},{"lineNumber":162,"author":{"gitId":"andrechuakj"},"content":"                        + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-30"},{"lineNumber":163,"author":{"gitId":"andrechuakj"},"content":"                new CreateMemberCommand(expectedMemberNoPhone));","lastModifiedDate":"2023-10-30"},{"lineNumber":164,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":165,"author":{"gitId":"andrechuakj"},"content":"        // missing email","lastModifiedDate":"2023-10-30"},{"lineNumber":166,"author":{"gitId":"andrechuakj"},"content":"        Member expectedMemberNoEmail \u003d new MemberBuilder(AMY).withEmail().build();","lastModifiedDate":"2023-10-30"},{"lineNumber":167,"author":{"gitId":"andrechuakj"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + GENDER_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-10-30"},{"lineNumber":168,"author":{"gitId":"andrechuakj"},"content":"                        + ADDRESS_DESC_AMY + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-30"},{"lineNumber":169,"author":{"gitId":"andrechuakj"},"content":"                new CreateMemberCommand(expectedMemberNoEmail));","lastModifiedDate":"2023-10-30"},{"lineNumber":170,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":171,"author":{"gitId":"andrechuakj"},"content":"        // missing address","lastModifiedDate":"2023-10-30"},{"lineNumber":172,"author":{"gitId":"andrechuakj"},"content":"        Member expectedMemberNoAddress \u003d new MemberBuilder(AMY).withAddress().build();","lastModifiedDate":"2023-10-30"},{"lineNumber":173,"author":{"gitId":"andrechuakj"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + GENDER_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-10-30"},{"lineNumber":174,"author":{"gitId":"andrechuakj"},"content":"                        + EMAIL_DESC_AMY + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-30"},{"lineNumber":175,"author":{"gitId":"andrechuakj"},"content":"                new CreateMemberCommand(expectedMemberNoAddress));","lastModifiedDate":"2023-10-30"},{"lineNumber":176,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":177,"author":{"gitId":"andrechuakj"},"content":"        // missing all optional fields","lastModifiedDate":"2023-10-30"},{"lineNumber":178,"author":{"gitId":"andrechuakj"},"content":"        Member expectedMemberNoOptionalFields \u003d new MemberBuilder(AMY).withPhone()","lastModifiedDate":"2023-10-30"},{"lineNumber":179,"author":{"gitId":"andrechuakj"},"content":"                .withEmail().withAddress().withTags().build();","lastModifiedDate":"2023-10-30"},{"lineNumber":180,"author":{"gitId":"andrechuakj"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + GENDER_DESC_AMY,","lastModifiedDate":"2023-10-30"},{"lineNumber":181,"author":{"gitId":"andrechuakj"},"content":"                new CreateMemberCommand(expectedMemberNoOptionalFields));","lastModifiedDate":"2023-10-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":186,"author":{"gitId":"dylkaw"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, CreateMemberCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":200,"author":{"gitId":"andrechuakj"},"content":"        // missing address prefix","lastModifiedDate":"2023-10-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":212,"author":{"gitId":"andrechuakj"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + GENDER_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":213,"author":{"gitId":"andrechuakj"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":214,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":215,"author":{"gitId":"andrechuakj"},"content":"        // invalid gender","lastModifiedDate":"2023-10-18"},{"lineNumber":216,"author":{"gitId":"andrechuakj"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_GENDER_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":217,"author":{"gitId":"andrechuakj"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":220,"author":{"gitId":"andrechuakj"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + GENDER_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":221,"author":{"gitId":"andrechuakj"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":224,"author":{"gitId":"andrechuakj"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + GENDER_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC","lastModifiedDate":"2023-10-18"},{"lineNumber":225,"author":{"gitId":"andrechuakj"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":227,"author":{"gitId":"andrechuakj"},"content":"        // invalid address","lastModifiedDate":"2023-10-21"},{"lineNumber":228,"author":{"gitId":"andrechuakj"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + GENDER_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":229,"author":{"gitId":"andrechuakj"},"content":"                + INVALID_ADDRESS_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":232,"author":{"gitId":"andrechuakj"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + GENDER_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":233,"author":{"gitId":"andrechuakj"},"content":"                + ADDRESS_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":236,"author":{"gitId":"andrechuakj"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + GENDER_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":237,"author":{"gitId":"andrechuakj"},"content":"                        + INVALID_ADDRESS_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-18"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":240,"author":{"gitId":"andrechuakj"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + GENDER_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":241,"author":{"gitId":"andrechuakj"},"content":"                        + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-18"},{"lineNumber":242,"author":{"gitId":"dylkaw"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, CreateMemberCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-15"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"wr1159":2,"andrechuakj":119,"dylkaw":5,"-":118}},{"path":"src/test/java/seedu/ccacommander/logic/parser/DeleteEventCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.parser;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.commands.DeleteEventCommand;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"public class DeleteEventCommandParserTest {","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":"    private DeleteEventCommandParser parser \u003d new DeleteEventCommandParser();","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"    public void parse_validArgs_returnsDeleteEventCommand() {","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"        assertParseSuccess(parser, \"1\", new DeleteEventCommand(INDEX_FIRST_EVENT));","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"                DeleteEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"andrechuakj":6,"SelwynAng":19}},{"path":"src/test/java/seedu/ccacommander/logic/parser/DeleteMemberCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.parser;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalIndexes.INDEX_FIRST_MEMBER;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.commands.DeleteMemberCommand;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"public class DeleteMemberCommandParserTest {","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":"    private DeleteMemberCommandParser parser \u003d new DeleteMemberCommandParser();","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"    public void parse_validArgs_returnsDeleteMemberCommand() {","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"        assertParseSuccess(parser, \"1\", new DeleteMemberCommand(INDEX_FIRST_MEMBER));","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"                DeleteMemberCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"andrechuakj":6,"SelwynAng":19}},{"path":"src/test/java/seedu/ccacommander/logic/parser/EditEnrolmentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dylkaw"},"content":"package seedu.ccacommander.logic.parser;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.EVENT_INDEX_DESC_TWO;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.HOURS_DESC_AURORA;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.INVALID_EVENT_INDEX_DESC;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.INVALID_HOURS_DESC;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.INVALID_MEMBER_INDEX_DESC;","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.INVALID_REMARK_DESC;","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.MEMBER_INDEX_DESC_ONE;","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.REMARK_DESC_AURORA;","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_HOURS_AURORA;","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_REMARK_AURORA;","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_HOURS;","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.testutil.TypicalIndexes.INDEX_FIRST_MEMBER;","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.testutil.TypicalIndexes.INDEX_SECOND_EVENT;","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"dylkaw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.logic.Messages;","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.logic.commands.EditEnrolmentCommand;","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.logic.commands.EditEnrolmentCommand.EditEnrolmentDescriptor;","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.model.enrolment.Hours;","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.model.enrolment.Remark;","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.testutil.EditEnrolmentDescriptorBuilder;","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"dylkaw"},"content":"public class EditEnrolmentCommandParserTest {","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"dylkaw"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"dylkaw"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditEnrolmentCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"dylkaw"},"content":"    private EditEnrolmentCommandParser parser \u003d new EditEnrolmentCommandParser();","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"dylkaw"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"dylkaw"},"content":"        // no index specified","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"dylkaw"},"content":"        assertParseFailure(parser, VALID_HOURS_AURORA, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"dylkaw"},"content":"        // no field specified","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"dylkaw"},"content":"        assertParseFailure(parser, MEMBER_INDEX_DESC_ONE + EVENT_INDEX_DESC_TWO,","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"dylkaw"},"content":"                EditEnrolmentCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"dylkaw"},"content":"        // no index and no field specified","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"dylkaw"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"dylkaw"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"dylkaw"},"content":"        assertParseFailure(parser, INVALID_MEMBER_INDEX_DESC + EVENT_INDEX_DESC_TWO + HOURS_DESC_AURORA,","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"dylkaw"},"content":"                ParserUtil.MESSAGE_INVALID_INDEX); // invalid memberIndex","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"dylkaw"},"content":"        assertParseFailure(parser, MEMBER_INDEX_DESC_ONE + INVALID_EVENT_INDEX_DESC + REMARK_DESC_AURORA,","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"dylkaw"},"content":"                ParserUtil.MESSAGE_INVALID_INDEX); // invalid eventIndex","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"dylkaw"},"content":"        assertParseFailure(parser, MEMBER_INDEX_DESC_ONE + EVENT_INDEX_DESC_TWO + INVALID_HOURS_DESC,","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"dylkaw"},"content":"                Hours.MESSAGE_CONSTRAINTS); // invalid hours","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"dylkaw"},"content":"        assertParseFailure(parser, MEMBER_INDEX_DESC_ONE + EVENT_INDEX_DESC_TWO + INVALID_REMARK_DESC,","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"dylkaw"},"content":"                Remark.MESSAGE_CONSTRAINTS); // invalid remark","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"dylkaw"},"content":"        // invalid hours followed by valid remark","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"dylkaw"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"dylkaw"},"content":"                MEMBER_INDEX_DESC_ONE + EVENT_INDEX_DESC_TWO + INVALID_HOURS_DESC + REMARK_DESC_AURORA,","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"dylkaw"},"content":"                Hours.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-28"},{"lineNumber":66,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":67,"author":{"gitId":"dylkaw"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2023-10-28"},{"lineNumber":68,"author":{"gitId":"dylkaw"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"dylkaw"},"content":"                MEMBER_INDEX_DESC_ONE + EVENT_INDEX_DESC_TWO + INVALID_HOURS_DESC + INVALID_REMARK_DESC,","lastModifiedDate":"2023-10-28"},{"lineNumber":70,"author":{"gitId":"dylkaw"},"content":"                Hours.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-28"},{"lineNumber":71,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":72,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":73,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":74,"author":{"gitId":"dylkaw"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2023-10-28"},{"lineNumber":75,"author":{"gitId":"dylkaw"},"content":"        String userInput \u003d MEMBER_INDEX_DESC_ONE + EVENT_INDEX_DESC_TWO + HOURS_DESC_AURORA + REMARK_DESC_AURORA;","lastModifiedDate":"2023-10-28"},{"lineNumber":76,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":77,"author":{"gitId":"dylkaw"},"content":"        EditEnrolmentDescriptor descriptor \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":78,"author":{"gitId":"dylkaw"},"content":"                new EditEnrolmentDescriptorBuilder()","lastModifiedDate":"2023-10-28"},{"lineNumber":79,"author":{"gitId":"dylkaw"},"content":"                        .withHours(VALID_HOURS_AURORA)","lastModifiedDate":"2023-10-28"},{"lineNumber":80,"author":{"gitId":"dylkaw"},"content":"                        .withRemark(VALID_REMARK_AURORA)","lastModifiedDate":"2023-10-28"},{"lineNumber":81,"author":{"gitId":"dylkaw"},"content":"                        .build();","lastModifiedDate":"2023-10-28"},{"lineNumber":82,"author":{"gitId":"dylkaw"},"content":"        EditEnrolmentCommand expectedCommand \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":83,"author":{"gitId":"dylkaw"},"content":"                new EditEnrolmentCommand(INDEX_FIRST_MEMBER, INDEX_SECOND_EVENT, descriptor);","lastModifiedDate":"2023-10-28"},{"lineNumber":84,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":85,"author":{"gitId":"dylkaw"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-28"},{"lineNumber":86,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":87,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":88,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":89,"author":{"gitId":"dylkaw"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2023-10-28"},{"lineNumber":90,"author":{"gitId":"dylkaw"},"content":"        String userInput \u003d MEMBER_INDEX_DESC_ONE + EVENT_INDEX_DESC_TWO + HOURS_DESC_AURORA;","lastModifiedDate":"2023-10-28"},{"lineNumber":91,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":92,"author":{"gitId":"dylkaw"},"content":"        EditEnrolmentDescriptor descriptor \u003d new EditEnrolmentDescriptorBuilder().withHours(VALID_HOURS_AURORA).build();","lastModifiedDate":"2023-10-28"},{"lineNumber":93,"author":{"gitId":"dylkaw"},"content":"        EditEnrolmentCommand expectedCommand \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":94,"author":{"gitId":"dylkaw"},"content":"                new EditEnrolmentCommand(INDEX_FIRST_MEMBER, INDEX_SECOND_EVENT, descriptor);","lastModifiedDate":"2023-10-28"},{"lineNumber":95,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":96,"author":{"gitId":"dylkaw"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-28"},{"lineNumber":97,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":98,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":99,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":100,"author":{"gitId":"dylkaw"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-10-28"},{"lineNumber":101,"author":{"gitId":"dylkaw"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-10-28"},{"lineNumber":102,"author":{"gitId":"dylkaw"},"content":"        // EnrolCommandParserTest#parse_repeatedValue_failure","lastModifiedDate":"2023-10-28"},{"lineNumber":103,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":104,"author":{"gitId":"dylkaw"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-10-28"},{"lineNumber":105,"author":{"gitId":"dylkaw"},"content":"        String userInput \u003d MEMBER_INDEX_DESC_ONE + EVENT_INDEX_DESC_TWO + INVALID_HOURS_DESC + HOURS_DESC_AURORA;","lastModifiedDate":"2023-10-28"},{"lineNumber":106,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":107,"author":{"gitId":"dylkaw"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_HOURS));","lastModifiedDate":"2023-10-28"},{"lineNumber":108,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":109,"author":{"gitId":"dylkaw"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-10-28"},{"lineNumber":110,"author":{"gitId":"dylkaw"},"content":"        userInput \u003d MEMBER_INDEX_DESC_ONE + EVENT_INDEX_DESC_TWO + HOURS_DESC_AURORA + INVALID_HOURS_DESC;","lastModifiedDate":"2023-10-28"},{"lineNumber":111,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":112,"author":{"gitId":"dylkaw"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_HOURS));","lastModifiedDate":"2023-10-28"},{"lineNumber":113,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":114,"author":{"gitId":"dylkaw"},"content":"        // multiple valid fields repeated","lastModifiedDate":"2023-10-28"},{"lineNumber":115,"author":{"gitId":"dylkaw"},"content":"        userInput \u003d MEMBER_INDEX_DESC_ONE + EVENT_INDEX_DESC_TWO + HOURS_DESC_AURORA + REMARK_DESC_AURORA","lastModifiedDate":"2023-10-28"},{"lineNumber":116,"author":{"gitId":"dylkaw"},"content":"                + HOURS_DESC_AURORA + REMARK_DESC_AURORA;","lastModifiedDate":"2023-10-28"},{"lineNumber":117,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":118,"author":{"gitId":"dylkaw"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-10-28"},{"lineNumber":119,"author":{"gitId":"dylkaw"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_HOURS, PREFIX_REMARK));","lastModifiedDate":"2023-10-28"},{"lineNumber":120,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":121,"author":{"gitId":"dylkaw"},"content":"        // multiple invalid values","lastModifiedDate":"2023-10-28"},{"lineNumber":122,"author":{"gitId":"dylkaw"},"content":"        userInput \u003d MEMBER_INDEX_DESC_ONE + EVENT_INDEX_DESC_TWO + INVALID_HOURS_DESC + INVALID_REMARK_DESC","lastModifiedDate":"2023-10-28"},{"lineNumber":123,"author":{"gitId":"dylkaw"},"content":"                + INVALID_HOURS_DESC + INVALID_REMARK_DESC;","lastModifiedDate":"2023-10-28"},{"lineNumber":124,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":125,"author":{"gitId":"dylkaw"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-10-28"},{"lineNumber":126,"author":{"gitId":"dylkaw"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_HOURS, PREFIX_REMARK));","lastModifiedDate":"2023-10-28"},{"lineNumber":127,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":128,"author":{"gitId":"dylkaw"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"dylkaw":128}},{"path":"src/test/java/seedu/ccacommander/logic/parser/EditEventCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"package seedu.ccacommander.logic.parser;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.DATE_DESC_AURORA;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.DATE_DESC_BOXING;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.INVALID_DATE_DESC;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.INVALID_LOCATION_DESC;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.LOCATION_DESC_AURORA;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.LOCATION_DESC_BOXING;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.NAME_DESC_AURORA;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.TAGS_DESC_AURORA;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.TAGS_DESC_BOXING;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_DATE_AURORA;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_LOCATION_AURORA;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_LOCATION_BOXING;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_NAME_AURORA;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_TAG_AURORA;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.testutil.TypicalIndexes.INDEX_SECOND_EVENT;","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.testutil.TypicalIndexes.INDEX_THIRD_EVENT;","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"ph-nathan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.commons.core.index.Index;","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.logic.Messages;","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.logic.commands.EditEventCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.logic.commands.EditEventCommand.EditEventDescriptor;","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.event.EventDate;","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.event.Location;","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.shared.Name;","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.tag.Tag;","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.testutil.EditEventDescriptorBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"ph-nathan"},"content":"public class EditEventCommandParserTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"ph-nathan"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"ph-nathan"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"ph-nathan"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditEventCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"ph-nathan"},"content":"    private EditEventCommandParser parser \u003d new EditEventCommandParser();","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"ph-nathan"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"ph-nathan"},"content":"        // no index specified","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"ph-nathan"},"content":"        assertParseFailure(parser, VALID_NAME_AURORA, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"ph-nathan"},"content":"        // no field specified","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"ph-nathan"},"content":"        assertParseFailure(parser, \"1\", EditEventCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"ph-nathan"},"content":"        // no index and no field specified","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"ph-nathan"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"ph-nathan"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"ph-nathan"},"content":"        // negative index","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"ph-nathan"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AURORA, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"ph-nathan"},"content":"        // zero index","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"ph-nathan"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AURORA, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"ph-nathan"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"ph-nathan"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"ph-nathan"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"ph-nathan"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"ph-nathan"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"ph-nathan"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"ph-nathan"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DATE_DESC, EventDate.MESSAGE_CONSTRAINTS); // invalid date","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"ph-nathan"},"content":"        assertParseFailure(parser, \"1\" + INVALID_LOCATION_DESC, Location.MESSAGE_CONSTRAINTS); // invalid Location","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"ph-nathan"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"ph-nathan"},"content":"        // invalid location followed by valid date","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"ph-nathan"},"content":"        assertParseFailure(parser, \"1\" + INVALID_LOCATION_DESC + DATE_DESC_AURORA, Location.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"ph-nathan"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Event} being edited,","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"ph-nathan"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"ph-nathan"},"content":"        assertParseFailure(parser, \"1\" + TAGS_DESC_AURORA + TAGS_DESC_BOXING + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"ph-nathan"},"content":"        assertParseFailure(parser, \"1\" + TAGS_DESC_AURORA + TAG_EMPTY + TAGS_DESC_BOXING, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"ph-nathan"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAGS_DESC_AURORA + TAGS_DESC_BOXING, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"ph-nathan"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"ph-nathan"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_DATE_DESC","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"ph-nathan"},"content":"                + VALID_LOCATION_AURORA + VALID_DATE_AURORA, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"ph-nathan"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"ph-nathan"},"content":"        Index targetIndex \u003d INDEX_SECOND_EVENT;","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"ph-nathan"},"content":"        String userInput \u003d targetIndex.getOneBased() + DATE_DESC_AURORA","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"ph-nathan"},"content":"                + LOCATION_DESC_AURORA + NAME_DESC_AURORA + TAGS_DESC_AURORA;","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"ph-nathan"},"content":"        EditEventCommand.EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder().withName(VALID_NAME_AURORA)","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"ph-nathan"},"content":"                .withDate(VALID_DATE_AURORA).withLocation(VALID_LOCATION_AURORA)","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"ph-nathan"},"content":"                .withTags(VALID_TAG_AURORA).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"ph-nathan"},"content":"        EditEventCommand expectedCommand \u003d new EditEventCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"ph-nathan"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"ph-nathan"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"ph-nathan"},"content":"        Index targetIndex \u003d INDEX_FIRST_EVENT;","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"ph-nathan"},"content":"        String userInput \u003d targetIndex.getOneBased() + LOCATION_DESC_BOXING + DATE_DESC_AURORA;","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"ph-nathan"},"content":"        EditEventCommand.EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder()","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"ph-nathan"},"content":"                .withLocation(VALID_LOCATION_BOXING)","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"ph-nathan"},"content":"                .withDate(VALID_DATE_AURORA).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"ph-nathan"},"content":"        EditEventCommand expectedCommand \u003d new EditEventCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":122,"author":{"gitId":"ph-nathan"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"ph-nathan"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"ph-nathan"},"content":"        // name","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"ph-nathan"},"content":"        Index targetIndex \u003d INDEX_THIRD_EVENT;","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"ph-nathan"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AURORA;","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"ph-nathan"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder().withName(VALID_NAME_AURORA).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"ph-nathan"},"content":"        EditEventCommand expectedCommand \u003d new EditEventCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"ph-nathan"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"ph-nathan"},"content":"        // location","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"ph-nathan"},"content":"        userInput \u003d targetIndex.getOneBased() + LOCATION_DESC_AURORA;","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"ph-nathan"},"content":"        descriptor \u003d new EditEventDescriptorBuilder().withLocation(VALID_LOCATION_AURORA).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"ph-nathan"},"content":"        expectedCommand \u003d new EditEventCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-26"},{"lineNumber":138,"author":{"gitId":"ph-nathan"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":140,"author":{"gitId":"ph-nathan"},"content":"        // date","lastModifiedDate":"2023-10-26"},{"lineNumber":141,"author":{"gitId":"ph-nathan"},"content":"        userInput \u003d targetIndex.getOneBased() + DATE_DESC_AURORA;","lastModifiedDate":"2023-10-26"},{"lineNumber":142,"author":{"gitId":"ph-nathan"},"content":"        descriptor \u003d new EditEventDescriptorBuilder().withDate(VALID_DATE_AURORA).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"ph-nathan"},"content":"        expectedCommand \u003d new EditEventCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"ph-nathan"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"ph-nathan"},"content":"        // tags","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"ph-nathan"},"content":"        userInput \u003d targetIndex.getOneBased() + TAGS_DESC_AURORA;","lastModifiedDate":"2023-10-26"},{"lineNumber":148,"author":{"gitId":"ph-nathan"},"content":"        descriptor \u003d new EditEventDescriptorBuilder().withTags(VALID_TAG_AURORA).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":149,"author":{"gitId":"ph-nathan"},"content":"        expectedCommand \u003d new EditEventCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-26"},{"lineNumber":150,"author":{"gitId":"ph-nathan"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":151,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":152,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":153,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":154,"author":{"gitId":"ph-nathan"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-10-26"},{"lineNumber":155,"author":{"gitId":"ph-nathan"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-10-26"},{"lineNumber":156,"author":{"gitId":"ph-nathan"},"content":"        // CreateEventCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-10-26"},{"lineNumber":157,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":158,"author":{"gitId":"ph-nathan"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-10-26"},{"lineNumber":159,"author":{"gitId":"ph-nathan"},"content":"        Index targetIndex \u003d INDEX_FIRST_EVENT;","lastModifiedDate":"2023-10-26"},{"lineNumber":160,"author":{"gitId":"ph-nathan"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_LOCATION_DESC + LOCATION_DESC_BOXING;","lastModifiedDate":"2023-10-26"},{"lineNumber":161,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":162,"author":{"gitId":"ph-nathan"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_LOCATION));","lastModifiedDate":"2023-10-26"},{"lineNumber":163,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":164,"author":{"gitId":"ph-nathan"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-10-26"},{"lineNumber":165,"author":{"gitId":"ph-nathan"},"content":"        userInput \u003d targetIndex.getOneBased() + LOCATION_DESC_BOXING + INVALID_LOCATION_DESC;","lastModifiedDate":"2023-10-26"},{"lineNumber":166,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":167,"author":{"gitId":"ph-nathan"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_LOCATION));","lastModifiedDate":"2023-10-26"},{"lineNumber":168,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":169,"author":{"gitId":"ph-nathan"},"content":"        // multiple valid fields repeated","lastModifiedDate":"2023-10-26"},{"lineNumber":170,"author":{"gitId":"ph-nathan"},"content":"        userInput \u003d targetIndex.getOneBased() + LOCATION_DESC_AURORA + DATE_DESC_AURORA","lastModifiedDate":"2023-10-26"},{"lineNumber":171,"author":{"gitId":"ph-nathan"},"content":"                + TAGS_DESC_AURORA + LOCATION_DESC_AURORA + DATE_DESC_AURORA + DATE_DESC_AURORA + TAGS_DESC_AURORA","lastModifiedDate":"2023-10-26"},{"lineNumber":172,"author":{"gitId":"ph-nathan"},"content":"                + LOCATION_DESC_BOXING + DATE_DESC_BOXING + TAGS_DESC_BOXING;","lastModifiedDate":"2023-10-26"},{"lineNumber":173,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":174,"author":{"gitId":"ph-nathan"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-10-26"},{"lineNumber":175,"author":{"gitId":"ph-nathan"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_LOCATION, PREFIX_DATE));","lastModifiedDate":"2023-10-26"},{"lineNumber":176,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":177,"author":{"gitId":"ph-nathan"},"content":"        // multiple invalid values","lastModifiedDate":"2023-10-26"},{"lineNumber":178,"author":{"gitId":"ph-nathan"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_LOCATION_DESC + INVALID_DATE_DESC","lastModifiedDate":"2023-10-26"},{"lineNumber":179,"author":{"gitId":"ph-nathan"},"content":"                + INVALID_LOCATION_DESC + INVALID_DATE_DESC;","lastModifiedDate":"2023-10-26"},{"lineNumber":180,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":181,"author":{"gitId":"ph-nathan"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-10-26"},{"lineNumber":182,"author":{"gitId":"ph-nathan"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_DATE, PREFIX_LOCATION));","lastModifiedDate":"2023-10-26"},{"lineNumber":183,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":184,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":185,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":186,"author":{"gitId":"ph-nathan"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2023-10-26"},{"lineNumber":187,"author":{"gitId":"ph-nathan"},"content":"        Index targetIndex \u003d INDEX_THIRD_EVENT;","lastModifiedDate":"2023-10-26"},{"lineNumber":188,"author":{"gitId":"ph-nathan"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2023-10-26"},{"lineNumber":189,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":190,"author":{"gitId":"ph-nathan"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder().withTags().build();","lastModifiedDate":"2023-10-26"},{"lineNumber":191,"author":{"gitId":"ph-nathan"},"content":"        EditEventCommand expectedCommand \u003d new EditEventCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-26"},{"lineNumber":192,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":193,"author":{"gitId":"ph-nathan"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-26"},{"lineNumber":194,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":195,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"ph-nathan":195}},{"path":"src/test/java/seedu/ccacommander/logic/parser/EditMemberCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.parser;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalIndexes.INDEX_FIRST_MEMBER;","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalIndexes.INDEX_SECOND_MEMBER;","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalIndexes.INDEX_THIRD_MEMBER;","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.core.index.Index;","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.Messages;","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.logic.commands.EditMemberCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.logic.commands.EditMemberCommand.EditMemberDescriptor;","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Address;","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Email;","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Phone;","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.shared.Name;","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.tag.Tag;","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.testutil.EditMemberDescriptorBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"ph-nathan"},"content":"public class EditMemberCommandParserTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"ph-nathan"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditMemberCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"ph-nathan"},"content":"    private EditMemberCommandParser parser \u003d new EditMemberCommandParser();","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"ph-nathan"},"content":"        assertParseFailure(parser, \"1\", EditMemberCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2023-10-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"wr1159"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Member} being edited,","lastModifiedDate":"2023-10-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"wr1159"},"content":"        Index targetIndex \u003d INDEX_SECOND_MEMBER;","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"ph-nathan"},"content":"        EditMemberCommand.EditMemberDescriptor descriptor \u003d new EditMemberDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"ph-nathan"},"content":"        EditMemberCommand expectedCommand \u003d new EditMemberCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":122,"author":{"gitId":"wr1159"},"content":"        Index targetIndex \u003d INDEX_FIRST_MEMBER;","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"ph-nathan"},"content":"        EditMemberCommand.EditMemberDescriptor descriptor \u003d new EditMemberDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"ph-nathan"},"content":"        EditMemberCommand expectedCommand \u003d new EditMemberCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"wr1159"},"content":"        Index targetIndex \u003d INDEX_THIRD_MEMBER;","lastModifiedDate":"2023-10-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":137,"author":{"gitId":"wr1159"},"content":"        EditMemberDescriptor descriptor \u003d new EditMemberDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2023-10-02"},{"lineNumber":138,"author":{"gitId":"ph-nathan"},"content":"        EditMemberCommand expectedCommand \u003d new EditMemberCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":143,"author":{"gitId":"wr1159"},"content":"        descriptor \u003d new EditMemberDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2023-10-02"},{"lineNumber":144,"author":{"gitId":"ph-nathan"},"content":"        expectedCommand \u003d new EditMemberCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":149,"author":{"gitId":"wr1159"},"content":"        descriptor \u003d new EditMemberDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-10-02"},{"lineNumber":150,"author":{"gitId":"ph-nathan"},"content":"        expectedCommand \u003d new EditMemberCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2023-10-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":155,"author":{"gitId":"wr1159"},"content":"        descriptor \u003d new EditMemberDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2023-10-02"},{"lineNumber":156,"author":{"gitId":"ph-nathan"},"content":"        expectedCommand \u003d new EditMemberCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":161,"author":{"gitId":"wr1159"},"content":"        descriptor \u003d new EditMemberDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-02"},{"lineNumber":162,"author":{"gitId":"ph-nathan"},"content":"        expectedCommand \u003d new EditMemberCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":169,"author":{"gitId":"dylkaw"},"content":"        // CreateMemberCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-10-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":172,"author":{"gitId":"wr1159"},"content":"        Index targetIndex \u003d INDEX_FIRST_MEMBER;","lastModifiedDate":"2023-10-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":182,"author":{"gitId":"andrechuakj"},"content":"        // multiple valid fields repeated","lastModifiedDate":"2023-10-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-07-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":200,"author":{"gitId":"wr1159"},"content":"        Index targetIndex \u003d INDEX_THIRD_MEMBER;","lastModifiedDate":"2023-10-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"wr1159"},"content":"        EditMemberDescriptor descriptor \u003d new EditMemberDescriptorBuilder().withTags().build();","lastModifiedDate":"2023-10-02"},{"lineNumber":204,"author":{"gitId":"ph-nathan"},"content":"        EditMemberCommand expectedCommand \u003d new EditMemberCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"wr1159":12,"andrechuakj":42,"dylkaw":1,"ph-nathan":16,"-":137}},{"path":"src/test/java/seedu/ccacommander/logic/parser/EnrolCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dylkaw"},"content":"package seedu.ccacommander.logic.parser;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.EVENT_INDEX_DESC_TWO;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.HOURS_DESC_AURORA;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.INVALID_EVENT_INDEX_DESC;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.INVALID_HOURS_DESC;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.INVALID_MEMBER_INDEX_DESC;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.INVALID_REMARK_DESC;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.MEMBER_INDEX_DESC_ONE;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.REMARK_DESC_AURORA;","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_HOURS_A;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_HOURS_AURORA;","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_INDEX_ONE;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_INDEX_TWO;","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_REMARK_A;","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_REMARK_AURORA;","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_EVENT;","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_HOURS;","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_MEMBER;","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalIndexes.INDEX_FIRST_MEMBER;","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalIndexes.INDEX_SECOND_EVENT;","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"andrechuakj"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"dylkaw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.logic.Messages;","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.logic.commands.EnrolCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.enrolment.Hours;","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.enrolment.Remark;","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"dylkaw"},"content":"public class EnrolCommandParserTest {","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"dylkaw"},"content":"    private EnrolCommandParser parser \u003d new EnrolCommandParser();","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"dylkaw"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"dylkaw"},"content":"        EnrolCommand expectedEnrolEventCommand \u003d","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"andrechuakj"},"content":"                new EnrolCommand(VALID_INDEX_ONE, VALID_INDEX_TWO,","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"andrechuakj"},"content":"                        Optional.of(VALID_HOURS_A), Optional.of(VALID_REMARK_A));","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"dylkaw"},"content":"        // whitespace only preamble","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"dylkaw"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"dylkaw"},"content":"                PREAMBLE_WHITESPACE + MEMBER_INDEX_DESC_ONE","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"dylkaw"},"content":"                        + EVENT_INDEX_DESC_TWO + HOURS_DESC_AURORA + REMARK_DESC_AURORA,","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"dylkaw"},"content":"                expectedEnrolEventCommand);","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"dylkaw"},"content":"    public void parse_repeatedValue_failure() {","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"andrechuakj"},"content":"        String validExpectedEnrolmentString \u003d MEMBER_INDEX_DESC_ONE + EVENT_INDEX_DESC_TWO + HOURS_DESC_AURORA","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"dylkaw"},"content":"                + REMARK_DESC_AURORA;","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"dylkaw"},"content":"        // multiple member indexes","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"andrechuakj"},"content":"        assertParseFailure(parser, MEMBER_INDEX_DESC_ONE + validExpectedEnrolmentString,","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"dylkaw"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_MEMBER));","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"dylkaw"},"content":"        // multiple event indexes","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"andrechuakj"},"content":"        assertParseFailure(parser, EVENT_INDEX_DESC_TWO + validExpectedEnrolmentString,","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"dylkaw"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EVENT));","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"dylkaw"},"content":"        // multiple hours","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"andrechuakj"},"content":"        assertParseFailure(parser, HOURS_DESC_AURORA + validExpectedEnrolmentString,","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"dylkaw"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_HOURS));","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"dylkaw"},"content":"        // multiple remarks","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"andrechuakj"},"content":"        assertParseFailure(parser, REMARK_DESC_AURORA + validExpectedEnrolmentString,","lastModifiedDate":"2023-10-28"},{"lineNumber":73,"author":{"gitId":"dylkaw"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_REMARK));","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"dylkaw"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"dylkaw"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"andrechuakj"},"content":"                validExpectedEnrolmentString + MEMBER_INDEX_DESC_ONE + EVENT_INDEX_DESC_TWO","lastModifiedDate":"2023-10-28"},{"lineNumber":78,"author":{"gitId":"andrechuakj"},"content":"                        + HOURS_DESC_AURORA + REMARK_DESC_AURORA + validExpectedEnrolmentString,","lastModifiedDate":"2023-10-28"},{"lineNumber":79,"author":{"gitId":"dylkaw"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_MEMBER, PREFIX_EVENT, PREFIX_HOURS, PREFIX_REMARK));","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"dylkaw"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"dylkaw"},"content":"        // invalid member index","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"andrechuakj"},"content":"        assertParseFailure(parser, INVALID_MEMBER_INDEX_DESC + validExpectedEnrolmentString,","lastModifiedDate":"2023-10-28"},{"lineNumber":85,"author":{"gitId":"dylkaw"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_MEMBER));","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"dylkaw"},"content":"        // invalid event index","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"andrechuakj"},"content":"        assertParseFailure(parser, INVALID_EVENT_INDEX_DESC + validExpectedEnrolmentString,","lastModifiedDate":"2023-10-28"},{"lineNumber":89,"author":{"gitId":"dylkaw"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EVENT));","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"dylkaw"},"content":"        // invalid hours","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"andrechuakj"},"content":"        assertParseFailure(parser, INVALID_HOURS_DESC + validExpectedEnrolmentString,","lastModifiedDate":"2023-10-28"},{"lineNumber":93,"author":{"gitId":"dylkaw"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_HOURS));","lastModifiedDate":"2023-10-24"},{"lineNumber":94,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":95,"author":{"gitId":"dylkaw"},"content":"        // invalid remark","lastModifiedDate":"2023-10-24"},{"lineNumber":96,"author":{"gitId":"andrechuakj"},"content":"        assertParseFailure(parser, INVALID_REMARK_DESC + validExpectedEnrolmentString,","lastModifiedDate":"2023-10-28"},{"lineNumber":97,"author":{"gitId":"dylkaw"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_REMARK));","lastModifiedDate":"2023-10-24"},{"lineNumber":98,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":99,"author":{"gitId":"dylkaw"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-10-24"},{"lineNumber":100,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":101,"author":{"gitId":"dylkaw"},"content":"        // invalid member index","lastModifiedDate":"2023-10-24"},{"lineNumber":102,"author":{"gitId":"andrechuakj"},"content":"        assertParseFailure(parser, validExpectedEnrolmentString + INVALID_MEMBER_INDEX_DESC,","lastModifiedDate":"2023-10-28"},{"lineNumber":103,"author":{"gitId":"dylkaw"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_MEMBER));","lastModifiedDate":"2023-10-24"},{"lineNumber":104,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"dylkaw"},"content":"        // invalid event index","lastModifiedDate":"2023-10-24"},{"lineNumber":106,"author":{"gitId":"andrechuakj"},"content":"        assertParseFailure(parser, validExpectedEnrolmentString + INVALID_EVENT_INDEX_DESC,","lastModifiedDate":"2023-10-28"},{"lineNumber":107,"author":{"gitId":"dylkaw"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EVENT));","lastModifiedDate":"2023-10-24"},{"lineNumber":108,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":109,"author":{"gitId":"dylkaw"},"content":"        // invalid hours","lastModifiedDate":"2023-10-24"},{"lineNumber":110,"author":{"gitId":"andrechuakj"},"content":"        assertParseFailure(parser, validExpectedEnrolmentString + INVALID_HOURS_DESC,","lastModifiedDate":"2023-10-28"},{"lineNumber":111,"author":{"gitId":"dylkaw"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_HOURS));","lastModifiedDate":"2023-10-24"},{"lineNumber":112,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":113,"author":{"gitId":"dylkaw"},"content":"        // invalid remark","lastModifiedDate":"2023-10-24"},{"lineNumber":114,"author":{"gitId":"andrechuakj"},"content":"        assertParseFailure(parser, validExpectedEnrolmentString + INVALID_REMARK_DESC,","lastModifiedDate":"2023-10-28"},{"lineNumber":115,"author":{"gitId":"dylkaw"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_REMARK));","lastModifiedDate":"2023-10-24"},{"lineNumber":116,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":117,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":118,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":119,"author":{"gitId":"dylkaw"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-10-24"},{"lineNumber":120,"author":{"gitId":"dylkaw"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, EnrolCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-24"},{"lineNumber":121,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":122,"author":{"gitId":"andrechuakj"},"content":"        // missing name index field","lastModifiedDate":"2023-10-30"},{"lineNumber":123,"author":{"gitId":"dylkaw"},"content":"        assertParseFailure(parser, EVENT_INDEX_DESC_TWO + HOURS_DESC_AURORA + REMARK_DESC_AURORA,","lastModifiedDate":"2023-10-24"},{"lineNumber":124,"author":{"gitId":"dylkaw"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-24"},{"lineNumber":125,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":126,"author":{"gitId":"andrechuakj"},"content":"        // missing event index field","lastModifiedDate":"2023-10-30"},{"lineNumber":127,"author":{"gitId":"dylkaw"},"content":"        assertParseFailure(parser, MEMBER_INDEX_DESC_ONE + HOURS_DESC_AURORA + REMARK_DESC_AURORA,","lastModifiedDate":"2023-10-24"},{"lineNumber":128,"author":{"gitId":"dylkaw"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-24"},{"lineNumber":129,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":130,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":131,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":132,"author":{"gitId":"andrechuakj"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":133,"author":{"gitId":"andrechuakj"},"content":"    public void parse_optionalFieldMissing_success() {","lastModifiedDate":"2023-10-30"},{"lineNumber":134,"author":{"gitId":"andrechuakj"},"content":"        // missing hours","lastModifiedDate":"2023-10-30"},{"lineNumber":135,"author":{"gitId":"andrechuakj"},"content":"        EnrolCommand expectedEnrolCommandNoHours \u003d new EnrolCommand(INDEX_FIRST_MEMBER, INDEX_SECOND_EVENT,","lastModifiedDate":"2023-10-30"},{"lineNumber":136,"author":{"gitId":"andrechuakj"},"content":"                Optional.empty(), Optional.of(new Remark(VALID_REMARK_AURORA)));","lastModifiedDate":"2023-10-30"},{"lineNumber":137,"author":{"gitId":"andrechuakj"},"content":"        String userInputNoHours \u003d MEMBER_INDEX_DESC_ONE + EVENT_INDEX_DESC_TWO + REMARK_DESC_AURORA;","lastModifiedDate":"2023-10-30"},{"lineNumber":138,"author":{"gitId":"andrechuakj"},"content":"        assertParseSuccess(parser, userInputNoHours, expectedEnrolCommandNoHours);","lastModifiedDate":"2023-10-30"},{"lineNumber":139,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":140,"author":{"gitId":"andrechuakj"},"content":"        // missing remark","lastModifiedDate":"2023-10-30"},{"lineNumber":141,"author":{"gitId":"andrechuakj"},"content":"        EnrolCommand expectedEnrolCommandNoRemarks \u003d new EnrolCommand(INDEX_FIRST_MEMBER, INDEX_SECOND_EVENT,","lastModifiedDate":"2023-10-30"},{"lineNumber":142,"author":{"gitId":"andrechuakj"},"content":"                Optional.of(new Hours(VALID_HOURS_AURORA)), Optional.empty());","lastModifiedDate":"2023-10-30"},{"lineNumber":143,"author":{"gitId":"andrechuakj"},"content":"        String userInputNoRemarks \u003d MEMBER_INDEX_DESC_ONE + EVENT_INDEX_DESC_TWO + HOURS_DESC_AURORA;","lastModifiedDate":"2023-10-30"},{"lineNumber":144,"author":{"gitId":"andrechuakj"},"content":"        assertParseSuccess(parser, userInputNoRemarks, expectedEnrolCommandNoRemarks);","lastModifiedDate":"2023-10-30"},{"lineNumber":145,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":146,"author":{"gitId":"andrechuakj"},"content":"        // missing hours and remark","lastModifiedDate":"2023-10-30"},{"lineNumber":147,"author":{"gitId":"andrechuakj"},"content":"        EnrolCommand expectedEnrolCommandNoHoursAndRemarks \u003d new EnrolCommand(INDEX_FIRST_MEMBER, INDEX_SECOND_EVENT,","lastModifiedDate":"2023-10-30"},{"lineNumber":148,"author":{"gitId":"andrechuakj"},"content":"                Optional.empty(), Optional.empty());","lastModifiedDate":"2023-10-30"},{"lineNumber":149,"author":{"gitId":"andrechuakj"},"content":"        String userInputNoHoursAndRemarks \u003d MEMBER_INDEX_DESC_ONE + EVENT_INDEX_DESC_TWO;","lastModifiedDate":"2023-10-30"},{"lineNumber":150,"author":{"gitId":"andrechuakj"},"content":"        assertParseSuccess(parser, userInputNoHoursAndRemarks, expectedEnrolCommandNoHoursAndRemarks);","lastModifiedDate":"2023-10-30"},{"lineNumber":151,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":152,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":153,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":154,"author":{"gitId":"dylkaw"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-24"},{"lineNumber":155,"author":{"gitId":"dylkaw"},"content":"        // invalid member index","lastModifiedDate":"2023-10-24"},{"lineNumber":156,"author":{"gitId":"dylkaw"},"content":"        assertParseFailure(parser, INVALID_MEMBER_INDEX_DESC + EVENT_INDEX_DESC_TWO + HOURS_DESC_AURORA","lastModifiedDate":"2023-10-24"},{"lineNumber":157,"author":{"gitId":"dylkaw"},"content":"                + REMARK_DESC_AURORA, ParserUtil.MESSAGE_INVALID_INDEX);","lastModifiedDate":"2023-10-24"},{"lineNumber":158,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":159,"author":{"gitId":"dylkaw"},"content":"        // invalid event index","lastModifiedDate":"2023-10-24"},{"lineNumber":160,"author":{"gitId":"dylkaw"},"content":"        assertParseFailure(parser, MEMBER_INDEX_DESC_ONE + INVALID_EVENT_INDEX_DESC + HOURS_DESC_AURORA","lastModifiedDate":"2023-10-24"},{"lineNumber":161,"author":{"gitId":"dylkaw"},"content":"                + REMARK_DESC_AURORA, ParserUtil.MESSAGE_INVALID_INDEX);","lastModifiedDate":"2023-10-24"},{"lineNumber":162,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":163,"author":{"gitId":"dylkaw"},"content":"        // invalid hours","lastModifiedDate":"2023-10-24"},{"lineNumber":164,"author":{"gitId":"dylkaw"},"content":"        assertParseFailure(parser, MEMBER_INDEX_DESC_ONE + EVENT_INDEX_DESC_TWO + INVALID_HOURS_DESC","lastModifiedDate":"2023-10-24"},{"lineNumber":165,"author":{"gitId":"dylkaw"},"content":"                        + REMARK_DESC_AURORA, Hours.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-24"},{"lineNumber":166,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":167,"author":{"gitId":"dylkaw"},"content":"        // invalid remark","lastModifiedDate":"2023-10-24"},{"lineNumber":168,"author":{"gitId":"dylkaw"},"content":"        assertParseFailure(parser, MEMBER_INDEX_DESC_ONE + EVENT_INDEX_DESC_TWO + HOURS_DESC_AURORA","lastModifiedDate":"2023-10-24"},{"lineNumber":169,"author":{"gitId":"dylkaw"},"content":"                        + INVALID_REMARK_DESC, Remark.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-24"},{"lineNumber":170,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":171,"author":{"gitId":"dylkaw"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2023-10-24"},{"lineNumber":172,"author":{"gitId":"dylkaw"},"content":"        assertParseFailure(parser, INVALID_MEMBER_INDEX_DESC + EVENT_INDEX_DESC_TWO + HOURS_DESC_AURORA","lastModifiedDate":"2023-10-24"},{"lineNumber":173,"author":{"gitId":"dylkaw"},"content":"                        + INVALID_REMARK_DESC, ParserUtil.MESSAGE_INVALID_INDEX);","lastModifiedDate":"2023-10-24"},{"lineNumber":174,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":175,"author":{"gitId":"dylkaw"},"content":"        // non-empty preamble","lastModifiedDate":"2023-10-24"},{"lineNumber":176,"author":{"gitId":"dylkaw"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + MEMBER_INDEX_DESC_ONE","lastModifiedDate":"2023-10-24"},{"lineNumber":177,"author":{"gitId":"dylkaw"},"content":"                        + EVENT_INDEX_DESC_TWO + HOURS_DESC_AURORA + REMARK_DESC_AURORA,","lastModifiedDate":"2023-10-24"},{"lineNumber":178,"author":{"gitId":"dylkaw"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, EnrolCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-24"},{"lineNumber":179,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":180,"author":{"gitId":"dylkaw"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"andrechuakj":46,"dylkaw":134}},{"path":"src/test/java/seedu/ccacommander/logic/parser/FindEventCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"package seedu.ccacommander.logic.parser;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.logic.commands.FindEventCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.model.event.EventNameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"public class FindEventCommandParserTest {","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"    private FindEventCommandParser parser \u003d new FindEventCommandParser();","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"SelwynAng"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"SelwynAng"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"SelwynAng"},"content":"        FindEventCommand expectedFindEventCommand \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"SelwynAng"},"content":"                new FindEventCommand(new EventNameContainsKeywordsPredicate(Arrays.asList(\"Party\", \"Study\")));","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"SelwynAng"},"content":"        assertParseSuccess(parser, \"Party Study\", expectedFindEventCommand);","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"SelwynAng"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"SelwynAng"},"content":"        assertParseSuccess(parser, \" \\n Party \\n \\t Study  \\t\", expectedFindEventCommand);","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"SelwynAng":35}},{"path":"src/test/java/seedu/ccacommander/logic/parser/FindMemberCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.parser;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.logic.commands.FindMemberCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.MemberNameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"public class FindMemberCommandParserTest {","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"    private FindMemberCommandParser parser \u003d new FindMemberCommandParser();","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindMemberCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"SelwynAng"},"content":"        FindMemberCommand expectedFindMemberCommand \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"SelwynAng"},"content":"                new FindMemberCommand(new MemberNameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"SelwynAng"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindMemberCommand);","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"SelwynAng"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindMemberCommand);","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"andrechuakj":5,"SelwynAng":9,"-":21}},{"path":"src/test/java/seedu/ccacommander/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.logic.parser;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalIndexes.INDEX_FIRST_MEMBER;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.EventDate;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.Location;","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Address;","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Email;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Phone;","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.shared.Name;","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.tag.Tag;","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"dylkaw"},"content":"    private static final String INVALID_LOCATION \u003d \"  \";","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"dylkaw"},"content":"    private static final String INVALID_DATE \u003d \"2020 10 12\";","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"dylkaw"},"content":"    private static final String VALID_LOCATION \u003d \"Home\";","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"dylkaw"},"content":"    private static final String VALID_DATE \u003d \"2005-12-12\";","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"wr1159"},"content":"        assertEquals(INDEX_FIRST_MEMBER, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"wr1159"},"content":"        assertEquals(INDEX_FIRST_MEMBER, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":202,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":203,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":204,"author":{"gitId":"dylkaw"},"content":"    public void parseLocation_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":205,"author":{"gitId":"dylkaw"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseLocation(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":206,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":207,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":208,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":209,"author":{"gitId":"dylkaw"},"content":"    public void parseLocation_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":210,"author":{"gitId":"dylkaw"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseLocation(INVALID_LOCATION));","lastModifiedDate":"2023-10-17"},{"lineNumber":211,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":212,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":213,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":214,"author":{"gitId":"dylkaw"},"content":"    public void parseLocation_validValueWithoutWhitespace_returnsLocation() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":215,"author":{"gitId":"dylkaw"},"content":"        Location expectedLocation \u003d new Location(VALID_LOCATION);","lastModifiedDate":"2023-10-17"},{"lineNumber":216,"author":{"gitId":"dylkaw"},"content":"        assertEquals(expectedLocation, ParserUtil.parseLocation(VALID_LOCATION));","lastModifiedDate":"2023-10-17"},{"lineNumber":217,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":218,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":219,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":220,"author":{"gitId":"dylkaw"},"content":"    public void parseLocation_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":221,"author":{"gitId":"dylkaw"},"content":"        String locationWithWhitespace \u003d WHITESPACE + VALID_LOCATION + WHITESPACE;","lastModifiedDate":"2023-10-17"},{"lineNumber":222,"author":{"gitId":"dylkaw"},"content":"        Location expectedLocation \u003d new Location(VALID_LOCATION);","lastModifiedDate":"2023-10-17"},{"lineNumber":223,"author":{"gitId":"dylkaw"},"content":"        assertEquals(expectedLocation, ParserUtil.parseLocation(locationWithWhitespace));","lastModifiedDate":"2023-10-17"},{"lineNumber":224,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":225,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":226,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":227,"author":{"gitId":"dylkaw"},"content":"    public void parseEventDate_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":228,"author":{"gitId":"dylkaw"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEventDate(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":229,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":230,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":231,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":232,"author":{"gitId":"dylkaw"},"content":"    public void parseEventDate_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":233,"author":{"gitId":"dylkaw"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEventDate(INVALID_DATE));","lastModifiedDate":"2023-10-17"},{"lineNumber":234,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":235,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":236,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":237,"author":{"gitId":"dylkaw"},"content":"    public void parseEventDate_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":238,"author":{"gitId":"dylkaw"},"content":"        EventDate expectedEventDate \u003d new EventDate(VALID_DATE);","lastModifiedDate":"2023-10-17"},{"lineNumber":239,"author":{"gitId":"dylkaw"},"content":"        assertEquals(expectedEventDate, ParserUtil.parseEventDate(VALID_DATE));","lastModifiedDate":"2023-10-17"},{"lineNumber":240,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":241,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":242,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":243,"author":{"gitId":"dylkaw"},"content":"    public void parseEventDate_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2023-10-17"},{"lineNumber":244,"author":{"gitId":"dylkaw"},"content":"        String dateWithWhitespace \u003d WHITESPACE + VALID_DATE + WHITESPACE;","lastModifiedDate":"2023-10-17"},{"lineNumber":245,"author":{"gitId":"dylkaw"},"content":"        EventDate expectedEventDate \u003d new EventDate(VALID_DATE);","lastModifiedDate":"2023-10-17"},{"lineNumber":246,"author":{"gitId":"dylkaw"},"content":"        assertEquals(expectedEventDate, ParserUtil.parseEventDate(dateWithWhitespace));","lastModifiedDate":"2023-10-17"},{"lineNumber":247,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"wr1159":2,"andrechuakj":12,"dylkaw":50,"-":184}},{"path":"src/test/java/seedu/ccacommander/logic/parser/UnenrolCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"package seedu.ccacommander.logic.parser;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.EVENT_INDEX_DESC_TWO;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.INVALID_EVENT_INDEX_DESC;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.INVALID_MEMBER_INDEX_DESC;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.MEMBER_INDEX_DESC_ONE;","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_EVENT_INDEX_TWO;","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_INDEX_ONE;","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_INDEX_TWO;","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_MEMBER_INDEX_ONE;","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_EVENT;","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_MEMBER;","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.logic.Messages;","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.logic.commands.UnenrolCommand;","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.logic.parser.exceptions.HandledParseException;","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"SelwynAng"},"content":"public class UnenrolCommandParserTest {","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"SelwynAng"},"content":"    private UnenrolCommandParser parser \u003d new UnenrolCommandParser();","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"SelwynAng"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"SelwynAng"},"content":"        UnenrolCommand expectedUnenrolEventCommand \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"SelwynAng"},"content":"                new UnenrolCommand(VALID_INDEX_ONE, VALID_INDEX_TWO);","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"SelwynAng"},"content":"        // whitespace only preamble","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"SelwynAng"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"SelwynAng"},"content":"                PREAMBLE_WHITESPACE + MEMBER_INDEX_DESC_ONE","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"SelwynAng"},"content":"                        + EVENT_INDEX_DESC_TWO, expectedUnenrolEventCommand);","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"SelwynAng"},"content":"    public void parse_repeatedValue_failure() {","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"SelwynAng"},"content":"        String validExpectedEnrolmentString \u003d MEMBER_INDEX_DESC_ONE + EVENT_INDEX_DESC_TWO;","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"SelwynAng"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnenrolCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"SelwynAng"},"content":"        // multiple member indexes","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"SelwynAng"},"content":"        assertParseFailure(parser, MEMBER_INDEX_DESC_ONE + validExpectedEnrolmentString,","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"SelwynAng"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_MEMBER));","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"SelwynAng"},"content":"        // multiple event indexes","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"SelwynAng"},"content":"        assertParseFailure(parser, EVENT_INDEX_DESC_TWO + validExpectedEnrolmentString,","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"SelwynAng"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EVENT));","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"SelwynAng"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"SelwynAng"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"SelwynAng"},"content":"                validExpectedEnrolmentString + MEMBER_INDEX_DESC_ONE","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"SelwynAng"},"content":"                        + EVENT_INDEX_DESC_TWO + validExpectedEnrolmentString,","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"SelwynAng"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_MEMBER, PREFIX_EVENT));","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"SelwynAng"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"SelwynAng"},"content":"        // invalid member index","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"SelwynAng"},"content":"        assertParseFailure(parser, INVALID_MEMBER_INDEX_DESC + EVENT_INDEX_DESC_TWO,","lastModifiedDate":"2023-10-29"},{"lineNumber":64,"author":{"gitId":"SelwynAng"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-29"},{"lineNumber":65,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":66,"author":{"gitId":"SelwynAng"},"content":"        // invalid event index","lastModifiedDate":"2023-10-28"},{"lineNumber":67,"author":{"gitId":"SelwynAng"},"content":"        assertParseFailure(parser, INVALID_EVENT_INDEX_DESC + MEMBER_INDEX_DESC_ONE,","lastModifiedDate":"2023-10-29"},{"lineNumber":68,"author":{"gitId":"SelwynAng"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-29"},{"lineNumber":69,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":70,"author":{"gitId":"SelwynAng"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-10-28"},{"lineNumber":71,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":72,"author":{"gitId":"SelwynAng"},"content":"        // invalid member index","lastModifiedDate":"2023-10-28"},{"lineNumber":73,"author":{"gitId":"SelwynAng"},"content":"        assertParseFailure(parser, EVENT_INDEX_DESC_TWO + INVALID_MEMBER_INDEX_DESC,","lastModifiedDate":"2023-10-29"},{"lineNumber":74,"author":{"gitId":"SelwynAng"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-29"},{"lineNumber":75,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":76,"author":{"gitId":"SelwynAng"},"content":"        // invalid event index","lastModifiedDate":"2023-10-28"},{"lineNumber":77,"author":{"gitId":"SelwynAng"},"content":"        assertParseFailure(parser, MEMBER_INDEX_DESC_ONE + INVALID_EVENT_INDEX_DESC,","lastModifiedDate":"2023-10-29"},{"lineNumber":78,"author":{"gitId":"SelwynAng"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-29"},{"lineNumber":79,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":80,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":81,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":82,"author":{"gitId":"SelwynAng"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-10-28"},{"lineNumber":83,"author":{"gitId":"SelwynAng"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnenrolCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-28"},{"lineNumber":84,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":85,"author":{"gitId":"SelwynAng"},"content":"        // missing name index prefix","lastModifiedDate":"2023-10-28"},{"lineNumber":86,"author":{"gitId":"SelwynAng"},"content":"        assertParseFailure(parser, EVENT_INDEX_DESC_TWO, expectedMessage);","lastModifiedDate":"2023-10-28"},{"lineNumber":87,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":88,"author":{"gitId":"SelwynAng"},"content":"        // missing event index prefix","lastModifiedDate":"2023-10-28"},{"lineNumber":89,"author":{"gitId":"SelwynAng"},"content":"        assertParseFailure(parser, MEMBER_INDEX_DESC_ONE, expectedMessage);","lastModifiedDate":"2023-10-28"},{"lineNumber":90,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":91,"author":{"gitId":"SelwynAng"},"content":"        // all prefixes missing","lastModifiedDate":"2023-10-28"},{"lineNumber":92,"author":{"gitId":"SelwynAng"},"content":"        assertParseFailure(parser, VALID_MEMBER_INDEX_ONE + VALID_EVENT_INDEX_TWO, expectedMessage);","lastModifiedDate":"2023-10-28"},{"lineNumber":93,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":94,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":95,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":96,"author":{"gitId":"SelwynAng"},"content":"    public void parse_excessArguments_failure() {","lastModifiedDate":"2023-10-28"},{"lineNumber":97,"author":{"gitId":"SelwynAng"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnenrolCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-28"},{"lineNumber":98,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":99,"author":{"gitId":"SelwynAng"},"content":"        try {","lastModifiedDate":"2023-10-28"},{"lineNumber":100,"author":{"gitId":"SelwynAng"},"content":"            parser.parse(MEMBER_INDEX_DESC_ONE + EVENT_INDEX_DESC_TWO + \" a\");","lastModifiedDate":"2023-10-28"},{"lineNumber":101,"author":{"gitId":"SelwynAng"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-28"},{"lineNumber":102,"author":{"gitId":"SelwynAng"},"content":"            // ParseException object is cast to HandledParseException to extract message out of rethrown exception.","lastModifiedDate":"2023-10-28"},{"lineNumber":103,"author":{"gitId":"SelwynAng"},"content":"            // Otherwise, the message from the original exception within the parse method of UnenrolCommandParser","lastModifiedDate":"2023-10-28"},{"lineNumber":104,"author":{"gitId":"SelwynAng"},"content":"            // will be printed here, which is not what we want.","lastModifiedDate":"2023-10-28"},{"lineNumber":105,"author":{"gitId":"SelwynAng"},"content":"            HandledParseException hpe \u003d (HandledParseException) pe;","lastModifiedDate":"2023-10-28"},{"lineNumber":106,"author":{"gitId":"SelwynAng"},"content":"            assertEquals(expectedMessage, hpe.getMessage());","lastModifiedDate":"2023-10-28"},{"lineNumber":107,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":108,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":109,"author":{"gitId":"SelwynAng"},"content":"        try {","lastModifiedDate":"2023-10-28"},{"lineNumber":110,"author":{"gitId":"SelwynAng"},"content":"            parser.parse(MEMBER_INDEX_DESC_ONE + EVENT_INDEX_DESC_TWO + \" 1\");","lastModifiedDate":"2023-10-28"},{"lineNumber":111,"author":{"gitId":"SelwynAng"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-28"},{"lineNumber":112,"author":{"gitId":"SelwynAng"},"content":"            HandledParseException hpe \u003d (HandledParseException) pe;","lastModifiedDate":"2023-10-28"},{"lineNumber":113,"author":{"gitId":"SelwynAng"},"content":"            assertEquals(expectedMessage, hpe.getMessage());","lastModifiedDate":"2023-10-28"},{"lineNumber":114,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":115,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":116,"author":{"gitId":"SelwynAng"},"content":"        try {","lastModifiedDate":"2023-10-28"},{"lineNumber":117,"author":{"gitId":"SelwynAng"},"content":"            parser.parse(MEMBER_INDEX_DESC_ONE + EVENT_INDEX_DESC_TWO + \" a/This is an extra field!\");","lastModifiedDate":"2023-10-28"},{"lineNumber":118,"author":{"gitId":"SelwynAng"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-28"},{"lineNumber":119,"author":{"gitId":"SelwynAng"},"content":"            HandledParseException hpe \u003d (HandledParseException) pe;","lastModifiedDate":"2023-10-28"},{"lineNumber":120,"author":{"gitId":"SelwynAng"},"content":"            assertEquals(expectedMessage, hpe.getMessage());","lastModifiedDate":"2023-10-28"},{"lineNumber":121,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":122,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":123,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":124,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":125,"author":{"gitId":"SelwynAng"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-28"},{"lineNumber":126,"author":{"gitId":"SelwynAng"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnenrolCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-28"},{"lineNumber":127,"author":{"gitId":"SelwynAng"},"content":"        // invalid member index","lastModifiedDate":"2023-10-28"},{"lineNumber":128,"author":{"gitId":"SelwynAng"},"content":"        assertParseFailure(parser, INVALID_MEMBER_INDEX_DESC + EVENT_INDEX_DESC_TWO,","lastModifiedDate":"2023-10-28"},{"lineNumber":129,"author":{"gitId":"SelwynAng"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-28"},{"lineNumber":130,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":131,"author":{"gitId":"SelwynAng"},"content":"        // invalid event index","lastModifiedDate":"2023-10-28"},{"lineNumber":132,"author":{"gitId":"SelwynAng"},"content":"        assertParseFailure(parser, MEMBER_INDEX_DESC_ONE + INVALID_EVENT_INDEX_DESC,","lastModifiedDate":"2023-10-28"},{"lineNumber":133,"author":{"gitId":"SelwynAng"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-28"},{"lineNumber":134,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":135,"author":{"gitId":"SelwynAng"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2023-10-28"},{"lineNumber":136,"author":{"gitId":"SelwynAng"},"content":"        assertParseFailure(parser, INVALID_MEMBER_INDEX_DESC + INVALID_EVENT_INDEX_DESC,","lastModifiedDate":"2023-10-28"},{"lineNumber":137,"author":{"gitId":"SelwynAng"},"content":"                expectedMessage);","lastModifiedDate":"2023-10-28"},{"lineNumber":138,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":139,"author":{"gitId":"SelwynAng"},"content":"        // non-empty preamble","lastModifiedDate":"2023-10-28"},{"lineNumber":140,"author":{"gitId":"SelwynAng"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + MEMBER_INDEX_DESC_ONE","lastModifiedDate":"2023-10-28"},{"lineNumber":141,"author":{"gitId":"SelwynAng"},"content":"                        + EVENT_INDEX_DESC_TWO, expectedMessage);","lastModifiedDate":"2023-10-28"},{"lineNumber":142,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":143,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"SelwynAng":143}},{"path":"src/test/java/seedu/ccacommander/logic/parser/ViewEventCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"package seedu.ccacommander.logic.parser;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.logic.commands.ViewEventCommand;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":"public class ViewEventCommandParserTest {","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"    private ViewEventCommandParser parser \u003d new ViewEventCommandParser();","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"    public void parse_validArgs_returnsViewEventCommand() {","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":"        assertParseSuccess(parser, \"1\", new ViewEventCommand(INDEX_FIRST_EVENT));","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"ph-nathan"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"ph-nathan"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"                ViewEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"ph-nathan":25}},{"path":"src/test/java/seedu/ccacommander/logic/parser/ViewMemberCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"package seedu.ccacommander.logic.parser;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.testutil.TypicalIndexes.INDEX_FIRST_MEMBER;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.logic.commands.ViewMemberCommand;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":"public class ViewMemberCommandParserTest {","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"    private ViewMemberCommandParser parser \u003d new ViewMemberCommandParser();","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"    public void parse_validArgs_returnsViewMemberCommand() {","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":"        assertParseSuccess(parser, \"1\", new ViewMemberCommand(INDEX_FIRST_MEMBER));","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"ph-nathan"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"ph-nathan"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"                ViewMemberCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"ph-nathan":25}},{"path":"src/test/java/seedu/ccacommander/model/CcaCommanderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_DATE_AURORA;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_DATE_BOXING;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_LOCATION_AURORA;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_LOCATION_BOXING;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalCcaCommander.getTypicalCcaCommander;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalEvents.AURORA_BOREALIS;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalMembers.ALICE;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.enrolment.Enrolment;","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.Event;","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.exceptions.DuplicateEventException;","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Member;","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.exceptions.DuplicateMemberException;","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.testutil.EventBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.testutil.MemberBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"andrechuakj"},"content":"public class CcaCommanderTest {","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"andrechuakj"},"content":"    private final CcaCommander ccaCommander \u003d new CcaCommander();","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"andrechuakj"},"content":"        assertEquals(Collections.emptyList(), ccaCommander.getMemberList());","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"andrechuakj"},"content":"        assertThrows(NullPointerException.class, () -\u003e ccaCommander.resetData(null));","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"andrechuakj"},"content":"    public void resetData_withValidReadOnlyCcaCommander_replacesData() {","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"andrechuakj"},"content":"        CcaCommander newData \u003d getTypicalCcaCommander();","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"andrechuakj"},"content":"        ccaCommander.resetData(newData);","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"andrechuakj"},"content":"        assertEquals(newData, ccaCommander);","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"wr1159"},"content":"    public void resetData_withDuplicateMembers_throwsDuplicateMemberException() {","lastModifiedDate":"2023-10-02"},{"lineNumber":57,"author":{"gitId":"wr1159"},"content":"        // Two members with the same identity fields","lastModifiedDate":"2023-10-02"},{"lineNumber":58,"author":{"gitId":"wr1159"},"content":"        Member editedAlice \u003d new MemberBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"wr1159"},"content":"        List\u003cMember\u003e newMembers \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2023-10-02"},{"lineNumber":61,"author":{"gitId":"andrechuakj"},"content":"        CcaCommanderStub newData \u003d new CcaCommanderStub(newMembers, Arrays.asList());","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":63,"author":{"gitId":"andrechuakj"},"content":"        assertThrows(DuplicateMemberException.class, () -\u003e ccaCommander.resetData(newData));","lastModifiedDate":"2023-10-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"wr1159"},"content":"    public void hasMember_nullMember_throwsNullPointerException() {","lastModifiedDate":"2023-10-02"},{"lineNumber":68,"author":{"gitId":"andrechuakj"},"content":"        assertThrows(NullPointerException.class, () -\u003e ccaCommander.hasMember(null));","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"andrechuakj"},"content":"    public void hasMember_memberNotInCcaCommander_returnsFalse() {","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"andrechuakj"},"content":"        assertFalse(ccaCommander.hasMember(ALICE));","lastModifiedDate":"2023-10-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"andrechuakj"},"content":"    public void hasMember_memberInCcaCommander_returnsTrue() {","lastModifiedDate":"2023-10-21"},{"lineNumber":78,"author":{"gitId":"andrechuakj"},"content":"        ccaCommander.createMember(ALICE);","lastModifiedDate":"2023-10-21"},{"lineNumber":79,"author":{"gitId":"andrechuakj"},"content":"        assertTrue(ccaCommander.hasMember(ALICE));","lastModifiedDate":"2023-10-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"andrechuakj"},"content":"    public void hasMember_memberWithSameIdentityFieldsInCcaCommander_returnsTrue() {","lastModifiedDate":"2023-10-21"},{"lineNumber":84,"author":{"gitId":"andrechuakj"},"content":"        ccaCommander.createMember(ALICE);","lastModifiedDate":"2023-10-21"},{"lineNumber":85,"author":{"gitId":"wr1159"},"content":"        Member editedAlice \u003d new MemberBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"andrechuakj"},"content":"        assertTrue(ccaCommander.hasMember(editedAlice));","lastModifiedDate":"2023-10-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"wr1159"},"content":"    public void getMemberList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-02"},{"lineNumber":92,"author":{"gitId":"andrechuakj"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e ccaCommander.getMemberList().remove(0));","lastModifiedDate":"2023-10-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":96,"author":{"gitId":"wr1159"},"content":"    public void resetData_withDuplicateEvents_throwsDuplicateEventException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":97,"author":{"gitId":"wr1159"},"content":"        // Two events with the same identity fields","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"wr1159"},"content":"        Event editedAurora \u003d new EventBuilder(AURORA_BOREALIS).withDate(VALID_DATE_AURORA)","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"wr1159"},"content":"                .withLocation(VALID_LOCATION_AURORA).build();","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"wr1159"},"content":"        List\u003cEvent\u003e newEvents \u003d Arrays.asList(AURORA_BOREALIS, editedAurora);","lastModifiedDate":"2023-10-11"},{"lineNumber":101,"author":{"gitId":"andrechuakj"},"content":"        CcaCommanderStub newData \u003d new CcaCommanderStub(Arrays.asList(), newEvents);","lastModifiedDate":"2023-10-21"},{"lineNumber":102,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":103,"author":{"gitId":"andrechuakj"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e ccaCommander.resetData(newData));","lastModifiedDate":"2023-10-21"},{"lineNumber":104,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":105,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":106,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":107,"author":{"gitId":"wr1159"},"content":"    public void hasEvent_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":108,"author":{"gitId":"andrechuakj"},"content":"        assertThrows(NullPointerException.class, () -\u003e ccaCommander.hasEvent(null));","lastModifiedDate":"2023-10-21"},{"lineNumber":109,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":110,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":111,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":112,"author":{"gitId":"andrechuakj"},"content":"    public void hasEvent_eventNotInCcaCommander_returnsFalse() {","lastModifiedDate":"2023-10-21"},{"lineNumber":113,"author":{"gitId":"andrechuakj"},"content":"        assertFalse(ccaCommander.hasEvent(AURORA_BOREALIS));","lastModifiedDate":"2023-10-21"},{"lineNumber":114,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":115,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":116,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":117,"author":{"gitId":"andrechuakj"},"content":"    public void hasEvent_eventInCcaCommander_returnsTrue() {","lastModifiedDate":"2023-10-21"},{"lineNumber":118,"author":{"gitId":"andrechuakj"},"content":"        ccaCommander.createEvent(AURORA_BOREALIS);","lastModifiedDate":"2023-10-21"},{"lineNumber":119,"author":{"gitId":"andrechuakj"},"content":"        assertTrue(ccaCommander.hasEvent(AURORA_BOREALIS));","lastModifiedDate":"2023-10-21"},{"lineNumber":120,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":121,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":122,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":123,"author":{"gitId":"wr1159"},"content":"    public void hasEvent_eventWithSameNameInCcaCommander_returnsTrue() {","lastModifiedDate":"2023-11-03"},{"lineNumber":124,"author":{"gitId":"andrechuakj"},"content":"        ccaCommander.createEvent(AURORA_BOREALIS);","lastModifiedDate":"2023-10-21"},{"lineNumber":125,"author":{"gitId":"wr1159"},"content":"        Event editedAurora \u003d new EventBuilder(AURORA_BOREALIS).withDate(VALID_DATE_BOXING)","lastModifiedDate":"2023-10-11"},{"lineNumber":126,"author":{"gitId":"wr1159"},"content":"                .withLocation(VALID_LOCATION_BOXING)","lastModifiedDate":"2023-10-11"},{"lineNumber":127,"author":{"gitId":"wr1159"},"content":"                .build();","lastModifiedDate":"2023-10-11"},{"lineNumber":128,"author":{"gitId":"wr1159"},"content":"        assertTrue(ccaCommander.hasEvent(editedAurora));","lastModifiedDate":"2023-11-03"},{"lineNumber":129,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":130,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":131,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":132,"author":{"gitId":"SelwynAng"},"content":"    public void getEventList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":133,"author":{"gitId":"andrechuakj"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e ccaCommander.getEventList().remove(0));","lastModifiedDate":"2023-10-21"},{"lineNumber":134,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":135,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":138,"author":{"gitId":"andrechuakj"},"content":"        String expected \u003d CcaCommander.class.getCanonicalName() + \"{members\u003d\" + ccaCommander.getMemberList()","lastModifiedDate":"2023-10-21"},{"lineNumber":139,"author":{"gitId":"andrechuakj"},"content":"                + \", events\u003d\" + ccaCommander.getEventList() + \", enrolments\u003d\" + ccaCommander.getEventList() + \"}\";","lastModifiedDate":"2023-10-28"},{"lineNumber":140,"author":{"gitId":"andrechuakj"},"content":"        assertEquals(expected, ccaCommander.toString());","lastModifiedDate":"2023-10-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":144,"author":{"gitId":"andrechuakj"},"content":"     * A stub ReadOnlyCcaCommander whose members list can violate interface constraints.","lastModifiedDate":"2023-10-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":146,"author":{"gitId":"andrechuakj"},"content":"    private static class CcaCommanderStub implements ReadOnlyCcaCommander {","lastModifiedDate":"2023-10-21"},{"lineNumber":147,"author":{"gitId":"wr1159"},"content":"        private final ObservableList\u003cMember\u003e members \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-02"},{"lineNumber":148,"author":{"gitId":"wr1159"},"content":"        private final ObservableList\u003cEvent\u003e events \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-11"},{"lineNumber":149,"author":{"gitId":"andrechuakj"},"content":"        private final ObservableList\u003cEnrolment\u003e enrolments \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-28"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":151,"author":{"gitId":"andrechuakj"},"content":"        CcaCommanderStub(Collection\u003cMember\u003e members, Collection\u003cEvent\u003e events) {","lastModifiedDate":"2023-10-21"},{"lineNumber":152,"author":{"gitId":"wr1159"},"content":"            this.members.setAll(members);","lastModifiedDate":"2023-10-02"},{"lineNumber":153,"author":{"gitId":"wr1159"},"content":"            this.events.setAll(events);","lastModifiedDate":"2023-10-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":157,"author":{"gitId":"wr1159"},"content":"        public ObservableList\u003cMember\u003e getMemberList() {","lastModifiedDate":"2023-10-02"},{"lineNumber":158,"author":{"gitId":"wr1159"},"content":"            return members;","lastModifiedDate":"2023-10-02"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":160,"author":{"gitId":"wr1159"},"content":"        @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":161,"author":{"gitId":"wr1159"},"content":"        public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2023-10-11"},{"lineNumber":162,"author":{"gitId":"wr1159"},"content":"            return events;","lastModifiedDate":"2023-10-11"},{"lineNumber":163,"author":{"gitId":"wr1159"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":164,"author":{"gitId":"dylkaw"},"content":"        @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":165,"author":{"gitId":"andrechuakj"},"content":"        public ObservableList\u003cEnrolment\u003e getEnrolmentList() {","lastModifiedDate":"2023-10-28"},{"lineNumber":166,"author":{"gitId":"andrechuakj"},"content":"            return enrolments;","lastModifiedDate":"2023-10-28"},{"lineNumber":167,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"wr1159":43,"andrechuakj":57,"SelwynAng":5,"dylkaw":2,"-":63}},{"path":"src/test/java/seedu/ccacommander/model/CcaCommanderVersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"package seedu.ccacommander.model;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"public class CcaCommanderVersionTest {","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":"    public void constructor_validInput_instanceCreated() {","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"        String commitMessage \u003d \"Initial commit\";","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"        ReadOnlyCcaCommander versionCapture \u003d new CcaCommander();","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"        CcaCommanderVersion version \u003d new CcaCommanderVersion(commitMessage, versionCapture);","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"        assertEquals(commitMessage, version.getCommitMessage());","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"        assertEquals(versionCapture, version.getVersionCapture());","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"    public void getters_returnCorrectValues() {","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"        String commitMessage \u003d \"Test commit\";","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"        ReadOnlyCcaCommander versionCapture \u003d new CcaCommander();","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":"        CcaCommanderVersion version \u003d new CcaCommanderVersion(commitMessage, versionCapture);","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"SelwynAng"},"content":"        assertEquals(commitMessage, version.getCommitMessage());","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"SelwynAng"},"content":"        assertEquals(versionCapture, version.getVersionCapture());","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"SelwynAng"},"content":"    public void equals_equalInstances_true() {","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"SelwynAng"},"content":"        String commitMessage \u003d \"Test commit\";","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"SelwynAng"},"content":"        ReadOnlyCcaCommander versionCapture \u003d new CcaCommander();","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"SelwynAng"},"content":"        CcaCommanderVersion version1 \u003d new CcaCommanderVersion(commitMessage, versionCapture);","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"SelwynAng"},"content":"        CcaCommanderVersion version2 \u003d new CcaCommanderVersion(commitMessage, versionCapture);","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"SelwynAng"},"content":"        assertEquals(version1, version2);","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"SelwynAng"},"content":"    public void equals_differentInstances_false() {","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"SelwynAng"},"content":"        String commitMessage1 \u003d \"Test commit 1\";","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"SelwynAng"},"content":"        String commitMessage2 \u003d \"Test commit 2\";","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"SelwynAng"},"content":"        ReadOnlyCcaCommander versionCapture1 \u003d new CcaCommander();","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"SelwynAng"},"content":"        ReadOnlyCcaCommander versionCapture2 \u003d new CcaCommander();","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"SelwynAng"},"content":"        CcaCommanderVersion version1 \u003d new CcaCommanderVersion(commitMessage1, versionCapture1);","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"SelwynAng"},"content":"        CcaCommanderVersion version2 \u003d new CcaCommanderVersion(commitMessage2, versionCapture2);","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"SelwynAng"},"content":"        assertNotEquals(version1, version2);","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"SelwynAng"},"content":"    public void equals_sameInstance_true() {","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"SelwynAng"},"content":"        String commitMessage \u003d \"Test commit\";","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"SelwynAng"},"content":"        ReadOnlyCcaCommander versionCapture \u003d new CcaCommander();","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"SelwynAng"},"content":"        CcaCommanderVersion version \u003d new CcaCommanderVersion(commitMessage, versionCapture);","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"SelwynAng"},"content":"        assertEquals(version, version);","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"SelwynAng":60}},{"path":"src/test/java/seedu/ccacommander/model/CommandHistoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wr1159"},"content":"package seedu.ccacommander.model;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"wr1159"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"wr1159"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"wr1159"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"wr1159"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"wr1159"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"wr1159"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"wr1159"},"content":"public class CommandHistoryTest {","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"wr1159"},"content":"    public static final String FIRST_COMMAND \u003d \"FIRST COMMAND\";","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"wr1159"},"content":"    public static final String SECOND_COMMAND \u003d \"SECOND COMMAND\";","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"wr1159"},"content":"    public static final String COMMAND_WITH_WHITESPACE \u003d \"    COMMAND WITH LEADING AND TRAILING WHITESPACE    \";","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"wr1159"},"content":"    public static final String COMMAND_WITHOUT_WHITESPACE \u003d \"COMMAND WITH LEADING AND TRAILING WHITESPACE\";","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"wr1159"},"content":"    private CommandHistory commandHistory;","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"wr1159"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"wr1159"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"wr1159"},"content":"        commandHistory \u003d new CommandHistory();","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"wr1159"},"content":"    public void constructor_hasNoCommands() {","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"wr1159"},"content":"        assertFalse(commandHistory.hasNextCommand());","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"wr1159"},"content":"        assertFalse(commandHistory.hasPreviousCommand());","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"wr1159"},"content":"        assertFalse(commandHistory.isLastCommand());","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"wr1159"},"content":"    public void addCommand_nullCommand_throwsNullPointerException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"wr1159"},"content":"        assertThrows(NullPointerException.class, () -\u003e commandHistory.addCommand(null));","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"wr1159"},"content":"    public void addCommand_onlyAddsTrimmedCommands() {","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"wr1159"},"content":"        commandHistory.addCommand(COMMAND_WITH_WHITESPACE);","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"wr1159"},"content":"        commandHistory.addCommand(\"     \");","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"wr1159"},"content":"        String previousCommand \u003d commandHistory.getPreviousCommand();","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"wr1159"},"content":"        assertTrue(previousCommand.equals(COMMAND_WITHOUT_WHITESPACE));","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"wr1159"},"content":"    public void addCommand_doesNotAddDuplicateCommand() {","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"wr1159"},"content":"        commandHistory.addCommand(FIRST_COMMAND);","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"wr1159"},"content":"        commandHistory.addCommand(FIRST_COMMAND);","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"wr1159"},"content":"        commandHistory.getPreviousCommand();","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"wr1159"},"content":"        assertFalse(commandHistory.hasPreviousCommand());","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"wr1159"},"content":"    public void isLastCommandEqualCommand_oneCommandAdded_returnsTrue() {","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"wr1159"},"content":"        commandHistory.addCommand(FIRST_COMMAND);","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"wr1159"},"content":"        assertTrue(commandHistory.isLastCommandEqualCommand(FIRST_COMMAND));","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"wr1159"},"content":"    public void isLastCommandEqualCommand_oneCommandAdded_returnsFalse() {","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"wr1159"},"content":"        commandHistory.addCommand(FIRST_COMMAND);","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"wr1159"},"content":"        assertFalse(commandHistory.isLastCommandEqualCommand(SECOND_COMMAND));","lastModifiedDate":"2023-10-28"},{"lineNumber":66,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":67,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":68,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"wr1159"},"content":"    public void hasNextCommand_noCommandsAdded_returnsFalse() {","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"wr1159"},"content":"        assertFalse(commandHistory.hasNextCommand());","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"wr1159"},"content":"    public void hasNextCommand_hasCommandsAdded_returnsTrue() {","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"wr1159"},"content":"        commandHistory.addCommand(FIRST_COMMAND);","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"wr1159"},"content":"        commandHistory.addCommand(SECOND_COMMAND);","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"wr1159"},"content":"        commandHistory.getPreviousCommand();","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"wr1159"},"content":"        commandHistory.getPreviousCommand();","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":80,"author":{"gitId":"wr1159"},"content":"        assertTrue(commandHistory.hasNextCommand());","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"wr1159"},"content":"    public void hasPreviousCommand_noCommandsAdded_returnsFalse() {","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"wr1159"},"content":"        assertFalse(commandHistory.hasPreviousCommand());","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"wr1159"},"content":"    public void hasPreviousCommand_hasCommandsAdded_returnsTrue() {","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"wr1159"},"content":"        commandHistory.addCommand(FIRST_COMMAND);","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"wr1159"},"content":"        assertTrue(commandHistory.hasPreviousCommand());","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"wr1159"},"content":"    public void getNextCommand_hasNextCommand_returnsNextCommand() {","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"wr1159"},"content":"        commandHistory.addCommand(FIRST_COMMAND);","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"wr1159"},"content":"        commandHistory.addCommand(SECOND_COMMAND);","lastModifiedDate":"2023-10-27"},{"lineNumber":98,"author":{"gitId":"wr1159"},"content":"        commandHistory.getPreviousCommand();","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"wr1159"},"content":"        commandHistory.getPreviousCommand();","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":101,"author":{"gitId":"wr1159"},"content":"        String nextCommand \u003d commandHistory.getNextCommand();","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"wr1159"},"content":"        assertEquals(SECOND_COMMAND, nextCommand);","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":106,"author":{"gitId":"wr1159"},"content":"    public void getNextCommand_throwsAssertionError() {","lastModifiedDate":"2023-10-28"},{"lineNumber":107,"author":{"gitId":"wr1159"},"content":"        AssertionError thrown \u003d assertThrows(AssertionError.class, () -\u003e commandHistory.getNextCommand());","lastModifiedDate":"2023-10-28"},{"lineNumber":108,"author":{"gitId":"wr1159"},"content":"        assertTrue(thrown.getMessage().equals(\"currentCommandPointer is at the newest command already\"));","lastModifiedDate":"2023-10-28"},{"lineNumber":109,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":110,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":111,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":112,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":113,"author":{"gitId":"wr1159"},"content":"    public void getPreviousCommand_hasPreviousCommand_returnsPreviousCommand() {","lastModifiedDate":"2023-10-27"},{"lineNumber":114,"author":{"gitId":"wr1159"},"content":"        commandHistory.addCommand(FIRST_COMMAND);","lastModifiedDate":"2023-10-27"},{"lineNumber":115,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":116,"author":{"gitId":"wr1159"},"content":"        String previousCommand \u003d commandHistory.getPreviousCommand();","lastModifiedDate":"2023-10-27"},{"lineNumber":117,"author":{"gitId":"wr1159"},"content":"        assertEquals(FIRST_COMMAND, previousCommand);","lastModifiedDate":"2023-10-27"},{"lineNumber":118,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":119,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":120,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":121,"author":{"gitId":"wr1159"},"content":"    public void getPreviousCommand_throwsAssertionError() {","lastModifiedDate":"2023-10-28"},{"lineNumber":122,"author":{"gitId":"wr1159"},"content":"        AssertionError thrown \u003d assertThrows(AssertionError.class, () -\u003e commandHistory.getPreviousCommand());","lastModifiedDate":"2023-10-28"},{"lineNumber":123,"author":{"gitId":"wr1159"},"content":"        assertTrue(thrown.getMessage().equals(\"currentCommandPointer is at the oldest command already\"));","lastModifiedDate":"2023-10-28"},{"lineNumber":124,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":125,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":126,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":127,"author":{"gitId":"wr1159"},"content":"    public void isLastCommand_returnsTrue() {","lastModifiedDate":"2023-10-27"},{"lineNumber":128,"author":{"gitId":"wr1159"},"content":"        commandHistory.addCommand(FIRST_COMMAND);","lastModifiedDate":"2023-10-27"},{"lineNumber":129,"author":{"gitId":"wr1159"},"content":"        commandHistory.getPreviousCommand();","lastModifiedDate":"2023-10-27"},{"lineNumber":130,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":131,"author":{"gitId":"wr1159"},"content":"        assertTrue(commandHistory.isLastCommand());","lastModifiedDate":"2023-10-27"},{"lineNumber":132,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":133,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":134,"author":{"gitId":"wr1159"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"wr1159":134}},{"path":"src/test/java/seedu/ccacommander/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.model.Model.PREDICATE_SHOW_ALL_EVENTS;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.model.Model.PREDICATE_SHOW_ALL_MEMBERS;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":"import static seedu.ccacommander.model.ModelManager.findEnrolmentFromList;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.testutil.TypicalEnrolments.ALICE_AURORA;","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.testutil.TypicalEnrolments.BENSON_BOXING;","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalEvents.AURORA_BOREALIS;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalEvents.BOXING_DAY;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalMembers.ALICE;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalMembers.BENSON;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"import java.util.List;","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":25,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.core.GuiSettings;","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.model.enrolment.Enrolment;","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.model.enrolment.exceptions.EnrolmentNotFoundException;","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.EventNameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.model.exceptions.RedoStateException;","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.model.exceptions.UndoStateException;","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.MemberNameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.testutil.CcaCommanderBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.testutil.EnrolmentBuilder;","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.testutil.TypicalEnrolments;","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.testutil.TypicalEvents;","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.testutil.TypicalMembers;","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.ui.Stylesheet;","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":41,"author":{"gitId":"SelwynAng"},"content":"    private static final String COMMIT_MESSAGE \u003d \"Example Commit\";","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"andrechuakj"},"content":"        assertEquals(new CcaCommander(), new CcaCommander(modelManager.getCcaCommander()));","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"andrechuakj"},"content":"        userPrefs.setCcaCommanderFilePath(Paths.get(\"ccacommander/book/file/path\"));","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"ph-nathan"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4, Stylesheet.DARK.toString()));","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":66,"author":{"gitId":"andrechuakj"},"content":"        userPrefs.setCcaCommanderFilePath(Paths.get(\"new/ccacommander/book/file/path\"));","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"ph-nathan"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4, Stylesheet.LIGHT.toString());","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"andrechuakj"},"content":"    public void setCcaCommanderFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-10-21"},{"lineNumber":84,"author":{"gitId":"andrechuakj"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setCcaCommanderFilePath(null));","lastModifiedDate":"2023-10-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"andrechuakj"},"content":"    public void setCcaCommanderFilePath_validPath_setsCcaCommanderFilePath() {","lastModifiedDate":"2023-10-21"},{"lineNumber":89,"author":{"gitId":"andrechuakj"},"content":"        Path path \u003d Paths.get(\"ccacommander/book/file/path\");","lastModifiedDate":"2023-10-21"},{"lineNumber":90,"author":{"gitId":"andrechuakj"},"content":"        modelManager.setCcaCommanderFilePath(path);","lastModifiedDate":"2023-10-21"},{"lineNumber":91,"author":{"gitId":"andrechuakj"},"content":"        assertEquals(path, modelManager.getCcaCommanderFilePath());","lastModifiedDate":"2023-10-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":95,"author":{"gitId":"SelwynAng"},"content":"    public void canUndo_hasPreviousVersion_returnsTrue() {","lastModifiedDate":"2023-10-24"},{"lineNumber":96,"author":{"gitId":"SelwynAng"},"content":"        modelManager.commit(COMMIT_MESSAGE);","lastModifiedDate":"2023-10-24"},{"lineNumber":97,"author":{"gitId":"SelwynAng"},"content":"        assertTrue(modelManager.canUndo());","lastModifiedDate":"2023-10-24"},{"lineNumber":98,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":99,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":100,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":101,"author":{"gitId":"SelwynAng"},"content":"    public void canUndo_noPreviousVersion_returnsFalse() {","lastModifiedDate":"2023-10-24"},{"lineNumber":102,"author":{"gitId":"SelwynAng"},"content":"        assertFalse(modelManager.canUndo());","lastModifiedDate":"2023-10-24"},{"lineNumber":103,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":104,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":106,"author":{"gitId":"SelwynAng"},"content":"    public void undo_hasPreviousVersion_returnsCommitMessage() {","lastModifiedDate":"2023-10-24"},{"lineNumber":107,"author":{"gitId":"SelwynAng"},"content":"        modelManager.commit(COMMIT_MESSAGE);","lastModifiedDate":"2023-10-24"},{"lineNumber":108,"author":{"gitId":"SelwynAng"},"content":"        assertEquals(COMMIT_MESSAGE, modelManager.undo());","lastModifiedDate":"2023-10-24"},{"lineNumber":109,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":110,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":111,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":112,"author":{"gitId":"SelwynAng"},"content":"    public void undo_noPreviousVersion_throwsUndoStateException() {","lastModifiedDate":"2023-10-24"},{"lineNumber":113,"author":{"gitId":"SelwynAng"},"content":"        assertThrows(UndoStateException.class, () -\u003e modelManager.undo());","lastModifiedDate":"2023-10-24"},{"lineNumber":114,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":115,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":116,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":117,"author":{"gitId":"SelwynAng"},"content":"    public void canRedo_hasNextVersion_returnsTrue() {","lastModifiedDate":"2023-10-24"},{"lineNumber":118,"author":{"gitId":"SelwynAng"},"content":"        modelManager.commit(COMMIT_MESSAGE);","lastModifiedDate":"2023-10-24"},{"lineNumber":119,"author":{"gitId":"SelwynAng"},"content":"        modelManager.undo();","lastModifiedDate":"2023-10-24"},{"lineNumber":120,"author":{"gitId":"SelwynAng"},"content":"        assertTrue(modelManager.canRedo());","lastModifiedDate":"2023-10-24"},{"lineNumber":121,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":122,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":123,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":124,"author":{"gitId":"SelwynAng"},"content":"    public void canRedo_noNextVersion_returnsFalse() {","lastModifiedDate":"2023-10-24"},{"lineNumber":125,"author":{"gitId":"SelwynAng"},"content":"        assertFalse(modelManager.canRedo());","lastModifiedDate":"2023-10-24"},{"lineNumber":126,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":127,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":128,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":129,"author":{"gitId":"SelwynAng"},"content":"    public void redo_hasNextVersion_returnsCommitMessage() {","lastModifiedDate":"2023-10-24"},{"lineNumber":130,"author":{"gitId":"SelwynAng"},"content":"        modelManager.commit(COMMIT_MESSAGE);","lastModifiedDate":"2023-10-24"},{"lineNumber":131,"author":{"gitId":"SelwynAng"},"content":"        modelManager.undo();","lastModifiedDate":"2023-10-24"},{"lineNumber":132,"author":{"gitId":"SelwynAng"},"content":"        assertEquals(COMMIT_MESSAGE, modelManager.redo());","lastModifiedDate":"2023-10-24"},{"lineNumber":133,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":134,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":135,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":136,"author":{"gitId":"SelwynAng"},"content":"    public void redo_noNextVersion_throwsRedoStateException() {","lastModifiedDate":"2023-10-24"},{"lineNumber":137,"author":{"gitId":"SelwynAng"},"content":"        assertThrows(RedoStateException.class, () -\u003e modelManager.redo());","lastModifiedDate":"2023-10-24"},{"lineNumber":138,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":139,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":140,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"wr1159"},"content":"    public void hasMember_nullMember_throwsNullPointerException() {","lastModifiedDate":"2023-10-02"},{"lineNumber":143,"author":{"gitId":"wr1159"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasMember(null));","lastModifiedDate":"2023-10-02"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"andrechuakj"},"content":"    public void hasMember_memberNotInCcaCommander_returnsFalse() {","lastModifiedDate":"2023-10-21"},{"lineNumber":148,"author":{"gitId":"wr1159"},"content":"        assertFalse(modelManager.hasMember(ALICE));","lastModifiedDate":"2023-10-02"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"andrechuakj"},"content":"    public void hasMember_memberInCcaCommander_returnsTrue() {","lastModifiedDate":"2023-10-21"},{"lineNumber":153,"author":{"gitId":"dylkaw"},"content":"        modelManager.createMember(ALICE);","lastModifiedDate":"2023-10-16"},{"lineNumber":154,"author":{"gitId":"wr1159"},"content":"        assertTrue(modelManager.hasMember(ALICE));","lastModifiedDate":"2023-10-02"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":157,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":158,"author":{"gitId":"dylkaw"},"content":"    public void hasEvent_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":159,"author":{"gitId":"dylkaw"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasEvent(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":160,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":161,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":162,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":163,"author":{"gitId":"andrechuakj"},"content":"    public void hasEvent_eventNotInCcaCommander_returnsFalse() {","lastModifiedDate":"2023-10-21"},{"lineNumber":164,"author":{"gitId":"dylkaw"},"content":"        assertFalse(modelManager.hasEvent(AURORA_BOREALIS));","lastModifiedDate":"2023-10-17"},{"lineNumber":165,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":166,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":167,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":168,"author":{"gitId":"andrechuakj"},"content":"    public void hasEvent_eventInCcaCommander_returnsTrue() {","lastModifiedDate":"2023-10-21"},{"lineNumber":169,"author":{"gitId":"dylkaw"},"content":"        modelManager.createEvent(AURORA_BOREALIS);","lastModifiedDate":"2023-10-17"},{"lineNumber":170,"author":{"gitId":"dylkaw"},"content":"        assertTrue(modelManager.hasEvent(AURORA_BOREALIS));","lastModifiedDate":"2023-10-17"},{"lineNumber":171,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":172,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":174,"author":{"gitId":"wr1159"},"content":"    public void getFilteredMemberList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-02"},{"lineNumber":175,"author":{"gitId":"wr1159"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredMemberList().remove(0));","lastModifiedDate":"2023-10-02"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":179,"author":{"gitId":"dylkaw"},"content":"    public void getFilteredEventList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":180,"author":{"gitId":"dylkaw"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredEventList().remove(0));","lastModifiedDate":"2023-10-17"},{"lineNumber":181,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":182,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":183,"author":{"gitId":"andrechuakj"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":184,"author":{"gitId":"andrechuakj"},"content":"    public void getFilteredEnrolmentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-28"},{"lineNumber":185,"author":{"gitId":"andrechuakj"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredEnrolmentList().remove(0));","lastModifiedDate":"2023-10-28"},{"lineNumber":186,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":187,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":188,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":189,"author":{"gitId":"ph-nathan"},"content":"    public void deleteEvents() {","lastModifiedDate":"2023-10-19"},{"lineNumber":190,"author":{"gitId":"ph-nathan"},"content":"        modelManager.createEvent(AURORA_BOREALIS);","lastModifiedDate":"2023-10-19"},{"lineNumber":191,"author":{"gitId":"ph-nathan"},"content":"        modelManager.createEvent(BOXING_DAY);","lastModifiedDate":"2023-10-19"},{"lineNumber":192,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":193,"author":{"gitId":"ph-nathan"},"content":"        modelManager.deleteEvent(AURORA_BOREALIS);","lastModifiedDate":"2023-10-19"},{"lineNumber":194,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":195,"author":{"gitId":"ph-nathan"},"content":"        assertTrue(modelManager.hasEvent(BOXING_DAY));","lastModifiedDate":"2023-10-19"},{"lineNumber":196,"author":{"gitId":"ph-nathan"},"content":"        assertFalse(modelManager.hasEvent(AURORA_BOREALIS));","lastModifiedDate":"2023-10-19"},{"lineNumber":197,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":198,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":199,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":200,"author":{"gitId":"ph-nathan"},"content":"    public void updateEvents() {","lastModifiedDate":"2023-10-19"},{"lineNumber":201,"author":{"gitId":"ph-nathan"},"content":"        modelManager.createEvent(AURORA_BOREALIS);","lastModifiedDate":"2023-10-19"},{"lineNumber":202,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":203,"author":{"gitId":"ph-nathan"},"content":"        modelManager.setEvent(AURORA_BOREALIS, BOXING_DAY);","lastModifiedDate":"2023-10-19"},{"lineNumber":204,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":205,"author":{"gitId":"ph-nathan"},"content":"        assertTrue(modelManager.hasEvent(BOXING_DAY));","lastModifiedDate":"2023-10-19"},{"lineNumber":206,"author":{"gitId":"ph-nathan"},"content":"        assertFalse(modelManager.hasEvent(AURORA_BOREALIS));","lastModifiedDate":"2023-10-19"},{"lineNumber":207,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":208,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":209,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":210,"author":{"gitId":"ph-nathan"},"content":"    public void hasEnrolment_nullEnrolment_throwsNullPointerException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":211,"author":{"gitId":"ph-nathan"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasEnrolment(null));","lastModifiedDate":"2023-10-30"},{"lineNumber":212,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":213,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":214,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":215,"author":{"gitId":"ph-nathan"},"content":"    public void hasEnrolment_enrolmentNotInCcaCommander_returnsFalse() {","lastModifiedDate":"2023-10-30"},{"lineNumber":216,"author":{"gitId":"ph-nathan"},"content":"        assertFalse(modelManager.hasEnrolment(ALICE_AURORA));","lastModifiedDate":"2023-10-30"},{"lineNumber":217,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":218,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":219,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":220,"author":{"gitId":"ph-nathan"},"content":"    public void hasEnrolment_enrolmentInCcaCommander_returnsTrue() {","lastModifiedDate":"2023-10-30"},{"lineNumber":221,"author":{"gitId":"ph-nathan"},"content":"        modelManager.createEnrolment(ALICE_AURORA);","lastModifiedDate":"2023-10-30"},{"lineNumber":222,"author":{"gitId":"ph-nathan"},"content":"        assertTrue(modelManager.hasEnrolment(ALICE_AURORA));","lastModifiedDate":"2023-10-30"},{"lineNumber":223,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":224,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":225,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":226,"author":{"gitId":"ph-nathan"},"content":"    public void updateEnrolments() {","lastModifiedDate":"2023-10-30"},{"lineNumber":227,"author":{"gitId":"ph-nathan"},"content":"        modelManager.createEnrolment(ALICE_AURORA);","lastModifiedDate":"2023-10-30"},{"lineNumber":228,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":229,"author":{"gitId":"ph-nathan"},"content":"        modelManager.setEnrolment(ALICE_AURORA, BENSON_BOXING);","lastModifiedDate":"2023-10-30"},{"lineNumber":230,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":231,"author":{"gitId":"ph-nathan"},"content":"        assertTrue(modelManager.hasEnrolment(BENSON_BOXING));","lastModifiedDate":"2023-10-30"},{"lineNumber":232,"author":{"gitId":"ph-nathan"},"content":"        assertFalse(modelManager.hasEnrolment(ALICE_AURORA));","lastModifiedDate":"2023-10-30"},{"lineNumber":233,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":234,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":235,"author":{"gitId":"SelwynAng"},"content":"    public void deleteEnrolment() {","lastModifiedDate":"2023-10-28"},{"lineNumber":236,"author":{"gitId":"SelwynAng"},"content":"        Enrolment enrolment \u003d new EnrolmentBuilder().build();","lastModifiedDate":"2023-10-28"},{"lineNumber":237,"author":{"gitId":"SelwynAng"},"content":"        modelManager.createEnrolment(enrolment);","lastModifiedDate":"2023-10-28"},{"lineNumber":238,"author":{"gitId":"SelwynAng"},"content":"        modelManager.deleteEnrolment(enrolment);","lastModifiedDate":"2023-10-28"},{"lineNumber":239,"author":{"gitId":"SelwynAng"},"content":"        assertFalse(modelManager.hasEvent(AURORA_BOREALIS));","lastModifiedDate":"2023-10-28"},{"lineNumber":240,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":241,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":242,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":243,"author":{"gitId":"SelwynAng"},"content":"    public void findEnrolmentFromList_success() {","lastModifiedDate":"2023-10-29"},{"lineNumber":244,"author":{"gitId":"SelwynAng"},"content":"        List\u003cEnrolment\u003e enrolmentList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-29"},{"lineNumber":245,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":246,"author":{"gitId":"SelwynAng"},"content":"        Enrolment enrolmentToFindOne \u003d TypicalEnrolments.ALICE_AURORA;","lastModifiedDate":"2023-10-29"},{"lineNumber":247,"author":{"gitId":"SelwynAng"},"content":"        Enrolment enrolmentToFindTwo \u003d TypicalEnrolments.GEORGE_GRAVITY_DISCOVERY_DAY;","lastModifiedDate":"2023-10-29"},{"lineNumber":248,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":249,"author":{"gitId":"SelwynAng"},"content":"        enrolmentList.add(enrolmentToFindOne);","lastModifiedDate":"2023-10-29"},{"lineNumber":250,"author":{"gitId":"SelwynAng"},"content":"        enrolmentList.add(enrolmentToFindTwo);","lastModifiedDate":"2023-10-29"},{"lineNumber":251,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":252,"author":{"gitId":"SelwynAng"},"content":"        assertEquals(enrolmentToFindOne, findEnrolmentFromList(enrolmentList,","lastModifiedDate":"2023-10-29"},{"lineNumber":253,"author":{"gitId":"SelwynAng"},"content":"                TypicalMembers.ALICE.getName(), TypicalEvents.AURORA_BOREALIS.getName()));","lastModifiedDate":"2023-10-29"},{"lineNumber":254,"author":{"gitId":"SelwynAng"},"content":"        assertEquals(enrolmentToFindTwo, findEnrolmentFromList(enrolmentList,","lastModifiedDate":"2023-10-29"},{"lineNumber":255,"author":{"gitId":"SelwynAng"},"content":"                TypicalMembers.GEORGE.getName(), TypicalEvents.GRAVITY_DISCOVERY_DAY.getName()));","lastModifiedDate":"2023-10-29"},{"lineNumber":256,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":257,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":258,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":259,"author":{"gitId":"SelwynAng"},"content":"    public void findEnrolmentFromList_fail() {","lastModifiedDate":"2023-10-29"},{"lineNumber":260,"author":{"gitId":"SelwynAng"},"content":"        List\u003cEnrolment\u003e enrolmentList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-29"},{"lineNumber":261,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":262,"author":{"gitId":"SelwynAng"},"content":"        Enrolment enrolmentToFindOne \u003d TypicalEnrolments.ALICE_AURORA;","lastModifiedDate":"2023-10-29"},{"lineNumber":263,"author":{"gitId":"SelwynAng"},"content":"        Enrolment enrolmentToFindTwo \u003d TypicalEnrolments.GEORGE_GRAVITY_DISCOVERY_DAY;","lastModifiedDate":"2023-10-29"},{"lineNumber":264,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":265,"author":{"gitId":"SelwynAng"},"content":"        enrolmentList.add(enrolmentToFindOne);","lastModifiedDate":"2023-10-29"},{"lineNumber":266,"author":{"gitId":"SelwynAng"},"content":"        enrolmentList.add(enrolmentToFindTwo);","lastModifiedDate":"2023-10-29"},{"lineNumber":267,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":268,"author":{"gitId":"SelwynAng"},"content":"        try {","lastModifiedDate":"2023-10-29"},{"lineNumber":269,"author":{"gitId":"SelwynAng"},"content":"            findEnrolmentFromList(enrolmentList, TypicalMembers.CARL.getName(), TypicalEvents.BOXING_DAY.getName());","lastModifiedDate":"2023-10-29"},{"lineNumber":270,"author":{"gitId":"SelwynAng"},"content":"        } catch (EnrolmentNotFoundException ee) {","lastModifiedDate":"2023-10-29"},{"lineNumber":271,"author":{"gitId":"SelwynAng"},"content":"            assertEquals(\"Enrolment cannot be found\", ee.getMessage());","lastModifiedDate":"2023-10-29"},{"lineNumber":272,"author":{"gitId":"SelwynAng"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":273,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":274,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":277,"author":{"gitId":"andrechuakj"},"content":"        CcaCommander ccaCommander \u003d new CcaCommanderBuilder().withMember(ALICE).withMember(BENSON)","lastModifiedDate":"2023-10-21"},{"lineNumber":278,"author":{"gitId":"SelwynAng"},"content":"                .withEvent(AURORA_BOREALIS).withEvent(BOXING_DAY).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":279,"author":{"gitId":"andrechuakj"},"content":"        CcaCommander differentCcaCommander \u003d new CcaCommander();","lastModifiedDate":"2023-10-21"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":283,"author":{"gitId":"andrechuakj"},"content":"        modelManager \u003d new ModelManager(ccaCommander, userPrefs);","lastModifiedDate":"2023-10-21"},{"lineNumber":284,"author":{"gitId":"andrechuakj"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(ccaCommander, userPrefs);","lastModifiedDate":"2023-10-21"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":296,"author":{"gitId":"andrechuakj"},"content":"        // different CcaCommander -\u003e returns false","lastModifiedDate":"2023-10-21"},{"lineNumber":297,"author":{"gitId":"andrechuakj"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentCcaCommander, userPrefs)));","lastModifiedDate":"2023-10-21"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":300,"author":{"gitId":"SelwynAng"},"content":"        String[] memberKeywords \u003d ALICE.getName().name.split(\"\\\\s+\");","lastModifiedDate":"2023-10-19"},{"lineNumber":301,"author":{"gitId":"SelwynAng"},"content":"        String[] eventKeywords \u003d AURORA_BOREALIS.getName().name.split(\"\\\\s+\");","lastModifiedDate":"2023-10-19"},{"lineNumber":302,"author":{"gitId":"SelwynAng"},"content":"        modelManager.updateFilteredMemberList(new MemberNameContainsKeywordsPredicate(Arrays.asList(memberKeywords)));","lastModifiedDate":"2023-10-19"},{"lineNumber":303,"author":{"gitId":"SelwynAng"},"content":"        modelManager.updateFilteredEventList(new EventNameContainsKeywordsPredicate(Arrays.asList(eventKeywords)));","lastModifiedDate":"2023-10-19"},{"lineNumber":304,"author":{"gitId":"andrechuakj"},"content":"        assertFalse(modelManager.equals(new ModelManager(ccaCommander, userPrefs)));","lastModifiedDate":"2023-10-21"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":307,"author":{"gitId":"wr1159"},"content":"        modelManager.updateFilteredMemberList(PREDICATE_SHOW_ALL_MEMBERS);","lastModifiedDate":"2023-10-02"},{"lineNumber":308,"author":{"gitId":"SelwynAng"},"content":"        modelManager.updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":312,"author":{"gitId":"andrechuakj"},"content":"        differentUserPrefs.setCcaCommanderFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2023-10-21"},{"lineNumber":313,"author":{"gitId":"andrechuakj"},"content":"        assertFalse(modelManager.equals(new ModelManager(ccaCommander, differentUserPrefs)));","lastModifiedDate":"2023-10-21"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"wr1159":7,"andrechuakj":40,"SelwynAng":103,"dylkaw":21,"ph-nathan":52,"-":92}},{"path":"src/test/java/seedu/ccacommander/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"andrechuakj"},"content":"    public void setCcaCommanderFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"andrechuakj"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setCcaCommanderFilePath(null));","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"    public void equals() {","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"ph-nathan"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"ph-nathan"},"content":"        assertTrue(userPrefs.equals(userPrefs));","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"andrechuakj":4,"ph-nathan":8,"-":17}},{"path":"src/test/java/seedu/ccacommander/model/VersionCapturesTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"package seedu.ccacommander.model;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":"import java.util.List;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"public class VersionCapturesTest {","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"    public void constructor_validInputs_success() {","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"        int currentPointer \u003d 0;","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"        List\u003cString\u003e versionCaptures \u003d Arrays.asList(\"Version1\", \"Version2\");","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"        VersionCaptures version \u003d new VersionCaptures(currentPointer, versionCaptures);","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"        assertEquals(currentPointer, version.getCurrentPointer());","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"        assertEquals(versionCaptures, version.getVersionCaptures());","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":"    public void equals_equalObjects_true() {","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"SelwynAng"},"content":"        List\u003cString\u003e versionCaptures1 \u003d Arrays.asList(\"Version1\", \"Version2\");","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"SelwynAng"},"content":"        VersionCaptures version1 \u003d new VersionCaptures(0, versionCaptures1);","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"SelwynAng"},"content":"        VersionCaptures version2 \u003d new VersionCaptures(0, versionCaptures1);","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"SelwynAng"},"content":"        assertTrue(version1.equals(version2));","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"SelwynAng"},"content":"    public void equals_differentStateCaptures_false() {","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"SelwynAng"},"content":"        VersionCaptures version1 \u003d new VersionCaptures(0, Arrays.asList(\"Version1\", \"Version2\"));","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"SelwynAng"},"content":"        VersionCaptures version2 \u003d new VersionCaptures(0, Arrays.asList(\"Version1\", \"DifferentVersion\"));","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"SelwynAng"},"content":"        assertFalse(version1.equals(version2));","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"SelwynAng"},"content":"    public void equals_differentCurrentIndex_false() {","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"SelwynAng"},"content":"        VersionCaptures version1 \u003d new VersionCaptures(0, Arrays.asList(\"Version1\", \"Version2\"));","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"SelwynAng"},"content":"        VersionCaptures version2 \u003d new VersionCaptures(1, Arrays.asList(\"Version1\", \"Version2\"));","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"SelwynAng"},"content":"        assertFalse(version1.equals(version2));","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"SelwynAng"},"content":"    public void equals_differentType_false() {","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"SelwynAng"},"content":"        VersionCaptures version \u003d new VersionCaptures(0, Arrays.asList(\"Version1\", \"Version2\"));","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"SelwynAng"},"content":"        Object otherObject \u003d new Object();","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"SelwynAng"},"content":"        assertFalse(version.equals(otherObject));","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"SelwynAng":55}},{"path":"src/test/java/seedu/ccacommander/model/VersionedCcaCommanderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"package seedu.ccacommander.model;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.model.exceptions.RedoStateException;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.model.exceptions.UndoStateException;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":"public class VersionedCcaCommanderTest {","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"SelwynAng"},"content":"    public void constructor_validInitialState_success() {","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"SelwynAng"},"content":"        VersionedCcaCommander versionedCcaCommander \u003d new VersionedCcaCommander(new CcaCommander());","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"SelwynAng"},"content":"        assertEquals(1, versionedCcaCommander.viewVersionCaptures().getVersionCaptures().size());","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"SelwynAng"},"content":"        assertEquals(VersionedCcaCommander.MESSAGE_FIRST_COMMIT,","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"SelwynAng"},"content":"                versionedCcaCommander.viewVersionCaptures().getVersionCaptures().get(0));","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"SelwynAng"},"content":"    public void commit_validCommitMessage_success() {","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"SelwynAng"},"content":"        VersionedCcaCommander versionedCcaCommander \u003d new VersionedCcaCommander(new CcaCommander());","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"SelwynAng"},"content":"        String commitMessage \u003d \"Added new command.\";","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"SelwynAng"},"content":"        versionedCcaCommander.commit(commitMessage);","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"SelwynAng"},"content":"        assertEquals(2, versionedCcaCommander.viewVersionCaptures().getVersionCaptures().size());","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"SelwynAng"},"content":"        assertEquals(commitMessage, versionedCcaCommander.viewVersionCaptures().getVersionCaptures().get(1));","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"SelwynAng"},"content":"    public void undo_validUndo_success() throws UndoStateException {","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"SelwynAng"},"content":"        VersionedCcaCommander versionedCcaCommander \u003d new VersionedCcaCommander(new CcaCommander());","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"SelwynAng"},"content":"        versionedCcaCommander.commit(\"First commit\");","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"SelwynAng"},"content":"        String undoneMessage \u003d versionedCcaCommander.undo();","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"SelwynAng"},"content":"        assertEquals(\"First commit\", undoneMessage);","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"SelwynAng"},"content":"    public void undo_noCommandsToUndo_exceptionThrown() throws UndoStateException {","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"SelwynAng"},"content":"        VersionedCcaCommander versionedCcaCommander \u003d new VersionedCcaCommander(new CcaCommander());","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"SelwynAng"},"content":"        assertThrows(UndoStateException.class, () -\u003e versionedCcaCommander.undo());","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"SelwynAng"},"content":"    public void canUndo_hasCommandsToUndo_returnsTrue() {","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"SelwynAng"},"content":"        VersionedCcaCommander versionedCcaCommander \u003d new VersionedCcaCommander(new CcaCommander());","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"SelwynAng"},"content":"        versionedCcaCommander.commit(\"First commit\");","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"SelwynAng"},"content":"        assertTrue(versionedCcaCommander.canUndo());","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"SelwynAng"},"content":"    public void canUndo_noCommandsToUndo_returnsFalse() {","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"SelwynAng"},"content":"        VersionedCcaCommander versionedCcaCommander \u003d new VersionedCcaCommander(new CcaCommander());","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"SelwynAng"},"content":"        assertFalse(versionedCcaCommander.canUndo());","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"SelwynAng"},"content":"    public void redo_validRedo_success() throws RedoStateException {","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"SelwynAng"},"content":"        VersionedCcaCommander versionedCcaCommander \u003d new VersionedCcaCommander(new CcaCommander());","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"SelwynAng"},"content":"        versionedCcaCommander.commit(\"First commit\");","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"SelwynAng"},"content":"        versionedCcaCommander.undo();","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"SelwynAng"},"content":"        String redoneMessage \u003d versionedCcaCommander.redo();","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"SelwynAng"},"content":"        assertEquals(1, versionedCcaCommander.viewVersionCaptures().getCurrentPointer());","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"SelwynAng"},"content":"        assertEquals(\"First commit\", redoneMessage);","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"SelwynAng"},"content":"    public void redo_noVersionsToRedo_exceptionThrown() throws RedoStateException {","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"SelwynAng"},"content":"        VersionedCcaCommander versionedCcaCommander \u003d new VersionedCcaCommander(new CcaCommander());","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"SelwynAng"},"content":"        assertThrows(RedoStateException.class, () -\u003e versionedCcaCommander.redo());","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"SelwynAng"},"content":"    public void canRedo_hasVersionsToRedo_returnsTrue() {","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"SelwynAng"},"content":"        VersionedCcaCommander versionedCcaCommander \u003d new VersionedCcaCommander(new CcaCommander());","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"SelwynAng"},"content":"        versionedCcaCommander.commit(\"First commit\");","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"SelwynAng"},"content":"        versionedCcaCommander.undo();","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"SelwynAng"},"content":"        assertTrue(versionedCcaCommander.canRedo());","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"SelwynAng"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":93,"author":{"gitId":"SelwynAng"},"content":"    public void canRedo_noVersionsToRedo_returnsFalse() {","lastModifiedDate":"2023-10-24"},{"lineNumber":94,"author":{"gitId":"SelwynAng"},"content":"        VersionedCcaCommander versionedCcaCommander \u003d new VersionedCcaCommander(new CcaCommander());","lastModifiedDate":"2023-10-24"},{"lineNumber":95,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":96,"author":{"gitId":"SelwynAng"},"content":"        assertFalse(versionedCcaCommander.canRedo());","lastModifiedDate":"2023-10-24"},{"lineNumber":97,"author":{"gitId":"SelwynAng"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":98,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"SelwynAng":98}},{"path":"src/test/java/seedu/ccacommander/model/enrolment/EnrolmentExistsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dylkaw"},"content":"package seedu.ccacommander.model.enrolment;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"dylkaw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"dylkaw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"dylkaw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.testutil.TypicalEnrolments.ALICE_AURORA;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.testutil.TypicalEnrolments.BENSON_BOXING;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"dylkaw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"dylkaw"},"content":"public class EnrolmentExistsPredicateTest {","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"dylkaw"},"content":"    public void equals() {","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"dylkaw"},"content":"        EnrolmentExistsPredicate aliceAuroraExistsPredicate \u003d new EnrolmentExistsPredicate(ALICE_AURORA);","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"dylkaw"},"content":"        EnrolmentExistsPredicate bensonBoxingExistsPredicate \u003d new EnrolmentExistsPredicate(BENSON_BOXING);","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"dylkaw"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"dylkaw"},"content":"        EnrolmentExistsPredicate aliceAuroraExistsPredicateCopy \u003d new EnrolmentExistsPredicate(ALICE_AURORA);","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"dylkaw"},"content":"        assertTrue(aliceAuroraExistsPredicate.equals(aliceAuroraExistsPredicateCopy));","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"dylkaw"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"dylkaw"},"content":"        assertTrue(aliceAuroraExistsPredicate.equals(aliceAuroraExistsPredicate));","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"dylkaw"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"dylkaw"},"content":"        assertFalse(aliceAuroraExistsPredicate.equals(null));","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"dylkaw"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"dylkaw"},"content":"        assertFalse(aliceAuroraExistsPredicate.equals(5));","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"dylkaw"},"content":"        // different enrolment -\u003e returns false","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"dylkaw"},"content":"        assertFalse(aliceAuroraExistsPredicate.equals(bensonBoxingExistsPredicate));","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"dylkaw"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"dylkaw"},"content":"        EnrolmentExistsPredicate aliceAuroraExistsPredicate \u003d new EnrolmentExistsPredicate(ALICE_AURORA);","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"dylkaw"},"content":"        String expected \u003d EnrolmentExistsPredicate.class.getCanonicalName() + \"{enrolmentToCheck\u003d\"","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"dylkaw"},"content":"                + ALICE_AURORA.toString() + \"}\";","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"dylkaw"},"content":"        assertEquals(expected, aliceAuroraExistsPredicate.toString());","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"dylkaw"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"dylkaw":43}},{"path":"src/test/java/seedu/ccacommander/model/enrolment/EnrolmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model.enrolment;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_HOURS_AURORA;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_HOURS_BOXING;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"wr1159"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_NAME_AURORA;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"wr1159"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_NAME_BOXING;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_REMARK_AURORA;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_REMARK_BOXING;","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalEnrolments.ALICE_AURORA;","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalEnrolments.BENSON_BOXING;","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"andrechuakj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.testutil.EnrolmentBuilder;","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"andrechuakj"},"content":"public class EnrolmentTest {","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"andrechuakj"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"andrechuakj"},"content":"    public void isSameEnrolment() {","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"andrechuakj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"andrechuakj"},"content":"        assertTrue(ALICE_AURORA.isSameEnrolment(ALICE_AURORA));","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"andrechuakj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"andrechuakj"},"content":"        assertFalse(ALICE_AURORA.isSameEnrolment(null));","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"wr1159"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"andrechuakj"},"content":"        Enrolment editedEnrolment \u003d new EnrolmentBuilder(ALICE_AURORA).withHours(VALID_HOURS_AURORA)","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"dylkaw"},"content":"                .withRemark(VALID_REMARK_AURORA).build();","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"andrechuakj"},"content":"        assertTrue(ALICE_AURORA.isSameEnrolment(editedEnrolment));","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"andrechuakj"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"andrechuakj"},"content":"        editedEnrolment \u003d new EnrolmentBuilder(ALICE_AURORA).withEventName(VALID_NAME_BOXING)","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"wr1159"},"content":"                .withMemberName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"andrechuakj"},"content":"        assertFalse(ALICE_AURORA.isSameEnrolment(editedEnrolment));","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"andrechuakj"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"andrechuakj"},"content":"        editedEnrolment \u003d new EnrolmentBuilder(ALICE_AURORA).withEventName(VALID_NAME_AURORA.toLowerCase())","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"wr1159"},"content":"                .build();","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"andrechuakj"},"content":"        assertFalse(ALICE_AURORA.isSameEnrolment(editedEnrolment));","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"andrechuakj"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"wr1159"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_AURORA + \" \";","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"andrechuakj"},"content":"        editedEnrolment \u003d new EnrolmentBuilder(ALICE_AURORA).withEventName(nameWithTrailingSpaces)","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"wr1159"},"content":"                .build();","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"andrechuakj"},"content":"        assertFalse(ALICE_AURORA.isSameEnrolment(editedEnrolment));","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"andrechuakj"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"andrechuakj"},"content":"    public void equals() {","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"andrechuakj"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"andrechuakj"},"content":"        Enrolment aliceAuroraCopy \u003d new EnrolmentBuilder(ALICE_AURORA).build();","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"andrechuakj"},"content":"        assertTrue(aliceAuroraCopy.equals(ALICE_AURORA));","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"andrechuakj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"andrechuakj"},"content":"        assertTrue(ALICE_AURORA.equals(ALICE_AURORA));","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"andrechuakj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"andrechuakj"},"content":"        assertFalse(ALICE_AURORA.equals(null));","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"andrechuakj"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"andrechuakj"},"content":"        assertFalse(ALICE_AURORA.equals(5));","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"andrechuakj"},"content":"        // different enrolment -\u003e returns false","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"andrechuakj"},"content":"        assertFalse(ALICE_AURORA.equals(BENSON_BOXING));","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"andrechuakj"},"content":"        // different member name -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"andrechuakj"},"content":"        Enrolment editedMemberName \u003d new EnrolmentBuilder(ALICE_AURORA).withMemberName(VALID_NAME_AMY).build();","lastModifiedDate":"2023-10-28"},{"lineNumber":73,"author":{"gitId":"andrechuakj"},"content":"        assertFalse(ALICE_AURORA.equals(editedMemberName));","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":75,"author":{"gitId":"andrechuakj"},"content":"        // different event name -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"andrechuakj"},"content":"        Enrolment editedEventName \u003d new EnrolmentBuilder(ALICE_AURORA).withEventName(VALID_NAME_BOXING).build();","lastModifiedDate":"2023-10-28"},{"lineNumber":77,"author":{"gitId":"andrechuakj"},"content":"        assertFalse(ALICE_AURORA.equals(editedEventName));","lastModifiedDate":"2023-10-22"},{"lineNumber":78,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":79,"author":{"gitId":"andrechuakj"},"content":"        // different hours -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"andrechuakj"},"content":"        Enrolment editedHours \u003d new EnrolmentBuilder(ALICE_AURORA).withHours(VALID_HOURS_BOXING).build();","lastModifiedDate":"2023-10-28"},{"lineNumber":81,"author":{"gitId":"andrechuakj"},"content":"        assertFalse(ALICE_AURORA.equals(editedHours));","lastModifiedDate":"2023-10-22"},{"lineNumber":82,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":83,"author":{"gitId":"andrechuakj"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":84,"author":{"gitId":"andrechuakj"},"content":"        Enrolment editedRemark \u003d new EnrolmentBuilder(ALICE_AURORA).withRemark(VALID_REMARK_BOXING).build();","lastModifiedDate":"2023-10-28"},{"lineNumber":85,"author":{"gitId":"andrechuakj"},"content":"        assertFalse(ALICE_AURORA.equals(editedRemark));","lastModifiedDate":"2023-10-22"},{"lineNumber":86,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":87,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":88,"author":{"gitId":"andrechuakj"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":89,"author":{"gitId":"andrechuakj"},"content":"    public void test_equalObjectsHaveSameHashCode() {","lastModifiedDate":"2023-10-22"},{"lineNumber":90,"author":{"gitId":"andrechuakj"},"content":"        Enrolment auroraCopy1 \u003d new EnrolmentBuilder(ALICE_AURORA).build();","lastModifiedDate":"2023-10-28"},{"lineNumber":91,"author":{"gitId":"andrechuakj"},"content":"        Enrolment auroraCopy2 \u003d new EnrolmentBuilder(ALICE_AURORA).build();","lastModifiedDate":"2023-10-28"},{"lineNumber":92,"author":{"gitId":"andrechuakj"},"content":"        assertEquals(auroraCopy1.hashCode(), auroraCopy1.hashCode());","lastModifiedDate":"2023-10-22"},{"lineNumber":93,"author":{"gitId":"andrechuakj"},"content":"        assertEquals(auroraCopy1.hashCode(), auroraCopy2.hashCode());","lastModifiedDate":"2023-10-22"},{"lineNumber":94,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":95,"author":{"gitId":"andrechuakj"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":96,"author":{"gitId":"andrechuakj"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-22"},{"lineNumber":97,"author":{"gitId":"andrechuakj"},"content":"        String expected \u003d Enrolment.class.getCanonicalName() + \"{member name\u003d\" + ALICE_AURORA.getMemberName()","lastModifiedDate":"2023-10-28"},{"lineNumber":98,"author":{"gitId":"andrechuakj"},"content":"                + \", event name\u003d\" + ALICE_AURORA.getEventName() + \", hours\u003d\" + ALICE_AURORA.getHours()","lastModifiedDate":"2023-10-22"},{"lineNumber":99,"author":{"gitId":"andrechuakj"},"content":"                + \", remark\u003d\" + ALICE_AURORA.getRemark() + \"}\";","lastModifiedDate":"2023-10-22"},{"lineNumber":100,"author":{"gitId":"andrechuakj"},"content":"        assertEquals(expected, ALICE_AURORA.toString());","lastModifiedDate":"2023-10-22"},{"lineNumber":101,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":102,"author":{"gitId":"andrechuakj"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"wr1159":7,"andrechuakj":90,"dylkaw":5}},{"path":"src/test/java/seedu/ccacommander/model/enrolment/HoursTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model.enrolment;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"class HoursTest {","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Hours(null));","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"andrechuakj"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"andrechuakj"},"content":"    public void constructor_invalidHours_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"andrechuakj"},"content":"        String invalidHours \u003d \"10 hours\";","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"andrechuakj"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Hours(invalidHours));","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"andrechuakj"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"andrechuakj"},"content":"    void isValidHours() {","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"andrechuakj"},"content":"        // invalid hours","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"andrechuakj"},"content":"        assertFalse(Hours.isValidHours(null)); // null","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"andrechuakj"},"content":"        assertFalse(Hours.isValidHours(\"\")); // empty string","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"andrechuakj"},"content":"        assertFalse(Hours.isValidHours(\" \")); // spaces only","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"andrechuakj"},"content":"        assertFalse(Hours.isValidHours(\"twenty\")); // wrong format","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"andrechuakj"},"content":"        assertFalse(Hours.isValidHours(\"2hrs\")); // wrong format","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"andrechuakj"},"content":"        assertFalse(Hours.isValidHours(\"3.5\")); // wrong format","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"andrechuakj"},"content":"        assertFalse(Hours.isValidHours(\"-4\")); // negative hours","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"andrechuakj"},"content":"        assertFalse(Hours.isValidHours(\"-2147483649\")); // overflow smallest negative integer","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"andrechuakj"},"content":"        assertFalse(Hours.isValidHours(\"2147483648\")); // overflow largest positive integer","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"andrechuakj"},"content":"        // valid hours","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"andrechuakj"},"content":"        assertTrue(Hours.isValidHours(\"0\")); // zero","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"andrechuakj"},"content":"        assertTrue(Hours.isValidHours(\"1\")); // single digit","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"andrechuakj"},"content":"        assertTrue(Hours.isValidHours(\"10\")); // multiple digits","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"andrechuakj"},"content":"        assertTrue(Hours.isValidHours(\"03\")); // leading 0","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"andrechuakj"},"content":"        assertTrue(Hours.isValidHours(\"1000\")); // long hours","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"andrechuakj"},"content":"        assertTrue(Hours.isValidHours(\"2147483647\")); // largest positive integer","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"andrechuakj"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"andrechuakj"},"content":"    public void equals() {","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"andrechuakj"},"content":"        Hours hours \u003d new Hours(\"5\");","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"andrechuakj"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"andrechuakj"},"content":"        assertTrue(hours.equals(new Hours(\"5\")));","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"andrechuakj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"andrechuakj"},"content":"        assertTrue(hours.equals(hours));","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"andrechuakj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"andrechuakj"},"content":"        assertFalse(hours.equals(null));","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"andrechuakj"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"andrechuakj"},"content":"        assertFalse(hours.equals(5.0f));","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"andrechuakj"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"andrechuakj"},"content":"        assertFalse(hours.equals(new Hours(\"10\")));","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"andrechuakj"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"andrechuakj":65}},{"path":"src/test/java/seedu/ccacommander/model/enrolment/RemarkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model.enrolment;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"class RemarkTest {","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Remark(null));","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"andrechuakj"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"andrechuakj"},"content":"    public void constructor_invalidRemark_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"andrechuakj"},"content":"        String invalidRemark \u003d \" \";","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"andrechuakj"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Remark(invalidRemark));","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"andrechuakj"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"andrechuakj"},"content":"    void isValidRemark() {","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"andrechuakj"},"content":"        // null remark","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"andrechuakj"},"content":"        assertThrows(NullPointerException.class, () -\u003e Remark.isValidRemark(null));","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"andrechuakj"},"content":"        // invalid remark","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"andrechuakj"},"content":"        assertFalse(Remark.isValidRemark(\"\")); // empty string","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"andrechuakj"},"content":"        assertFalse(Remark.isValidRemark(\" \")); // spaces only","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"andrechuakj"},"content":"        assertFalse(Remark.isValidRemark(\" Remark\")); // wrong format","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"andrechuakj"},"content":"        assertFalse(Remark.isValidRemark(\"\\tTab\")); // wrong format","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"andrechuakj"},"content":"        assertFalse(Remark.isValidRemark(\"\\nNewLine\")); // wrong format","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"andrechuakj"},"content":"        // valid remark","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"andrechuakj"},"content":"        assertTrue(Remark.isValidRemark(\"Remark\")); // Alphabets","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"andrechuakj"},"content":"        assertTrue(Remark.isValidRemark(\"New remark\")); // Alphabets with space","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"andrechuakj"},"content":"        assertTrue(Remark.isValidRemark(\"123\")); // Numerals","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"andrechuakj"},"content":"        assertTrue(Remark.isValidRemark(\"123 456\")); // Numerals with space","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"andrechuakj"},"content":"        assertTrue(Remark.isValidRemark(\"Hello123\")); // Alphanumeric","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"andrechuakj"},"content":"        assertTrue(Remark.isValidRemark(\"Hello 123\")); // Alphanumeric with space","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"andrechuakj"},"content":"        assertTrue(Remark.isValidRemark(\"Hello123\\\\n\")); // Alphanumeric with newline","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"andrechuakj"},"content":"        assertTrue(Remark.isValidRemark(\"!@#$%^\u0026*()[];\u0027,.?\")); // Special characters","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"andrechuakj"},"content":"    @Test","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"andrechuakj"},"content":"    public void equals() {","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"andrechuakj"},"content":"        Remark remark \u003d new Remark(\"Test remark\");","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"andrechuakj"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"andrechuakj"},"content":"        assertTrue(remark.equals(new Remark(\"Test remark\")));","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"andrechuakj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"andrechuakj"},"content":"        assertTrue(remark.equals(remark));","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"andrechuakj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"andrechuakj"},"content":"        assertFalse(remark.equals(null));","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"andrechuakj"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"andrechuakj"},"content":"        assertFalse(remark.equals(5.0f));","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"andrechuakj"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"andrechuakj"},"content":"        assertFalse(remark.equals(new Remark(\"Different remark\")));","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"andrechuakj"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"andrechuakj":65}},{"path":"src/test/java/seedu/ccacommander/model/enrolment/UniqueEnrolmentListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model.enrolment;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_HOURS_AURORA;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalEnrolments.ALICE_AURORA;","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalEnrolments.BENSON_BOXING;","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":"import java.util.List;","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.enrolment.exceptions.DuplicateEnrolmentException;","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.enrolment.exceptions.EnrolmentNotFoundException;","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.testutil.EnrolmentBuilder;","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"andrechuakj"},"content":"public class UniqueEnrolmentListTest {","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"andrechuakj"},"content":"    private final UniqueEnrolmentList uniqueEnrolmentList \u003d new UniqueEnrolmentList();","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"andrechuakj"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"andrechuakj"},"content":"    public void contains_nullEnrolment_throwsNullPointerException() {","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"andrechuakj"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEnrolmentList.contains(null));","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"andrechuakj"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"andrechuakj"},"content":"    public void contains_enrolmentNotInList_returnsFalse() {","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"andrechuakj"},"content":"        assertFalse(uniqueEnrolmentList.contains(ALICE_AURORA));","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"andrechuakj"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"andrechuakj"},"content":"    public void contains_enrolmentInList_returnsTrue() {","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"andrechuakj"},"content":"        uniqueEnrolmentList.createEnrolment(ALICE_AURORA);","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"andrechuakj"},"content":"        assertTrue(uniqueEnrolmentList.contains(ALICE_AURORA));","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"andrechuakj"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"andrechuakj"},"content":"    public void contains_eventWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"andrechuakj"},"content":"        uniqueEnrolmentList.createEnrolment(ALICE_AURORA);","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"andrechuakj"},"content":"        Enrolment editedHours \u003d new EnrolmentBuilder(ALICE_AURORA).withHours(VALID_HOURS_AURORA)","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"andrechuakj"},"content":"                .build();","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"andrechuakj"},"content":"        assertTrue(uniqueEnrolmentList.contains(editedHours));","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"andrechuakj"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"andrechuakj"},"content":"    public void add_nullEnrolment_throwsNullPointerException() {","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"andrechuakj"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEnrolmentList.createEnrolment(null));","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"andrechuakj"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"andrechuakj"},"content":"    public void add_duplicateEnrolment_throwsDuplicateEnrolmentException() {","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"andrechuakj"},"content":"        uniqueEnrolmentList.createEnrolment(ALICE_AURORA);","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"andrechuakj"},"content":"        assertThrows(DuplicateEnrolmentException.class, () -\u003e uniqueEnrolmentList.createEnrolment(ALICE_AURORA));","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"andrechuakj"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"andrechuakj"},"content":"    public void setEnrolment_nullTargetEnrolment_throwsNullPointerException() {","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"andrechuakj"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEnrolmentList.setEnrolment(null, ALICE_AURORA));","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"andrechuakj"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":66,"author":{"gitId":"andrechuakj"},"content":"    public void setEnrolment_nullEditedEnrolment_throwsNullPointerException() {","lastModifiedDate":"2023-10-28"},{"lineNumber":67,"author":{"gitId":"andrechuakj"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEnrolmentList.setEnrolment(ALICE_AURORA, null));","lastModifiedDate":"2023-10-28"},{"lineNumber":68,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":70,"author":{"gitId":"andrechuakj"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":71,"author":{"gitId":"andrechuakj"},"content":"    public void setEnrolment_targetEnrolmentNotInList_throwsEnrolmentNotFoundException() {","lastModifiedDate":"2023-10-28"},{"lineNumber":72,"author":{"gitId":"andrechuakj"},"content":"        assertThrows(EnrolmentNotFoundException.class, () -\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":73,"author":{"gitId":"andrechuakj"},"content":"                uniqueEnrolmentList.setEnrolment(ALICE_AURORA, ALICE_AURORA));","lastModifiedDate":"2023-10-28"},{"lineNumber":74,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":75,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":76,"author":{"gitId":"andrechuakj"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":77,"author":{"gitId":"andrechuakj"},"content":"    public void setEnrolment_editedEnrolmentIsSameEnrolment_success() {","lastModifiedDate":"2023-10-28"},{"lineNumber":78,"author":{"gitId":"andrechuakj"},"content":"        uniqueEnrolmentList.createEnrolment(ALICE_AURORA);","lastModifiedDate":"2023-10-28"},{"lineNumber":79,"author":{"gitId":"andrechuakj"},"content":"        uniqueEnrolmentList.setEnrolment(ALICE_AURORA, ALICE_AURORA);","lastModifiedDate":"2023-10-28"},{"lineNumber":80,"author":{"gitId":"andrechuakj"},"content":"        UniqueEnrolmentList expectedUniqueEnrolmentList \u003d new UniqueEnrolmentList();","lastModifiedDate":"2023-10-28"},{"lineNumber":81,"author":{"gitId":"andrechuakj"},"content":"        expectedUniqueEnrolmentList.createEnrolment(ALICE_AURORA);","lastModifiedDate":"2023-10-28"},{"lineNumber":82,"author":{"gitId":"andrechuakj"},"content":"        assertEquals(expectedUniqueEnrolmentList, uniqueEnrolmentList);","lastModifiedDate":"2023-10-28"},{"lineNumber":83,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":84,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":85,"author":{"gitId":"andrechuakj"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":86,"author":{"gitId":"andrechuakj"},"content":"    public void setEvent_editedEnrolmentHasSameIdentity_success() {","lastModifiedDate":"2023-10-28"},{"lineNumber":87,"author":{"gitId":"andrechuakj"},"content":"        uniqueEnrolmentList.createEnrolment(ALICE_AURORA);","lastModifiedDate":"2023-10-28"},{"lineNumber":88,"author":{"gitId":"andrechuakj"},"content":"        Enrolment editedHours \u003d new EnrolmentBuilder(ALICE_AURORA).withHours(VALID_HOURS_AURORA)","lastModifiedDate":"2023-10-28"},{"lineNumber":89,"author":{"gitId":"andrechuakj"},"content":"                .build();","lastModifiedDate":"2023-10-28"},{"lineNumber":90,"author":{"gitId":"andrechuakj"},"content":"        uniqueEnrolmentList.setEnrolment(ALICE_AURORA, editedHours);","lastModifiedDate":"2023-10-28"},{"lineNumber":91,"author":{"gitId":"andrechuakj"},"content":"        UniqueEnrolmentList expectedUniqueEventList \u003d new UniqueEnrolmentList();","lastModifiedDate":"2023-10-28"},{"lineNumber":92,"author":{"gitId":"andrechuakj"},"content":"        expectedUniqueEventList.createEnrolment(editedHours);","lastModifiedDate":"2023-10-28"},{"lineNumber":93,"author":{"gitId":"andrechuakj"},"content":"        assertEquals(expectedUniqueEventList, uniqueEnrolmentList);","lastModifiedDate":"2023-10-28"},{"lineNumber":94,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":95,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":96,"author":{"gitId":"andrechuakj"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":97,"author":{"gitId":"andrechuakj"},"content":"    public void setEnrolment_editedEnrolmentHasDifferentIdentity_success() {","lastModifiedDate":"2023-10-28"},{"lineNumber":98,"author":{"gitId":"andrechuakj"},"content":"        uniqueEnrolmentList.createEnrolment(ALICE_AURORA);","lastModifiedDate":"2023-10-28"},{"lineNumber":99,"author":{"gitId":"andrechuakj"},"content":"        uniqueEnrolmentList.setEnrolment(ALICE_AURORA, BENSON_BOXING);","lastModifiedDate":"2023-10-28"},{"lineNumber":100,"author":{"gitId":"andrechuakj"},"content":"        UniqueEnrolmentList expectedUniqueEnrolmentList \u003d new UniqueEnrolmentList();","lastModifiedDate":"2023-10-28"},{"lineNumber":101,"author":{"gitId":"andrechuakj"},"content":"        expectedUniqueEnrolmentList.createEnrolment(BENSON_BOXING);","lastModifiedDate":"2023-10-28"},{"lineNumber":102,"author":{"gitId":"andrechuakj"},"content":"        assertEquals(expectedUniqueEnrolmentList, uniqueEnrolmentList);","lastModifiedDate":"2023-10-28"},{"lineNumber":103,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":104,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":105,"author":{"gitId":"andrechuakj"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":106,"author":{"gitId":"andrechuakj"},"content":"    public void setEnrolment_editedEnrolmentIsNonUnique_throwsDuplicateEnrolmentException() {","lastModifiedDate":"2023-10-28"},{"lineNumber":107,"author":{"gitId":"andrechuakj"},"content":"        uniqueEnrolmentList.createEnrolment(ALICE_AURORA);","lastModifiedDate":"2023-10-28"},{"lineNumber":108,"author":{"gitId":"andrechuakj"},"content":"        uniqueEnrolmentList.createEnrolment(BENSON_BOXING);","lastModifiedDate":"2023-10-28"},{"lineNumber":109,"author":{"gitId":"andrechuakj"},"content":"        assertThrows(DuplicateEnrolmentException.class, () -\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":110,"author":{"gitId":"andrechuakj"},"content":"                uniqueEnrolmentList.setEnrolment(ALICE_AURORA, BENSON_BOXING));","lastModifiedDate":"2023-10-28"},{"lineNumber":111,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":112,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":113,"author":{"gitId":"andrechuakj"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":114,"author":{"gitId":"andrechuakj"},"content":"    public void remove_nullEnrolment_throwsNullPointerException() {","lastModifiedDate":"2023-10-28"},{"lineNumber":115,"author":{"gitId":"andrechuakj"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEnrolmentList.remove(null));","lastModifiedDate":"2023-10-28"},{"lineNumber":116,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":117,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":118,"author":{"gitId":"andrechuakj"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":119,"author":{"gitId":"andrechuakj"},"content":"    public void remove_enrolmentDoesNotExist_throwsEnrolmentNotFoundException() {","lastModifiedDate":"2023-10-28"},{"lineNumber":120,"author":{"gitId":"andrechuakj"},"content":"        assertThrows(EnrolmentNotFoundException.class, () -\u003e uniqueEnrolmentList.remove(ALICE_AURORA));","lastModifiedDate":"2023-10-28"},{"lineNumber":121,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":122,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":123,"author":{"gitId":"andrechuakj"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":124,"author":{"gitId":"andrechuakj"},"content":"    public void remove_existingEnrolment_removesEnrolment() {","lastModifiedDate":"2023-10-28"},{"lineNumber":125,"author":{"gitId":"andrechuakj"},"content":"        uniqueEnrolmentList.createEnrolment(ALICE_AURORA);","lastModifiedDate":"2023-10-28"},{"lineNumber":126,"author":{"gitId":"andrechuakj"},"content":"        uniqueEnrolmentList.remove(ALICE_AURORA);","lastModifiedDate":"2023-10-28"},{"lineNumber":127,"author":{"gitId":"andrechuakj"},"content":"        UniqueEnrolmentList expectedUniqueEnrolmentList \u003d new UniqueEnrolmentList();","lastModifiedDate":"2023-10-28"},{"lineNumber":128,"author":{"gitId":"andrechuakj"},"content":"        assertEquals(expectedUniqueEnrolmentList, uniqueEnrolmentList);","lastModifiedDate":"2023-10-28"},{"lineNumber":129,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":130,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":131,"author":{"gitId":"andrechuakj"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":132,"author":{"gitId":"andrechuakj"},"content":"    public void setEnrolments_nullUniqueEnrolmentList_throwsNullPointerException() {","lastModifiedDate":"2023-10-28"},{"lineNumber":133,"author":{"gitId":"andrechuakj"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":134,"author":{"gitId":"andrechuakj"},"content":"                uniqueEnrolmentList.setEnrolments((UniqueEnrolmentList) null));","lastModifiedDate":"2023-10-28"},{"lineNumber":135,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":136,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":137,"author":{"gitId":"andrechuakj"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":138,"author":{"gitId":"andrechuakj"},"content":"    public void setEnrolments_uniqueEnrolmentList_replacesOwnListWithProvidedUniqueEnrolmentList() {","lastModifiedDate":"2023-10-28"},{"lineNumber":139,"author":{"gitId":"andrechuakj"},"content":"        uniqueEnrolmentList.createEnrolment(ALICE_AURORA);","lastModifiedDate":"2023-10-28"},{"lineNumber":140,"author":{"gitId":"andrechuakj"},"content":"        UniqueEnrolmentList expectedUniqueEnrolmentList \u003d new UniqueEnrolmentList();","lastModifiedDate":"2023-10-28"},{"lineNumber":141,"author":{"gitId":"andrechuakj"},"content":"        expectedUniqueEnrolmentList.createEnrolment(BENSON_BOXING);","lastModifiedDate":"2023-10-28"},{"lineNumber":142,"author":{"gitId":"andrechuakj"},"content":"        uniqueEnrolmentList.setEnrolments(expectedUniqueEnrolmentList);","lastModifiedDate":"2023-10-28"},{"lineNumber":143,"author":{"gitId":"andrechuakj"},"content":"        assertEquals(expectedUniqueEnrolmentList, uniqueEnrolmentList);","lastModifiedDate":"2023-10-28"},{"lineNumber":144,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":145,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":146,"author":{"gitId":"andrechuakj"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":147,"author":{"gitId":"andrechuakj"},"content":"    public void setEnrolments_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-10-28"},{"lineNumber":148,"author":{"gitId":"andrechuakj"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEnrolmentList.setEnrolments((List\u003cEnrolment\u003e) null));","lastModifiedDate":"2023-10-28"},{"lineNumber":149,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":150,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":151,"author":{"gitId":"andrechuakj"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":152,"author":{"gitId":"andrechuakj"},"content":"    public void setEnrolments_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-10-28"},{"lineNumber":153,"author":{"gitId":"andrechuakj"},"content":"        uniqueEnrolmentList.createEnrolment(ALICE_AURORA);","lastModifiedDate":"2023-10-28"},{"lineNumber":154,"author":{"gitId":"andrechuakj"},"content":"        List\u003cEnrolment\u003e enrolmentList \u003d Collections.singletonList(BENSON_BOXING);","lastModifiedDate":"2023-10-28"},{"lineNumber":155,"author":{"gitId":"andrechuakj"},"content":"        uniqueEnrolmentList.setEnrolments(enrolmentList);","lastModifiedDate":"2023-10-28"},{"lineNumber":156,"author":{"gitId":"andrechuakj"},"content":"        UniqueEnrolmentList expectedUniqueEnrolmentList \u003d new UniqueEnrolmentList();","lastModifiedDate":"2023-10-28"},{"lineNumber":157,"author":{"gitId":"andrechuakj"},"content":"        expectedUniqueEnrolmentList.createEnrolment(BENSON_BOXING);","lastModifiedDate":"2023-10-28"},{"lineNumber":158,"author":{"gitId":"andrechuakj"},"content":"        assertEquals(expectedUniqueEnrolmentList, uniqueEnrolmentList);","lastModifiedDate":"2023-10-28"},{"lineNumber":159,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":160,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":161,"author":{"gitId":"andrechuakj"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":162,"author":{"gitId":"andrechuakj"},"content":"    public void setEnrolments_listWithDuplicateEnrolments_throwsDuplicateEnrolmentException() {","lastModifiedDate":"2023-10-28"},{"lineNumber":163,"author":{"gitId":"andrechuakj"},"content":"        List\u003cEnrolment\u003e listWithDuplicateEnrolments \u003d Arrays.asList(ALICE_AURORA, ALICE_AURORA);","lastModifiedDate":"2023-10-28"},{"lineNumber":164,"author":{"gitId":"andrechuakj"},"content":"        assertThrows(DuplicateEnrolmentException.class, () -\u003e","lastModifiedDate":"2023-10-28"},{"lineNumber":165,"author":{"gitId":"andrechuakj"},"content":"                uniqueEnrolmentList.setEnrolments(listWithDuplicateEnrolments));","lastModifiedDate":"2023-10-28"},{"lineNumber":166,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":167,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":168,"author":{"gitId":"andrechuakj"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":169,"author":{"gitId":"andrechuakj"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-28"},{"lineNumber":170,"author":{"gitId":"andrechuakj"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-10-28"},{"lineNumber":171,"author":{"gitId":"andrechuakj"},"content":"                -\u003e uniqueEnrolmentList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-10-28"},{"lineNumber":172,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":173,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":174,"author":{"gitId":"andrechuakj"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":175,"author":{"gitId":"andrechuakj"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-28"},{"lineNumber":176,"author":{"gitId":"andrechuakj"},"content":"        assertEquals(uniqueEnrolmentList.asUnmodifiableObservableList().toString(), uniqueEnrolmentList.toString());","lastModifiedDate":"2023-10-28"},{"lineNumber":177,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":178,"author":{"gitId":"andrechuakj"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"andrechuakj":178}},{"path":"src/test/java/seedu/ccacommander/model/event/EventDateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model.event;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"wr1159"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"wr1159"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"wr1159"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"wr1159"},"content":"public class EventDateTest {","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"wr1159"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"wr1159"},"content":"        assertThrows(NullPointerException.class, () -\u003e new EventDate(null));","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"wr1159"},"content":"    public void constructor_invalidEventDate_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"wr1159"},"content":"        String invalidEventDate \u003d \"\";","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"wr1159"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new EventDate(invalidEventDate));","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"wr1159"},"content":"    public void isValidDate() {","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"wr1159"},"content":"        // null eventDate","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"wr1159"},"content":"        assertThrows(NullPointerException.class, () -\u003e EventDate.isValidDate(null));","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"wr1159"},"content":"        // invalid eventDates","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"wr1159"},"content":"        assertFalse(EventDate.isValidDate(\"\")); // empty string","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"wr1159"},"content":"        assertFalse(EventDate.isValidDate(\" \")); // spaces only","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"wr1159"},"content":"        assertFalse(EventDate.isValidDate(\"2005 12 12\")); // wrong format","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"wr1159"},"content":"        assertFalse(EventDate.isValidDate(\"12th December 2005\")); // wrong format","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"wr1159"},"content":"        assertFalse(EventDate.isValidDate(\"2005-1-1\")); // wrong format","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"wr1159"},"content":"        // valid eventDates","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"wr1159"},"content":"        assertTrue(EventDate.isValidDate(\"2005-12-12\"));","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"wr1159"},"content":"        assertTrue(EventDate.isValidDate(\"2023-10-31\"));","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"wr1159"},"content":"        assertTrue(EventDate.isValidDate(\"2024-01-01\")); // leading 0","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"wr1159"},"content":"        assertTrue(EventDate.isValidDate(\"5555-12-31\")); // far date","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"wr1159"},"content":"    public void equals() {","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"wr1159"},"content":"        EventDate eventDate \u003d new EventDate(\"2023-10-31\");","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"wr1159"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"wr1159"},"content":"        assertTrue(eventDate.equals(new EventDate(\"2023-10-31\")));","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"wr1159"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-11"},{"lineNumber":49,"author":{"gitId":"wr1159"},"content":"        assertTrue(eventDate.equals(eventDate));","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"wr1159"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":52,"author":{"gitId":"wr1159"},"content":"        assertFalse(eventDate.equals(null));","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"wr1159"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"wr1159"},"content":"        assertFalse(eventDate.equals(5.0f));","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"wr1159"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"wr1159"},"content":"        assertFalse(eventDate.equals(new EventDate(\"2024-01-05\")));","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"wr1159"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"wr1159":58,"andrechuakj":2}},{"path":"src/test/java/seedu/ccacommander/model/event/EventInNameCollectionPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"package seedu.ccacommander.model.event;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.testutil.TypicalEvents.AURORA_BOREALIS;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.testutil.TypicalEvents.BOXING_DAY;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"import java.util.Collections;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"import java.util.List;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":"import java.util.Set;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.shared.Name;","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"public class EventInNameCollectionPredicateTest {","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"    public void test_eventInCollection_returnsTrue() {","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"ph-nathan"},"content":"        EventInNameCollectionPredicate predicate \u003d new EventInNameCollectionPredicate(","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"ph-nathan"},"content":"                Arrays.asList(AURORA_BOREALIS.getName(), BOXING_DAY.getName()));","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"ph-nathan"},"content":"        assertTrue(predicate.test(AURORA_BOREALIS));","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"        assertTrue(predicate.test(BOXING_DAY));","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"ph-nathan"},"content":"    public void test_eventNotInCollection_returnsFalse() {","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"ph-nathan"},"content":"        EventInNameCollectionPredicate firstPredicate \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"ph-nathan"},"content":"                new EventInNameCollectionPredicate(Collections.emptyList());","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"ph-nathan"},"content":"        assertFalse(firstPredicate.test(AURORA_BOREALIS));","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"ph-nathan"},"content":"        EventInNameCollectionPredicate secondPredicate \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"ph-nathan"},"content":"                new EventInNameCollectionPredicate(Collections.singleton(BOXING_DAY.getName()));","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"ph-nathan"},"content":"        assertFalse(secondPredicate.test(AURORA_BOREALIS));","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"ph-nathan"},"content":"    public void equals() {","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"ph-nathan"},"content":"        Set\u003cName\u003e firstPredicateEventNameSet \u003d Collections.singleton(BOXING_DAY.getName());","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"ph-nathan"},"content":"        List\u003cName\u003e secondPredicateEventNameList \u003d Collections.singletonList(BOXING_DAY.getName());","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"ph-nathan"},"content":"        List\u003cName\u003e thirdPredicateEventNameList \u003d Collections.singletonList(AURORA_BOREALIS.getName());","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"ph-nathan"},"content":"        EventInNameCollectionPredicate firstPredicate \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"ph-nathan"},"content":"                new EventInNameCollectionPredicate(firstPredicateEventNameSet);","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"ph-nathan"},"content":"        EventInNameCollectionPredicate secondPredicate \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"ph-nathan"},"content":"                new EventInNameCollectionPredicate(secondPredicateEventNameList);","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"ph-nathan"},"content":"        EventInNameCollectionPredicate thirdPredicate \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"ph-nathan"},"content":"                new EventInNameCollectionPredicate(thirdPredicateEventNameList);","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"ph-nathan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"ph-nathan"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"ph-nathan"},"content":"        // same events -\u003e returns true","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"ph-nathan"},"content":"        EventInNameCollectionPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"ph-nathan"},"content":"                new EventInNameCollectionPredicate(firstPredicateEventNameSet);","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"ph-nathan"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"ph-nathan"},"content":"        // same events different collection type -\u003e returns true","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"ph-nathan"},"content":"        assertTrue(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"ph-nathan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"ph-nathan"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"ph-nathan"},"content":"        // different events -\u003e returns false","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"ph-nathan"},"content":"        assertFalse(secondPredicate.equals(thirdPredicate));","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"ph-nathan":71}},{"path":"src/test/java/seedu/ccacommander/model/event/EventNameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model.event;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"wr1159"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"wr1159"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"wr1159"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"wr1159"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"wr1159"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"wr1159"},"content":"import java.util.List;","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"wr1159"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.testutil.EventBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"wr1159"},"content":"public class EventNameContainsKeywordsPredicateTest {","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"wr1159"},"content":"    public void equals() {","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"wr1159"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"wr1159"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"wr1159"},"content":"        EventNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"wr1159"},"content":"                new EventNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"wr1159"},"content":"        EventNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"wr1159"},"content":"                new EventNameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"wr1159"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"wr1159"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"wr1159"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"wr1159"},"content":"        EventNameContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"wr1159"},"content":"                new EventNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"wr1159"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"wr1159"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"wr1159"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"wr1159"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"wr1159"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"wr1159"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"wr1159"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"wr1159"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"wr1159"},"content":"        // One keyword","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"wr1159"},"content":"        EventNameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-11"},{"lineNumber":49,"author":{"gitId":"wr1159"},"content":"                new EventNameContainsKeywordsPredicate(Collections.singletonList(\"NUS\"));","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"wr1159"},"content":"        assertTrue(predicate.test(new EventBuilder().withName(\"NUS Party\").build()));","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":52,"author":{"gitId":"wr1159"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"wr1159"},"content":"        predicate \u003d new EventNameContainsKeywordsPredicate(Arrays.asList(\"NUS\", \"Party\"));","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"wr1159"},"content":"        assertTrue(predicate.test(new EventBuilder().withName(\"NUS Party\").build()));","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"wr1159"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"wr1159"},"content":"        predicate \u003d new EventNameContainsKeywordsPredicate(Arrays.asList(\"NTU\", \"Party\"));","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"wr1159"},"content":"        assertTrue(predicate.test(new EventBuilder().withName(\"NUS Party\").build()));","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"wr1159"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"wr1159"},"content":"        predicate \u003d new EventNameContainsKeywordsPredicate(Arrays.asList(\"nuS\", \"pArTy\"));","lastModifiedDate":"2023-10-11"},{"lineNumber":62,"author":{"gitId":"wr1159"},"content":"        assertTrue(predicate.test(new EventBuilder().withName(\"NUS Party\").build()));","lastModifiedDate":"2023-10-11"},{"lineNumber":63,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":64,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":65,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":66,"author":{"gitId":"wr1159"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-10-11"},{"lineNumber":67,"author":{"gitId":"wr1159"},"content":"        // Zero keywords","lastModifiedDate":"2023-10-11"},{"lineNumber":68,"author":{"gitId":"wr1159"},"content":"        EventNameContainsKeywordsPredicate predicate \u003d new EventNameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-10-11"},{"lineNumber":69,"author":{"gitId":"wr1159"},"content":"        assertFalse(predicate.test(new EventBuilder().withName(\"NUS Party\").build()));","lastModifiedDate":"2023-10-11"},{"lineNumber":70,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":71,"author":{"gitId":"wr1159"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-10-11"},{"lineNumber":72,"author":{"gitId":"wr1159"},"content":"        predicate \u003d new EventNameContainsKeywordsPredicate(Arrays.asList(\"Festival\"));","lastModifiedDate":"2023-10-11"},{"lineNumber":73,"author":{"gitId":"wr1159"},"content":"        assertFalse(predicate.test(new EventBuilder().withName(\"NUS Party\").build()));","lastModifiedDate":"2023-10-11"},{"lineNumber":74,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":75,"author":{"gitId":"wr1159"},"content":"        // Keywords match date and location, but does not match name","lastModifiedDate":"2023-10-11"},{"lineNumber":76,"author":{"gitId":"wr1159"},"content":"        predicate \u003d new EventNameContainsKeywordsPredicate(Arrays.asList(\"2023-12-06\",","lastModifiedDate":"2023-10-11"},{"lineNumber":77,"author":{"gitId":"wr1159"},"content":"                \"NUS\", \"COM3\", \"Wellness\", \"Festival\"));","lastModifiedDate":"2023-10-11"},{"lineNumber":78,"author":{"gitId":"wr1159"},"content":"        assertFalse(predicate.test(new EventBuilder().withName(\"Party\").withDate(\"2023-12-06\")","lastModifiedDate":"2023-10-11"},{"lineNumber":79,"author":{"gitId":"wr1159"},"content":"                .withLocation(\"NUS COM3\").build()));","lastModifiedDate":"2023-10-11"},{"lineNumber":80,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":81,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":82,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":83,"author":{"gitId":"wr1159"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-11"},{"lineNumber":84,"author":{"gitId":"wr1159"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2023-10-11"},{"lineNumber":85,"author":{"gitId":"wr1159"},"content":"        EventNameContainsKeywordsPredicate predicate \u003d new EventNameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2023-10-11"},{"lineNumber":86,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":87,"author":{"gitId":"wr1159"},"content":"        String expected \u003d EventNameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2023-10-11"},{"lineNumber":88,"author":{"gitId":"wr1159"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-11"},{"lineNumber":89,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":90,"author":{"gitId":"wr1159"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"wr1159":88,"andrechuakj":2}},{"path":"src/test/java/seedu/ccacommander/model/event/EventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model.event;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"wr1159"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"wr1159"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"wr1159"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_DATE_BOXING;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_LOCATION_BOXING;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_NAME_BOXING;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"wr1159"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_TAG_BOXING;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalEvents.AURORA_BOREALIS;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalEvents.BOXING_DAY;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"wr1159"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.testutil.EventBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"wr1159"},"content":"public class EventTest {","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"wr1159"},"content":"    public void isSameEvent() {","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"wr1159"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"wr1159"},"content":"        assertTrue(AURORA_BOREALIS.isSameEvent(AURORA_BOREALIS));","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"wr1159"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"wr1159"},"content":"        assertFalse(AURORA_BOREALIS.isSameEvent(null));","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"wr1159"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"wr1159"},"content":"        Event editedAurora \u003d new EventBuilder(AURORA_BOREALIS).withDate(VALID_DATE_BOXING)","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"wr1159"},"content":"                .withLocation(VALID_LOCATION_BOXING).build();","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"wr1159"},"content":"        assertTrue(AURORA_BOREALIS.isSameEvent(editedAurora));","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"wr1159"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"wr1159"},"content":"        editedAurora \u003d new EventBuilder(AURORA_BOREALIS).withName(VALID_NAME_BOXING).build();","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"wr1159"},"content":"        assertFalse(AURORA_BOREALIS.isSameEvent(editedAurora));","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"wr1159"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"wr1159"},"content":"        Event editedBoxing \u003d new EventBuilder(BOXING_DAY).withName(VALID_NAME_BOXING.toLowerCase()).build();","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"wr1159"},"content":"        assertFalse(BOXING_DAY.isSameEvent(editedBoxing));","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"wr1159"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"wr1159"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOXING + \" \";","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"wr1159"},"content":"        editedBoxing \u003d new EventBuilder(BOXING_DAY).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"wr1159"},"content":"        assertFalse(BOXING_DAY.isSameEvent(editedBoxing));","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"wr1159"},"content":"    public void equals() {","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"wr1159"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-11"},{"lineNumber":49,"author":{"gitId":"wr1159"},"content":"        Event auroraCopy \u003d new EventBuilder(AURORA_BOREALIS).build();","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"wr1159"},"content":"        assertTrue(AURORA_BOREALIS.equals(auroraCopy));","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":52,"author":{"gitId":"wr1159"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"wr1159"},"content":"        assertTrue(AURORA_BOREALIS.equals(AURORA_BOREALIS));","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"wr1159"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"wr1159"},"content":"        assertFalse(AURORA_BOREALIS.equals(null));","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"wr1159"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"wr1159"},"content":"        assertFalse(AURORA_BOREALIS.equals(5));","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"wr1159"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":62,"author":{"gitId":"wr1159"},"content":"        assertFalse(AURORA_BOREALIS.equals(BOXING_DAY));","lastModifiedDate":"2023-10-11"},{"lineNumber":63,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":64,"author":{"gitId":"wr1159"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":65,"author":{"gitId":"wr1159"},"content":"        Event editedAurora \u003d new EventBuilder(AURORA_BOREALIS).withName(VALID_NAME_BOXING).build();","lastModifiedDate":"2023-10-11"},{"lineNumber":66,"author":{"gitId":"wr1159"},"content":"        assertFalse(AURORA_BOREALIS.equals(editedAurora));","lastModifiedDate":"2023-10-11"},{"lineNumber":67,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":68,"author":{"gitId":"wr1159"},"content":"        // different date -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":69,"author":{"gitId":"wr1159"},"content":"        editedAurora \u003d new EventBuilder(AURORA_BOREALIS).withDate(VALID_DATE_BOXING).build();","lastModifiedDate":"2023-10-11"},{"lineNumber":70,"author":{"gitId":"wr1159"},"content":"        assertFalse(AURORA_BOREALIS.equals(editedAurora));","lastModifiedDate":"2023-10-11"},{"lineNumber":71,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":72,"author":{"gitId":"wr1159"},"content":"        // different location -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":73,"author":{"gitId":"wr1159"},"content":"        editedAurora \u003d new EventBuilder(AURORA_BOREALIS).withLocation(VALID_LOCATION_BOXING).build();","lastModifiedDate":"2023-10-11"},{"lineNumber":74,"author":{"gitId":"wr1159"},"content":"        assertFalse(AURORA_BOREALIS.equals(editedAurora));","lastModifiedDate":"2023-10-11"},{"lineNumber":75,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":76,"author":{"gitId":"wr1159"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"wr1159"},"content":"        editedAurora \u003d new EventBuilder(AURORA_BOREALIS).withTags(VALID_TAG_BOXING).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":78,"author":{"gitId":"wr1159"},"content":"        assertFalse(AURORA_BOREALIS.equals(editedAurora));","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":81,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"dylkaw"},"content":"    public void test_equalObjectsHaveSameHashCode() {","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"dylkaw"},"content":"        Event auroraCopy1 \u003d new EventBuilder(AURORA_BOREALIS).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"dylkaw"},"content":"        Event auroraCopy2 \u003d new EventBuilder(AURORA_BOREALIS).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"dylkaw"},"content":"        assertEquals(auroraCopy1.hashCode(), auroraCopy1.hashCode());","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"dylkaw"},"content":"        assertEquals(auroraCopy1.hashCode(), auroraCopy2.hashCode());","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":89,"author":{"gitId":"wr1159"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-11"},{"lineNumber":90,"author":{"gitId":"wr1159"},"content":"        String expected \u003d Event.class.getCanonicalName() + \"{name\u003d\" + AURORA_BOREALIS.getName()","lastModifiedDate":"2023-10-11"},{"lineNumber":91,"author":{"gitId":"wr1159"},"content":"                + \", date\u003d\" + AURORA_BOREALIS.getDate()","lastModifiedDate":"2023-10-23"},{"lineNumber":92,"author":{"gitId":"wr1159"},"content":"                + \", location\u003d\" + AURORA_BOREALIS.getLocation()","lastModifiedDate":"2023-10-23"},{"lineNumber":93,"author":{"gitId":"wr1159"},"content":"                + \", tags\u003d\" + AURORA_BOREALIS.getTags() + \"}\";","lastModifiedDate":"2023-10-23"},{"lineNumber":94,"author":{"gitId":"wr1159"},"content":"        assertEquals(expected, AURORA_BOREALIS.toString());","lastModifiedDate":"2023-10-11"},{"lineNumber":95,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":96,"author":{"gitId":"wr1159"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"wr1159":82,"andrechuakj":7,"dylkaw":7}},{"path":"src/test/java/seedu/ccacommander/model/event/LocationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model.event;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"wr1159"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"wr1159"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"wr1159"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"wr1159"},"content":"public class LocationTest {","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"wr1159"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"wr1159"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Location(null));","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"wr1159"},"content":"    public void constructor_invalidLocation_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"wr1159"},"content":"        String invalidLocation \u003d \"\";","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"wr1159"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Location(invalidLocation));","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"wr1159"},"content":"    public void isValidLocation() {","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"wr1159"},"content":"        // null location","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"wr1159"},"content":"        assertThrows(NullPointerException.class, () -\u003e Location.isValidLocation(null));","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"andrechuakj"},"content":"        // invalid locations","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"wr1159"},"content":"        assertFalse(Location.isValidLocation(\"\")); // empty string","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"wr1159"},"content":"        assertFalse(Location.isValidLocation(\" \")); // spaces only","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"andrechuakj"},"content":"        // valid locations","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"wr1159"},"content":"        assertTrue(Location.isValidLocation(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"wr1159"},"content":"        assertTrue(Location.isValidLocation(\"-\")); // one character","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"wr1159"},"content":"        assertTrue(Location.isValidLocation(\"Leng Inc; 1234 Market St; \"","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"wr1159"},"content":"                + \"San Francisco CA 2349879; USA\")); // long location","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"wr1159"},"content":"    public void equals() {","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"wr1159"},"content":"        Location location \u003d new Location(\"Valid Location\");","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"wr1159"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"wr1159"},"content":"        assertTrue(location.equals(new Location(\"Valid Location\")));","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"wr1159"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"wr1159"},"content":"        assertTrue(location.equals(location));","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"wr1159"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":49,"author":{"gitId":"wr1159"},"content":"        assertFalse(location.equals(null));","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"wr1159"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":52,"author":{"gitId":"wr1159"},"content":"        assertFalse(location.equals(5.0f));","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"wr1159"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"wr1159"},"content":"        assertFalse(location.equals(new Location(\"Other Valid Location\")));","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"wr1159"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"wr1159":53,"andrechuakj":4}},{"path":"src/test/java/seedu/ccacommander/model/event/SameEventPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"package seedu.ccacommander.model.event;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.testutil.TypicalEvents.AURORA_BOREALIS;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.testutil.TypicalEvents.BOXING_DAY;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":"public class SameEventPredicateTest {","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"    public void testConstructor() {","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"        SameEventPredicate predicate \u003d new SameEventPredicate(AURORA_BOREALIS);","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"        assertNotNull(predicate);","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"ph-nathan"},"content":"    public void test_sameEvent_returnsTrue() {","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"ph-nathan"},"content":"        // same event","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"ph-nathan"},"content":"        SameEventPredicate predicate \u003d new SameEventPredicate(AURORA_BOREALIS);","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"ph-nathan"},"content":"        assertTrue(predicate.test(AURORA_BOREALIS));","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"ph-nathan"},"content":"    public void test_differentEvent_returnsFalse() {","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"ph-nathan"},"content":"        // different events","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"ph-nathan"},"content":"        SameEventPredicate predicate \u003d new SameEventPredicate(AURORA_BOREALIS);","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"ph-nathan"},"content":"        assertFalse(predicate.test(BOXING_DAY));","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"ph-nathan"},"content":"        predicate \u003d new SameEventPredicate(null);","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"ph-nathan"},"content":"        assertFalse(predicate.test(AURORA_BOREALIS));","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"ph-nathan"},"content":"    public void equals() {","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"ph-nathan"},"content":"        SameEventPredicate firstPredicate \u003d new SameEventPredicate(AURORA_BOREALIS);","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"ph-nathan"},"content":"        SameEventPredicate secondPredicate \u003d new SameEventPredicate(BOXING_DAY);","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"ph-nathan"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"ph-nathan"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"ph-nathan"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"ph-nathan":47}},{"path":"src/test/java/seedu/ccacommander/model/event/UniqueEventListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model.event;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"wr1159"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"wr1159"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"wr1159"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_LOCATION_BOXING;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalEvents.AURORA_BOREALIS;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalEvents.BOXING_DAY;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"wr1159"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"wr1159"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"wr1159"},"content":"import java.util.List;","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"wr1159"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.exceptions.DuplicateEventException;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.testutil.EventBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"wr1159"},"content":"public class UniqueEventListTest {","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"wr1159"},"content":"    private final UniqueEventList uniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"wr1159"},"content":"    public void contains_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"wr1159"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.contains(null));","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"wr1159"},"content":"    public void contains_eventNotInList_returnsFalse() {","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"wr1159"},"content":"        assertFalse(uniqueEventList.contains(AURORA_BOREALIS));","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"wr1159"},"content":"    public void contains_eventInList_returnsTrue() {","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"dylkaw"},"content":"        uniqueEventList.createEvent(AURORA_BOREALIS);","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"wr1159"},"content":"        assertTrue(uniqueEventList.contains(AURORA_BOREALIS));","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"wr1159"},"content":"    public void contains_eventWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"dylkaw"},"content":"        uniqueEventList.createEvent(AURORA_BOREALIS);","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"wr1159"},"content":"        Event editedAurora \u003d new EventBuilder(AURORA_BOREALIS).withLocation(VALID_LOCATION_BOXING)","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"wr1159"},"content":"                .build();","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"wr1159"},"content":"        assertTrue(uniqueEventList.contains(editedAurora));","lastModifiedDate":"2023-11-03"},{"lineNumber":47,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":49,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"wr1159"},"content":"    public void add_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"dylkaw"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.createEvent(null));","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"wr1159"},"content":"    public void add_duplicateEvent_throwsDuplicateEventException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"dylkaw"},"content":"        uniqueEventList.createEvent(AURORA_BOREALIS);","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"dylkaw"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e uniqueEventList.createEvent(AURORA_BOREALIS));","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"wr1159"},"content":"    public void setEvent_nullTargetEvent_throwsNullPointerException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":62,"author":{"gitId":"wr1159"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvent(null, AURORA_BOREALIS));","lastModifiedDate":"2023-10-11"},{"lineNumber":63,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":64,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":65,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":66,"author":{"gitId":"wr1159"},"content":"    public void setEvent_nullEditedEvent_throwsNullPointerException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":67,"author":{"gitId":"wr1159"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvent(AURORA_BOREALIS, null));","lastModifiedDate":"2023-10-11"},{"lineNumber":68,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":69,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":70,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":71,"author":{"gitId":"wr1159"},"content":"    public void setEvent_targetEventNotInList_throwsEventNotFoundException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":72,"author":{"gitId":"wr1159"},"content":"        assertThrows(EventNotFoundException.class, () -\u003e uniqueEventList.setEvent(AURORA_BOREALIS, AURORA_BOREALIS));","lastModifiedDate":"2023-10-11"},{"lineNumber":73,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":74,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":75,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":76,"author":{"gitId":"wr1159"},"content":"    public void setEvent_editedEventIsSameEvent_success() {","lastModifiedDate":"2023-10-11"},{"lineNumber":77,"author":{"gitId":"dylkaw"},"content":"        uniqueEventList.createEvent(AURORA_BOREALIS);","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"wr1159"},"content":"        uniqueEventList.setEvent(AURORA_BOREALIS, AURORA_BOREALIS);","lastModifiedDate":"2023-10-11"},{"lineNumber":79,"author":{"gitId":"wr1159"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2023-10-11"},{"lineNumber":80,"author":{"gitId":"dylkaw"},"content":"        expectedUniqueEventList.createEvent(AURORA_BOREALIS);","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"wr1159"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2023-10-11"},{"lineNumber":82,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":83,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":84,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":85,"author":{"gitId":"wr1159"},"content":"    public void setEvent_editedEventHasSameIdentity_success() {","lastModifiedDate":"2023-10-11"},{"lineNumber":86,"author":{"gitId":"dylkaw"},"content":"        uniqueEventList.createEvent(AURORA_BOREALIS);","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"wr1159"},"content":"        Event editedAurora \u003d new EventBuilder(AURORA_BOREALIS).withLocation(VALID_LOCATION_BOXING)","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"wr1159"},"content":"                .build();","lastModifiedDate":"2023-10-11"},{"lineNumber":89,"author":{"gitId":"wr1159"},"content":"        uniqueEventList.setEvent(AURORA_BOREALIS, editedAurora);","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"wr1159"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2023-10-11"},{"lineNumber":91,"author":{"gitId":"dylkaw"},"content":"        expectedUniqueEventList.createEvent(editedAurora);","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"wr1159"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2023-10-11"},{"lineNumber":93,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":94,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":95,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":96,"author":{"gitId":"wr1159"},"content":"    public void setEvent_editedEventHasDifferentIdentity_success() {","lastModifiedDate":"2023-10-11"},{"lineNumber":97,"author":{"gitId":"dylkaw"},"content":"        uniqueEventList.createEvent(AURORA_BOREALIS);","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"wr1159"},"content":"        uniqueEventList.setEvent(AURORA_BOREALIS, BOXING_DAY);","lastModifiedDate":"2023-10-11"},{"lineNumber":99,"author":{"gitId":"wr1159"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2023-10-11"},{"lineNumber":100,"author":{"gitId":"dylkaw"},"content":"        expectedUniqueEventList.createEvent(BOXING_DAY);","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"wr1159"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2023-10-11"},{"lineNumber":102,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":103,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":104,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":105,"author":{"gitId":"wr1159"},"content":"    public void setEvent_editedEventHasNonUniqueIdentity_throwsDuplicateEventException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":106,"author":{"gitId":"dylkaw"},"content":"        uniqueEventList.createEvent(AURORA_BOREALIS);","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"dylkaw"},"content":"        uniqueEventList.createEvent(BOXING_DAY);","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"wr1159"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e uniqueEventList.setEvent(AURORA_BOREALIS, BOXING_DAY));","lastModifiedDate":"2023-10-11"},{"lineNumber":109,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":110,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":111,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":112,"author":{"gitId":"wr1159"},"content":"    public void remove_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":113,"author":{"gitId":"wr1159"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.remove(null));","lastModifiedDate":"2023-10-11"},{"lineNumber":114,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":115,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":116,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":117,"author":{"gitId":"wr1159"},"content":"    public void remove_eventDoesNotExist_throwsEventNotFoundException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":118,"author":{"gitId":"wr1159"},"content":"        assertThrows(EventNotFoundException.class, () -\u003e uniqueEventList.remove(AURORA_BOREALIS));","lastModifiedDate":"2023-10-11"},{"lineNumber":119,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":120,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":121,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":122,"author":{"gitId":"wr1159"},"content":"    public void remove_existingEvent_removesEvent() {","lastModifiedDate":"2023-10-11"},{"lineNumber":123,"author":{"gitId":"dylkaw"},"content":"        uniqueEventList.createEvent(AURORA_BOREALIS);","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"wr1159"},"content":"        uniqueEventList.remove(AURORA_BOREALIS);","lastModifiedDate":"2023-10-11"},{"lineNumber":125,"author":{"gitId":"wr1159"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2023-10-11"},{"lineNumber":126,"author":{"gitId":"wr1159"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2023-10-11"},{"lineNumber":127,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":128,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":129,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":130,"author":{"gitId":"wr1159"},"content":"    public void setEvents_nullUniqueEventList_throwsNullPointerException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":131,"author":{"gitId":"wr1159"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvents((UniqueEventList) null));","lastModifiedDate":"2023-10-11"},{"lineNumber":132,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":133,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":134,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":135,"author":{"gitId":"wr1159"},"content":"    public void setEvents_uniqueEventList_replacesOwnListWithProvidedUniqueEventList() {","lastModifiedDate":"2023-10-11"},{"lineNumber":136,"author":{"gitId":"dylkaw"},"content":"        uniqueEventList.createEvent(AURORA_BOREALIS);","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"wr1159"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2023-10-11"},{"lineNumber":138,"author":{"gitId":"dylkaw"},"content":"        expectedUniqueEventList.createEvent(BOXING_DAY);","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"wr1159"},"content":"        uniqueEventList.setEvents(expectedUniqueEventList);","lastModifiedDate":"2023-10-11"},{"lineNumber":140,"author":{"gitId":"wr1159"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2023-10-11"},{"lineNumber":141,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":142,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":143,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":144,"author":{"gitId":"wr1159"},"content":"    public void setEvents_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":145,"author":{"gitId":"wr1159"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvents((List\u003cEvent\u003e) null));","lastModifiedDate":"2023-10-11"},{"lineNumber":146,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":147,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":148,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":149,"author":{"gitId":"wr1159"},"content":"    public void setEvents_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-10-11"},{"lineNumber":150,"author":{"gitId":"dylkaw"},"content":"        uniqueEventList.createEvent(AURORA_BOREALIS);","lastModifiedDate":"2023-10-17"},{"lineNumber":151,"author":{"gitId":"wr1159"},"content":"        List\u003cEvent\u003e eventList \u003d Collections.singletonList(BOXING_DAY);","lastModifiedDate":"2023-10-11"},{"lineNumber":152,"author":{"gitId":"wr1159"},"content":"        uniqueEventList.setEvents(eventList);","lastModifiedDate":"2023-10-11"},{"lineNumber":153,"author":{"gitId":"wr1159"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2023-10-11"},{"lineNumber":154,"author":{"gitId":"dylkaw"},"content":"        expectedUniqueEventList.createEvent(BOXING_DAY);","lastModifiedDate":"2023-10-17"},{"lineNumber":155,"author":{"gitId":"wr1159"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2023-10-11"},{"lineNumber":156,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":157,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":158,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":159,"author":{"gitId":"wr1159"},"content":"    public void setEvents_listWithDuplicateEvents_throwsDuplicateEventException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":160,"author":{"gitId":"wr1159"},"content":"        List\u003cEvent\u003e listWithDuplicateEvents \u003d Arrays.asList(AURORA_BOREALIS, AURORA_BOREALIS);","lastModifiedDate":"2023-10-11"},{"lineNumber":161,"author":{"gitId":"wr1159"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e uniqueEventList.setEvents(listWithDuplicateEvents));","lastModifiedDate":"2023-10-11"},{"lineNumber":162,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":163,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":164,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":165,"author":{"gitId":"wr1159"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":166,"author":{"gitId":"wr1159"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-10-11"},{"lineNumber":167,"author":{"gitId":"wr1159"},"content":"            -\u003e uniqueEventList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-10-11"},{"lineNumber":168,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":169,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":170,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":171,"author":{"gitId":"wr1159"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-11"},{"lineNumber":172,"author":{"gitId":"wr1159"},"content":"        assertEquals(uniqueEventList.asUnmodifiableObservableList().toString(), uniqueEventList.toString());","lastModifiedDate":"2023-10-11"},{"lineNumber":173,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":174,"author":{"gitId":"wr1159"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"wr1159":148,"andrechuakj":8,"dylkaw":18}},{"path":"src/test/java/seedu/ccacommander/model/member/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model.member;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Address address \u003d new Address(\"Valid Address\");","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(new Address(\"Valid Address\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(address));","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(new Address(\"Other Valid Address\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"andrechuakj":2,"-":54}},{"path":"src/test/java/seedu/ccacommander/model/member/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model.member;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Email email \u003d new Email(\"valid@email\");","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(new Email(\"valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(email));","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(new Email(\"other.valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"andrechuakj":2,"-":86}},{"path":"src/test/java/seedu/ccacommander/model/member/GenderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model.member;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"wr1159"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"wr1159"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"wr1159"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"wr1159"},"content":"public class GenderTest {","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"wr1159"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"wr1159"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Gender(null));","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"wr1159"},"content":"    public void constructor_invalidGender_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"wr1159"},"content":"        String invalidGender \u003d \"\";","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"wr1159"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Gender(invalidGender));","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"wr1159"},"content":"    public void isValidGender() {","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"wr1159"},"content":"        // null Gender","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"wr1159"},"content":"        assertThrows(NullPointerException.class, () -\u003e Gender.isValidGender(null));","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"wr1159"},"content":"        // invalid Genders","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"wr1159"},"content":"        assertFalse(Gender.isValidGender(\"\")); // empty string","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"wr1159"},"content":"        assertFalse(Gender.isValidGender(\" \")); // spaces only","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"wr1159"},"content":"        assertFalse(Gender.isValidGender(\"Apache Helicopter\")); // not part of three choices","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"wr1159"},"content":"        // valid Genders","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"wr1159"},"content":"        assertTrue(Gender.isValidGender(\"Male\"));","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"wr1159"},"content":"        assertTrue(Gender.isValidGender(\"Female\"));","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"wr1159"},"content":"        assertTrue(Gender.isValidGender(\"Others\"));","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"wr1159"},"content":"        assertTrue(Gender.isValidGender(\"others\")); // lower case","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"wr1159"},"content":"        assertTrue(Gender.isValidGender(\"otHeRS\")); // mixed case","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"wr1159"},"content":"    public void toStringFunction() {","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"wr1159"},"content":"        Gender gender \u003d new Gender(\"Others\");","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"wr1159"},"content":"        assertTrue(gender.toString().equals(\"Others\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"wr1159"},"content":"        assertFalse(gender.toString().equals(\"others\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"wr1159"},"content":"        assertFalse(gender.toString().equals(\"oThERs\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"wr1159"},"content":"        assertFalse(gender.toString().equals(\" Others \"));","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"wr1159"},"content":"        gender \u003d new Gender(\"Male\");","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"wr1159"},"content":"        assertTrue(gender.toString().equals(\"Male\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"wr1159"},"content":"        assertFalse(gender.toString().equals(\"male\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"wr1159"},"content":"        assertFalse(gender.toString().equals(\"mAlE\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"wr1159"},"content":"        assertFalse(gender.toString().equals(\" Male \"));","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"wr1159"},"content":"        gender \u003d new Gender(\"Female\");","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"wr1159"},"content":"        assertTrue(gender.toString().equals(\"Female\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"wr1159"},"content":"        assertFalse(gender.toString().equals(\"female\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"wr1159"},"content":"        assertFalse(gender.toString().equals(\"FEmAlE\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"wr1159"},"content":"        assertFalse(gender.toString().equals(\" Female \"));","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":61,"author":{"gitId":"wr1159"},"content":"    public void equals() {","lastModifiedDate":"2023-10-02"},{"lineNumber":62,"author":{"gitId":"wr1159"},"content":"        Gender gender \u003d new Gender(\"Male\");","lastModifiedDate":"2023-10-02"},{"lineNumber":63,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":64,"author":{"gitId":"wr1159"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-02"},{"lineNumber":65,"author":{"gitId":"wr1159"},"content":"        assertTrue(gender.equals(new Gender(\"Male\")));","lastModifiedDate":"2023-10-02"},{"lineNumber":66,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":67,"author":{"gitId":"wr1159"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-02"},{"lineNumber":68,"author":{"gitId":"wr1159"},"content":"        assertTrue(gender.equals(gender));","lastModifiedDate":"2023-10-02"},{"lineNumber":69,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":70,"author":{"gitId":"wr1159"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-02"},{"lineNumber":71,"author":{"gitId":"wr1159"},"content":"        assertFalse(gender.equals(null));","lastModifiedDate":"2023-10-02"},{"lineNumber":72,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":73,"author":{"gitId":"wr1159"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-02"},{"lineNumber":74,"author":{"gitId":"wr1159"},"content":"        assertFalse(gender.equals(5.0f));","lastModifiedDate":"2023-10-02"},{"lineNumber":75,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":76,"author":{"gitId":"wr1159"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-02"},{"lineNumber":77,"author":{"gitId":"wr1159"},"content":"        assertFalse(gender.equals(new Gender(\"Others\")));","lastModifiedDate":"2023-10-02"},{"lineNumber":78,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":79,"author":{"gitId":"wr1159"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"wr1159":77,"andrechuakj":2}},{"path":"src/test/java/seedu/ccacommander/model/member/MemberInNameCollectionPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"package seedu.ccacommander.model.member;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.testutil.TypicalMembers.ALICE;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.testutil.TypicalMembers.BENSON;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"import java.util.Collections;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"import java.util.List;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":"import java.util.Set;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.shared.Name;","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"public class MemberInNameCollectionPredicateTest {","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"    public void test_memberInCollection_returnsTrue() {","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"ph-nathan"},"content":"        MemberInNameCollectionPredicate predicate \u003d new MemberInNameCollectionPredicate(","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"ph-nathan"},"content":"                Arrays.asList(ALICE.getName(), BENSON.getName()));","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"ph-nathan"},"content":"        assertTrue(predicate.test(ALICE));","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"        assertTrue(predicate.test(BENSON));","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"ph-nathan"},"content":"    public void test_memberNotInCollection_returnsFalse() {","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"ph-nathan"},"content":"        MemberInNameCollectionPredicate firstPredicate \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"ph-nathan"},"content":"                new MemberInNameCollectionPredicate(Collections.emptyList());","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"ph-nathan"},"content":"        assertFalse(firstPredicate.test(ALICE));","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"ph-nathan"},"content":"        MemberInNameCollectionPredicate secondPredicate \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"ph-nathan"},"content":"                new MemberInNameCollectionPredicate(Collections.singleton(BENSON.getName()));","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"ph-nathan"},"content":"        assertFalse(secondPredicate.test(ALICE));","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"ph-nathan"},"content":"    public void equals() {","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"ph-nathan"},"content":"        Set\u003cName\u003e firstPredicateMemberNameSet \u003d Collections.singleton(BENSON.getName());","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"ph-nathan"},"content":"        List\u003cName\u003e secondPredicateMemberNameList \u003d Collections.singletonList(BENSON.getName());","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"ph-nathan"},"content":"        List\u003cName\u003e thirdPredicateMemberNameList \u003d Collections.singletonList(ALICE.getName());","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"ph-nathan"},"content":"        MemberInNameCollectionPredicate firstPredicate \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"ph-nathan"},"content":"                new MemberInNameCollectionPredicate(firstPredicateMemberNameSet);","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"ph-nathan"},"content":"        MemberInNameCollectionPredicate secondPredicate \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"ph-nathan"},"content":"                new MemberInNameCollectionPredicate(secondPredicateMemberNameList);","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"ph-nathan"},"content":"        MemberInNameCollectionPredicate thirdPredicate \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"ph-nathan"},"content":"                new MemberInNameCollectionPredicate(thirdPredicateMemberNameList);","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"ph-nathan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"ph-nathan"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"ph-nathan"},"content":"        // same members -\u003e returns true","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"ph-nathan"},"content":"        MemberInNameCollectionPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"ph-nathan"},"content":"                new MemberInNameCollectionPredicate(firstPredicateMemberNameSet);","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"ph-nathan"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"ph-nathan"},"content":"        // same members different collection type -\u003e returns true","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"ph-nathan"},"content":"        assertTrue(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":64,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"ph-nathan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"ph-nathan"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"ph-nathan"},"content":"        // different members -\u003e returns false","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"ph-nathan"},"content":"        assertFalse(secondPredicate.equals(thirdPredicate));","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"ph-nathan":71}},{"path":"src/test/java/seedu/ccacommander/model/member/MemberNameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model.member;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.testutil.MemberBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"dylkaw"},"content":"public class MemberNameContainsKeywordsPredicateTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"dylkaw"},"content":"        MemberNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"dylkaw"},"content":"                new MemberNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"dylkaw"},"content":"        MemberNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"dylkaw"},"content":"                new MemberNameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"dylkaw"},"content":"        MemberNameContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"dylkaw"},"content":"                new MemberNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"wr1159"},"content":"        // different member -\u003e returns false","lastModifiedDate":"2023-10-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"dylkaw"},"content":"        MemberNameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"dylkaw"},"content":"                new MemberNameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"wr1159"},"content":"        assertTrue(predicate.test(new MemberBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"dylkaw"},"content":"        predicate \u003d new MemberNameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"wr1159"},"content":"        assertTrue(predicate.test(new MemberBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"dylkaw"},"content":"        predicate \u003d new MemberNameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"wr1159"},"content":"        assertTrue(predicate.test(new MemberBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2023-10-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"dylkaw"},"content":"        predicate \u003d new MemberNameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"wr1159"},"content":"        assertTrue(predicate.test(new MemberBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"dylkaw"},"content":"        MemberNameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"dylkaw"},"content":"                new MemberNameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"wr1159"},"content":"        assertFalse(predicate.test(new MemberBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-10-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"dylkaw"},"content":"        predicate \u003d new MemberNameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"wr1159"},"content":"        assertFalse(predicate.test(new MemberBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"andrechuakj"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"dylkaw"},"content":"        predicate \u003d new MemberNameContainsKeywordsPredicate(","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"dylkaw"},"content":"                Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"wr1159"},"content":"        assertFalse(predicate.test(new MemberBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2023-10-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"dylkaw"},"content":"        MemberNameContainsKeywordsPredicate predicate \u003d new MemberNameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"dylkaw"},"content":"        String expected \u003d MemberNameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"wr1159":8,"andrechuakj":3,"dylkaw":19,"-":61}},{"path":"src/test/java/seedu/ccacommander/model/member/MemberTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model.member;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalMembers.ALICE;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalMembers.BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.testutil.MemberBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"wr1159"},"content":"public class MemberTest {","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"wr1159"},"content":"        Member member \u003d new MemberBuilder().build();","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"wr1159"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e member.getTags().remove(0));","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"wr1159"},"content":"    public void isSameMember() {","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"wr1159"},"content":"        assertTrue(ALICE.isSameMember(ALICE));","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"wr1159"},"content":"        assertFalse(ALICE.isSameMember(null));","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"wr1159"},"content":"        Member editedAlice \u003d new MemberBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"wr1159"},"content":"        assertTrue(ALICE.isSameMember(editedAlice));","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"wr1159"},"content":"        editedAlice \u003d new MemberBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-02"},{"lineNumber":42,"author":{"gitId":"wr1159"},"content":"        assertFalse(ALICE.isSameMember(editedAlice));","lastModifiedDate":"2023-10-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"wr1159"},"content":"        // name differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"wr1159"},"content":"        // as name will be converted to PascalCase with space in between","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"wr1159"},"content":"        Member editedBob \u003d new MemberBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2023-10-02"},{"lineNumber":47,"author":{"gitId":"wr1159"},"content":"        assertTrue(BOB.isSameMember(editedBob));","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"wr1159"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns true","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"wr1159"},"content":"        // as name will trim trailing space","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"wr1159"},"content":"        editedBob \u003d new MemberBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-10-02"},{"lineNumber":53,"author":{"gitId":"wr1159"},"content":"        assertTrue(BOB.isSameMember(editedBob));","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"wr1159"},"content":"        Member aliceCopy \u003d new MemberBuilder(ALICE).build();","lastModifiedDate":"2023-10-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"wr1159"},"content":"        // different member -\u003e returns false","lastModifiedDate":"2023-10-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"wr1159"},"content":"        Member editedAlice \u003d new MemberBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-10-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"wr1159"},"content":"        editedAlice \u003d new MemberBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"wr1159"},"content":"        editedAlice \u003d new MemberBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-10-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"andrechuakj"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2023-10-22"},{"lineNumber":87,"author":{"gitId":"wr1159"},"content":"        editedAlice \u003d new MemberBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-10-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":91,"author":{"gitId":"wr1159"},"content":"        editedAlice \u003d new MemberBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":97,"author":{"gitId":"andrechuakj"},"content":"        String expected \u003d Member.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName()","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"andrechuakj"},"content":"                + \", gender\u003d\" + ALICE.getGender()","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"andrechuakj"},"content":"                + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"andrechuakj"},"content":"                + \", email\u003d\" + ALICE.getEmail()","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"andrechuakj"},"content":"                + \", address\u003d\" + ALICE.getAddress()","lastModifiedDate":"2023-10-21"},{"lineNumber":102,"author":{"gitId":"andrechuakj"},"content":"                + \", tags\u003d\" + ALICE.getTags() + \"}\";","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"wr1159":25,"andrechuakj":17,"-":63}},{"path":"src/test/java/seedu/ccacommander/model/member/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model.member;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Phone phone \u003d new Phone(\"999\");","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(new Phone(\"999\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(phone));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(new Phone(\"995\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"andrechuakj":2,"-":58}},{"path":"src/test/java/seedu/ccacommander/model/member/SameMemberPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"package seedu.ccacommander.model.member;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.testutil.TypicalMembers.ALICE;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.testutil.TypicalMembers.BENSON;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":"public class SameMemberPredicateTest {","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"    public void testConstructor() {","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"        SameMemberPredicate predicate \u003d new SameMemberPredicate(ALICE);","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"        assertNotNull(predicate);","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"ph-nathan"},"content":"    public void test_sameMember_returnsTrue() {","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"ph-nathan"},"content":"        // same member","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"ph-nathan"},"content":"        SameMemberPredicate predicate \u003d new SameMemberPredicate(ALICE);","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"ph-nathan"},"content":"        assertTrue(predicate.test(ALICE));","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"ph-nathan"},"content":"    public void test_differentMember_returnsFalse() {","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"ph-nathan"},"content":"        // different members","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"ph-nathan"},"content":"        SameMemberPredicate predicate \u003d new SameMemberPredicate(ALICE);","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"ph-nathan"},"content":"        assertFalse(predicate.test(BENSON));","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"ph-nathan"},"content":"        predicate \u003d new SameMemberPredicate(null);","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"ph-nathan"},"content":"        assertFalse(predicate.test(ALICE));","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"ph-nathan"},"content":"    public void equals() {","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"ph-nathan"},"content":"        SameMemberPredicate firstPredicate \u003d new SameMemberPredicate(ALICE);","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"ph-nathan"},"content":"        SameMemberPredicate secondPredicate \u003d new SameMemberPredicate(BENSON);","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"ph-nathan"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"ph-nathan"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"ph-nathan"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"ph-nathan":47}},{"path":"src/test/java/seedu/ccacommander/model/member/UniqueMemberListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model.member;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"wr1159"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"wr1159"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"wr1159"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalMembers.ALICE;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalMembers.BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"wr1159"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"wr1159"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"wr1159"},"content":"import java.util.List;","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"wr1159"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.exceptions.DuplicateMemberException;","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.exceptions.MemberNotFoundException;","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.testutil.MemberBuilder;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"wr1159"},"content":"public class UniqueMemberListTest {","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"wr1159"},"content":"    private final UniqueMemberList uniqueMemberList \u003d new UniqueMemberList();","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"wr1159"},"content":"    public void contains_nullMember_throwsNullPointerException() {","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"wr1159"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMemberList.contains(null));","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"wr1159"},"content":"    public void contains_memberNotInList_returnsFalse() {","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"wr1159"},"content":"        assertFalse(uniqueMemberList.contains(ALICE));","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"wr1159"},"content":"    public void contains_memberInList_returnsTrue() {","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"wr1159"},"content":"        uniqueMemberList.add(ALICE);","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"wr1159"},"content":"        assertTrue(uniqueMemberList.contains(ALICE));","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":42,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":43,"author":{"gitId":"wr1159"},"content":"    public void contains_memberWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"wr1159"},"content":"        uniqueMemberList.add(ALICE);","lastModifiedDate":"2023-10-02"},{"lineNumber":45,"author":{"gitId":"wr1159"},"content":"        Member editedAlice \u003d new MemberBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-02"},{"lineNumber":46,"author":{"gitId":"wr1159"},"content":"                .build();","lastModifiedDate":"2023-10-02"},{"lineNumber":47,"author":{"gitId":"wr1159"},"content":"        assertTrue(uniqueMemberList.contains(editedAlice));","lastModifiedDate":"2023-10-02"},{"lineNumber":48,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":49,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":50,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":51,"author":{"gitId":"wr1159"},"content":"    public void add_nullMember_throwsNullPointerException() {","lastModifiedDate":"2023-10-02"},{"lineNumber":52,"author":{"gitId":"wr1159"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMemberList.add(null));","lastModifiedDate":"2023-10-02"},{"lineNumber":53,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":54,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":55,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":56,"author":{"gitId":"wr1159"},"content":"    public void add_duplicateMember_throwsDuplicateMemberException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"wr1159"},"content":"        uniqueMemberList.add(ALICE);","lastModifiedDate":"2023-10-02"},{"lineNumber":58,"author":{"gitId":"wr1159"},"content":"        assertThrows(DuplicateMemberException.class, () -\u003e uniqueMemberList.add(ALICE));","lastModifiedDate":"2023-10-02"},{"lineNumber":59,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":60,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":61,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":62,"author":{"gitId":"wr1159"},"content":"    public void setMember_nullTargetMember_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"wr1159"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMemberList.setMember(null, ALICE));","lastModifiedDate":"2023-10-02"},{"lineNumber":64,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":65,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":66,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":67,"author":{"gitId":"wr1159"},"content":"    public void setMember_nullEditedMember_throwsNullPointerException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"wr1159"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMemberList.setMember(ALICE, null));","lastModifiedDate":"2023-10-02"},{"lineNumber":69,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":70,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":71,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":72,"author":{"gitId":"wr1159"},"content":"    public void setMember_targetMemberNotInList_throwsMemberNotFoundException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"wr1159"},"content":"        assertThrows(MemberNotFoundException.class, () -\u003e uniqueMemberList.setMember(ALICE, ALICE));","lastModifiedDate":"2023-10-02"},{"lineNumber":74,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":75,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":76,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":77,"author":{"gitId":"wr1159"},"content":"    public void setMember_editedMemberIsSameMember_success() {","lastModifiedDate":"2023-10-02"},{"lineNumber":78,"author":{"gitId":"wr1159"},"content":"        uniqueMemberList.add(ALICE);","lastModifiedDate":"2023-10-02"},{"lineNumber":79,"author":{"gitId":"wr1159"},"content":"        uniqueMemberList.setMember(ALICE, ALICE);","lastModifiedDate":"2023-10-02"},{"lineNumber":80,"author":{"gitId":"wr1159"},"content":"        UniqueMemberList expectedUniqueMemberList \u003d new UniqueMemberList();","lastModifiedDate":"2023-10-02"},{"lineNumber":81,"author":{"gitId":"wr1159"},"content":"        expectedUniqueMemberList.add(ALICE);","lastModifiedDate":"2023-10-02"},{"lineNumber":82,"author":{"gitId":"wr1159"},"content":"        assertEquals(expectedUniqueMemberList, uniqueMemberList);","lastModifiedDate":"2023-10-02"},{"lineNumber":83,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":84,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":85,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":86,"author":{"gitId":"wr1159"},"content":"    public void setMember_editedMemberHasSameIdentity_success() {","lastModifiedDate":"2023-10-02"},{"lineNumber":87,"author":{"gitId":"wr1159"},"content":"        uniqueMemberList.add(ALICE);","lastModifiedDate":"2023-10-02"},{"lineNumber":88,"author":{"gitId":"wr1159"},"content":"        Member editedAlice \u003d new MemberBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-02"},{"lineNumber":89,"author":{"gitId":"wr1159"},"content":"                .build();","lastModifiedDate":"2023-10-02"},{"lineNumber":90,"author":{"gitId":"wr1159"},"content":"        uniqueMemberList.setMember(ALICE, editedAlice);","lastModifiedDate":"2023-10-02"},{"lineNumber":91,"author":{"gitId":"wr1159"},"content":"        UniqueMemberList expectedUniqueMemberList \u003d new UniqueMemberList();","lastModifiedDate":"2023-10-02"},{"lineNumber":92,"author":{"gitId":"wr1159"},"content":"        expectedUniqueMemberList.add(editedAlice);","lastModifiedDate":"2023-10-02"},{"lineNumber":93,"author":{"gitId":"wr1159"},"content":"        assertEquals(expectedUniqueMemberList, uniqueMemberList);","lastModifiedDate":"2023-10-02"},{"lineNumber":94,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":95,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":96,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":97,"author":{"gitId":"wr1159"},"content":"    public void setMember_editedMemberHasDifferentIdentity_success() {","lastModifiedDate":"2023-10-02"},{"lineNumber":98,"author":{"gitId":"wr1159"},"content":"        uniqueMemberList.add(ALICE);","lastModifiedDate":"2023-10-02"},{"lineNumber":99,"author":{"gitId":"wr1159"},"content":"        uniqueMemberList.setMember(ALICE, BOB);","lastModifiedDate":"2023-10-02"},{"lineNumber":100,"author":{"gitId":"wr1159"},"content":"        UniqueMemberList expectedUniqueMemberList \u003d new UniqueMemberList();","lastModifiedDate":"2023-10-02"},{"lineNumber":101,"author":{"gitId":"wr1159"},"content":"        expectedUniqueMemberList.add(BOB);","lastModifiedDate":"2023-10-02"},{"lineNumber":102,"author":{"gitId":"wr1159"},"content":"        assertEquals(expectedUniqueMemberList, uniqueMemberList);","lastModifiedDate":"2023-10-02"},{"lineNumber":103,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":104,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":105,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":106,"author":{"gitId":"wr1159"},"content":"    public void setMember_editedMemberHasNonUniqueIdentity_throwsDuplicateMemberException() {","lastModifiedDate":"2023-10-02"},{"lineNumber":107,"author":{"gitId":"wr1159"},"content":"        uniqueMemberList.add(ALICE);","lastModifiedDate":"2023-10-02"},{"lineNumber":108,"author":{"gitId":"wr1159"},"content":"        uniqueMemberList.add(BOB);","lastModifiedDate":"2023-10-02"},{"lineNumber":109,"author":{"gitId":"wr1159"},"content":"        assertThrows(DuplicateMemberException.class, () -\u003e uniqueMemberList.setMember(ALICE, BOB));","lastModifiedDate":"2023-10-02"},{"lineNumber":110,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":111,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":112,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":113,"author":{"gitId":"wr1159"},"content":"    public void remove_nullMember_throwsNullPointerException() {","lastModifiedDate":"2023-10-02"},{"lineNumber":114,"author":{"gitId":"wr1159"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMemberList.remove(null));","lastModifiedDate":"2023-10-02"},{"lineNumber":115,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":116,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":117,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":118,"author":{"gitId":"wr1159"},"content":"    public void remove_memberDoesNotExist_throwsMemberNotFoundException() {","lastModifiedDate":"2023-10-02"},{"lineNumber":119,"author":{"gitId":"wr1159"},"content":"        assertThrows(MemberNotFoundException.class, () -\u003e uniqueMemberList.remove(ALICE));","lastModifiedDate":"2023-10-02"},{"lineNumber":120,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":121,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":122,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":123,"author":{"gitId":"wr1159"},"content":"    public void remove_existingMember_removesMember() {","lastModifiedDate":"2023-10-02"},{"lineNumber":124,"author":{"gitId":"wr1159"},"content":"        uniqueMemberList.add(ALICE);","lastModifiedDate":"2023-10-02"},{"lineNumber":125,"author":{"gitId":"wr1159"},"content":"        uniqueMemberList.remove(ALICE);","lastModifiedDate":"2023-10-02"},{"lineNumber":126,"author":{"gitId":"wr1159"},"content":"        UniqueMemberList expectedUniqueMemberList \u003d new UniqueMemberList();","lastModifiedDate":"2023-10-02"},{"lineNumber":127,"author":{"gitId":"wr1159"},"content":"        assertEquals(expectedUniqueMemberList, uniqueMemberList);","lastModifiedDate":"2023-10-02"},{"lineNumber":128,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":129,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":130,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":131,"author":{"gitId":"wr1159"},"content":"    public void setMembers_nullUniqueMemberList_throwsNullPointerException() {","lastModifiedDate":"2023-10-02"},{"lineNumber":132,"author":{"gitId":"wr1159"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMemberList.setMembers((UniqueMemberList) null));","lastModifiedDate":"2023-10-02"},{"lineNumber":133,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":134,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":135,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":136,"author":{"gitId":"wr1159"},"content":"    public void setMembers_uniqueMemberList_replacesOwnListWithProvidedUniqueMemberList() {","lastModifiedDate":"2023-10-02"},{"lineNumber":137,"author":{"gitId":"wr1159"},"content":"        uniqueMemberList.add(ALICE);","lastModifiedDate":"2023-10-02"},{"lineNumber":138,"author":{"gitId":"wr1159"},"content":"        UniqueMemberList expectedUniqueMemberList \u003d new UniqueMemberList();","lastModifiedDate":"2023-10-02"},{"lineNumber":139,"author":{"gitId":"wr1159"},"content":"        expectedUniqueMemberList.add(BOB);","lastModifiedDate":"2023-10-02"},{"lineNumber":140,"author":{"gitId":"wr1159"},"content":"        uniqueMemberList.setMembers(expectedUniqueMemberList);","lastModifiedDate":"2023-10-02"},{"lineNumber":141,"author":{"gitId":"wr1159"},"content":"        assertEquals(expectedUniqueMemberList, uniqueMemberList);","lastModifiedDate":"2023-10-02"},{"lineNumber":142,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":143,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":144,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":145,"author":{"gitId":"wr1159"},"content":"    public void setMembers_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-10-02"},{"lineNumber":146,"author":{"gitId":"wr1159"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueMemberList.setMembers((List\u003cMember\u003e) null));","lastModifiedDate":"2023-10-02"},{"lineNumber":147,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":148,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":149,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":150,"author":{"gitId":"wr1159"},"content":"    public void setMembers_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-10-02"},{"lineNumber":151,"author":{"gitId":"wr1159"},"content":"        uniqueMemberList.add(ALICE);","lastModifiedDate":"2023-10-02"},{"lineNumber":152,"author":{"gitId":"wr1159"},"content":"        List\u003cMember\u003e memberList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2023-10-02"},{"lineNumber":153,"author":{"gitId":"wr1159"},"content":"        uniqueMemberList.setMembers(memberList);","lastModifiedDate":"2023-10-02"},{"lineNumber":154,"author":{"gitId":"wr1159"},"content":"        UniqueMemberList expectedUniqueMemberList \u003d new UniqueMemberList();","lastModifiedDate":"2023-10-02"},{"lineNumber":155,"author":{"gitId":"wr1159"},"content":"        expectedUniqueMemberList.add(BOB);","lastModifiedDate":"2023-10-02"},{"lineNumber":156,"author":{"gitId":"wr1159"},"content":"        assertEquals(expectedUniqueMemberList, uniqueMemberList);","lastModifiedDate":"2023-10-02"},{"lineNumber":157,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":158,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":159,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":160,"author":{"gitId":"wr1159"},"content":"    public void setMembers_listWithDuplicateMembers_throwsDuplicateMembersException() {","lastModifiedDate":"2023-10-02"},{"lineNumber":161,"author":{"gitId":"wr1159"},"content":"        List\u003cMember\u003e listWithDuplicateMembers \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2023-10-02"},{"lineNumber":162,"author":{"gitId":"wr1159"},"content":"        assertThrows(DuplicateMemberException.class, () -\u003e uniqueMemberList.setMembers(listWithDuplicateMembers));","lastModifiedDate":"2023-10-02"},{"lineNumber":163,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":164,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":165,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":166,"author":{"gitId":"wr1159"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-02"},{"lineNumber":167,"author":{"gitId":"wr1159"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-10-02"},{"lineNumber":168,"author":{"gitId":"wr1159"},"content":"            -\u003e uniqueMemberList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-10-02"},{"lineNumber":169,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":170,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":171,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-02"},{"lineNumber":172,"author":{"gitId":"wr1159"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-02"},{"lineNumber":173,"author":{"gitId":"wr1159"},"content":"        assertEquals(uniqueMemberList.asUnmodifiableObservableList().toString(), uniqueMemberList.toString());","lastModifiedDate":"2023-10-02"},{"lineNumber":174,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":175,"author":{"gitId":"wr1159"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"wr1159":166,"andrechuakj":9}},{"path":"src/test/java/seedu/ccacommander/model/shared/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model.shared;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Name name \u003d new Name(\"Valid Name\");","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(new Name(\"Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(new Name(\"Other Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"andrechuakj":2,"-":58}},{"path":"src/test/java/seedu/ccacommander/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model.tag;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"andrechuakj":2,"-":24}},{"path":"src/test/java/seedu/ccacommander/model/util/SampleDataUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.model.util;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"wr1159"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.model.util.SampleDataUtil.getSampleCcaCommander;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.model.util.SampleDataUtil.getSampleEvents;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.model.util.SampleDataUtil.getSampleMembers;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.model.util.SampleDataUtil.getTagSet;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"wr1159"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"wr1159"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.CcaCommander;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.Event;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.EventDate;","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.Location;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Address;","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Email;","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Gender;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Member;","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Phone;","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.shared.Name;","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"wr1159"},"content":"class SampleDataUtilTest {","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"wr1159"},"content":"    void getSampleMembers_returnsValidMembers() {","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"wr1159"},"content":"        Member[] sampleMembers \u003d getSampleMembers();","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"andrechuakj"},"content":"        Member alex \u003d new Member(new Name(\"Alex Yeoh\"),","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"andrechuakj"},"content":"                new Gender(\"Male\"),","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"andrechuakj"},"content":"                Optional.of(new Phone(\"87438807\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"andrechuakj"},"content":"                Optional.of(new Email(\"alexyeoh@example.com\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"andrechuakj"},"content":"                Optional.of(new Address(\"Blk 30 Geylang Street 29, #06-40\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"wr1159"},"content":"                getTagSet(\"friends\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"andrechuakj"},"content":"        Member bernice \u003d new Member(new Name(\"Bernice Yu\"),","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"andrechuakj"},"content":"                new Gender(\"Female\"),","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"andrechuakj"},"content":"                Optional.of(new Phone(\"99272758\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"andrechuakj"},"content":"                Optional.of(new Email(\"berniceyu@example.com\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"andrechuakj"},"content":"                Optional.of(new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"wr1159"},"content":"                getTagSet(\"colleagues\", \"friends\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"andrechuakj"},"content":"        Member charlotte \u003d new Member(new Name(\"Charlotte Oliveiro\"),","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"andrechuakj"},"content":"                new Gender(\"Female\"),","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"andrechuakj"},"content":"                Optional.of(new Phone(\"93210283\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"andrechuakj"},"content":"                Optional.of(new Email(\"charlotte@example.com\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"andrechuakj"},"content":"                Optional.of(new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"wr1159"},"content":"                getTagSet(\"neighbours\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"andrechuakj"},"content":"        Member david \u003d new Member(new Name(\"David Li\"),","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"andrechuakj"},"content":"                new Gender(\"Male\"),","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"andrechuakj"},"content":"                Optional.of(new Phone(\"91031282\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"andrechuakj"},"content":"                Optional.of(new Email(\"lidavid@example.com\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"andrechuakj"},"content":"                Optional.of(new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"wr1159"},"content":"                getTagSet(\"family\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"andrechuakj"},"content":"        Member irfan \u003d new Member(new Name(\"Irfan Ibrahim\"),","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"andrechuakj"},"content":"                new Gender(\"Male\"),","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"andrechuakj"},"content":"                Optional.of(new Phone(\"92492021\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"andrechuakj"},"content":"                Optional.of(new Email(\"irfan@example.com\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"andrechuakj"},"content":"                Optional.of(new Address(\"Blk 47 Tampines Street 20, #17-35\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"wr1159"},"content":"                getTagSet(\"classmates\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"andrechuakj"},"content":"        Member roy \u003d new Member(new Name(\"Roy Balakrishnan\"),","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"andrechuakj"},"content":"                new Gender(\"Male\"),","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"andrechuakj"},"content":"                Optional.of(new Phone(\"92624417\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"andrechuakj"},"content":"                Optional.of(new Email(\"royb@example.com\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"andrechuakj"},"content":"                Optional.of(new Address(\"Blk 45 Aljunied Street 85, #11-31\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"wr1159"},"content":"                getTagSet(\"colleagues\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"wr1159"},"content":"        assertTrue(Arrays.stream(sampleMembers).anyMatch(alex::equals));","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"wr1159"},"content":"        assertTrue(Arrays.stream(sampleMembers).anyMatch(bernice::equals));","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"wr1159"},"content":"        assertTrue(Arrays.stream(sampleMembers).anyMatch(charlotte::equals));","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"wr1159"},"content":"        assertTrue(Arrays.stream(sampleMembers).anyMatch(david::equals));","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"wr1159"},"content":"        assertTrue(Arrays.stream(sampleMembers).anyMatch(irfan::equals));","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"wr1159"},"content":"        assertTrue(Arrays.stream(sampleMembers).anyMatch(roy::equals));","lastModifiedDate":"2023-10-20"},{"lineNumber":72,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":73,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"wr1159"},"content":"    void getSampleEvents_returnsValidEvents() {","lastModifiedDate":"2023-10-20"},{"lineNumber":76,"author":{"gitId":"wr1159"},"content":"        Event[] sampleEvents \u003d getSampleEvents();","lastModifiedDate":"2023-10-20"},{"lineNumber":77,"author":{"gitId":"wr1159"},"content":"        Event aurora \u003d new Event(new Name(\"Aurora Borealis\"),","lastModifiedDate":"2023-10-20"},{"lineNumber":78,"author":{"gitId":"wr1159"},"content":"                new EventDate(\"2023-11-30\"), new Location(\"Greenland\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"wr1159"},"content":"                getTagSet(\"nature\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"wr1159"},"content":"        Event boxing \u003d new Event(new Name(\"Boxing Day\"),","lastModifiedDate":"2023-10-20"},{"lineNumber":81,"author":{"gitId":"wr1159"},"content":"                new EventDate(\"2023-12-26\"), new Location(\"Ridge View Residential College\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"wr1159"},"content":"                getTagSet(\"rvrc\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":83,"author":{"gitId":"wr1159"},"content":"        Event cny \u003d new Event(new Name(\"Chinese New Year\"),","lastModifiedDate":"2023-10-20"},{"lineNumber":84,"author":{"gitId":"wr1159"},"content":"                new EventDate(\"2024-02-10\"), new Location(\"Communal Hall\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":85,"author":{"gitId":"wr1159"},"content":"                getTagSet(\"holiday\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":86,"author":{"gitId":"wr1159"},"content":"        Event dog \u003d new Event(new Name(\"Dog Day\"),","lastModifiedDate":"2023-10-20"},{"lineNumber":87,"author":{"gitId":"wr1159"},"content":"                new EventDate(\"2024-08-26\"), new Location(\"UTown Pitstop\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"wr1159"},"content":"                getTagSet(\"animals\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"wr1159"},"content":"        Event echo \u003d new Event(new Name(\"Echo Day\"),","lastModifiedDate":"2023-10-20"},{"lineNumber":90,"author":{"gitId":"wr1159"},"content":"                new EventDate(\"2023-05-05\"), new Location(\"Batu Cave\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":91,"author":{"gitId":"wr1159"},"content":"                getTagSet(\"nature\", \"overseas\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":92,"author":{"gitId":"wr1159"},"content":"        Event festival \u003d new Event(new Name(\"Festival\"),","lastModifiedDate":"2023-10-20"},{"lineNumber":93,"author":{"gitId":"wr1159"},"content":"                new EventDate(\"2023-10-05\"), new Location(\"Clementi 321\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":94,"author":{"gitId":"wr1159"},"content":"                getTagSet(\"holiday\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":95,"author":{"gitId":"wr1159"},"content":"        assertTrue(Arrays.stream(sampleEvents).anyMatch(aurora::equals));","lastModifiedDate":"2023-10-20"},{"lineNumber":96,"author":{"gitId":"wr1159"},"content":"        assertTrue(Arrays.stream(sampleEvents).anyMatch(boxing::equals));","lastModifiedDate":"2023-10-20"},{"lineNumber":97,"author":{"gitId":"wr1159"},"content":"        assertTrue(Arrays.stream(sampleEvents).anyMatch(cny::equals));","lastModifiedDate":"2023-10-20"},{"lineNumber":98,"author":{"gitId":"wr1159"},"content":"        assertTrue(Arrays.stream(sampleEvents).anyMatch(dog::equals));","lastModifiedDate":"2023-10-20"},{"lineNumber":99,"author":{"gitId":"wr1159"},"content":"        assertTrue(Arrays.stream(sampleEvents).anyMatch(echo::equals));","lastModifiedDate":"2023-10-20"},{"lineNumber":100,"author":{"gitId":"wr1159"},"content":"        assertTrue(Arrays.stream(sampleEvents).anyMatch(festival::equals));","lastModifiedDate":"2023-10-20"},{"lineNumber":101,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":102,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":103,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":104,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":105,"author":{"gitId":"andrechuakj"},"content":"    void getSampleCcaCommander_returnsValidMembersAndEvents() {","lastModifiedDate":"2023-10-21"},{"lineNumber":106,"author":{"gitId":"andrechuakj"},"content":"        Member alex \u003d new Member(new Name(\"Alex Yeoh\"),","lastModifiedDate":"2023-10-30"},{"lineNumber":107,"author":{"gitId":"andrechuakj"},"content":"                new Gender(\"Male\"),","lastModifiedDate":"2023-10-30"},{"lineNumber":108,"author":{"gitId":"andrechuakj"},"content":"                Optional.of(new Phone(\"87438807\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":109,"author":{"gitId":"andrechuakj"},"content":"                Optional.of(new Email(\"alexyeoh@example.com\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":110,"author":{"gitId":"andrechuakj"},"content":"                Optional.of(new Address(\"Blk 30 Geylang Street 29, #06-40\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":111,"author":{"gitId":"wr1159"},"content":"                getTagSet(\"friends\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":112,"author":{"gitId":"andrechuakj"},"content":"        Member bernice \u003d new Member(new Name(\"Bernice Yu\"),","lastModifiedDate":"2023-10-30"},{"lineNumber":113,"author":{"gitId":"andrechuakj"},"content":"                new Gender(\"Female\"),","lastModifiedDate":"2023-10-30"},{"lineNumber":114,"author":{"gitId":"andrechuakj"},"content":"                Optional.of(new Phone(\"99272758\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":115,"author":{"gitId":"andrechuakj"},"content":"                Optional.of(new Email(\"berniceyu@example.com\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":116,"author":{"gitId":"andrechuakj"},"content":"                Optional.of(new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":117,"author":{"gitId":"wr1159"},"content":"                getTagSet(\"colleagues\", \"friends\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":118,"author":{"gitId":"andrechuakj"},"content":"        Member charlotte \u003d new Member(new Name(\"Charlotte Oliveiro\"),","lastModifiedDate":"2023-10-30"},{"lineNumber":119,"author":{"gitId":"andrechuakj"},"content":"                new Gender(\"Female\"),","lastModifiedDate":"2023-10-30"},{"lineNumber":120,"author":{"gitId":"andrechuakj"},"content":"                Optional.of(new Phone(\"93210283\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":121,"author":{"gitId":"andrechuakj"},"content":"                Optional.of(new Email(\"charlotte@example.com\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":122,"author":{"gitId":"andrechuakj"},"content":"                Optional.of(new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":123,"author":{"gitId":"wr1159"},"content":"                getTagSet(\"neighbours\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":124,"author":{"gitId":"andrechuakj"},"content":"        Member david \u003d new Member(new Name(\"David Li\"),","lastModifiedDate":"2023-10-30"},{"lineNumber":125,"author":{"gitId":"andrechuakj"},"content":"                new Gender(\"Male\"),","lastModifiedDate":"2023-10-30"},{"lineNumber":126,"author":{"gitId":"andrechuakj"},"content":"                Optional.of(new Phone(\"91031282\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":127,"author":{"gitId":"andrechuakj"},"content":"                Optional.of(new Email(\"lidavid@example.com\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":128,"author":{"gitId":"andrechuakj"},"content":"                Optional.of(new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":129,"author":{"gitId":"wr1159"},"content":"                getTagSet(\"family\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":130,"author":{"gitId":"andrechuakj"},"content":"        Member irfan \u003d new Member(new Name(\"Irfan Ibrahim\"),","lastModifiedDate":"2023-10-30"},{"lineNumber":131,"author":{"gitId":"andrechuakj"},"content":"                new Gender(\"Male\"),","lastModifiedDate":"2023-10-30"},{"lineNumber":132,"author":{"gitId":"andrechuakj"},"content":"                Optional.of(new Phone(\"92492021\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":133,"author":{"gitId":"andrechuakj"},"content":"                Optional.of(new Email(\"irfan@example.com\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":134,"author":{"gitId":"andrechuakj"},"content":"                Optional.of(new Address(\"Blk 47 Tampines Street 20, #17-35\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":135,"author":{"gitId":"wr1159"},"content":"                getTagSet(\"classmates\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":136,"author":{"gitId":"andrechuakj"},"content":"        Member roy \u003d new Member(new Name(\"Roy Balakrishnan\"),","lastModifiedDate":"2023-10-30"},{"lineNumber":137,"author":{"gitId":"andrechuakj"},"content":"                new Gender(\"Male\"),","lastModifiedDate":"2023-10-30"},{"lineNumber":138,"author":{"gitId":"andrechuakj"},"content":"                Optional.of(new Phone(\"92624417\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":139,"author":{"gitId":"andrechuakj"},"content":"                Optional.of(new Email(\"royb@example.com\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":140,"author":{"gitId":"andrechuakj"},"content":"                Optional.of(new Address(\"Blk 45 Aljunied Street 85, #11-31\")),","lastModifiedDate":"2023-10-30"},{"lineNumber":141,"author":{"gitId":"wr1159"},"content":"                getTagSet(\"colleagues\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":142,"author":{"gitId":"wr1159"},"content":"        Event aurora \u003d new Event(new Name(\"Aurora Borealis\"),","lastModifiedDate":"2023-10-20"},{"lineNumber":143,"author":{"gitId":"wr1159"},"content":"                new EventDate(\"2023-11-30\"), new Location(\"Greenland\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":144,"author":{"gitId":"wr1159"},"content":"                getTagSet(\"nature\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":145,"author":{"gitId":"wr1159"},"content":"        Event boxing \u003d new Event(new Name(\"Boxing Day\"),","lastModifiedDate":"2023-10-20"},{"lineNumber":146,"author":{"gitId":"wr1159"},"content":"                new EventDate(\"2023-12-26\"), new Location(\"Ridge View Residential College\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":147,"author":{"gitId":"wr1159"},"content":"                getTagSet(\"rvrc\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":148,"author":{"gitId":"wr1159"},"content":"        Event cny \u003d new Event(new Name(\"Chinese New Year\"),","lastModifiedDate":"2023-10-20"},{"lineNumber":149,"author":{"gitId":"wr1159"},"content":"                new EventDate(\"2024-02-10\"), new Location(\"Communal Hall\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":150,"author":{"gitId":"wr1159"},"content":"                getTagSet(\"holiday\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":151,"author":{"gitId":"wr1159"},"content":"        Event dog \u003d new Event(new Name(\"Dog Day\"),","lastModifiedDate":"2023-10-20"},{"lineNumber":152,"author":{"gitId":"wr1159"},"content":"                new EventDate(\"2024-08-26\"), new Location(\"UTown Pitstop\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":153,"author":{"gitId":"wr1159"},"content":"                getTagSet(\"animals\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":154,"author":{"gitId":"wr1159"},"content":"        Event echo \u003d new Event(new Name(\"Echo Day\"),","lastModifiedDate":"2023-10-20"},{"lineNumber":155,"author":{"gitId":"wr1159"},"content":"                new EventDate(\"2023-05-05\"), new Location(\"Batu Cave\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":156,"author":{"gitId":"wr1159"},"content":"                getTagSet(\"nature\", \"overseas\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":157,"author":{"gitId":"wr1159"},"content":"        Event festival \u003d new Event(new Name(\"Festival\"),","lastModifiedDate":"2023-10-20"},{"lineNumber":158,"author":{"gitId":"wr1159"},"content":"                new EventDate(\"2023-10-05\"), new Location(\"Clementi 321\"),","lastModifiedDate":"2023-10-23"},{"lineNumber":159,"author":{"gitId":"wr1159"},"content":"                getTagSet(\"holiday\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":160,"author":{"gitId":"andrechuakj"},"content":"        CcaCommander ccaCommander \u003d (CcaCommander) getSampleCcaCommander();","lastModifiedDate":"2023-10-21"},{"lineNumber":161,"author":{"gitId":"andrechuakj"},"content":"        assertTrue(ccaCommander.hasMember(alex));","lastModifiedDate":"2023-10-21"},{"lineNumber":162,"author":{"gitId":"andrechuakj"},"content":"        assertTrue(ccaCommander.hasMember(bernice));","lastModifiedDate":"2023-10-21"},{"lineNumber":163,"author":{"gitId":"andrechuakj"},"content":"        assertTrue(ccaCommander.hasMember(charlotte));","lastModifiedDate":"2023-10-21"},{"lineNumber":164,"author":{"gitId":"andrechuakj"},"content":"        assertTrue(ccaCommander.hasMember(david));","lastModifiedDate":"2023-10-21"},{"lineNumber":165,"author":{"gitId":"andrechuakj"},"content":"        assertTrue(ccaCommander.hasMember(irfan));","lastModifiedDate":"2023-10-21"},{"lineNumber":166,"author":{"gitId":"andrechuakj"},"content":"        assertTrue(ccaCommander.hasMember(roy));","lastModifiedDate":"2023-10-21"},{"lineNumber":167,"author":{"gitId":"andrechuakj"},"content":"        assertTrue(ccaCommander.hasEvent(aurora));","lastModifiedDate":"2023-10-21"},{"lineNumber":168,"author":{"gitId":"andrechuakj"},"content":"        assertTrue(ccaCommander.hasEvent(boxing));","lastModifiedDate":"2023-10-21"},{"lineNumber":169,"author":{"gitId":"andrechuakj"},"content":"        assertTrue(ccaCommander.hasEvent(cny));","lastModifiedDate":"2023-10-21"},{"lineNumber":170,"author":{"gitId":"andrechuakj"},"content":"        assertTrue(ccaCommander.hasEvent(dog));","lastModifiedDate":"2023-10-21"},{"lineNumber":171,"author":{"gitId":"andrechuakj"},"content":"        assertTrue(ccaCommander.hasEvent(echo));","lastModifiedDate":"2023-10-21"},{"lineNumber":172,"author":{"gitId":"andrechuakj"},"content":"        assertTrue(ccaCommander.hasEvent(festival));","lastModifiedDate":"2023-10-21"},{"lineNumber":173,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":174,"author":{"gitId":"wr1159"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"wr1159":84,"andrechuakj":90}},{"path":"src/test/java/seedu/ccacommander/storage/JsonAdaptedEnrolmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dylkaw"},"content":"package seedu.ccacommander.storage;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"dylkaw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.storage.JsonAdaptedEnrolment.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalEnrolments.ALICE_AURORA;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"dylkaw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.enrolment.Hours;","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.enrolment.Remark;","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.model.shared.Name;","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":"public class JsonAdaptedEnrolmentTest {","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"dylkaw"},"content":"    private static final String MEMBER_NAME \u003d \"memberName\";","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"dylkaw"},"content":"    private static final String EVENT_NAME \u003d \"eventName\";","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"dylkaw"},"content":"    private static final String INVALID_MEMBER_NAME \u003d \"@lice\";","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"dylkaw"},"content":"    private static final String INVALID_EVENT_NAME \u003d \"@urora\";","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"dylkaw"},"content":"    private static final String INVALID_HOURS \u003d \"-1\";","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"dylkaw"},"content":"    private static final String INVALID_REMARK \u003d \" \";","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"dylkaw"},"content":"    private static final String VALID_MEMBER_NAME \u003d ALICE_AURORA.getMemberName().toString();","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"dylkaw"},"content":"    private static final String VALID_EVENT_NAME \u003d ALICE_AURORA.getEventName().toString();","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"dylkaw"},"content":"    private static final String VALID_HOURS \u003d ALICE_AURORA.getHours().value.toString();","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"dylkaw"},"content":"    private static final String VALID_REMARK \u003d ALICE_AURORA.getRemark().toString();","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"andrechuakj"},"content":"    public void toModelType_validEnrolmentDetails_returnsEnrolment() throws Exception {","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"andrechuakj"},"content":"        JsonAdaptedEnrolment enrolment \u003d new JsonAdaptedEnrolment(ALICE_AURORA);","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"andrechuakj"},"content":"        assertEquals(ALICE_AURORA, enrolment.toModelType());","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"dylkaw"},"content":"    public void toModelType_invalidMemberName_throwsIllegalValueException() {","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"andrechuakj"},"content":"        JsonAdaptedEnrolment enrolment \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"andrechuakj"},"content":"                new JsonAdaptedEnrolment(INVALID_MEMBER_NAME, VALID_EVENT_NAME, VALID_HOURS, VALID_REMARK);","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"dylkaw"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"andrechuakj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, enrolment::toModelType);","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"dylkaw"},"content":"    public void toModelType_nullMemberName_throwsIllegalValueException() {","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"andrechuakj"},"content":"        JsonAdaptedEnrolment enrolment \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"andrechuakj"},"content":"                new JsonAdaptedEnrolment(null, VALID_EVENT_NAME, VALID_HOURS, VALID_REMARK);","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"dylkaw"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, MEMBER_NAME);","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"andrechuakj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, enrolment::toModelType);","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"dylkaw"},"content":"    public void toModelType_invalidEventName_throwsIllegalValueException() {","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"andrechuakj"},"content":"        JsonAdaptedEnrolment enrolment \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"andrechuakj"},"content":"                new JsonAdaptedEnrolment(VALID_MEMBER_NAME, INVALID_EVENT_NAME, VALID_HOURS, VALID_REMARK);","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"dylkaw"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"andrechuakj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, enrolment::toModelType);","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"dylkaw"},"content":"    public void toModelType_nullEventName_throwsIllegalValueException() {","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"andrechuakj"},"content":"        JsonAdaptedEnrolment enrolment \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"andrechuakj"},"content":"                new JsonAdaptedEnrolment(VALID_MEMBER_NAME, null, VALID_HOURS, VALID_REMARK);","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"dylkaw"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, EVENT_NAME);","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"andrechuakj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, enrolment::toModelType);","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"dylkaw"},"content":"    public void toModelType_invalidHours_throwsIllegalValueException() {","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"andrechuakj"},"content":"        JsonAdaptedEnrolment enrolment \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":68,"author":{"gitId":"andrechuakj"},"content":"                new JsonAdaptedEnrolment(VALID_MEMBER_NAME, VALID_EVENT_NAME, INVALID_HOURS, VALID_REMARK);","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"dylkaw"},"content":"        String expectedMessage \u003d Hours.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"andrechuakj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, enrolment::toModelType);","lastModifiedDate":"2023-10-28"},{"lineNumber":71,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"dylkaw"},"content":"    public void toModelType_nullHours_throwsIllegalValueException() {","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"andrechuakj"},"content":"        JsonAdaptedEnrolment enrolment \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":76,"author":{"gitId":"andrechuakj"},"content":"                new JsonAdaptedEnrolment(VALID_MEMBER_NAME, VALID_EVENT_NAME, null, VALID_REMARK);","lastModifiedDate":"2023-10-28"},{"lineNumber":77,"author":{"gitId":"dylkaw"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Hours.class.getSimpleName());","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"andrechuakj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, enrolment::toModelType);","lastModifiedDate":"2023-10-28"},{"lineNumber":79,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"dylkaw"},"content":"    public void toModelType_invalidRemark_throwsIllegalValueException() {","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"andrechuakj"},"content":"        JsonAdaptedEnrolment enrolment \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":84,"author":{"gitId":"andrechuakj"},"content":"                new JsonAdaptedEnrolment(VALID_MEMBER_NAME, VALID_EVENT_NAME, VALID_HOURS, INVALID_REMARK);","lastModifiedDate":"2023-10-28"},{"lineNumber":85,"author":{"gitId":"dylkaw"},"content":"        String expectedMessage \u003d Remark.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"andrechuakj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, enrolment::toModelType);","lastModifiedDate":"2023-10-28"},{"lineNumber":87,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"dylkaw"},"content":"    public void toModelType_nullRemark_throwsIllegalValueException() {","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"andrechuakj"},"content":"        JsonAdaptedEnrolment enrolment \u003d","lastModifiedDate":"2023-10-28"},{"lineNumber":92,"author":{"gitId":"andrechuakj"},"content":"                new JsonAdaptedEnrolment(VALID_MEMBER_NAME, VALID_EVENT_NAME, VALID_HOURS, null);","lastModifiedDate":"2023-10-28"},{"lineNumber":93,"author":{"gitId":"dylkaw"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName());","lastModifiedDate":"2023-10-24"},{"lineNumber":94,"author":{"gitId":"andrechuakj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, enrolment::toModelType);","lastModifiedDate":"2023-10-28"},{"lineNumber":95,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":96,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":97,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":98,"author":{"gitId":"dylkaw"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"andrechuakj":32,"dylkaw":66}},{"path":"src/test/java/seedu/ccacommander/storage/JsonAdaptedEventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.storage;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"wr1159"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.storage.JsonAdaptedEvent.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalEvents.AURORA_BOREALIS;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"wr1159"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"wr1159"},"content":"import java.util.List;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"wr1159"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"wr1159"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.EventDate;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.Location;","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.shared.Name;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"wr1159"},"content":"public class JsonAdaptedEventTest {","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"wr1159"},"content":"    private static final String INVALID_NAME \u003d \"µ@18Tur\";","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"wr1159"},"content":"    private static final String INVALID_DATE \u003d \"20/12/12\";","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"wr1159"},"content":"    private static final String INVALID_LOCATION \u003d \" \";","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"wr1159"},"content":"    private static final String INVALID_TAG \u003d \"#nature\";","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"wr1159"},"content":"    private static final String VALID_NAME \u003d AURORA_BOREALIS.getName().toString();","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"wr1159"},"content":"    private static final String VALID_DATE \u003d AURORA_BOREALIS.getDate().toString();","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"wr1159"},"content":"    private static final String VALID_LOCATION \u003d AURORA_BOREALIS.getLocation().value;","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"wr1159"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d AURORA_BOREALIS.getTags().stream()","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"wr1159"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"wr1159"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"wr1159"},"content":"    public void toModelType_validEventDetails_returnsEvent() throws Exception {","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"wr1159"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(AURORA_BOREALIS);","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"wr1159"},"content":"        assertEquals(AURORA_BOREALIS, event.toModelType());","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"wr1159"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"wr1159"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"wr1159"},"content":"                new JsonAdaptedEvent(INVALID_NAME, VALID_DATE, VALID_LOCATION, VALID_TAGS);","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"dylkaw"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"wr1159"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"wr1159"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"wr1159"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(null, VALID_DATE, VALID_LOCATION, VALID_TAGS);","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"dylkaw"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"wr1159"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":52,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"wr1159"},"content":"    public void toModelType_invalidDate_throwsIllegalValueException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"wr1159"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(VALID_NAME, INVALID_DATE, VALID_LOCATION, VALID_TAGS);","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"wr1159"},"content":"        String expectedMessage \u003d EventDate.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"wr1159"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"wr1159"},"content":"    public void toModelType_nullDate_throwsIllegalValueException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"wr1159"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(VALID_NAME, null, VALID_LOCATION, VALID_TAGS);","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"wr1159"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, EventDate.class.getSimpleName());","lastModifiedDate":"2023-10-11"},{"lineNumber":63,"author":{"gitId":"wr1159"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2023-10-11"},{"lineNumber":64,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":65,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":66,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":67,"author":{"gitId":"wr1159"},"content":"    public void toModelType_invalidLocation_throwsIllegalValueException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":68,"author":{"gitId":"wr1159"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(VALID_NAME, VALID_DATE, INVALID_LOCATION, VALID_TAGS);","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"wr1159"},"content":"        String expectedMessage \u003d Location.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-11"},{"lineNumber":70,"author":{"gitId":"wr1159"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2023-10-11"},{"lineNumber":71,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":72,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":73,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":74,"author":{"gitId":"wr1159"},"content":"    public void toModelType_nullLocation_throwsIllegalValueException() {","lastModifiedDate":"2023-10-11"},{"lineNumber":75,"author":{"gitId":"wr1159"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(VALID_NAME, VALID_DATE, null, VALID_TAGS);","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"wr1159"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Location.class.getSimpleName());","lastModifiedDate":"2023-10-11"},{"lineNumber":77,"author":{"gitId":"wr1159"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2023-10-11"},{"lineNumber":78,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":79,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":80,"author":{"gitId":"wr1159"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":81,"author":{"gitId":"wr1159"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"wr1159"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2023-10-23"},{"lineNumber":83,"author":{"gitId":"wr1159"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2023-10-23"},{"lineNumber":84,"author":{"gitId":"wr1159"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":85,"author":{"gitId":"wr1159"},"content":"                new JsonAdaptedEvent(VALID_NAME, VALID_DATE, VALID_LOCATION, invalidTags);","lastModifiedDate":"2023-10-23"},{"lineNumber":86,"author":{"gitId":"wr1159"},"content":"        assertThrows(IllegalValueException.class, event::toModelType);","lastModifiedDate":"2023-10-23"},{"lineNumber":87,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":90,"author":{"gitId":"wr1159"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"wr1159":80,"andrechuakj":8,"dylkaw":2}},{"path":"src/test/java/seedu/ccacommander/storage/JsonAdaptedMemberTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.storage;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.storage.JsonAdaptedMember.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalMembers.BENSON;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Address;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Email;","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Gender;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Phone;","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.shared.Name;","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"wr1159"},"content":"public class JsonAdaptedMemberTest {","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"andrechuakj"},"content":"    private static final String INVALID_GENDER \u003d \"Helicopter\";","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"andrechuakj"},"content":"    private static final String VALID_GENDER \u003d BENSON.getGender().toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"wr1159"},"content":"    public void toModelType_validMemberDetails_returnsMember() throws Exception {","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"wr1159"},"content":"        JsonAdaptedMember member \u003d new JsonAdaptedMember(BENSON);","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"wr1159"},"content":"        assertEquals(BENSON, member.toModelType());","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"wr1159"},"content":"        JsonAdaptedMember member \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"andrechuakj"},"content":"                new JsonAdaptedMember(INVALID_NAME, VALID_GENDER, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"wr1159"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, member::toModelType);","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"andrechuakj"},"content":"        JsonAdaptedMember member \u003d new JsonAdaptedMember(null, VALID_GENDER, VALID_PHONE,","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"andrechuakj"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"wr1159"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, member::toModelType);","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"andrechuakj"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"andrechuakj"},"content":"    public void toModelType_invalidGender_throwsIllegalValueException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"andrechuakj"},"content":"        JsonAdaptedMember member \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"andrechuakj"},"content":"                new JsonAdaptedMember(VALID_NAME, INVALID_GENDER, VALID_PHONE,","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"andrechuakj"},"content":"                        VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"andrechuakj"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"andrechuakj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, member::toModelType);","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"andrechuakj"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"andrechuakj"},"content":"    public void toModelType_nullGender_throwsIllegalValueException() {","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"andrechuakj"},"content":"        JsonAdaptedMember member \u003d new JsonAdaptedMember(VALID_NAME, null, VALID_PHONE,","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"andrechuakj"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"andrechuakj"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Gender.class.getSimpleName());","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"andrechuakj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, member::toModelType);","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"wr1159"},"content":"        JsonAdaptedMember member \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"andrechuakj"},"content":"                new JsonAdaptedMember(VALID_NAME, VALID_GENDER, INVALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"andrechuakj"},"content":"                        VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"wr1159"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, member::toModelType);","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"andrechuakj"},"content":"        JsonAdaptedMember member \u003d new JsonAdaptedMember(VALID_NAME, VALID_GENDER, null, VALID_EMAIL,","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"andrechuakj"},"content":"                VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"wr1159"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, member::toModelType);","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"wr1159"},"content":"        JsonAdaptedMember member \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"andrechuakj"},"content":"                new JsonAdaptedMember(VALID_NAME, VALID_GENDER, VALID_PHONE, INVALID_EMAIL,","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"andrechuakj"},"content":"                        VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"wr1159"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, member::toModelType);","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"andrechuakj"},"content":"        JsonAdaptedMember member \u003d new JsonAdaptedMember(VALID_NAME, VALID_GENDER, VALID_PHONE, null,","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"andrechuakj"},"content":"                VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"wr1159"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, member::toModelType);","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"wr1159"},"content":"        JsonAdaptedMember member \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"andrechuakj"},"content":"                new JsonAdaptedMember(VALID_NAME, VALID_GENDER, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"andrechuakj"},"content":"                        INVALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"wr1159"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, member::toModelType);","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"andrechuakj"},"content":"        JsonAdaptedMember member \u003d new JsonAdaptedMember(VALID_NAME, VALID_GENDER, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"andrechuakj"},"content":"                null, VALID_TAGS);","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"wr1159"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, member::toModelType);","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"wr1159"},"content":"        JsonAdaptedMember member \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"andrechuakj"},"content":"                new JsonAdaptedMember(VALID_NAME, VALID_GENDER, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags);","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"wr1159"},"content":"        assertThrows(IllegalValueException.class, member::toModelType);","lastModifiedDate":"2023-10-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"wr1159":18,"andrechuakj":45,"-":74}},{"path":"src/test/java/seedu/ccacommander/storage/JsonCcaCommanderStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.storage;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalCcaCommander.getTypicalCcaCommander;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalMembers.ALICE;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalMembers.HOON;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalMembers.IDA;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.CcaCommander;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.ReadOnlyCcaCommander;","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"andrechuakj"},"content":"public class JsonCcaCommanderStorageTest {","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"andrechuakj"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonCcaCommanderStorageTest\");","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"andrechuakj"},"content":"    public void readCcaCommander_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"andrechuakj"},"content":"        assertThrows(NullPointerException.class, () -\u003e readCcaCommander(null));","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"andrechuakj"},"content":"    private java.util.Optional\u003cReadOnlyCcaCommander\u003e readCcaCommander(String filePath) throws Exception {","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"andrechuakj"},"content":"        return new JsonCcaCommanderStorage(Paths.get(filePath)).readCcaCommander(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"andrechuakj"},"content":"        assertFalse(readCcaCommander(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"andrechuakj"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readCcaCommander(\"notJsonFormatCcaCommander.json\"));","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"andrechuakj"},"content":"    public void readCcaCommander_invalidMemberCcaCommander_throwDataLoadingException() {","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"andrechuakj"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readCcaCommander(\"invalidMemberCcaCommander.json\"));","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"andrechuakj"},"content":"    public void readCcaCommander_invalidAndValidMemberCcaCommander_throwDataLoadingException() {","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"andrechuakj"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readCcaCommander(\"invalidAndValidMemberCcaCommander.json\"));","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"andrechuakj"},"content":"    public void readAndSaveCcaCommander_allInOrder_success() throws Exception {","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"andrechuakj"},"content":"        Path filePath \u003d testFolder.resolve(\"TempCcaCommander.json\");","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"andrechuakj"},"content":"        CcaCommander original \u003d getTypicalCcaCommander();","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"andrechuakj"},"content":"        JsonCcaCommanderStorage jsonCcaCommanderStorage \u003d new JsonCcaCommanderStorage(filePath);","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"ph-nathan"},"content":"        // Ensure there is a file path","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"andrechuakj"},"content":"        assertNotNull(jsonCcaCommanderStorage.getCcaCommanderFilePath());","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"andrechuakj"},"content":"        jsonCcaCommanderStorage.saveCcaCommander(original, filePath);","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"andrechuakj"},"content":"        ReadOnlyCcaCommander readBack \u003d jsonCcaCommanderStorage.readCcaCommander(filePath).get();","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"andrechuakj"},"content":"        assertEquals(original, new CcaCommander(readBack));","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"dylkaw"},"content":"        original.createMember(HOON);","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"wr1159"},"content":"        original.removeMember(ALICE);","lastModifiedDate":"2023-10-02"},{"lineNumber":81,"author":{"gitId":"andrechuakj"},"content":"        jsonCcaCommanderStorage.saveCcaCommander(original, filePath);","lastModifiedDate":"2023-10-21"},{"lineNumber":82,"author":{"gitId":"andrechuakj"},"content":"        readBack \u003d jsonCcaCommanderStorage.readCcaCommander(filePath).get();","lastModifiedDate":"2023-10-21"},{"lineNumber":83,"author":{"gitId":"andrechuakj"},"content":"        assertEquals(original, new CcaCommander(readBack));","lastModifiedDate":"2023-10-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"dylkaw"},"content":"        original.createMember(IDA);","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"andrechuakj"},"content":"        jsonCcaCommanderStorage.saveCcaCommander(original); // file path not specified","lastModifiedDate":"2023-10-21"},{"lineNumber":88,"author":{"gitId":"andrechuakj"},"content":"        readBack \u003d jsonCcaCommanderStorage.readCcaCommander().get(); // file path not specified","lastModifiedDate":"2023-10-21"},{"lineNumber":89,"author":{"gitId":"andrechuakj"},"content":"        assertEquals(original, new CcaCommander(readBack));","lastModifiedDate":"2023-10-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"andrechuakj"},"content":"    public void saveCcaCommander_nullCcaCommander_throwsNullPointerException() {","lastModifiedDate":"2023-10-21"},{"lineNumber":95,"author":{"gitId":"andrechuakj"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveCcaCommander(null, \"SomeFile.json\"));","lastModifiedDate":"2023-10-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"andrechuakj"},"content":"     * Saves {@code ccaCommander} at the specified {@code filePath}.","lastModifiedDate":"2023-10-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"andrechuakj"},"content":"    private void saveCcaCommander(ReadOnlyCcaCommander ccaCommander, String filePath) {","lastModifiedDate":"2023-10-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"andrechuakj"},"content":"            new JsonCcaCommanderStorage(Paths.get(filePath))","lastModifiedDate":"2023-10-21"},{"lineNumber":104,"author":{"gitId":"andrechuakj"},"content":"                    .saveCcaCommander(ccaCommander, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-10-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"andrechuakj"},"content":"    public void saveCcaCommander_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-10-21"},{"lineNumber":112,"author":{"gitId":"andrechuakj"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveCcaCommander(new CcaCommander(), null));","lastModifiedDate":"2023-10-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"wr1159":1,"andrechuakj":43,"dylkaw":2,"ph-nathan":5,"-":63}},{"path":"src/test/java/seedu/ccacommander/storage/JsonSerializableCcaCommanderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.storage;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalCcaCommander.getTypicalEnrolmentCcaCommander;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.testutil.TypicalCcaCommander.getTypicalEventCcaCommander;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"dylkaw"},"content":"import static seedu.ccacommander.testutil.TypicalCcaCommander.getTypicalMemberCcaCommander;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.util.JsonUtil;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.CcaCommander;","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"andrechuakj"},"content":"public class JsonSerializableCcaCommanderTest {","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"andrechuakj"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableCcaCommanderTest\");","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"andrechuakj"},"content":"    private static final Path TYPICAL_MEMBERS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalMembersCcaCommander.json\");","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"andrechuakj"},"content":"    private static final Path INVALID_MEMBER_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidMemberCcaCommander.json\");","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"andrechuakj"},"content":"    private static final Path DUPLICATE_MEMBER_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateMemberCcaCommander.json\");","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"andrechuakj"},"content":"    private static final Path TYPICAL_EVENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalEventsCcaCommander.json\");","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"andrechuakj"},"content":"    private static final Path INVALID_EVENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidEventCcaCommander.json\");","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"andrechuakj"},"content":"    private static final Path DUPLICATE_EVENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateEventCcaCommander.json\");","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"andrechuakj"},"content":"    private static final Path TYPICAL_ENROLMENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalEnrolmentCcaCommander.json\");","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"andrechuakj"},"content":"    private static final Path INVALID_ENROLMENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidEnrolmentCcaCommander.json\");","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"andrechuakj"},"content":"    private static final Path DUPLICATE_ENROLMENT_FILE \u003d TEST_DATA_FOLDER.resolve(","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"andrechuakj"},"content":"            \"duplicateEnrolmentCcaCommander.json\");","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"wr1159"},"content":"    public void toModelType_typicalMembersFile_success() throws Exception {","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"andrechuakj"},"content":"        JsonSerializableCcaCommander dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_MEMBERS_FILE,","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"andrechuakj"},"content":"                JsonSerializableCcaCommander.class).get();","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"andrechuakj"},"content":"        CcaCommander ccaCommanderFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"andrechuakj"},"content":"        CcaCommander typicalMembersCcaCommander \u003d getTypicalMemberCcaCommander();","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"andrechuakj"},"content":"        assertEquals(ccaCommanderFromFile, typicalMembersCcaCommander);","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"wr1159"},"content":"    public void toModelType_invalidMemberFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"andrechuakj"},"content":"        JsonSerializableCcaCommander dataFromFile \u003d JsonUtil.readJsonFile(INVALID_MEMBER_FILE,","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"andrechuakj"},"content":"                JsonSerializableCcaCommander.class).get();","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"wr1159"},"content":"    public void toModelType_duplicateMembers_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"andrechuakj"},"content":"        JsonSerializableCcaCommander dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_MEMBER_FILE,","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"andrechuakj"},"content":"                JsonSerializableCcaCommander.class).get();","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"andrechuakj"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableCcaCommander.MESSAGE_DUPLICATE_MEMBER,","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"dylkaw"},"content":"    public void toModelType_typicalEventFile_success() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"andrechuakj"},"content":"        JsonSerializableCcaCommander dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_EVENT_FILE,","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"andrechuakj"},"content":"                JsonSerializableCcaCommander.class).get();","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"andrechuakj"},"content":"        CcaCommander ccaCommanderFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"andrechuakj"},"content":"        CcaCommander typicalEventsCcaCommander \u003d getTypicalEventCcaCommander();","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"andrechuakj"},"content":"        assertEquals(ccaCommanderFromFile, typicalEventsCcaCommander);","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"dylkaw"},"content":"    public void toModelType_invalidEventFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"andrechuakj"},"content":"        JsonSerializableCcaCommander dataFromFile \u003d JsonUtil.readJsonFile(INVALID_EVENT_FILE,","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"andrechuakj"},"content":"                JsonSerializableCcaCommander.class).get();","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"dylkaw"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"dylkaw"},"content":"    public void toModelType_duplicateEvents_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"andrechuakj"},"content":"        JsonSerializableCcaCommander dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_EVENT_FILE,","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"andrechuakj"},"content":"                JsonSerializableCcaCommander.class).get();","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"andrechuakj"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableCcaCommander.MESSAGE_DUPLICATE_EVENT,","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"dylkaw"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":81,"author":{"gitId":"andrechuakj"},"content":"    public void toModelType_typicalEnrolmentFile_success() throws Exception {","lastModifiedDate":"2023-10-28"},{"lineNumber":82,"author":{"gitId":"andrechuakj"},"content":"        JsonSerializableCcaCommander dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_ENROLMENT_FILE,","lastModifiedDate":"2023-10-28"},{"lineNumber":83,"author":{"gitId":"dylkaw"},"content":"                JsonSerializableCcaCommander.class).get();","lastModifiedDate":"2023-10-23"},{"lineNumber":84,"author":{"gitId":"dylkaw"},"content":"        CcaCommander ccaCommanderFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-10-23"},{"lineNumber":85,"author":{"gitId":"andrechuakj"},"content":"        CcaCommander typicalEnrolmentCcaCommander \u003d getTypicalEnrolmentCcaCommander();","lastModifiedDate":"2023-10-28"},{"lineNumber":86,"author":{"gitId":"andrechuakj"},"content":"        assertEquals(ccaCommanderFromFile, typicalEnrolmentCcaCommander);","lastModifiedDate":"2023-10-28"},{"lineNumber":87,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":90,"author":{"gitId":"andrechuakj"},"content":"    public void toModelType_invalidEnrolmentFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-28"},{"lineNumber":91,"author":{"gitId":"andrechuakj"},"content":"        JsonSerializableCcaCommander dataFromFile \u003d JsonUtil.readJsonFile(INVALID_ENROLMENT_FILE,","lastModifiedDate":"2023-10-28"},{"lineNumber":92,"author":{"gitId":"dylkaw"},"content":"                JsonSerializableCcaCommander.class).get();","lastModifiedDate":"2023-10-23"},{"lineNumber":93,"author":{"gitId":"dylkaw"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-10-23"},{"lineNumber":94,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":95,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":96,"author":{"gitId":"dylkaw"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":97,"author":{"gitId":"andrechuakj"},"content":"    public void toModelType_duplicateEnrolment_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-28"},{"lineNumber":98,"author":{"gitId":"andrechuakj"},"content":"        JsonSerializableCcaCommander dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_ENROLMENT_FILE,","lastModifiedDate":"2023-10-28"},{"lineNumber":99,"author":{"gitId":"dylkaw"},"content":"                JsonSerializableCcaCommander.class).get();","lastModifiedDate":"2023-10-23"},{"lineNumber":100,"author":{"gitId":"andrechuakj"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableCcaCommander.MESSAGE_DUPLICATE_ENROLMENT,","lastModifiedDate":"2023-10-28"},{"lineNumber":101,"author":{"gitId":"dylkaw"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-10-23"},{"lineNumber":102,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"wr1159":3,"andrechuakj":47,"dylkaw":30,"-":23}},{"path":"src/test/java/seedu/ccacommander/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.storage;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.core.GuiSettings;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.UserPrefs;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.ui.Stylesheet;","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"ph-nathan"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100, Stylesheet.DARK.toString()));","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"andrechuakj"},"content":"        userPrefs.setCcaCommanderFilePath(Paths.get(\"ccacommander.json\"));","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"ph-nathan"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2, Stylesheet.LIGHT.toString()));","lastModifiedDate":"2023-11-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"ph-nathan"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5, Stylesheet.LIGHT.toString()));","lastModifiedDate":"2023-11-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"andrechuakj":6,"ph-nathan":4,"-":112}},{"path":"src/test/java/seedu/ccacommander/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.storage;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalCcaCommander.getTypicalCcaCommander;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.core.GuiSettings;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.CcaCommander;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.ReadOnlyCcaCommander;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.UserPrefs;","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.ui.Stylesheet;","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"andrechuakj"},"content":"        JsonCcaCommanderStorage ccaCommanderStorage \u003d new JsonCcaCommanderStorage(getTempFilePath(\"ccacommander\"));","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"andrechuakj"},"content":"        storageManager \u003d new StorageManager(ccaCommanderStorage, userPrefsStorage);","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"ph-nathan"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6, Stylesheet.LIGHT.toString()));","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"andrechuakj"},"content":"    public void ccaCommanderReadSave() throws Exception {","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"andrechuakj"},"content":"         * {@link JsonCcaCommanderStorage} class.","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"andrechuakj"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonCcaCommanderStorageTest} class.","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"andrechuakj"},"content":"        CcaCommander original \u003d getTypicalCcaCommander();","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"andrechuakj"},"content":"        storageManager.saveCcaCommander(original);","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"andrechuakj"},"content":"        ReadOnlyCcaCommander retrieved \u003d storageManager.readCcaCommander().get();","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"andrechuakj"},"content":"        assertEquals(original, new CcaCommander(retrieved));","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"andrechuakj"},"content":"    public void getCcaCommanderFilePath() {","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"andrechuakj"},"content":"        assertNotNull(storageManager.getCcaCommanderFilePath());","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"andrechuakj":17,"ph-nathan":2,"-":50}},{"path":"src/test/java/seedu/ccacommander/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.testutil;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"andrechuakj":1,"-":33}},{"path":"src/test/java/seedu/ccacommander/testutil/CcaCommanderBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.testutil;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.CcaCommander;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.Event;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Member;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"/**","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":" * A utility class to help with building CcaCommander objects.","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":" *     {@code CcaCommander cc \u003d new CcaCommanderBuilder().withMember(\"John\", \"Doe\").build();}","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":" */","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"public class CcaCommanderBuilder {","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"    private CcaCommander ccaCommander;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"andrechuakj"},"content":"    public CcaCommanderBuilder() {","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"andrechuakj"},"content":"        ccaCommander \u003d new CcaCommander();","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"andrechuakj"},"content":"    public CcaCommanderBuilder(CcaCommander ccaCommander) {","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"andrechuakj"},"content":"        this.ccaCommander \u003d ccaCommander;","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"andrechuakj"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"andrechuakj"},"content":"     * Adds a new {@code Member} to the {@code CcaCommander} that we are building.","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"andrechuakj"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"andrechuakj"},"content":"    public CcaCommanderBuilder withMember(Member member) {","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"andrechuakj"},"content":"        ccaCommander.createMember(member);","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"andrechuakj"},"content":"        return this;","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"andrechuakj"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"andrechuakj"},"content":"     * Adds a new {@code Event} to the {@code CcaCommander} that we are building.","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"andrechuakj"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"andrechuakj"},"content":"    public CcaCommanderBuilder withEvent(Event event) {","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"andrechuakj"},"content":"        ccaCommander.createEvent(event);","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"andrechuakj"},"content":"        return this;","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"andrechuakj"},"content":"    public CcaCommander build() {","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"andrechuakj"},"content":"        return ccaCommander;","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"andrechuakj"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"andrechuakj":43}},{"path":"src/test/java/seedu/ccacommander/testutil/EditEnrolmentDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dylkaw"},"content":"package seedu.ccacommander.testutil;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.logic.commands.EditEnrolmentCommand.EditEnrolmentDescriptor;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.model.enrolment.Enrolment;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.model.enrolment.Hours;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.model.enrolment.Remark;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"dylkaw"},"content":"import seedu.ccacommander.model.shared.Name;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"dylkaw"},"content":"/**","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"dylkaw"},"content":" * A utility class to help with building EditEnrolmentDescriptor objects.","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"dylkaw"},"content":" */","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"dylkaw"},"content":"public class EditEnrolmentDescriptorBuilder {","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"dylkaw"},"content":"    private EditEnrolmentDescriptor descriptor;","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"dylkaw"},"content":"    public EditEnrolmentDescriptorBuilder() {","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"dylkaw"},"content":"        descriptor \u003d new EditEnrolmentDescriptor();","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"dylkaw"},"content":"    public EditEnrolmentDescriptorBuilder(EditEnrolmentDescriptor descriptor) {","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"dylkaw"},"content":"        this.descriptor \u003d new EditEnrolmentDescriptor(descriptor);","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"dylkaw"},"content":"     * Returns an {@code EditEnrolmentDescriptor} with fields containing {@code enrolment}\u0027s details","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"dylkaw"},"content":"    public EditEnrolmentDescriptorBuilder(Enrolment enrolment) {","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"dylkaw"},"content":"        descriptor \u003d new EditEnrolmentDescriptor();","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"dylkaw"},"content":"        descriptor.setMemberName(enrolment.getMemberName());","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"dylkaw"},"content":"        descriptor.setEventName(enrolment.getEventName());","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"dylkaw"},"content":"        descriptor.setHours(enrolment.getHours());","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"dylkaw"},"content":"        descriptor.setRemark(enrolment.getRemark());","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"dylkaw"},"content":"     * Sets the {@code memberName} of the {@code EditEnrolmentDescriptor} that we are building.","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"dylkaw"},"content":"    public EditEnrolmentDescriptorBuilder withMemberName(String memberName) {","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"dylkaw"},"content":"        descriptor.setMemberName(new Name(memberName));","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"dylkaw"},"content":"        return this;","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"dylkaw"},"content":"     * Sets the {@code eventName} of the {@code EditEnrolmentDescriptor} that we are building.","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"dylkaw"},"content":"    public EditEnrolmentDescriptorBuilder withEventName(String eventName) {","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"dylkaw"},"content":"        descriptor.setEventName(new Name(eventName));","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"dylkaw"},"content":"        return this;","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"dylkaw"},"content":"     * Sets the {@code Hours} of the {@code EditEnrolmentDescriptor} that we are building.","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"dylkaw"},"content":"    public EditEnrolmentDescriptorBuilder withHours(String hours) {","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"dylkaw"},"content":"        descriptor.setHours(new Hours(hours));","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"dylkaw"},"content":"        return this;","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"dylkaw"},"content":"     * Sets the {@code Renark} of the {@code EditEnrolmentDescriptor} that we are building.","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"dylkaw"},"content":"    public EditEnrolmentDescriptorBuilder withRemark(String remark) {","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"dylkaw"},"content":"        descriptor.setRemark(new Remark(remark));","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"dylkaw"},"content":"        return this;","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":66,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":67,"author":{"gitId":"dylkaw"},"content":"    public EditEnrolmentDescriptor build() {","lastModifiedDate":"2023-10-28"},{"lineNumber":68,"author":{"gitId":"dylkaw"},"content":"        return descriptor;","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":70,"author":{"gitId":"dylkaw"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"dylkaw":70}},{"path":"src/test/java/seedu/ccacommander/testutil/EditEventDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"package seedu.ccacommander.testutil;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.logic.commands.EditEventCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.logic.commands.EditEventCommand.EditEventDescriptor;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.event.Event;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.event.EventDate;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.event.Location;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.shared.Name;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.tag.Tag;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"/**","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":" * A utility class to help with building EditEventDescriptor objects.","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":" */","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"public class EditEventDescriptorBuilder {","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"ph-nathan"},"content":"    private EditEventCommand.EditEventDescriptor descriptor;","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"ph-nathan"},"content":"    public EditEventDescriptorBuilder() {","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"        descriptor \u003d new EditEventDescriptor();","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"ph-nathan"},"content":"    public EditEventDescriptorBuilder(EditEventCommand.EditEventDescriptor descriptor) {","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"ph-nathan"},"content":"        this.descriptor \u003d new EditEventCommand.EditEventDescriptor(descriptor);","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"ph-nathan"},"content":"     * Returns an {@code EditEventDescriptor} with fields containing {@code event}\u0027s details","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"ph-nathan"},"content":"    public EditEventDescriptorBuilder(Event event) {","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"ph-nathan"},"content":"        descriptor \u003d new EditEventCommand.EditEventDescriptor();","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"ph-nathan"},"content":"        descriptor.setName(event.getName());","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"ph-nathan"},"content":"        descriptor.setLocation(event.getLocation());","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"ph-nathan"},"content":"        descriptor.setDate(event.getDate());","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"ph-nathan"},"content":"        descriptor.setTags(event.getTags());","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"ph-nathan"},"content":"     * Sets the {@code Name} of the {@code EditEventDescriptor} that we are building.","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"ph-nathan"},"content":"    public EditEventDescriptorBuilder withName(String name) {","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"ph-nathan"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"ph-nathan"},"content":"        return this;","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"ph-nathan"},"content":"     * Sets the {@code Location} of the {@code EditEventDescriptor} that we are building.","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"ph-nathan"},"content":"    public EditEventDescriptorBuilder withLocation(String location) {","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"ph-nathan"},"content":"        descriptor.setLocation(new Location(location));","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"ph-nathan"},"content":"        return this;","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"ph-nathan"},"content":"     * Sets the {@code EventDate} of the {@code EditEventDescriptor} that we are building.","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"ph-nathan"},"content":"    public EditEventDescriptorBuilder withDate(String date) {","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"ph-nathan"},"content":"        descriptor.setDate(new EventDate(date));","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"ph-nathan"},"content":"        return this;","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"ph-nathan"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditEventDescriptor}","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"ph-nathan"},"content":"     * that we are building.","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"ph-nathan"},"content":"    public EditEventDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"ph-nathan"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"ph-nathan"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"ph-nathan"},"content":"        return this;","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"ph-nathan"},"content":"    public EditEventCommand.EditEventDescriptor build() {","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"ph-nathan"},"content":"        return descriptor;","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"ph-nathan":78}},{"path":"src/test/java/seedu/ccacommander/testutil/EditMemberDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.testutil;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"wr1159"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"wr1159"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"wr1159"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.logic.commands.EditMemberCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.logic.commands.EditMemberCommand.EditMemberDescriptor;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Address;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Email;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Gender;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Member;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Phone;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.shared.Name;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.tag.Tag;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"wr1159"},"content":"/**","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"wr1159"},"content":" * A utility class to help with building EditMemberDescriptor objects.","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"wr1159"},"content":" */","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"wr1159"},"content":"public class EditMemberDescriptorBuilder {","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"ph-nathan"},"content":"    private EditMemberCommand.EditMemberDescriptor descriptor;","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"wr1159"},"content":"    public EditMemberDescriptorBuilder() {","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"wr1159"},"content":"        descriptor \u003d new EditMemberDescriptor();","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"ph-nathan"},"content":"    public EditMemberDescriptorBuilder(EditMemberCommand.EditMemberDescriptor descriptor) {","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"ph-nathan"},"content":"        this.descriptor \u003d new EditMemberCommand.EditMemberDescriptor(descriptor);","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":32,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"wr1159"},"content":"     * Returns an {@code EditMemberDescriptor} with fields containing {@code member}\u0027s details","lastModifiedDate":"2023-10-02"},{"lineNumber":34,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":35,"author":{"gitId":"wr1159"},"content":"    public EditMemberDescriptorBuilder(Member member) {","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"ph-nathan"},"content":"        descriptor \u003d new EditMemberCommand.EditMemberDescriptor();","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"wr1159"},"content":"        descriptor.setName(member.getName());","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"andrechuakj"},"content":"        descriptor.setGender(member.getGender());","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"wr1159"},"content":"        descriptor.setPhone(member.getPhone());","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"wr1159"},"content":"        descriptor.setEmail(member.getEmail());","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"wr1159"},"content":"        descriptor.setAddress(member.getAddress());","lastModifiedDate":"2023-10-02"},{"lineNumber":42,"author":{"gitId":"wr1159"},"content":"        descriptor.setTags(member.getTags());","lastModifiedDate":"2023-10-02"},{"lineNumber":43,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":44,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":45,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":46,"author":{"gitId":"wr1159"},"content":"     * Sets the {@code Name} of the {@code EditMemberDescriptor} that we are building.","lastModifiedDate":"2023-10-02"},{"lineNumber":47,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":48,"author":{"gitId":"wr1159"},"content":"    public EditMemberDescriptorBuilder withName(String name) {","lastModifiedDate":"2023-10-02"},{"lineNumber":49,"author":{"gitId":"wr1159"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2023-10-02"},{"lineNumber":50,"author":{"gitId":"wr1159"},"content":"        return this;","lastModifiedDate":"2023-10-02"},{"lineNumber":51,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":52,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":53,"author":{"gitId":"andrechuakj"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"andrechuakj"},"content":"     * Sets the {@code Gender} of the {@code EditMemberDescriptor} that we are building.","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"andrechuakj"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"andrechuakj"},"content":"    public EditMemberDescriptorBuilder withGender(String gender) {","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"andrechuakj"},"content":"        descriptor.setGender(new Gender(gender));","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"andrechuakj"},"content":"        return this;","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":62,"author":{"gitId":"wr1159"},"content":"     * Sets the {@code Phone} of the {@code EditMemberDescriptor} that we are building.","lastModifiedDate":"2023-10-02"},{"lineNumber":63,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":64,"author":{"gitId":"wr1159"},"content":"    public EditMemberDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2023-10-02"},{"lineNumber":65,"author":{"gitId":"wr1159"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2023-10-02"},{"lineNumber":66,"author":{"gitId":"wr1159"},"content":"        return this;","lastModifiedDate":"2023-10-02"},{"lineNumber":67,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":68,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":69,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":70,"author":{"gitId":"wr1159"},"content":"     * Sets the {@code Email} of the {@code EditMemberDescriptor} that we are building.","lastModifiedDate":"2023-10-02"},{"lineNumber":71,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":72,"author":{"gitId":"wr1159"},"content":"    public EditMemberDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2023-10-02"},{"lineNumber":73,"author":{"gitId":"wr1159"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2023-10-02"},{"lineNumber":74,"author":{"gitId":"wr1159"},"content":"        return this;","lastModifiedDate":"2023-10-02"},{"lineNumber":75,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":76,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":77,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":78,"author":{"gitId":"wr1159"},"content":"     * Sets the {@code Address} of the {@code EditMemberDescriptor} that we are building.","lastModifiedDate":"2023-10-02"},{"lineNumber":79,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":80,"author":{"gitId":"wr1159"},"content":"    public EditMemberDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2023-10-02"},{"lineNumber":81,"author":{"gitId":"wr1159"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2023-10-02"},{"lineNumber":82,"author":{"gitId":"wr1159"},"content":"        return this;","lastModifiedDate":"2023-10-02"},{"lineNumber":83,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":84,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":85,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-02"},{"lineNumber":86,"author":{"gitId":"wr1159"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditMemberDescriptor}","lastModifiedDate":"2023-10-02"},{"lineNumber":87,"author":{"gitId":"wr1159"},"content":"     * that we are building.","lastModifiedDate":"2023-10-02"},{"lineNumber":88,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-02"},{"lineNumber":89,"author":{"gitId":"wr1159"},"content":"    public EditMemberDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2023-10-02"},{"lineNumber":90,"author":{"gitId":"wr1159"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2023-10-02"},{"lineNumber":91,"author":{"gitId":"wr1159"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2023-10-02"},{"lineNumber":92,"author":{"gitId":"wr1159"},"content":"        return this;","lastModifiedDate":"2023-10-02"},{"lineNumber":93,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":94,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":95,"author":{"gitId":"ph-nathan"},"content":"    public EditMemberCommand.EditMemberDescriptor build() {","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"wr1159"},"content":"        return descriptor;","lastModifiedDate":"2023-10-02"},{"lineNumber":97,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-02"},{"lineNumber":98,"author":{"gitId":"wr1159"},"content":"}","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"wr1159":74,"andrechuakj":17,"ph-nathan":7}},{"path":"src/test/java/seedu/ccacommander/testutil/EnrolmentBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.testutil;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.enrolment.Enrolment;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.enrolment.Hours;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.enrolment.Remark;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.shared.Name;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":" * A utility class to help with building Enrolment objects.","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"public class EnrolmentBuilder {","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"dylkaw"},"content":"    public static final String DEFAULT_MEMBER_NAME \u003d \"Alice Pauline\";","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"dylkaw"},"content":"    public static final String DEFAULT_EVENT_NAME \u003d \"Aurora Borealis\";","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"dylkaw"},"content":"    public static final String DEFAULT_HOURS \u003d \"3\";","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"dylkaw"},"content":"    public static final String DEFAULT_REMARK \u003d \"Role: Photographer\";","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"andrechuakj"},"content":"    private Name memberName;","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"andrechuakj"},"content":"    private Name eventName;","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"andrechuakj"},"content":"    private Hours hours;","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"andrechuakj"},"content":"    private Remark remark;","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"andrechuakj"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"andrechuakj"},"content":"     * Creates an {@code EnrolmentBuilder} with the default details.","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"andrechuakj"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"andrechuakj"},"content":"    public EnrolmentBuilder() {","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"andrechuakj"},"content":"        memberName \u003d new Name(DEFAULT_MEMBER_NAME);","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"andrechuakj"},"content":"        eventName \u003d new Name(DEFAULT_EVENT_NAME);","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"andrechuakj"},"content":"        hours \u003d new Hours(DEFAULT_HOURS);","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"andrechuakj"},"content":"        remark \u003d new Remark(DEFAULT_REMARK);","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"andrechuakj"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"andrechuakj"},"content":"     * Initializes the EnrolmentBuilder with the data of {@code enrolmentToCopy}.","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"andrechuakj"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"andrechuakj"},"content":"    public EnrolmentBuilder(Enrolment enrolmentToCopy) {","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"andrechuakj"},"content":"        memberName \u003d enrolmentToCopy.getMemberName();","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"andrechuakj"},"content":"        eventName \u003d enrolmentToCopy.getEventName();","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"andrechuakj"},"content":"        hours \u003d enrolmentToCopy.getHours();","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"andrechuakj"},"content":"        remark \u003d enrolmentToCopy.getRemark();","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"andrechuakj"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"andrechuakj"},"content":"     * Sets the Member\u0027s {@code Name} of the {@code Enrolment} that we are building.","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"andrechuakj"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"andrechuakj"},"content":"    public EnrolmentBuilder withMemberName(String name) {","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"andrechuakj"},"content":"        this.memberName \u003d new Name(name);","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"andrechuakj"},"content":"        return this;","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"andrechuakj"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"andrechuakj"},"content":"     * Sets the Event\u0027s {@code Name} of the {@code Enrolment} that we are building.","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"andrechuakj"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"andrechuakj"},"content":"    public EnrolmentBuilder withEventName(String name) {","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"andrechuakj"},"content":"        this.eventName \u003d new Name(name);","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"andrechuakj"},"content":"        return this;","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"andrechuakj"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"andrechuakj"},"content":"     * Sets the {@code Hours} of the {@code Enrolment} that we are building.","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"andrechuakj"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"andrechuakj"},"content":"    public EnrolmentBuilder withHours(String hours) {","lastModifiedDate":"2023-10-28"},{"lineNumber":66,"author":{"gitId":"andrechuakj"},"content":"        this.hours \u003d new Hours(hours);","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"andrechuakj"},"content":"        return this;","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"andrechuakj"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"andrechuakj"},"content":"     * Sets the {@code Hours} of the {@code Enrolment} that we are building to an empty hour.","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"andrechuakj"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"andrechuakj"},"content":"    public EnrolmentBuilder withHours() {","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"andrechuakj"},"content":"        this.hours \u003d null;","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"andrechuakj"},"content":"        return this;","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":78,"author":{"gitId":"andrechuakj"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":79,"author":{"gitId":"andrechuakj"},"content":"     * Sets the {@code Remark} of the {@code Enrolment} that we are building.","lastModifiedDate":"2023-10-28"},{"lineNumber":80,"author":{"gitId":"andrechuakj"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":81,"author":{"gitId":"andrechuakj"},"content":"    public EnrolmentBuilder withRemark(String remark) {","lastModifiedDate":"2023-10-28"},{"lineNumber":82,"author":{"gitId":"andrechuakj"},"content":"        this.remark \u003d new Remark(remark);","lastModifiedDate":"2023-10-22"},{"lineNumber":83,"author":{"gitId":"andrechuakj"},"content":"        return this;","lastModifiedDate":"2023-10-22"},{"lineNumber":84,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":85,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":86,"author":{"gitId":"andrechuakj"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"andrechuakj"},"content":"     * Sets the {@code Remark} of the {@code Enrolment} that we are building to an empty remark.","lastModifiedDate":"2023-10-30"},{"lineNumber":88,"author":{"gitId":"andrechuakj"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":89,"author":{"gitId":"andrechuakj"},"content":"    public EnrolmentBuilder withRemark() {","lastModifiedDate":"2023-10-30"},{"lineNumber":90,"author":{"gitId":"andrechuakj"},"content":"        this.remark \u003d null;","lastModifiedDate":"2023-10-30"},{"lineNumber":91,"author":{"gitId":"andrechuakj"},"content":"        return this;","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":93,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":94,"author":{"gitId":"andrechuakj"},"content":"    public Enrolment build() {","lastModifiedDate":"2023-10-28"},{"lineNumber":95,"author":{"gitId":"andrechuakj"},"content":"        return new Enrolment(memberName, eventName, Optional.ofNullable(hours), Optional.ofNullable(remark));","lastModifiedDate":"2023-10-30"},{"lineNumber":96,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":97,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":98,"author":{"gitId":"andrechuakj"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"andrechuakj":94,"dylkaw":4}},{"path":"src/test/java/seedu/ccacommander/testutil/EventBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.testutil;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"wr1159"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"wr1159"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.Event;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.EventDate;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.Location;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.shared.Name;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"wr1159"},"content":"import seedu.ccacommander.model.tag.Tag;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"wr1159"},"content":"import seedu.ccacommander.model.util.SampleDataUtil;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"wr1159"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"wr1159"},"content":" * A utility class to help with building Events objects.","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"wr1159"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"wr1159"},"content":"public class EventBuilder {","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"wr1159"},"content":"    public static final String DEFAULT_EVENT_NAME \u003d \"NUS Party\";","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"wr1159"},"content":"    public static final String DEFAULT_EVENT_DATE \u003d \"2023-12-08\";","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"wr1159"},"content":"    public static final String DEFAULT_LOCATION \u003d \"NUS COM3\";","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"dylkaw"},"content":"    private Name name;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"wr1159"},"content":"    private EventDate date;","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"wr1159"},"content":"    private Location location;","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"wr1159"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"wr1159"},"content":"     * Creates a {@code EventBuilder} with the default details.","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"wr1159"},"content":"    public EventBuilder() {","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"dylkaw"},"content":"        name \u003d new Name(DEFAULT_EVENT_NAME);","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"wr1159"},"content":"        date \u003d new EventDate(DEFAULT_EVENT_DATE);","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"wr1159"},"content":"        location \u003d new Location(DEFAULT_LOCATION);","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"wr1159"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"wr1159"},"content":"     * Initializes the EventBuilder with the data of {@code eventToCopy}.","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"wr1159"},"content":"    public EventBuilder(Event eventToCopy) {","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"wr1159"},"content":"        name \u003d eventToCopy.getName();","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"wr1159"},"content":"        date \u003d eventToCopy.getDate();","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"wr1159"},"content":"        location \u003d eventToCopy.getLocation();","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"wr1159"},"content":"        tags \u003d new HashSet\u003c\u003e(eventToCopy.getTags());","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"wr1159"},"content":"     * Sets the {@code Name} of the {@code Event} that we are building.","lastModifiedDate":"2023-10-11"},{"lineNumber":49,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"wr1159"},"content":"    public EventBuilder withName(String name) {","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"dylkaw"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"wr1159"},"content":"        return this;","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"wr1159"},"content":"     * Sets the {@code Date} of the {@code Event} that we are building.","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"wr1159"},"content":"    public EventBuilder withDate(String date) {","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"wr1159"},"content":"        this.date \u003d new EventDate(date);","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"wr1159"},"content":"        return this;","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":62,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":63,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":64,"author":{"gitId":"wr1159"},"content":"     * Sets the {@code Location} of the {@code Event} that we are building.","lastModifiedDate":"2023-10-11"},{"lineNumber":65,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":66,"author":{"gitId":"wr1159"},"content":"    public EventBuilder withLocation(String location) {","lastModifiedDate":"2023-10-11"},{"lineNumber":67,"author":{"gitId":"wr1159"},"content":"        this.location \u003d new Location(location);","lastModifiedDate":"2023-10-11"},{"lineNumber":68,"author":{"gitId":"wr1159"},"content":"        return this;","lastModifiedDate":"2023-10-11"},{"lineNumber":69,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":70,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":71,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":72,"author":{"gitId":"wr1159"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":73,"author":{"gitId":"wr1159"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Member} that we are building.","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"wr1159"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":75,"author":{"gitId":"wr1159"},"content":"    public EventBuilder withTags(String ... tags) {","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"wr1159"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"wr1159"},"content":"        return this;","lastModifiedDate":"2023-10-23"},{"lineNumber":78,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":80,"author":{"gitId":"wr1159"},"content":"    public Event build() {","lastModifiedDate":"2023-10-11"},{"lineNumber":81,"author":{"gitId":"wr1159"},"content":"        return new Event(name, date, location, tags);","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":83,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":84,"author":{"gitId":"wr1159"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"wr1159":76,"andrechuakj":5,"dylkaw":3}},{"path":"src/test/java/seedu/ccacommander/testutil/EventUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.testutil;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.commands.CreateEventCommand;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.logic.commands.EditEventCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.Event;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.model.tag.Tag;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"dylkaw"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"dylkaw"},"content":" * A utility class for Event.","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"dylkaw"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"dylkaw"},"content":"public class EventUtil {","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"ph-nathan"},"content":"     * Returns a create command string for adding the {@code event}.","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"dylkaw"},"content":"    public static String getCreateEventCommand(Event event) {","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"dylkaw"},"content":"        return CreateEventCommand.COMMAND_WORD + \" \" + getEventDetails(event);","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"dylkaw"},"content":"     * Returns the part of command string for the given {@code event}\u0027s details.","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"dylkaw"},"content":"    public static String getEventDetails(Event event) {","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"dylkaw"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"dylkaw"},"content":"        sb.append(PREFIX_NAME + event.getName().name + \" \");","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"dylkaw"},"content":"        sb.append(PREFIX_LOCATION + event.getLocation().value + \" \");","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"dylkaw"},"content":"        sb.append(PREFIX_DATE + event.getDate().toString() + \" \");","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"dylkaw"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"ph-nathan"},"content":"    public static String getEditEventDescriptorDetails(EditEventCommand.EditEventDescriptor descriptor) {","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"ph-nathan"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"ph-nathan"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.name).append(\" \"));","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"ph-nathan"},"content":"        descriptor.getLocation().ifPresent(location -\u003e sb.append(PREFIX_LOCATION).append(location.value).append(\" \"));","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"ph-nathan"},"content":"        descriptor.getDate().ifPresent(eventDate -\u003e sb.append(PREFIX_DATE).append(eventDate.date).append(\" \"));","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"ph-nathan"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"ph-nathan"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"ph-nathan"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"ph-nathan"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"ph-nathan"},"content":"            } else {","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"ph-nathan"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"ph-nathan"},"content":"            }","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"ph-nathan"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"ph-nathan"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"dylkaw"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"andrechuakj":6,"dylkaw":26,"ph-nathan":21}},{"path":"src/test/java/seedu/ccacommander/testutil/MemberBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.testutil;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Address;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Email;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Gender;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Member;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Phone;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.shared.Name;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.tag.Tag;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.util.SampleDataUtil;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"wr1159"},"content":" * A utility class to help with building Member objects.","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"wr1159"},"content":"public class MemberBuilder {","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"andrechuakj"},"content":"    public static final String DEFAULT_GENDER \u003d \"Female\";","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"andrechuakj"},"content":"    private Gender gender;","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"wr1159"},"content":"     * Creates a {@code MemberBuilder} with the default details.","lastModifiedDate":"2023-10-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"wr1159"},"content":"    public MemberBuilder() {","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"andrechuakj"},"content":"        gender \u003d new Gender(DEFAULT_GENDER);","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":47,"author":{"gitId":"wr1159"},"content":"     * Initializes the MemberBuilder with the data of {@code memberToCopy}.","lastModifiedDate":"2023-10-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":49,"author":{"gitId":"wr1159"},"content":"    public MemberBuilder(Member memberToCopy) {","lastModifiedDate":"2023-10-02"},{"lineNumber":50,"author":{"gitId":"wr1159"},"content":"        name \u003d memberToCopy.getName();","lastModifiedDate":"2023-10-02"},{"lineNumber":51,"author":{"gitId":"andrechuakj"},"content":"        gender \u003d memberToCopy.getGender();","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"wr1159"},"content":"        phone \u003d memberToCopy.getPhone();","lastModifiedDate":"2023-10-02"},{"lineNumber":53,"author":{"gitId":"wr1159"},"content":"        email \u003d memberToCopy.getEmail();","lastModifiedDate":"2023-10-02"},{"lineNumber":54,"author":{"gitId":"wr1159"},"content":"        address \u003d memberToCopy.getAddress();","lastModifiedDate":"2023-10-02"},{"lineNumber":55,"author":{"gitId":"wr1159"},"content":"        tags \u003d new HashSet\u003c\u003e(memberToCopy.getTags());","lastModifiedDate":"2023-10-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"wr1159"},"content":"     * Sets the {@code Name} of the {@code Member} that we are building.","lastModifiedDate":"2023-10-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"wr1159"},"content":"    public MemberBuilder withName(String name) {","lastModifiedDate":"2023-10-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"wr1159"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Member} that we are building.","lastModifiedDate":"2023-10-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"wr1159"},"content":"    public MemberBuilder withTags(String ... tags) {","lastModifiedDate":"2023-10-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"wr1159"},"content":"     * Sets the {@code Address} of the {@code Member} that we are building.","lastModifiedDate":"2023-10-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"wr1159"},"content":"    public MemberBuilder withAddress(String address) {","lastModifiedDate":"2023-10-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"andrechuakj"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":83,"author":{"gitId":"andrechuakj"},"content":"     * Sets the {@code Address} of the {@code Member} to an empty address.","lastModifiedDate":"2023-10-30"},{"lineNumber":84,"author":{"gitId":"andrechuakj"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":85,"author":{"gitId":"andrechuakj"},"content":"    public MemberBuilder withAddress() {","lastModifiedDate":"2023-10-30"},{"lineNumber":86,"author":{"gitId":"andrechuakj"},"content":"        this.address \u003d null;","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"andrechuakj"},"content":"        return this;","lastModifiedDate":"2023-10-30"},{"lineNumber":88,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":89,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"wr1159"},"content":"     * Sets the {@code Phone} of the {@code Member} that we are building.","lastModifiedDate":"2023-10-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"wr1159"},"content":"    public MemberBuilder withPhone(String phone) {","lastModifiedDate":"2023-10-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"andrechuakj"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":99,"author":{"gitId":"andrechuakj"},"content":"     * Sets the {@Phone} of the {@code Member} that we are building to null.","lastModifiedDate":"2023-10-30"},{"lineNumber":100,"author":{"gitId":"andrechuakj"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":101,"author":{"gitId":"andrechuakj"},"content":"    public MemberBuilder withPhone() {","lastModifiedDate":"2023-10-30"},{"lineNumber":102,"author":{"gitId":"andrechuakj"},"content":"        this.phone \u003d null;","lastModifiedDate":"2023-10-30"},{"lineNumber":103,"author":{"gitId":"andrechuakj"},"content":"        return this;","lastModifiedDate":"2023-10-30"},{"lineNumber":104,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":105,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":107,"author":{"gitId":"wr1159"},"content":"     * Sets the {@code Email} of the {@code Member} that we are building.","lastModifiedDate":"2023-10-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":109,"author":{"gitId":"wr1159"},"content":"    public MemberBuilder withEmail(String email) {","lastModifiedDate":"2023-10-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":114,"author":{"gitId":"andrechuakj"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":115,"author":{"gitId":"andrechuakj"},"content":"     * Sets the {@code Email} of the {@code Member} that we are building to null.","lastModifiedDate":"2023-10-30"},{"lineNumber":116,"author":{"gitId":"andrechuakj"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":117,"author":{"gitId":"andrechuakj"},"content":"    public MemberBuilder withEmail() {","lastModifiedDate":"2023-10-30"},{"lineNumber":118,"author":{"gitId":"andrechuakj"},"content":"        this.email \u003d null;","lastModifiedDate":"2023-10-30"},{"lineNumber":119,"author":{"gitId":"andrechuakj"},"content":"        return this;","lastModifiedDate":"2023-10-30"},{"lineNumber":120,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":121,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":122,"author":{"gitId":"andrechuakj"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"andrechuakj"},"content":"     * Sets the {@code Gender} of the {@code Member} that we are building.","lastModifiedDate":"2023-10-19"},{"lineNumber":124,"author":{"gitId":"andrechuakj"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"andrechuakj"},"content":"    public MemberBuilder withGender(String gender) {","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"andrechuakj"},"content":"        this.gender \u003d new Gender(gender);","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"andrechuakj"},"content":"        return this;","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"andrechuakj"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":131,"author":{"gitId":"andrechuakj"},"content":"     * Builds the member and returns it.","lastModifiedDate":"2023-10-30"},{"lineNumber":132,"author":{"gitId":"andrechuakj"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":133,"author":{"gitId":"wr1159"},"content":"    public Member build() {","lastModifiedDate":"2023-10-02"},{"lineNumber":134,"author":{"gitId":"andrechuakj"},"content":"        return new Member(name, gender, Optional.ofNullable(phone),","lastModifiedDate":"2023-10-30"},{"lineNumber":135,"author":{"gitId":"andrechuakj"},"content":"                Optional.ofNullable(email), Optional.ofNullable(address), tags);","lastModifiedDate":"2023-10-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"wr1159":22,"andrechuakj":51,"-":65}},{"path":"src/test/java/seedu/ccacommander/testutil/MemberUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.testutil;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.logic.commands.CreateMemberCommand;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"import seedu.ccacommander.logic.commands.EditMemberCommand.EditMemberDescriptor;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Member;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.tag.Tag;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"wr1159"},"content":" * A utility class for Member.","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"wr1159"},"content":"public class MemberUtil {","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"wr1159"},"content":"     * Returns an add command string for adding the {@code member}.","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"dylkaw"},"content":"    public static String getCreateMemberCommand(Member member) {","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"dylkaw"},"content":"        return CreateMemberCommand.COMMAND_WORD + \" \" + getMemberDetails(member);","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"wr1159"},"content":"     * Returns the part of command string for the given {@code member}\u0027s details.","lastModifiedDate":"2023-10-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"wr1159"},"content":"    public static String getMemberDetails(Member member) {","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"dylkaw"},"content":"        sb.append(PREFIX_NAME + member.getName().name + \" \");","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"andrechuakj"},"content":"        sb.append(PREFIX_GENDER + member.getGender().value + \" \");","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"wr1159"},"content":"        sb.append(PREFIX_PHONE + member.getPhone().value + \" \");","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"wr1159"},"content":"        sb.append(PREFIX_EMAIL + member.getEmail().value + \" \");","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"wr1159"},"content":"        sb.append(PREFIX_ADDRESS + member.getAddress().value + \" \");","lastModifiedDate":"2023-10-02"},{"lineNumber":39,"author":{"gitId":"wr1159"},"content":"        member.getTags().stream().forEach(","lastModifiedDate":"2023-10-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"wr1159"},"content":"     * Returns the part of command string for the given {@code EditMemberDescriptor}\u0027s details.","lastModifiedDate":"2023-10-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"wr1159"},"content":"    public static String getEditMemberDescriptorDetails(EditMemberDescriptor descriptor) {","lastModifiedDate":"2023-10-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"dylkaw"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.name).append(\" \"));","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"ph-nathan"},"content":"        descriptor.getGender().ifPresent(gender -\u003e sb.append(PREFIX_GENDER).append(gender.value).append(\" \"));","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"wr1159":11,"andrechuakj":11,"dylkaw":4,"ph-nathan":2,"-":37}},{"path":"src/test/java/seedu/ccacommander/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.testutil;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"andrechuakj":1,"-":71}},{"path":"src/test/java/seedu/ccacommander/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.testutil;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.core.index.Index;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.Model;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.Event;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Member;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"wr1159"},"content":"     * Returns the middle index of the member in the {@code model}\u0027s member list.","lastModifiedDate":"2023-10-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":40,"author":{"gitId":"wr1159"},"content":"        return Index.fromOneBased(model.getFilteredMemberList().size() / 2);","lastModifiedDate":"2023-10-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"wr1159"},"content":"     * Returns the last index of the member in the {@code model}\u0027s member list.","lastModifiedDate":"2023-10-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":47,"author":{"gitId":"wr1159"},"content":"        return Index.fromOneBased(model.getFilteredMemberList().size());","lastModifiedDate":"2023-10-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"wr1159"},"content":"     * Returns the member in the {@code model}\u0027s member list at {@code index}.","lastModifiedDate":"2023-10-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":53,"author":{"gitId":"wr1159"},"content":"    public static Member getMember(Model model, Index index) {","lastModifiedDate":"2023-10-02"},{"lineNumber":54,"author":{"gitId":"wr1159"},"content":"        return model.getFilteredMemberList().get(index.getZeroBased());","lastModifiedDate":"2023-10-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":56,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"ph-nathan"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"ph-nathan"},"content":"     * Returns the event in the {@code model}\u0027s event list at {@code index}.","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"ph-nathan"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"ph-nathan"},"content":"    public static Event getEvent(Model model, Index index) {","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"ph-nathan"},"content":"        return model.getFilteredEventList().get(index.getZeroBased());","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wr1159":7,"andrechuakj":5,"ph-nathan":6,"-":45}},{"path":"src/test/java/seedu/ccacommander/testutil/TypicalCcaCommander.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.testutil;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalEnrolments.getTypicalEnrolment;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalEvents.getTypicalEvents;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.TypicalMembers.getTypicalMembers;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.CcaCommander;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.enrolment.Enrolment;","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.Event;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Member;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"/**","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":" * A utility class which returns an CcaCommander with all typical members and events.","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":" */","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":"public class TypicalCcaCommander {","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"andrechuakj"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"andrechuakj"},"content":"     * Returns a {@code CcaCommander} with only typical members.","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"andrechuakj"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"andrechuakj"},"content":"    public static CcaCommander getTypicalMemberCcaCommander() {","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"andrechuakj"},"content":"        CcaCommander cc \u003d new CcaCommander();","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"andrechuakj"},"content":"        for (Member member : getTypicalMembers()) {","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"andrechuakj"},"content":"            cc.createMember(member);","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"andrechuakj"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"andrechuakj"},"content":"        return cc;","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"andrechuakj"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"andrechuakj"},"content":"     * Returns a {@code CcaCommander} with only typical events.","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"andrechuakj"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"andrechuakj"},"content":"    public static CcaCommander getTypicalEventCcaCommander() {","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"andrechuakj"},"content":"        CcaCommander cc \u003d new CcaCommander();","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"andrechuakj"},"content":"        for (Event event : getTypicalEvents()) {","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"andrechuakj"},"content":"            cc.createEvent(event);","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"andrechuakj"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"andrechuakj"},"content":"        return cc;","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"dylkaw"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"andrechuakj"},"content":"     * Returns a {@code CcaCommander} with only typical enrolments.","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"dylkaw"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"andrechuakj"},"content":"    public static CcaCommander getTypicalEnrolmentCcaCommander() {","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"dylkaw"},"content":"        CcaCommander cc \u003d new CcaCommander();","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"andrechuakj"},"content":"        for (Enrolment enrolment : getTypicalEnrolment()) {","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"andrechuakj"},"content":"            cc.createEnrolment(enrolment);","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"dylkaw"},"content":"        return cc;","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"dylkaw"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"andrechuakj"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"andrechuakj"},"content":"     * Returns an {@code CcaCommander} with all the typical members and events.","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"andrechuakj"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"andrechuakj"},"content":"    public static CcaCommander getTypicalCcaCommander() {","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"andrechuakj"},"content":"        CcaCommander cc \u003d new CcaCommander();","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"andrechuakj"},"content":"        for (Member member : getTypicalMembers()) {","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"andrechuakj"},"content":"            cc.createMember(member);","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"andrechuakj"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"andrechuakj"},"content":"        for (Event event: getTypicalEvents()) {","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"andrechuakj"},"content":"            cc.createEvent(event);","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"andrechuakj"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":64,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"andrechuakj"},"content":"        for (Enrolment enrolment : getTypicalEnrolment()) {","lastModifiedDate":"2023-10-28"},{"lineNumber":66,"author":{"gitId":"andrechuakj"},"content":"            cc.createEnrolment(enrolment);","lastModifiedDate":"2023-10-28"},{"lineNumber":67,"author":{"gitId":"dylkaw"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"dylkaw"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"andrechuakj"},"content":"        return cc;","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"andrechuakj"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"andrechuakj":61,"dylkaw":10}},{"path":"src/test/java/seedu/ccacommander/testutil/TypicalEnrolments.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.testutil;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import java.util.List;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.enrolment.Enrolment;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":" * A utility class containing a list of {@code Enrolment} objects to be used in tests.","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"public class TypicalEnrolments {","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":"    public static final Enrolment ALICE_AURORA \u003d new EnrolmentBuilder().withMemberName(\"Alice Pauline\")","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"            .withEventName(\"Aurora Borealis\").withHours(\"3\").withRemark(\"Role: Photographer\").build();","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"andrechuakj"},"content":"    public static final Enrolment BENSON_BOXING \u003d new EnrolmentBuilder().withMemberName(\"Benson Meier\")","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"andrechuakj"},"content":"            .withEventName(\"Boxing Day\").withHours(\"7\").withRemark(\"Bring boxing gloves\").build();","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"andrechuakj"},"content":"    public static final Enrolment CARL_CNY \u003d new EnrolmentBuilder().withMemberName(\"Carl Kurz\")","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"andrechuakj"},"content":"            .withEventName(\"Chinese New Year\").withHours(\"3\").withRemark(\"Brought red packets\").build();","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"andrechuakj"},"content":"    public static final Enrolment DANIEL_DOG_DAY \u003d new EnrolmentBuilder().withMemberName(\"Daniel Meier\")","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"andrechuakj"},"content":"            .withEventName(\"Dog Celebration Day\").withHours(\"5\").withRemark(\"Bringing dogs\").build();","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"andrechuakj"},"content":"    public static final Enrolment ELLE_ECHO_DAY \u003d new EnrolmentBuilder().withMemberName(\"Elle Meyer\")","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"andrechuakj"},"content":"            .withEventName(\"Echo Day\").withHours(\"0\").withRemark(\"Absent without reason\").build();","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"andrechuakj"},"content":"    public static final Enrolment FIONA_FESTIVAL \u003d new EnrolmentBuilder().withMemberName(\"Fiona Kunz\")","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"andrechuakj"},"content":"            .withEventName(\"Festival\").withHours(\"2\").withRemark(\"Usher\").build();","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"andrechuakj"},"content":"    public static final Enrolment GEORGE_GRAVITY_DISCOVERY_DAY \u003d new EnrolmentBuilder().withMemberName(\"George Best\")","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"andrechuakj"},"content":"            .withEventName(\"Gravity Discovery Day\").withHours(\"1\").withRemark(\"Discovered gravity\").build();","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"andrechuakj"},"content":"    private TypicalEnrolments() {} // prevents instantiation","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"andrechuakj"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"andrechuakj"},"content":"    public static List\u003cEnrolment\u003e getTypicalEnrolment() {","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"andrechuakj"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE_AURORA, BENSON_BOXING, CARL_CNY, DANIEL_DOG_DAY, ELLE_ECHO_DAY,","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"andrechuakj"},"content":"                FIONA_FESTIVAL, GEORGE_GRAVITY_DISCOVERY_DAY));","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"andrechuakj"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"andrechuakj"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"andrechuakj":39}},{"path":"src/test/java/seedu/ccacommander/testutil/TypicalEvents.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.testutil;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"wr1159"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"wr1159"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"wr1159"},"content":"import java.util.List;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.event.Event;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"wr1159"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"wr1159"},"content":" * A utility class containing a list of {@code Event} objects to be used in tests.","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"wr1159"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"wr1159"},"content":"public class TypicalEvents {","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"wr1159"},"content":"    public static final Event AURORA_BOREALIS \u003d new EventBuilder().withName(\"Aurora Borealis\")","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"wr1159"},"content":"            .withDate(\"2023-11-30\").withLocation(\"Greenland\").withTags(\"nature\").build();","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"wr1159"},"content":"    public static final Event BOXING_DAY \u003d new EventBuilder().withName(\"Boxing Day\")","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"wr1159"},"content":"            .withDate(\"2023-12-26\").withLocation(\"Ridge View Residential College\").withTags(\"rvrc\").build();","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"wr1159"},"content":"    public static final Event CHINESE_NEW_YEAR \u003d new EventBuilder().withName(\"Chinese New Year\")","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"wr1159"},"content":"            .withDate(\"2024-02-10\").withLocation(\"Communal Hall\").withTags(\"holiday\").build();","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"wr1159"},"content":"    public static final Event DOG_DAY \u003d new EventBuilder().withName(\"Dog Celebration Day\")","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"wr1159"},"content":"            .withDate(\"2024-08-26\").withLocation(\"UTown Pitstop\").withTags(\"animals\").build();","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"wr1159"},"content":"    public static final Event ECHO_DAY \u003d new EventBuilder().withName(\"Echo Day\")","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"wr1159"},"content":"            .withDate(\"2023-05-05\").withLocation(\"Batu Cave\").withTags(\"nature\", \"overseas\").build();","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"wr1159"},"content":"    public static final Event FESTIVAL \u003d new EventBuilder().withName(\"Festival\")","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"wr1159"},"content":"            .withDate(\"2023-10-05\").withLocation(\"Clementi 321\").withTags(\"holiday\").build();","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"wr1159"},"content":"    public static final Event GRAVITY_DISCOVERY_DAY \u003d new EventBuilder().withName(\"Gravity Discovery Day\")","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"wr1159"},"content":"            .withDate(\"1666-06-18\").withLocation(\"Cambridge University\").withTags(\"science\").build();","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"wr1159"},"content":"    private TypicalEvents() {} // prevents instantiation","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"wr1159"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"wr1159"},"content":"    public static List\u003cEvent\u003e getTypicalEvents() {","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"wr1159"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(AURORA_BOREALIS, BOXING_DAY, CHINESE_NEW_YEAR, DOG_DAY, ECHO_DAY,","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"wr1159"},"content":"                FESTIVAL, GRAVITY_DISCOVERY_DAY));","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"wr1159"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"wr1159"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"wr1159":39,"andrechuakj":2}},{"path":"src/test/java/seedu/ccacommander/testutil/TypicalHours.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"package seedu.ccacommander.testutil;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.model.enrolment.Hours;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"/**","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":" * A utility class containing a list of {@code Hours} objects to be used in tests.","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":" */","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":"public class TypicalHours {","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":"    public static final Hours HOURS_ZERO \u003d new Hours(\"0\");","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":"    public static final Hours HOURS_ONE \u003d new Hours(\"1\");","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"    public static final Hours HOURS_TEN \u003d new Hours(\"10\");","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"    public static final Hours HOURS_MAX \u003d new Hours(\"2147483647\");","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"SelwynAng":14}},{"path":"src/test/java/seedu/ccacommander/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.testutil;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.commons.core.index.Index;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"wr1159"},"content":"    public static final Index INDEX_FIRST_MEMBER \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"wr1159"},"content":"    public static final Index INDEX_SECOND_MEMBER \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"wr1159"},"content":"    public static final Index INDEX_THIRD_MEMBER \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"    public static final Index INDEX_FIRST_EVENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":"    public static final Index INDEX_SECOND_EVENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"SelwynAng"},"content":"    public static final Index INDEX_THIRD_EVENT \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"dylkaw"},"content":"    public static final Index INDEX_FIRST_ENROLMENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"dylkaw"},"content":"    public static final Index INDEX_SECOND_ENROLMENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"dylkaw"},"content":"    public static final Index INDEX_THIRD_ENROLMENT \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"wr1159":3,"andrechuakj":2,"SelwynAng":3,"dylkaw":3,"-":7}},{"path":"src/test/java/seedu/ccacommander/testutil/TypicalMembers.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.testutil;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_GENDER_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.model.member.Member;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"wr1159"},"content":" * A utility class containing a list of {@code Member} objects to be used in tests.","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"wr1159"},"content":"public class TypicalMembers {","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"wr1159"},"content":"    public static final Member ALICE \u003d new MemberBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"andrechuakj"},"content":"            .withGender(\"Female\")","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"wr1159"},"content":"    public static final Member BENSON \u003d new MemberBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"andrechuakj"},"content":"            .withGender(\"Male\")","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":37,"author":{"gitId":"andrechuakj"},"content":"    public static final Member CARL \u003d new MemberBuilder().withName(\"Carl Kurz\")","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"andrechuakj"},"content":"            .withGender(\"Male\")","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"andrechuakj"},"content":"            .withPhone(\"95352563\")","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"andrechuakj"},"content":"            .withEmail(\"heinz@example.com\")","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"andrechuakj"},"content":"            .withAddress(\"wall street\").build();","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"andrechuakj"},"content":"    public static final Member DANIEL \u003d new MemberBuilder().withName(\"Daniel Meier\")","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"andrechuakj"},"content":"            .withGender(\"Male\")","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"andrechuakj"},"content":"            .withPhone(\"87652533\")","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"andrechuakj"},"content":"            .withEmail(\"cornelia@example.com\")","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"andrechuakj"},"content":"            .withAddress(\"10th street\")","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"andrechuakj"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"andrechuakj"},"content":"    public static final Member ELLE \u003d new MemberBuilder().withName(\"Elle Meyer\")","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"andrechuakj"},"content":"            .withGender(\"Female\")","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"andrechuakj"},"content":"            .withPhone(\"9482224\")","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"andrechuakj"},"content":"            .withEmail(\"werner@example.com\")","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"andrechuakj"},"content":"            .withAddress(\"michegan ave\").build();","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"andrechuakj"},"content":"    public static final Member FIONA \u003d new MemberBuilder().withName(\"Fiona Kunz\")","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"andrechuakj"},"content":"            .withGender(\"Female\")","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"andrechuakj"},"content":"            .withPhone(\"9482427\")","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"andrechuakj"},"content":"            .withEmail(\"lydia@example.com\")","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"andrechuakj"},"content":"            .withAddress(\"little tokyo\").build();","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"andrechuakj"},"content":"    public static final Member GEORGE \u003d new MemberBuilder().withName(\"George Best\")","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"andrechuakj"},"content":"            .withGender(\"Male\")","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"andrechuakj"},"content":"            .withPhone(\"9482442\")","lastModifiedDate":"2023-10-18"},{"lineNumber":61,"author":{"gitId":"andrechuakj"},"content":"            .withEmail(\"anna@example.com\")","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"andrechuakj"},"content":"            .withAddress(\"4th street\").build();","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":65,"author":{"gitId":"andrechuakj"},"content":"    public static final Member HOON \u003d new MemberBuilder().withName(\"Hoon Meier\")","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"andrechuakj"},"content":"            .withGender(\"Female\")","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"andrechuakj"},"content":"            .withPhone(\"8482424\")","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"andrechuakj"},"content":"            .withEmail(\"stefan@example.com\")","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"andrechuakj"},"content":"            .withAddress(\"little india\").build();","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"andrechuakj"},"content":"    public static final Member IDA \u003d new MemberBuilder().withName(\"Ida Mueller\")","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"andrechuakj"},"content":"            .withGender(\"Female\")","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"andrechuakj"},"content":"            .withPhone(\"8482131\")","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"andrechuakj"},"content":"            .withEmail(\"hans@example.com\")","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"andrechuakj"},"content":"            .withAddress(\"chicago ave\").build();","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":76,"author":{"gitId":"wr1159"},"content":"    // Manually added - Member\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-10-02"},{"lineNumber":77,"author":{"gitId":"andrechuakj"},"content":"    public static final Member AMY \u003d new MemberBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"andrechuakj"},"content":"            .withGender(VALID_GENDER_AMY)","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"andrechuakj"},"content":"            .withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"andrechuakj"},"content":"            .withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"andrechuakj"},"content":"            .withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"andrechuakj"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"andrechuakj"},"content":"    public static final Member BOB \u003d new MemberBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"andrechuakj"},"content":"            .withGender(VALID_GENDER_BOB)","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"andrechuakj"},"content":"            .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"andrechuakj"},"content":"            .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"andrechuakj"},"content":"            .withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"andrechuakj"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":93,"author":{"gitId":"wr1159"},"content":"    private TypicalMembers() {} // prevents instantiation","lastModifiedDate":"2023-10-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":95,"author":{"gitId":"wr1159"},"content":"    public static List\u003cMember\u003e getTypicalMembers() {","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"wr1159":7,"andrechuakj":64,"-":27}},{"path":"src/test/java/seedu/ccacommander/testutil/TypicalRemarks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SelwynAng"},"content":"package seedu.ccacommander.testutil;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"SelwynAng"},"content":"import seedu.ccacommander.model.enrolment.Remark;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"SelwynAng"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"SelwynAng"},"content":"/**","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"SelwynAng"},"content":" * A utility class containing a list of {@code Remarks} objects to be used in tests.","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"SelwynAng"},"content":" */","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"SelwynAng"},"content":"public class TypicalRemarks {","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"SelwynAng"},"content":"    public static final Remark REMARK_ONE \u003d new Remark(\"Own money, pay money!\");","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"SelwynAng"},"content":"    public static final Remark REMARK_TWO \u003d new Remark(\"My love for you is like a flowing river...\");","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"SelwynAng"},"content":"    public static final Remark REMARK_THREE \u003d new Remark(\"The river flows in you.\");","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"SelwynAng"},"content":"    public static final Remark REMARK_FOUR \u003d new Remark(\"NPC mood indeed.\");","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"SelwynAng"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"SelwynAng":13}},{"path":"src/test/java/seedu/ccacommander/ui/StylesheetTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ph-nathan"},"content":"package seedu.ccacommander.ui;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"ph-nathan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"ph-nathan"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"ph-nathan"},"content":"import static seedu.ccacommander.ui.Stylesheet.constructStylesheet;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"ph-nathan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"ph-nathan"},"content":"class StylesheetTest {","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"ph-nathan"},"content":"    public void lightThemeExists() {","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"ph-nathan"},"content":"        assertNotNull(Stylesheet.LIGHT.getStylesheet());","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"ph-nathan"},"content":"    public void darkThemeExists() {","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"ph-nathan"},"content":"        assertNotNull(Stylesheet.DARK.getStylesheet());","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"ph-nathan"},"content":"    public void extensionsExists() {","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"ph-nathan"},"content":"        assertNotNull(Stylesheet.EXTENSION.getStylesheet());","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"ph-nathan"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"ph-nathan"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"ph-nathan"},"content":"    public void testConstructStyleSheet() {","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(Stylesheet.LIGHT, constructStylesheet(\"LightTheme.css\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(Stylesheet.DARK, constructStylesheet(\"DarkTheme.css\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(Stylesheet.DEFAULT_STYLESHEET, constructStylesheet(\"LightTheme.css\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"ph-nathan"},"content":"        assertEquals(Stylesheet.DEFAULT_STYLESHEET, constructStylesheet(\"INVALID_INPUT\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"ph-nathan"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"ph-nathan"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"ph-nathan":29}},{"path":"src/test/java/seedu/ccacommander/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.ui;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!(other instanceof TestFxmlObject)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        TestFxmlObject otherTestFxmlObject \u003d (TestFxmlObject) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Objects.equals(text, otherTestFxmlObject.text);","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"andrechuakj":1,"-":44}},{"path":"src/test/java/seedu/ccacommander/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"andrechuakj"},"content":"package seedu.ccacommander.ui;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"andrechuakj"},"content":"import static seedu.ccacommander.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"andrechuakj"},"content":"import seedu.ccacommander.MainApp;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"andrechuakj":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"\u003c?import seedu.ccacommander.ui.TestFxmlObject?\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"andrechuakj":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"andrechuakj"},"content":"\u003cfx:root type\u003d\"seedu.ccacommander.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"andrechuakj":1,"-":5}}]

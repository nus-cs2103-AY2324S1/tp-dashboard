[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"teoks0199"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-W10-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-W10-4/tp/actions)","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"teoks0199"},"content":"# FoodNotes","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"teoks0199"},"content":"## Introduction","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"teoks0199"},"content":"FoodNotes is a desktop address book application used to record reviews on food stalls and menus. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"teoks0199"},"content":"## Others","lastModifiedDate":"2023-10-02"},{"lineNumber":9,"author":{"gitId":"teoks0199"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).\u003cbr\u003e","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"teoks0199":7,"-":2}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"samuelmui8"},"content":"### Samuel Mui","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"samuelmui8"},"content":"\u003cimg src\u003d\"images/samuelmui8.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"samuelmui8"},"content":"[[github](https://github.com/samuelmui8)]","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"samuelmui8"},"content":"[[portfolio](team/samuelmui8.md)]","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"samuelmui8"},"content":"* Role: Developer","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"samuelmui8"},"content":"* Responsibilities: Testing","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"teoks0199"},"content":"### Teo Kai Sheng","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"teoks0199"},"content":"\u003cimg src\u003d\"images/teoks0199.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"teoks0199"},"content":"[[github](http://github.com/teoks0199)]","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"teoks0199"},"content":"[[portfolio](team/teoks0199.md)]","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"teoks0199"},"content":"* Role: Developer","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"Ruizhi2001"},"content":"### Lim RuiZhi","lastModifiedDate":"2023-10-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Ruizhi2001"},"content":"\u003cimg src\u003d\"images/ruizhi2001.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"Ruizhi2001"},"content":"[[github](https://github.com/Ruizhi2001)] ","lastModifiedDate":"2023-10-02"},{"lineNumber":37,"author":{"gitId":"Ruizhi2001"},"content":"[[portfolio](team/ruizhi2001.md)]","lastModifiedDate":"2023-10-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"beatricecst"},"content":"### Beatrice Chen","lastModifiedDate":"2023-10-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"samuelmui8"},"content":"\u003cimg src\u003d\"images/beatricecst.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"samuelmui8"},"content":"[[github](http://github.com/beatricecst)]","lastModifiedDate":"2023-10-06"},{"lineNumber":47,"author":{"gitId":"beatricecst"},"content":"[[portfolio](team/beatricecst.md)]","lastModifiedDate":"2023-10-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"jamesebond"},"content":"### Du Kaixuan","lastModifiedDate":"2023-10-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"jamesebond"},"content":"\u003cimg src\u003d\"images/jamesebond.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"jamesebond"},"content":"[[github](https://github.com/jamesebond)]","lastModifiedDate":"2023-10-02"},{"lineNumber":57,"author":{"gitId":"jamesebond"},"content":"[[portfolio](team/jamesebond.md)]","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"jamesebond"},"content":"* Role: Best Developer","lastModifiedDate":"2023-10-02"},{"lineNumber":60,"author":{"gitId":"jamesebond"},"content":"* Responsibilities: Best UI","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"Ruizhi2001":4,"jamesebond":6,"samuelmui8":8,"beatricecst":2,"teoks0199":5,"-":35}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"beatricecst"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/FoodNotes-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/FoodNotes-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"beatricecst"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/FoodNotes-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"beatricecst"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/FoodNotes-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/FoodNotes-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"beatricecst"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/FoodNotes-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"beatricecst"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `FoodNotesParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-10-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"teoks0199"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a stall).","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"beatricecst"},"content":"* When called upon to parse a user command, the `FoodNotesParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `FoodNotesParser` returns back as a `Command` object.","lastModifiedDate":"2023-10-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"beatricecst"},"content":"**API** : [`Model.java`](https://github.com/se-edu/FoodNotes-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2023-10-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"beatricecst"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `FoodNotes`, which `Person` references. This allows `FoodNotes` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"beatricecst"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/FoodNotes-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2023-10-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":144,"author":{"gitId":"beatricecst"},"content":"* inherits from both `FoodNotesStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2023-10-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"beatricecst"},"content":"Classes used by multiple components are in the `seedu.FoodNotes.commons` package.","lastModifiedDate":"2023-10-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"beatricecst"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedFoodNotes`. It extends `FoodNotes` with an undo/redo history, stored internally as an `FoodNotesStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2023-10-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"beatricecst"},"content":"* `VersionedFoodNotes#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2023-10-14"},{"lineNumber":164,"author":{"gitId":"beatricecst"},"content":"* `VersionedFoodNotes#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2023-10-14"},{"lineNumber":165,"author":{"gitId":"beatricecst"},"content":"* `VersionedFoodNotes#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2023-10-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"beatricecst"},"content":"These operations are exposed in the `Model` interface as `Model#commitFoodNotes()`, `Model#undoFoodNotes()` and `Model#redoFoodNotes()` respectively.","lastModifiedDate":"2023-10-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"beatricecst"},"content":"Step 1. The user launches the application for the first time. The `VersionedFoodNotes` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2023-10-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"beatricecst"},"content":"Step 2. The user executes `delete 5` command to delete the 5th stall in the address book. The `delete` command calls `Model#commitFoodNotes()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `FoodNotesStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2023-10-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"beatricecst"},"content":"Step 3. The user executes `add n/David …​` to add a new stall. The `add` command also calls `Model#commitFoodNotes()`, causing another modified address book state to be saved into the `FoodNotesStateList`.","lastModifiedDate":"2023-10-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"beatricecst"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitFoodNotes()`, so the address book state will not be saved into the `FoodNotesStateList`.","lastModifiedDate":"2023-10-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"beatricecst"},"content":"Step 4. The user now decides that adding the stall was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoFoodNotes()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2023-10-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"beatricecst"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial FoodNotes state, then there are no previous FoodNotes states to restore. The `undo` command uses `Model#canUndoFoodNotes()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-10-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"beatricecst"},"content":"The `redo` command does the opposite — it calls `Model#redoFoodNotes()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2023-10-14"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"beatricecst"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `FoodNotesStateList.size() - 1`, pointing to the latest address book state, then there are no undone FoodNotes states to restore. The `redo` command uses `Model#canRedoFoodNotes()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-10-14"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"beatricecst"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitFoodNotes()`, `Model#undoFoodNotes()` or `Model#redoFoodNotes()`. Thus, the `FoodNotesStateList` remains unchanged.","lastModifiedDate":"2023-10-14"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"beatricecst"},"content":"Step 6. The user executes `clear`, which calls `Model#commitFoodNotes()`. Since the `currentStatePointer` is not pointing at the end of the `FoodNotesStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2023-10-14"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"teoks0199"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the stall being deleted).","lastModifiedDate":"2023-10-13"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"samuelmui8"},"content":"* student foodie from NUS","lastModifiedDate":"2023-10-03"},{"lineNumber":261,"author":{"gitId":"samuelmui8"},"content":"* has a need to remember reviews of many food stores and food items","lastModifiedDate":"2023-10-03"},{"lineNumber":262,"author":{"gitId":"samuelmui8"},"content":"* has a tight budget","lastModifiedDate":"2023-10-03"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":266,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"**Value proposition**: manage contacts faster than a typical mouse/GUI driven app","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"| Priority | As a …​                           | I want to …​                                                             | So that I can…​                                                   |","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"Ruizhi2001"},"content":"|----------|-----------------------------------|--------------------------------------------------------------------------|-------------------------------------------------------------------|","lastModifiedDate":"2023-10-03"},{"lineNumber":277,"author":{"gitId":"Ruizhi2001"},"content":"| `* * *`  | new user                          | add reviews to stalls                                                    | remember what I think about the food stall.                       |","lastModifiedDate":"2023-10-03"},{"lineNumber":278,"author":{"gitId":"Ruizhi2001"},"content":"| `* * *`  | new user                          | delete reviews from stalls                                               | delete review of the food stall if I change my mind about it      |","lastModifiedDate":"2023-10-03"},{"lineNumber":279,"author":{"gitId":"Ruizhi2001"},"content":"| `* * *`  | new user                          | add restaurant                                                           | add restaurants if I want to                                      |","lastModifiedDate":"2023-10-03"},{"lineNumber":280,"author":{"gitId":"Ruizhi2001"},"content":"| `* * *`  | new user                          | delete restaurant                                                        | change my mind about the restaurant                               |","lastModifiedDate":"2023-10-03"},{"lineNumber":281,"author":{"gitId":"Ruizhi2001"},"content":"| `* * *`  | new user                          | add menu item                                                            | review specific food from a specific restaurant                   |","lastModifiedDate":"2023-10-03"},{"lineNumber":282,"author":{"gitId":"Ruizhi2001"},"content":"| `* * *`  | new user                          | delete menu item                                                         | remove it if I changed my mind                                    |","lastModifiedDate":"2023-10-03"},{"lineNumber":283,"author":{"gitId":"Ruizhi2001"},"content":"| `* * *`  | new user                          | view restaurants                                                         | see the list of restaurants I have saved                          |","lastModifiedDate":"2023-10-03"},{"lineNumber":284,"author":{"gitId":"Ruizhi2001"},"content":"| `* * *`  | new user                          | view the user guide easily                                               | learn more about the product when needed                          |","lastModifiedDate":"2023-10-03"},{"lineNumber":285,"author":{"gitId":"Ruizhi2001"},"content":"| `* * *`  | new user                          | add reviews to menu items                                                | so that I can remember what I think about the menu item           |","lastModifiedDate":"2023-10-03"},{"lineNumber":286,"author":{"gitId":"Ruizhi2001"},"content":"| `* * *`  | new user                          | delete reviews from menu items                                           | delete review of the menu item if I change my mind about it       |","lastModifiedDate":"2023-10-03"},{"lineNumber":287,"author":{"gitId":"Ruizhi2001"},"content":"| `* *`    | hungry university student         | browse the ‘discount’ page for nearby campus eateries offering discounts | save money on meals                                               |","lastModifiedDate":"2023-10-03"},{"lineNumber":288,"author":{"gitId":"Ruizhi2001"},"content":"| `* *`    | busy student                      | browse the daily specials page                                           | find on-campus restaurants and quickly decide where to grab lunch |","lastModifiedDate":"2023-10-03"},{"lineNumber":289,"author":{"gitId":"Ruizhi2001"},"content":"| `* *`    | experienced user                  | save my favorite places                                                  | easily access them                                                |","lastModifiedDate":"2023-10-03"},{"lineNumber":290,"author":{"gitId":"Ruizhi2001"},"content":"| `* *`    | new user                          | look at menu items of each store                                         | know what I can order                                             |","lastModifiedDate":"2023-10-03"},{"lineNumber":291,"author":{"gitId":"Ruizhi2001"},"content":"| `* *`    | vegetarian student                | filter food options to only show vegetarian choices                      | find what I can eat                                               |","lastModifiedDate":"2023-10-03"},{"lineNumber":292,"author":{"gitId":"Ruizhi2001"},"content":"| `* *`    | student with allergies            | filter food options by allergen information                              | eat safely                                                        |","lastModifiedDate":"2023-10-03"},{"lineNumber":293,"author":{"gitId":"Ruizhi2001"},"content":"| `* *`    | health-conscious student          | see nutritional information for menu items                               | make informed choices about what I eat                            |","lastModifiedDate":"2023-10-03"},{"lineNumber":294,"author":{"gitId":"Ruizhi2001"},"content":"| `* *`    | new user                          | sort by the most highly rated stores                                     | see what is popular                                               |","lastModifiedDate":"2023-10-03"},{"lineNumber":295,"author":{"gitId":"Ruizhi2001"},"content":"| `* *`    | student trying to save money      | sort food items of stores by price                                       | plan what to eat to save money                                    |","lastModifiedDate":"2023-10-03"},{"lineNumber":296,"author":{"gitId":"Ruizhi2001"},"content":"| `* *`    | student who often studies late    | search for food places by filtering by opening hours                     | quickly find food places to go for late-night suppers             |","lastModifiedDate":"2023-10-03"},{"lineNumber":297,"author":{"gitId":"Ruizhi2001"},"content":"| `*`      | see how to travel to the stalls   | See how to travel to the stalls                                          | find my way easily                                                |","lastModifiedDate":"2023-10-03"},{"lineNumber":298,"author":{"gitId":"jamesebond"},"content":"| `*`      | user interested in sustainability | identify local ingredients                                               | support environmentally conscious dining choices                  |","lastModifiedDate":"2023-10-03"},{"lineNumber":299,"author":{"gitId":"jamesebond"},"content":"| `*`      | student always on the move        | receive alerts about pop ups                                             |  seize food opportunities wherever I go.                          |","lastModifiedDate":"2023-10-03"},{"lineNumber":300,"author":{"gitId":"jamesebond"},"content":"| `*`      | Muslim student                    | know which halal certified                                               | eat halal food.                                                   |","lastModifiedDate":"2023-10-03"},{"lineNumber":301,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"beatricecst"},"content":"(For all use cases below, the **System** is the `FoodNotes` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-10-14"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":308,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":309,"author":{"gitId":"beatricecst"},"content":"**Use case: Add a stall**","lastModifiedDate":"2023-10-03"},{"lineNumber":310,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":311,"author":{"gitId":"beatricecst"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":312,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":313,"author":{"gitId":"beatricecst"},"content":"1.  User requests to list stalls","lastModifiedDate":"2023-10-03"},{"lineNumber":314,"author":{"gitId":"beatricecst"},"content":"2.  FoodNotes shows a list of stalls","lastModifiedDate":"2023-10-14"},{"lineNumber":315,"author":{"gitId":"beatricecst"},"content":"3.  User requests to add a stall to the list","lastModifiedDate":"2023-10-03"},{"lineNumber":316,"author":{"gitId":"beatricecst"},"content":"4.  FoodNotes add the stall","lastModifiedDate":"2023-10-14"},{"lineNumber":317,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":318,"author":{"gitId":"beatricecst"},"content":"    Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":319,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":320,"author":{"gitId":"beatricecst"},"content":"**Extensions**","lastModifiedDate":"2023-10-03"},{"lineNumber":321,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":322,"author":{"gitId":"beatricecst"},"content":"* 3a. The stall name and location is not specified","lastModifiedDate":"2023-10-03"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":324,"author":{"gitId":"beatricecst"},"content":"    * 3a1. FoodNotes shows an error message.","lastModifiedDate":"2023-10-14"},{"lineNumber":325,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":326,"author":{"gitId":"beatricecst"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-03"},{"lineNumber":327,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":328,"author":{"gitId":"beatricecst"},"content":"**Use case: Add a review to a stall**","lastModifiedDate":"2023-10-03"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"samuelmui8"},"content":"1.  User requests to list stalls","lastModifiedDate":"2023-10-03"},{"lineNumber":333,"author":{"gitId":"beatricecst"},"content":"2.  FoodNotes shows a list of stalls","lastModifiedDate":"2023-10-14"},{"lineNumber":334,"author":{"gitId":"beatricecst"},"content":"3.  User requests to add a review to a stall","lastModifiedDate":"2023-10-03"},{"lineNumber":335,"author":{"gitId":"beatricecst"},"content":"4.  FoodNotes adds a review to the stall","lastModifiedDate":"2023-10-14"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"samuelmui8"},"content":"* 2a. The list of stalls is empty.","lastModifiedDate":"2023-10-03"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"beatricecst"},"content":"    * 3a1. FoodNotes shows an error message.","lastModifiedDate":"2023-10-14"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"beatricecst"},"content":"* 3b. The star rating or description is not specified","lastModifiedDate":"2023-10-03"},{"lineNumber":352,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":353,"author":{"gitId":"beatricecst"},"content":"    * 3a1. FoodNotes shows an error message.","lastModifiedDate":"2023-10-14"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":355,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-03"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":357,"author":{"gitId":"samuelmui8"},"content":"**Use case: Delete a review from stall**","lastModifiedDate":"2023-10-03"},{"lineNumber":358,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":359,"author":{"gitId":"samuelmui8"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":360,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":361,"author":{"gitId":"samuelmui8"},"content":"1.  User requests to list stalls","lastModifiedDate":"2023-10-03"},{"lineNumber":362,"author":{"gitId":"beatricecst"},"content":"2.  FoodNotes shows a list of stalls","lastModifiedDate":"2023-10-14"},{"lineNumber":363,"author":{"gitId":"samuelmui8"},"content":"3.  User requests to view a stall","lastModifiedDate":"2023-10-03"},{"lineNumber":364,"author":{"gitId":"beatricecst"},"content":"4.  FoodNotes shows the review and menu of the stall","lastModifiedDate":"2023-10-14"},{"lineNumber":365,"author":{"gitId":"samuelmui8"},"content":"5.  User requests to delete the review","lastModifiedDate":"2023-10-03"},{"lineNumber":366,"author":{"gitId":"beatricecst"},"content":"6.  FoodNotes deletes the review","lastModifiedDate":"2023-10-14"},{"lineNumber":367,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":368,"author":{"gitId":"samuelmui8"},"content":"    Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":369,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":370,"author":{"gitId":"samuelmui8"},"content":"**Extensions**","lastModifiedDate":"2023-10-03"},{"lineNumber":371,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":372,"author":{"gitId":"samuelmui8"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-10-03"},{"lineNumber":373,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":374,"author":{"gitId":"beatricecst"},"content":"    * 3a1. FoodNotes shows an error message.","lastModifiedDate":"2023-10-14"},{"lineNumber":375,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":376,"author":{"gitId":"samuelmui8"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-03"},{"lineNumber":377,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":378,"author":{"gitId":"samuelmui8"},"content":"* 4a. There are no reviews.","lastModifiedDate":"2023-10-03"},{"lineNumber":379,"author":{"gitId":"samuelmui8"},"content":"    ","lastModifiedDate":"2023-10-03"},{"lineNumber":380,"author":{"gitId":"samuelmui8"},"content":"  Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":381,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":382,"author":{"gitId":"samuelmui8"},"content":"**Use case: Add a menu item to a stall**","lastModifiedDate":"2023-10-16"},{"lineNumber":383,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":384,"author":{"gitId":"beatricecst"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":385,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":386,"author":{"gitId":"beatricecst"},"content":"1.  User requests to list stalls","lastModifiedDate":"2023-10-03"},{"lineNumber":387,"author":{"gitId":"beatricecst"},"content":"2.  FoodNotes shows a list of stalls","lastModifiedDate":"2023-10-14"},{"lineNumber":388,"author":{"gitId":"beatricecst"},"content":"3.  User requests to add a menu item to a stall","lastModifiedDate":"2023-10-03"},{"lineNumber":389,"author":{"gitId":"beatricecst"},"content":"4.  FoodNotes add the menu item","lastModifiedDate":"2023-10-14"},{"lineNumber":390,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":391,"author":{"gitId":"beatricecst"},"content":"    Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":392,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":393,"author":{"gitId":"beatricecst"},"content":"**Extensions**","lastModifiedDate":"2023-10-03"},{"lineNumber":394,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":395,"author":{"gitId":"beatricecst"},"content":"* 2a. The list of stalls is empty.","lastModifiedDate":"2023-10-03"},{"lineNumber":396,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":397,"author":{"gitId":"beatricecst"},"content":"  Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":398,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":399,"author":{"gitId":"beatricecst"},"content":"* 3a. The given index is invalid","lastModifiedDate":"2023-10-03"},{"lineNumber":400,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":401,"author":{"gitId":"beatricecst"},"content":"    * 3a1. FoodNotes shows an error message.","lastModifiedDate":"2023-10-14"},{"lineNumber":402,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":403,"author":{"gitId":"beatricecst"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-03"},{"lineNumber":404,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":405,"author":{"gitId":"beatricecst"},"content":"**Use case: Add a review to a menu item**","lastModifiedDate":"2023-10-03"},{"lineNumber":406,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":407,"author":{"gitId":"beatricecst"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":408,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":409,"author":{"gitId":"beatricecst"},"content":"1.  User requests to list stalls","lastModifiedDate":"2023-10-03"},{"lineNumber":410,"author":{"gitId":"beatricecst"},"content":"2.  FoodNotes shows a list of stalls","lastModifiedDate":"2023-10-14"},{"lineNumber":411,"author":{"gitId":"beatricecst"},"content":"3.  User requests to view a stall","lastModifiedDate":"2023-10-03"},{"lineNumber":412,"author":{"gitId":"beatricecst"},"content":"4.  FoodNotes shows the menu items and review of the stall","lastModifiedDate":"2023-10-14"},{"lineNumber":413,"author":{"gitId":"beatricecst"},"content":"5.  User requests to add a review to a menu item in the stall","lastModifiedDate":"2023-10-03"},{"lineNumber":414,"author":{"gitId":"beatricecst"},"content":"6.  FoodNotes add review to the menu item","lastModifiedDate":"2023-10-14"},{"lineNumber":415,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":416,"author":{"gitId":"beatricecst"},"content":"    Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":417,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":418,"author":{"gitId":"beatricecst"},"content":"**Extensions**","lastModifiedDate":"2023-10-03"},{"lineNumber":419,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":420,"author":{"gitId":"beatricecst"},"content":"* 2a. The list of stalls is empty.","lastModifiedDate":"2023-10-03"},{"lineNumber":421,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":422,"author":{"gitId":"beatricecst"},"content":"  Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":423,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":424,"author":{"gitId":"beatricecst"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-10-03"},{"lineNumber":425,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":426,"author":{"gitId":"beatricecst"},"content":"    * 3a1. FoodNotes shows an error message.","lastModifiedDate":"2023-10-14"},{"lineNumber":427,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":428,"author":{"gitId":"beatricecst"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-03"},{"lineNumber":429,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":430,"author":{"gitId":"beatricecst"},"content":"* 4a. The star rating or description is not specified","lastModifiedDate":"2023-10-03"},{"lineNumber":431,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":432,"author":{"gitId":"beatricecst"},"content":"    * 4a1. FoodNotes shows an error message.","lastModifiedDate":"2023-10-14"},{"lineNumber":433,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":434,"author":{"gitId":"beatricecst"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-10-03"},{"lineNumber":435,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":436,"author":{"gitId":"samuelmui8"},"content":"**Use case: Delete a menu item from stall**","lastModifiedDate":"2023-10-16"},{"lineNumber":437,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":438,"author":{"gitId":"samuelmui8"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":439,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":440,"author":{"gitId":"samuelmui8"},"content":"1.  User requests to list stalls","lastModifiedDate":"2023-10-03"},{"lineNumber":441,"author":{"gitId":"beatricecst"},"content":"2.  FoodNotes shows a list of stalls","lastModifiedDate":"2023-10-14"},{"lineNumber":442,"author":{"gitId":"samuelmui8"},"content":"3.  User requests to view a stall","lastModifiedDate":"2023-10-03"},{"lineNumber":443,"author":{"gitId":"beatricecst"},"content":"4.  FoodNotes shows the review and menu of the stall","lastModifiedDate":"2023-10-14"},{"lineNumber":444,"author":{"gitId":"samuelmui8"},"content":"5.  User requests to delete a menu item","lastModifiedDate":"2023-10-03"},{"lineNumber":445,"author":{"gitId":"beatricecst"},"content":"6.  FoodNotes deletes the menu item","lastModifiedDate":"2023-10-14"},{"lineNumber":446,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":447,"author":{"gitId":"samuelmui8"},"content":"    Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":448,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":449,"author":{"gitId":"samuelmui8"},"content":"**Extensions**","lastModifiedDate":"2023-10-03"},{"lineNumber":450,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":451,"author":{"gitId":"samuelmui8"},"content":"* 4a. There are no menu items.","lastModifiedDate":"2023-10-03"},{"lineNumber":452,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":453,"author":{"gitId":"samuelmui8"},"content":"  Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":454,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":455,"author":{"gitId":"samuelmui8"},"content":"* 5a. The given index is invalid.","lastModifiedDate":"2023-10-03"},{"lineNumber":456,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":457,"author":{"gitId":"beatricecst"},"content":"    * 5a1. FoodNotes shows an error message.","lastModifiedDate":"2023-10-14"},{"lineNumber":458,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":459,"author":{"gitId":"samuelmui8"},"content":"      Use case resumes at step 4.","lastModifiedDate":"2023-10-03"},{"lineNumber":460,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":461,"author":{"gitId":"jamesebond"},"content":"**Use Case: View All Stalls**","lastModifiedDate":"2023-10-03"},{"lineNumber":462,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":463,"author":{"gitId":"jamesebond"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":464,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":465,"author":{"gitId":"jamesebond"},"content":"1. User requests to view all stalls using the command `list`.","lastModifiedDate":"2023-10-03"},{"lineNumber":466,"author":{"gitId":"jamesebond"},"content":"2. FoodNote retrieves and displays a list of all available stalls, including their names and locations.","lastModifiedDate":"2023-10-03"},{"lineNumber":467,"author":{"gitId":"jamesebond"},"content":"3. User reviews the list of stalls.","lastModifiedDate":"2023-10-03"},{"lineNumber":468,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":469,"author":{"gitId":"jamesebond"},"content":"   Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":470,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":471,"author":{"gitId":"jamesebond"},"content":"**Extensions**","lastModifiedDate":"2023-10-03"},{"lineNumber":472,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":473,"author":{"gitId":"jamesebond"},"content":"* 1a. No stalls are available in the database:","lastModifiedDate":"2023-10-03"},{"lineNumber":474,"author":{"gitId":"jamesebond"},"content":"    * FoodNote displays a message indicating that there are no stalls available.","lastModifiedDate":"2023-10-03"},{"lineNumber":475,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":476,"author":{"gitId":"jamesebond"},"content":"  Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":477,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":478,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"samuelmui8"},"content":"2.  Should be able to hold up to 1000 stalls without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-10-03"},{"lineNumber":484,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"teoks0199"},"content":"### Deleting a stall","lastModifiedDate":"2023-10-13"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"teoks0199"},"content":"1. Deleting a stall while all stalls are being shown","lastModifiedDate":"2023-10-13"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"teoks0199"},"content":"   1. Prerequisites: List all stalls using the `list` command. Multiple stalls in the list.","lastModifiedDate":"2023-10-13"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"teoks0199"},"content":"      Expected: No stall is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2023-10-13"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Ruizhi2001":22,"jamesebond":19,"beatricecst":115,"samuelmui8":51,"teoks0199":6,"-":331}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"beatricecst"},"content":"FoodNotes is a **desktop app for managing food reviews, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, foodnotes can get your food review tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"Ruizhi2001"},"content":"## Quick start (To be updated)","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"beatricecst"},"content":"1. Download the latest `FoodNotes.jar` from [here](https://github.com/se-edu/FoodNotes-level3/releases).","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"beatricecst"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your FoodNotes.","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"beatricecst"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar foodnotes.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"Ruizhi2001"},"content":"    * `list` : Lists all stalls.","lastModifiedDate":"2023-10-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"Ruizhi2001"},"content":"    * `add-stall n/Japanese stall l/Deck` : Adds a stall named `Japanese stall` located at `Deck` to the list of stalls.","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"Ruizhi2001"},"content":"    * `view-stall s/3` : Shows the 3rd stall shown in the current list.","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Ruizhi2001"},"content":"    * `delete-stall s/3` : Deletes the 3rd stall shown in the current list.","lastModifiedDate":"2023-10-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"Ruizhi2001"},"content":"# Features","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"Ruizhi2001"},"content":"**View all stalls:** list","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"Ruizhi2001"},"content":"**Command format:** list","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"Ruizhi2001"},"content":"**Expected output (Success):**","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"Ruizhi2001"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"Ruizhi2001"},"content":"Japanese Stall at Deck  ★★★★☆","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"Ruizhi2001"},"content":"Cake shop at Engine  ★★★★☆","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"Ruizhi2001"},"content":"Noodle stall at Frontier  ★★★★☆","lastModifiedDate":"2023-10-03"},{"lineNumber":52,"author":{"gitId":"Ruizhi2001"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":53,"author":{"gitId":"Ruizhi2001"},"content":"**Expected output (Fail):**","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"Ruizhi2001"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"Ruizhi2001"},"content":"please enter list only","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"Ruizhi2001"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"Ruizhi2001"},"content":"## Stall Features","lastModifiedDate":"2023-10-03"},{"lineNumber":59,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"Ruizhi2001"},"content":"**1.1 Adding a stall:** add-stall","lastModifiedDate":"2023-10-03"},{"lineNumber":61,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":62,"author":{"gitId":"Ruizhi2001"},"content":"**Command format:** add-stall n/\u003cSTALL_NAME\u003e  l/ \u003cLOCATION\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":64,"author":{"gitId":"Ruizhi2001"},"content":"**Ex.:** add-stall n/Japanese stall l/Deck","lastModifiedDate":"2023-10-03"},{"lineNumber":65,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":66,"author":{"gitId":"Ruizhi2001"},"content":"**Expected Output (Success):**","lastModifiedDate":"2023-10-03"},{"lineNumber":67,"author":{"gitId":"Ruizhi2001"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":68,"author":{"gitId":"Ruizhi2001"},"content":"Yay! Japanese stall at Deck is successfully added to list of stalls.","lastModifiedDate":"2023-10-03"},{"lineNumber":69,"author":{"gitId":"Ruizhi2001"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":70,"author":{"gitId":"Ruizhi2001"},"content":"**Expected Output (Fail):**","lastModifiedDate":"2023-10-03"},{"lineNumber":71,"author":{"gitId":"Ruizhi2001"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":72,"author":{"gitId":"Ruizhi2001"},"content":"re-enter in the format : add-stall n/\u003cSTALL_NAME\u003e  l/ \u003cLOCATION\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":73,"author":{"gitId":"Ruizhi2001"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":74,"author":{"gitId":"Ruizhi2001"},"content":"**1.2 Viewing a stall:** view-stall","lastModifiedDate":"2023-10-03"},{"lineNumber":75,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":76,"author":{"gitId":"Ruizhi2001"},"content":"**Command format:** view-stall s/\u003cSTALL_NUMBER\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":77,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":78,"author":{"gitId":"Ruizhi2001"},"content":"**Ex.:** view-stall s/1","lastModifiedDate":"2023-10-03"},{"lineNumber":79,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":80,"author":{"gitId":"Ruizhi2001"},"content":"**Expected output (Success):**","lastModifiedDate":"2023-10-03"},{"lineNumber":81,"author":{"gitId":"Ruizhi2001"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":82,"author":{"gitId":"Ruizhi2001"},"content":"Japanese stall: ★★★★☆","lastModifiedDate":"2023-10-03"},{"lineNumber":83,"author":{"gitId":"Ruizhi2001"},"content":"Review: the auntie very chio","lastModifiedDate":"2023-10-03"},{"lineNumber":84,"author":{"gitId":"Ruizhi2001"},"content":"Menu","lastModifiedDate":"2023-10-03"},{"lineNumber":85,"author":{"gitId":"Ruizhi2001"},"content":"1. Chicken Karage Rice ★★★★☆","lastModifiedDate":"2023-10-03"},{"lineNumber":86,"author":{"gitId":"Ruizhi2001"},"content":"2. Chicken Katsu Curry Rice ★★★★★","lastModifiedDate":"2023-10-03"},{"lineNumber":87,"author":{"gitId":"Ruizhi2001"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":88,"author":{"gitId":"Ruizhi2001"},"content":"**Expected output (Fail)**:","lastModifiedDate":"2023-10-03"},{"lineNumber":89,"author":{"gitId":"Ruizhi2001"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":90,"author":{"gitId":"Ruizhi2001"},"content":"re-enter in the format : view-stall s/\u003cSTALL_NUMBER\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":91,"author":{"gitId":"Ruizhi2001"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":92,"author":{"gitId":"Ruizhi2001"},"content":"**1.3 Deleting a stall:** delete-stall","lastModifiedDate":"2023-10-03"},{"lineNumber":93,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":94,"author":{"gitId":"Ruizhi2001"},"content":"**Command format:** delete-stall s/\u003cSTALL_NUMBER\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":95,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":96,"author":{"gitId":"Ruizhi2001"},"content":"**Ex.:** delete-stall s/1","lastModifiedDate":"2023-10-03"},{"lineNumber":97,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":98,"author":{"gitId":"Ruizhi2001"},"content":"**Expected output (Success):**","lastModifiedDate":"2023-10-03"},{"lineNumber":99,"author":{"gitId":"Ruizhi2001"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":100,"author":{"gitId":"Ruizhi2001"},"content":"Japanese Stall ★★★★☆ has been deleted.","lastModifiedDate":"2023-10-03"},{"lineNumber":101,"author":{"gitId":"Ruizhi2001"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":102,"author":{"gitId":"Ruizhi2001"},"content":"  ","lastModifiedDate":"2023-10-03"},{"lineNumber":103,"author":{"gitId":"Ruizhi2001"},"content":"**Expected output (Fail):**","lastModifiedDate":"2023-10-03"},{"lineNumber":104,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":105,"author":{"gitId":"Ruizhi2001"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":106,"author":{"gitId":"Ruizhi2001"},"content":"re-enter in the format : delete-stall s/\u003cSTALL_NUMBER\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":107,"author":{"gitId":"Ruizhi2001"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":108,"author":{"gitId":"samuelmui8"},"content":"**1.4 Reviewing a stall:** review-stall","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":110,"author":{"gitId":"samuelmui8"},"content":"**Command format:** review-stall s/STALL_NUMBER r/STALL_RATING d/DESCRIPTION","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":112,"author":{"gitId":"samuelmui8"},"content":"**Ex.:** review-stall s/1 r/5 d/the auntie very chio","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":114,"author":{"gitId":"Ruizhi2001"},"content":"**Expected output (Success):**","lastModifiedDate":"2023-10-03"},{"lineNumber":115,"author":{"gitId":"Ruizhi2001"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":116,"author":{"gitId":"Ruizhi2001"},"content":"Yay! You have added a rating of ★★★★★ for the Japanese Stall","lastModifiedDate":"2023-10-03"},{"lineNumber":117,"author":{"gitId":"Ruizhi2001"},"content":"Review: the auntie very chio","lastModifiedDate":"2023-10-03"},{"lineNumber":118,"author":{"gitId":"Ruizhi2001"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":119,"author":{"gitId":"Ruizhi2001"},"content":"**Expected output (Fail):**","lastModifiedDate":"2023-10-03"},{"lineNumber":120,"author":{"gitId":"Ruizhi2001"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":121,"author":{"gitId":"samuelmui8"},"content":"re-enter in the format : review-stall s/STALL_NUMBER r/STALL_RATING d/DESCRIPTION","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"Ruizhi2001"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":123,"author":{"gitId":"Ruizhi2001"},"content":"**Acceptable values:**","lastModifiedDate":"2023-10-03"},{"lineNumber":124,"author":{"gitId":"Ruizhi2001"},"content":"- s/: Positive Integer less than or equal to the size of list","lastModifiedDate":"2023-10-03"},{"lineNumber":125,"author":{"gitId":"Ruizhi2001"},"content":"- r/: Integer from 0 to 5","lastModifiedDate":"2023-10-03"},{"lineNumber":126,"author":{"gitId":"Ruizhi2001"},"content":"- d/: String","lastModifiedDate":"2023-10-03"},{"lineNumber":127,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"Ruizhi2001"},"content":"## Item Features","lastModifiedDate":"2023-10-03"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":130,"author":{"gitId":"Ruizhi2001"},"content":"**2.1 Adding an item to a stall:** add-item","lastModifiedDate":"2023-10-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":132,"author":{"gitId":"Ruizhi2001"},"content":"**Command format:** add-item s/STALL_NUMBER i/ITEM","lastModifiedDate":"2023-10-03"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":134,"author":{"gitId":"Ruizhi2001"},"content":"**Ex.:** add-item s/1 i/Chicken Rice","lastModifiedDate":"2023-10-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":136,"author":{"gitId":"Ruizhi2001"},"content":"**Expected output (Success):**","lastModifiedDate":"2023-10-03"},{"lineNumber":137,"author":{"gitId":"Ruizhi2001"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":138,"author":{"gitId":"Ruizhi2001"},"content":"Yay! Chicken Rice is successfully added as a menu item for Japanese Stall at Deck","lastModifiedDate":"2023-10-03"},{"lineNumber":139,"author":{"gitId":"Ruizhi2001"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":140,"author":{"gitId":"Ruizhi2001"},"content":"**Expected output (Fail):**","lastModifiedDate":"2023-10-03"},{"lineNumber":141,"author":{"gitId":"Ruizhi2001"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":142,"author":{"gitId":"Ruizhi2001"},"content":"re-enter in the format : add-item s/STALL_NUMBER i/ITEM","lastModifiedDate":"2023-10-03"},{"lineNumber":143,"author":{"gitId":"Ruizhi2001"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":144,"author":{"gitId":"Ruizhi2001"},"content":"**Acceptable values:**","lastModifiedDate":"2023-10-03"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":146,"author":{"gitId":"Ruizhi2001"},"content":"- s/: Positive Integer less than or equal to the size of list,","lastModifiedDate":"2023-10-03"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":148,"author":{"gitId":"Ruizhi2001"},"content":"- i/: String","lastModifiedDate":"2023-10-03"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":150,"author":{"gitId":"Ruizhi2001"},"content":"**2.2 Viewing an item from a stall:** view-item","lastModifiedDate":"2023-10-03"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":152,"author":{"gitId":"Ruizhi2001"},"content":"**Command format:** view-item s/STALL_NUMBER i/ITEM_NUMBER","lastModifiedDate":"2023-10-03"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":154,"author":{"gitId":"Ruizhi2001"},"content":"**Ex.:** view-item s/1 i/1","lastModifiedDate":"2023-10-03"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":156,"author":{"gitId":"Ruizhi2001"},"content":"**Expected output (Success):**","lastModifiedDate":"2023-10-03"},{"lineNumber":157,"author":{"gitId":"Ruizhi2001"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":158,"author":{"gitId":"Ruizhi2001"},"content":"Chicken Karage Rice ★★★☆☆","lastModifiedDate":"2023-10-03"},{"lineNumber":159,"author":{"gitId":"Ruizhi2001"},"content":"Review: Great fried chicken that’s crunchy and juicy, but there’s only 3 pieces and everything is in dire need of sauce, meaning it’s not quite bang for buck and you might be hungry again in a few hours.","lastModifiedDate":"2023-10-03"},{"lineNumber":160,"author":{"gitId":"Ruizhi2001"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":162,"author":{"gitId":"Ruizhi2001"},"content":"**Expected output (Fail):**","lastModifiedDate":"2023-10-03"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":164,"author":{"gitId":"Ruizhi2001"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":165,"author":{"gitId":"Ruizhi2001"},"content":"re-enter in the format : view-item s/STALL_NUMBER i/ITEM_NUMBER","lastModifiedDate":"2023-10-03"},{"lineNumber":166,"author":{"gitId":"Ruizhi2001"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":167,"author":{"gitId":"Ruizhi2001"},"content":"**Acceptable values:**","lastModifiedDate":"2023-10-03"},{"lineNumber":168,"author":{"gitId":"Ruizhi2001"},"content":"- s/: Positive Integer less than or equal to the size of list,","lastModifiedDate":"2023-10-03"},{"lineNumber":169,"author":{"gitId":"Ruizhi2001"},"content":"- i/: Positive Integer less than or equal to the size of list","lastModifiedDate":"2023-10-03"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":171,"author":{"gitId":"Ruizhi2001"},"content":"**2.3 Deleting an item from a stall:** delete-item","lastModifiedDate":"2023-10-03"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":173,"author":{"gitId":"Ruizhi2001"},"content":"**Command format:** delete-item s/STALL_NUMBER i/ITEM_NUMBER","lastModifiedDate":"2023-10-03"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":175,"author":{"gitId":"Ruizhi2001"},"content":"**Ex.:** delete-item s/1 i/1","lastModifiedDate":"2023-10-03"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":177,"author":{"gitId":"Ruizhi2001"},"content":"**Expected output (Success):**","lastModifiedDate":"2023-10-03"},{"lineNumber":178,"author":{"gitId":"Ruizhi2001"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":179,"author":{"gitId":"Ruizhi2001"},"content":"Chicken Karaage Rice ★★★★☆ has been deleted from Japanese Stall","lastModifiedDate":"2023-10-03"},{"lineNumber":180,"author":{"gitId":"Ruizhi2001"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":181,"author":{"gitId":"Ruizhi2001"},"content":"**Expected output (Fail):**","lastModifiedDate":"2023-10-03"},{"lineNumber":182,"author":{"gitId":"Ruizhi2001"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":183,"author":{"gitId":"Ruizhi2001"},"content":"re-enter in the format : delete-item s/STALL_NUMBER i/ITEM_NUMBER","lastModifiedDate":"2023-10-03"},{"lineNumber":184,"author":{"gitId":"Ruizhi2001"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":185,"author":{"gitId":"Ruizhi2001"},"content":"**Acceptable values:**","lastModifiedDate":"2023-10-03"},{"lineNumber":186,"author":{"gitId":"Ruizhi2001"},"content":"- s/: Positive Integer less than or equal to the size of list","lastModifiedDate":"2023-10-03"},{"lineNumber":187,"author":{"gitId":"Ruizhi2001"},"content":"- i/: Positive Integer less than or equal to the size of list","lastModifiedDate":"2023-10-03"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":189,"author":{"gitId":"samuelmui8"},"content":"**2.4 Reviewing an item:** review-item","lastModifiedDate":"2023-10-16"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":191,"author":{"gitId":"samuelmui8"},"content":"**Command format:** review-item s/STALL_NUMBER i/ITEM_NUMBER r/ITEM_RATING d/DESCRIPTION","lastModifiedDate":"2023-10-16"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":193,"author":{"gitId":"samuelmui8"},"content":"**Ex.:** review-item s/1 i/1 r/5 d/Tasty chicken rice with a good amount of meat and rice. The chilli is also very good.","lastModifiedDate":"2023-10-16"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":195,"author":{"gitId":"Ruizhi2001"},"content":"**Expected output (Success):**","lastModifiedDate":"2023-10-03"},{"lineNumber":196,"author":{"gitId":"Ruizhi2001"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":197,"author":{"gitId":"samuelmui8"},"content":"Yay! You have added a review for the White Chicken Rice at the Chicken Rice Stall at Deck.","lastModifiedDate":"2023-10-16"},{"lineNumber":198,"author":{"gitId":"samuelmui8"},"content":"Review: ","lastModifiedDate":"2023-10-16"},{"lineNumber":199,"author":{"gitId":"samuelmui8"},"content":"★★★★★","lastModifiedDate":"2023-10-16"},{"lineNumber":200,"author":{"gitId":"samuelmui8"},"content":"Tasty chicken rice with a good amount of meat and rice. The chilli is also very good.","lastModifiedDate":"2023-10-16"},{"lineNumber":201,"author":{"gitId":"Ruizhi2001"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":202,"author":{"gitId":"Ruizhi2001"},"content":"**Expected output (Fail):**","lastModifiedDate":"2023-10-03"},{"lineNumber":203,"author":{"gitId":"Ruizhi2001"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":204,"author":{"gitId":"samuelmui8"},"content":"re-enter in the format: review-item s/STALL_NUMBER i/ITEM_NUMBER r/ITEM_RATING d/DESCRIPTION","lastModifiedDate":"2023-10-16"},{"lineNumber":205,"author":{"gitId":"Ruizhi2001"},"content":"```","lastModifiedDate":"2023-10-03"},{"lineNumber":206,"author":{"gitId":"Ruizhi2001"},"content":"**Acceptable values:**","lastModifiedDate":"2023-10-03"},{"lineNumber":207,"author":{"gitId":"samuelmui8"},"content":"- s/: Positive Integer less than or equal to the size of stall list","lastModifiedDate":"2023-10-16"},{"lineNumber":208,"author":{"gitId":"samuelmui8"},"content":"- i/: Positive Integer less than or equal to the size of menu","lastModifiedDate":"2023-10-16"},{"lineNumber":209,"author":{"gitId":"Ruizhi2001"},"content":"- r/: Integer from 0 to 5","lastModifiedDate":"2023-10-03"},{"lineNumber":210,"author":{"gitId":"Ruizhi2001"},"content":"- d/: String","lastModifiedDate":"2023-10-03"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":212,"author":{"gitId":"samuelmui8"},"content":"**2.5 Deleting an item review:** delete-item-review","lastModifiedDate":"2023-10-16"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":214,"author":{"gitId":"samuelmui8"},"content":"**Command format:** delete-item-review s/STALL_NUMBER i/ITEM_NUMBER","lastModifiedDate":"2023-10-16"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":216,"author":{"gitId":"samuelmui8"},"content":"**Ex.:** delete-item-review s/1 i/1","lastModifiedDate":"2023-10-16"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":218,"author":{"gitId":"samuelmui8"},"content":"**Expected output (Success):**","lastModifiedDate":"2023-10-16"},{"lineNumber":219,"author":{"gitId":"samuelmui8"},"content":"```You have deleted the review for the White Chicken Rice at the Chicken Rice Stall at Deck.```","lastModifiedDate":"2023-10-16"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":221,"author":{"gitId":"samuelmui8"},"content":"**Expected output (Fail):**","lastModifiedDate":"2023-10-16"},{"lineNumber":222,"author":{"gitId":"samuelmui8"},"content":"```","lastModifiedDate":"2023-10-16"},{"lineNumber":223,"author":{"gitId":"samuelmui8"},"content":"re-enter in the format: delete-item-review s/STALL_NUMBER i/ITEM_NUMBER","lastModifiedDate":"2023-10-16"},{"lineNumber":224,"author":{"gitId":"samuelmui8"},"content":"```","lastModifiedDate":"2023-10-16"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":226,"author":{"gitId":"samuelmui8"},"content":"**Acceptable values:**","lastModifiedDate":"2023-10-16"},{"lineNumber":227,"author":{"gitId":"samuelmui8"},"content":"- s/: Positive Integer less than or equal to the size of stall list","lastModifiedDate":"2023-10-16"},{"lineNumber":228,"author":{"gitId":"samuelmui8"},"content":"- i/: Positive Integer less than or equal to the size of menu","lastModifiedDate":"2023-10-16"},{"lineNumber":229,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"Ruizhi2001":136,"beatricecst":4,"samuelmui8":26,"-":64}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"samuelmui8"},"content":"    content: \"FoodNotes\";","lastModifiedDate":"2023-10-04"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"samuelmui8":1,"-":294}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":AddressBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":17,"author":{"gitId":"teoks0199"},"content":"ecp -\u003e ec ++: index, editStallDescriptor","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"teoks0199":1,"-":21}},{"path":"docs/team/beatricecst.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"beatricecst"},"content":"layout: page","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"beatricecst"},"content":"title: Beatrice\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"beatricecst"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"beatricecst"},"content":"### Project: FoodNotes","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"teoks0199"},"content":"FoodNotes is a desktop address book application used to record reviews on food stalls and menus. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"beatricecst"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"beatricecst"},"content":"* **New Feature**: TO BE ADDED","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"beatricecst"},"content":"    * What it does:","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"beatricecst"},"content":"    * Justification:","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"beatricecst"},"content":"    * Highlights:","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"beatricecst"},"content":"    * Credits:","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"beatricecst"},"content":"* **Code contributed**:","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"beatricecst"},"content":"* **Project management**:","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"beatricecst"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"beatricecst"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"beatricecst"},"content":"* **Community**:","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"beatricecst"},"content":"* **Tools**:","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"beatricecst":27,"teoks0199":1}},{"path":"docs/team/jamesebond.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jamesebond"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"jamesebond"},"content":"layout: page","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"jamesebond"},"content":"title: Du Kaixuan\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"jamesebond"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"jamesebond"},"content":"### Project: FoodNotes","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"teoks0199"},"content":"FoodNotes is a desktop address book application used to record reviews on food stalls and menus.","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"jamesebond"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"jamesebond"},"content":"It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"jamesebond"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"jamesebond"},"content":"* **New Feature**: TO BE ADDED","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"jamesebond"},"content":"    * What it does:","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"jamesebond"},"content":"    * Justification:","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"jamesebond"},"content":"    * Highlights:","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"jamesebond"},"content":"    * Credits:","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"jamesebond"},"content":"* **Code contributed**:","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"jamesebond"},"content":"* **Project management**:","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"jamesebond"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"jamesebond"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"jamesebond"},"content":"* **Community**:","lastModifiedDate":"2023-10-02"},{"lineNumber":29,"author":{"gitId":"jamesebond"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":30,"author":{"gitId":"jamesebond"},"content":"* **Tools**:","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"jamesebond":29,"teoks0199":1}},{"path":"docs/team/ruizhi2001.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Ruizhi2001"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"Ruizhi2001"},"content":"layout: page","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"Ruizhi2001"},"content":"title: RuiZhi\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"Ruizhi2001"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"Ruizhi2001"},"content":"### Project: FoodNotes","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"teoks0199"},"content":"FoodNotes is a desktop address book application used to record reviews on food stalls and menus. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"Ruizhi2001"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"Ruizhi2001"},"content":"* **New Feature**: TO BE ADDED","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"Ruizhi2001"},"content":"    * What it does: ","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"Ruizhi2001"},"content":"    * Justification: ","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"Ruizhi2001"},"content":"    * Highlights: ","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"Ruizhi2001"},"content":"    * Credits: ","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"Ruizhi2001"},"content":"* **Code contributed**:","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"Ruizhi2001"},"content":"* **Project management**:","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"Ruizhi2001"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"Ruizhi2001"},"content":"    ","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"Ruizhi2001"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"Ruizhi2001"},"content":"    ","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"Ruizhi2001"},"content":"* **Community**:","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"Ruizhi2001"},"content":"    ","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"Ruizhi2001"},"content":"* **Tools**:","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"Ruizhi2001":27,"teoks0199":1}},{"path":"docs/team/samuelmui.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"samuelmui8"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"samuelmui8"},"content":"layout: page","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"samuelmui8"},"content":"title: Samuel Mui\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"samuelmui8"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"samuelmui8"},"content":"### Project: FoodNotes","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"teoks0199"},"content":"FoodNotes is a desktop address book application used to record reviews on food stalls and menus. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"samuelmui8"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"samuelmui8"},"content":"* **New Feature**: TO BE ADDED","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"samuelmui8"},"content":"    * What it does:","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"samuelmui8"},"content":"    * Justification:","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"samuelmui8"},"content":"    * Highlights:","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"samuelmui8"},"content":"    * Credits:","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"samuelmui8"},"content":"* **Code contributed**:","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"samuelmui8"},"content":"* **Project management**:","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"samuelmui8"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"samuelmui8"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"samuelmui8"},"content":"* **Community**:","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"samuelmui8"},"content":"* **Tools**:","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"samuelmui8":27,"teoks0199":1}},{"path":"docs/team/samuelmui8.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"samuelmui8"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"samuelmui8"},"content":"layout: page","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"samuelmui8"},"content":"title: Samuel Mui\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"samuelmui8"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"samuelmui8"},"content":"### Project: FoodNotes","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"samuelmui8"},"content":"FoodNotes is a desktop address book application used to record reviews on food stalls and menus. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"samuelmui8"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"samuelmui8"},"content":"* **New Feature**: TO BE ADDED","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"samuelmui8"},"content":"    * What it does:","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"samuelmui8"},"content":"    * Justification:","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"samuelmui8"},"content":"    * Highlights:","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"samuelmui8"},"content":"    * Credits:","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"samuelmui8"},"content":"* **Code contributed**:","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"samuelmui8"},"content":"* **Project management**:","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"samuelmui8"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"samuelmui8"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"samuelmui8"},"content":"* **Community**:","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"samuelmui8"},"content":"* **Tools**:","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"samuelmui8":28}},{"path":"docs/team/teoks0199.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"teoks0199"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":2,"author":{"gitId":"teoks0199"},"content":"layout: page","lastModifiedDate":"2023-10-02"},{"lineNumber":3,"author":{"gitId":"teoks0199"},"content":"title: Kai Sheng\u0027s Project Portfolio Page","lastModifiedDate":"2023-10-02"},{"lineNumber":4,"author":{"gitId":"teoks0199"},"content":"---","lastModifiedDate":"2023-10-02"},{"lineNumber":5,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":6,"author":{"gitId":"teoks0199"},"content":"### Project: FoodNotes","lastModifiedDate":"2023-10-02"},{"lineNumber":7,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":8,"author":{"gitId":"teoks0199"},"content":"FoodNotes is a desktop address book application used to record reviews on food stalls and menus. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":10,"author":{"gitId":"teoks0199"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-02"},{"lineNumber":11,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":12,"author":{"gitId":"teoks0199"},"content":"* **New Feature**: TO BE ADDED","lastModifiedDate":"2023-10-02"},{"lineNumber":13,"author":{"gitId":"teoks0199"},"content":"    * What it does:","lastModifiedDate":"2023-10-02"},{"lineNumber":14,"author":{"gitId":"teoks0199"},"content":"    * Justification:","lastModifiedDate":"2023-10-02"},{"lineNumber":15,"author":{"gitId":"teoks0199"},"content":"    * Highlights:","lastModifiedDate":"2023-10-02"},{"lineNumber":16,"author":{"gitId":"teoks0199"},"content":"    * Credits:","lastModifiedDate":"2023-10-02"},{"lineNumber":17,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":18,"author":{"gitId":"teoks0199"},"content":"* **Code contributed**:","lastModifiedDate":"2023-10-02"},{"lineNumber":19,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":20,"author":{"gitId":"teoks0199"},"content":"* **Project management**:","lastModifiedDate":"2023-10-02"},{"lineNumber":21,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":22,"author":{"gitId":"teoks0199"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-02"},{"lineNumber":23,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":24,"author":{"gitId":"teoks0199"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-02"},{"lineNumber":25,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":26,"author":{"gitId":"teoks0199"},"content":"* **Community**:","lastModifiedDate":"2023-10-02"},{"lineNumber":27,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-02"},{"lineNumber":28,"author":{"gitId":"teoks0199"},"content":"* **Tools**:","lastModifiedDate":"2023-10-02"}],"authorContributionMap":{"teoks0199":28}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"teoks0199"},"content":" * Changes the remark of an existing stall in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/RemarkCommandClass.png)","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"teoks0199"},"content":"            + \": Edits the remark of the stall identified \"","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"teoks0199"},"content":"            + \"by the index number used in the last stall listing. \"","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"teoks0199"},"content":"     * @param index of the stall in the filtered stall list to edit the remark","lastModifiedDate":"2023-10-13"},{"lineNumber":105,"author":{"gitId":"teoks0199"},"content":"     * @param remark of the stall to be updated to","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/RemarkCommandParserClass.png)","lastModifiedDate":"2023-09-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"teoks0199"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of stall data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the stall’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a stall.","lastModifiedDate":"2023-10-13"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"teoks0199"},"content":"Create a new `Remark` in `seedu.address.model.stall`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2023-10-13"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":233,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"teoks0199"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each stall.","lastModifiedDate":"2023-10-13"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"teoks0199"},"content":"Simply add the following to [`seedu.address.ui.StallCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2023-10-13"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"teoks0199"},"content":"public PersonCard(Person stall, int displayedIndex) {","lastModifiedDate":"2023-10-13"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"teoks0199"},"content":"    remark.setText(stall.getRemark().value);","lastModifiedDate":"2023-10-13"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"teoks0199"},"content":"        Person stallToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-13"},{"lineNumber":345,"author":{"gitId":"teoks0199"},"content":"        Person editedStall \u003d new Person(","lastModifiedDate":"2023-10-13"},{"lineNumber":346,"author":{"gitId":"teoks0199"},"content":"                stallToEdit.getName(), stallToEdit.getPhone(), stallToEdit.getEmail(),","lastModifiedDate":"2023-10-13"},{"lineNumber":347,"author":{"gitId":"teoks0199"},"content":"                stallToEdit.getAddress(), remark, stallToEdit.getTags());","lastModifiedDate":"2023-10-13"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":349,"author":{"gitId":"teoks0199"},"content":"        model.setPerson(stallToEdit, editedStall);","lastModifiedDate":"2023-10-13"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"teoks0199"},"content":"        return new CommandResult(generateSuccessMessage(editedStall));","lastModifiedDate":"2023-10-13"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":357,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":358,"author":{"gitId":"teoks0199"},"content":"     * {@code stallToEdit}.","lastModifiedDate":"2023-10-13"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":360,"author":{"gitId":"teoks0199"},"content":"    private String generateSuccessMessage(Person stallToEdit) {","lastModifiedDate":"2023-10-13"},{"lineNumber":361,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"teoks0199"},"content":"        return String.format(message, stallToEdit);","lastModifiedDate":"2023-10-13"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":376,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"teoks0199":20,"-":379}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"teoks0199"},"content":"The `address` field in `Person` is actually an instance of the `seedu.address.model.stall.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"teoks0199"},"content":"  \"stalls\": [ {","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"teoks0199":2,"-":110}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"teoks0199"},"content":"       Person stallToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-13"},{"lineNumber":193,"author":{"gitId":"teoks0199"},"content":"       Person editedStall \u003d createEditedPerson(stallToEdit, editStallDescriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":194,"author":{"gitId":"teoks0199"},"content":"       if (!stallToEdit.isSamePerson(editedStall) \u0026\u0026 model.hasPerson(editedStall)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"teoks0199"},"content":"       model.setPerson(stallToEdit, editedStall);","lastModifiedDate":"2023-10-13"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"teoks0199"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedStall));","lastModifiedDate":"2023-10-13"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"teoks0199"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the stall data.","lastModifiedDate":"2023-10-13"},{"lineNumber":205,"author":{"gitId":"teoks0199"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ stalls.\u003cbr\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":206,"author":{"gitId":"teoks0199"},"content":"     FYI, The \u0027filtered list\u0027 is the list of stalls resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the stalls so that the user can see the edited stall along with all other stalls. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":207,"author":{"gitId":"teoks0199"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of stalls is being tracked.","lastModifiedDate":"2023-10-13"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"teoks0199"},"content":"        stalls.addAll(","lastModifiedDate":"2023-10-13"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"teoks0199":10,"-":291}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Stall;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"teoks0199"},"content":"    /** Returns an unmodifiable view of the filtered list of stalls */","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"teoks0199"},"content":"    ObservableList\u003cStall\u003e getFilteredStallList();","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"beatricecst"},"content":"    ObservableList\u003cStall\u003e getTempFilteredStallList();","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"beatricecst":1,"teoks0199":3,"-":48}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Stall;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"teoks0199"},"content":"    public ObservableList\u003cStall\u003e getFilteredStallList() {","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"teoks0199"},"content":"        return model.getFilteredStallList();","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":74,"author":{"gitId":"beatricecst"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"beatricecst"},"content":"    public ObservableList\u003cStall\u003e getTempFilteredStallList() {","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"beatricecst"},"content":"        return model.getTempFilteredStallList();","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"beatricecst":3,"teoks0199":3,"-":87}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"Ruizhi2001"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"samuelmui8"},"content":"import seedu.address.model.item.review.ItemReview;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Stall;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"teoks0199"},"content":"    public static final String MESSAGE_INVALID_STALL_DISPLAYED_INDEX \u003d \"The stall index provided is invalid\";","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"Ruizhi2001"},"content":"    public static final String MESSAGE_INVALID_ITEM_DISPLAYED_INDEX \u003d \"The item index provided is invalid\";","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"teoks0199"},"content":"    public static final String MESSAGE_STALLS_LISTED_OVERVIEW \u003d \"%1$d stalls listed!\";","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"teoks0199"},"content":"     * Formats the {@code stall} for display to the user.","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"teoks0199"},"content":"    public static String format(Stall stall) {","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"teoks0199"},"content":"        builder.append(stall.getName())","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"teoks0199"},"content":"                .append(\"; Location: \")","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"teoks0199"},"content":"                .append(stall.getLocation());","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"Ruizhi2001"},"content":"     * Formats the {@code item} for display to the user.","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"Ruizhi2001"},"content":"    public static String format(Item item) {","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"Ruizhi2001"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"Ruizhi2001"},"content":"        builder.append(item.getName());","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"Ruizhi2001"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"samuelmui8"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"samuelmui8"},"content":"     * Formats the {@code itemReview} for display to the user.","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"samuelmui8"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"samuelmui8"},"content":"    public static String format(ItemReview itemReview) {","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"samuelmui8"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"samuelmui8"},"content":"        builder.append(itemReview.getRating())","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"samuelmui8"},"content":"                .append(\"; Description: \")","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"samuelmui8"},"content":"                .append(itemReview.getDescription());","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"samuelmui8"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"samuelmui8"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Ruizhi2001":12,"samuelmui8":12,"teoks0199":8,"-":37}},{"path":"src/main/java/seedu/address/logic/commands/AddItemCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ruizhi2001"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Ruizhi2001"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Ruizhi2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ITEM;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"Ruizhi2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STALL;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Ruizhi2001"},"content":"import java.util.List;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"Ruizhi2001"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"Ruizhi2001"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"Ruizhi2001"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"Ruizhi2001"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"Ruizhi2001"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"Ruizhi2001"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"Ruizhi2001"},"content":"import seedu.address.model.stall.Stall;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"Ruizhi2001"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"Ruizhi2001"},"content":" * Adds a Item to the address book.","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"Ruizhi2001"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"Ruizhi2001"},"content":"public class AddItemCommand extends Command {","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"Ruizhi2001"},"content":"    public static final String COMMAND_WORD \u003d \"add-item\";","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"Ruizhi2001"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an item to the address book. \"","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"Ruizhi2001"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"Ruizhi2001"},"content":"            + PREFIX_STALL + \"STALL_INDEX \"","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"Ruizhi2001"},"content":"            + PREFIX_ITEM + \"ITEM_NAME \\n\"","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"Ruizhi2001"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"Ruizhi2001"},"content":"            + PREFIX_STALL + \"1 \"","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"Ruizhi2001"},"content":"            + PREFIX_ITEM + \"Chicken Rice\";","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"Ruizhi2001"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New Item added: %1$s\";","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"Ruizhi2001"},"content":"    public static final String MESSAGE_DUPLICATE_ITEM \u003d \"This Item already exists in this Stall\";","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"Ruizhi2001"},"content":"    private final Item toAdd;","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"Ruizhi2001"},"content":"    private final Index stallIndex;","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"Ruizhi2001"},"content":"     * Creates an AddItemCommand to add the specified {@code Item}","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"Ruizhi2001"},"content":"    public AddItemCommand(Index stallIndex, Item item) {","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"Ruizhi2001"},"content":"        requireNonNull(item);","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"Ruizhi2001"},"content":"        this.toAdd \u003d item;","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"Ruizhi2001"},"content":"        this.stallIndex \u003d stallIndex;","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"Ruizhi2001"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"Ruizhi2001"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"Ruizhi2001"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"Ruizhi2001"},"content":"        List\u003cStall\u003e lastShownList \u003d model.getFilteredStallList();","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"Ruizhi2001"},"content":"        if (stallIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"samuelmui8"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STALL_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"Ruizhi2001"},"content":"        Stall stallToUpdate \u003d lastShownList.get(stallIndex.getZeroBased());","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"Ruizhi2001"},"content":"        if (model.hasItem(stallToUpdate, toAdd)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"Ruizhi2001"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_ITEM);","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"Ruizhi2001"},"content":"        model.addItem(stallToUpdate, toAdd);","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"Ruizhi2001"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"Ruizhi2001"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"Ruizhi2001"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"Ruizhi2001"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"Ruizhi2001"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"Ruizhi2001"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"Ruizhi2001"},"content":"        if (!(other instanceof AddItemCommand)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"Ruizhi2001"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"Ruizhi2001"},"content":"        AddItemCommand otherAddItemCommand \u003d (AddItemCommand) other;","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"Ruizhi2001"},"content":"        return toAdd.equals(otherAddItemCommand.toAdd);","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"Ruizhi2001"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"Ruizhi2001"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"Ruizhi2001"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"Ruizhi2001"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"Ruizhi2001"},"content":"                .toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"Ruizhi2001"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"Ruizhi2001":85,"samuelmui8":1}},{"path":"src/main/java/seedu/address/logic/commands/AddItemReviewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelmui8"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"samuelmui8"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"samuelmui8"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"samuelmui8"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ITEM;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"samuelmui8"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RATING;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"samuelmui8"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STALL;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"samuelmui8"},"content":"import java.util.List;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"samuelmui8"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"samuelmui8"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"samuelmui8"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"samuelmui8"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"samuelmui8"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"samuelmui8"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"samuelmui8"},"content":"import seedu.address.model.item.UniqueItemList;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"samuelmui8"},"content":"import seedu.address.model.item.review.ItemReview;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"samuelmui8"},"content":"import seedu.address.model.stall.Stall;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"samuelmui8"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"samuelmui8"},"content":" * Adds a review to an item of a stall.","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"samuelmui8"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"samuelmui8"},"content":"public class AddItemReviewCommand extends Command {","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"samuelmui8"},"content":"    public static final String COMMAND_WORD \u003d \"review-item\";","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"samuelmui8"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a review to an item of a stall.\"","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"samuelmui8"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"samuelmui8"},"content":"            + PREFIX_STALL + \"STALL NUMBER \"","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"samuelmui8"},"content":"            + PREFIX_ITEM + \"ITEM NUMBER \"","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"samuelmui8"},"content":"            + PREFIX_RATING + \"RATING \"","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"samuelmui8"},"content":"            + PREFIX_DESCRIPTION + \"DESCRIPTION \\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"samuelmui8"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"samuelmui8"},"content":"            + PREFIX_STALL + \"1 \"","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"samuelmui8"},"content":"            + PREFIX_ITEM + \"1 \"","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"samuelmui8"},"content":"            + PREFIX_RATING + \"5 \"","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"samuelmui8"},"content":"            + PREFIX_DESCRIPTION + \"Tasty chicken rice with a good amount of meat and rice. \"","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"samuelmui8"},"content":"            + \"The chilli is also very good.\";","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"samuelmui8"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Yay! You have added a review for the %1$s at %2$s.\";","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"samuelmui8"},"content":"    public static final String MESSAGE_DUPLICATE_ITEM_REVIEW \u003d \"This item already has a review.\";","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"samuelmui8"},"content":"    private final ItemReview toAdd;","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"samuelmui8"},"content":"    private final Index stallIndex;","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"samuelmui8"},"content":"    private final Index itemIndex;","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"samuelmui8"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"samuelmui8"},"content":"     * Creates an AddItemReviewCommand to add the specified {@code ItemReview}","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"samuelmui8"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"samuelmui8"},"content":"    public AddItemReviewCommand(Index stallIndex, Index itemIndex, ItemReview itemReview) {","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"samuelmui8"},"content":"        requireNonNull(itemReview);","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"samuelmui8"},"content":"        this.toAdd \u003d itemReview;","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"samuelmui8"},"content":"        this.stallIndex \u003d stallIndex;","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"samuelmui8"},"content":"        this.itemIndex \u003d itemIndex;","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"samuelmui8"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"samuelmui8"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"samuelmui8"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"samuelmui8"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"samuelmui8"},"content":"        List\u003cStall\u003e lastShownList \u003d model.getFilteredStallList();","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"samuelmui8"},"content":"        if (stallIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"samuelmui8"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STALL_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"samuelmui8"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"samuelmui8"},"content":"        Stall stallToUpdate \u003d lastShownList.get(stallIndex.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"samuelmui8"},"content":"        UniqueItemList menu \u003d stallToUpdate.getMenu();","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"samuelmui8"},"content":"        if (itemIndex.getZeroBased() \u003e\u003d menu.getSize()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"samuelmui8"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ITEM_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"samuelmui8"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"samuelmui8"},"content":"        Item itemToUpdate \u003d menu.getItem(itemIndex.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"samuelmui8"},"content":"        if (model.hasItemReview(stallToUpdate, itemToUpdate)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"samuelmui8"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_ITEM_REVIEW);","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"samuelmui8"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"samuelmui8"},"content":"        model.addItemReview(stallToUpdate, itemToUpdate, toAdd);","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"samuelmui8"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, itemToUpdate.getName(), stallToUpdate.getName()));","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"samuelmui8"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"samuelmui8"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"samuelmui8"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"samuelmui8"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"samuelmui8"},"content":"            return true;","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"samuelmui8"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"samuelmui8"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"samuelmui8"},"content":"        if (!(other instanceof AddItemReviewCommand)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"samuelmui8"},"content":"            return false;","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"samuelmui8"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"samuelmui8"},"content":"        // state check","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"samuelmui8"},"content":"        AddItemReviewCommand e \u003d (AddItemReviewCommand) other;","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"samuelmui8"},"content":"        return toAdd.equals(e.toAdd)","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"samuelmui8"},"content":"                \u0026\u0026 stallIndex.equals(e.stallIndex)","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"samuelmui8"},"content":"                \u0026\u0026 itemIndex.equals(e.itemIndex);","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"samuelmui8"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"samuelmui8"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"samuelmui8"},"content":"    public String toString() {","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"samuelmui8"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"samuelmui8"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"samuelmui8"},"content":"                .toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"samuelmui8"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"samuelmui8"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"samuelmui8":109}},{"path":"src/main/java/seedu/address/logic/commands/AddStallCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Stall;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"teoks0199"},"content":" * Adds a stall to the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"teoks0199"},"content":"public class AddStallCommand extends Command {","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"teoks0199"},"content":"    public static final String COMMAND_WORD \u003d \"add-stall\";","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"teoks0199"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a stall to the address book. \"","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":23,"author":{"gitId":"teoks0199"},"content":"            + PREFIX_LOCATION + \"LOCATION \\n\"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"teoks0199"},"content":"            + PREFIX_NAME + \"Japanese Stall \"","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"teoks0199"},"content":"            + PREFIX_LOCATION + \"Deck\";","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"teoks0199"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New stall added: %1$s\";","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"teoks0199"},"content":"    public static final String MESSAGE_DUPLICATE_STALL \u003d \"This stall already exists in FoodNotes\";","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"teoks0199"},"content":"    private final Stall toAdd;","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"teoks0199"},"content":"     * Creates an AddStallCommand to add the specified {@code Stall}","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"teoks0199"},"content":"    public AddStallCommand(Stall stall) {","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"teoks0199"},"content":"        requireNonNull(stall);","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"teoks0199"},"content":"        toAdd \u003d stall;","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"teoks0199"},"content":"        if (model.hasStall(toAdd)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"teoks0199"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_STALL);","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"teoks0199"},"content":"        model.addStall(toAdd);","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"teoks0199"},"content":"        if (!(other instanceof AddStallCommand)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"teoks0199"},"content":"        AddStallCommand otherAddStallCommand \u003d (AddStallCommand) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"teoks0199"},"content":"        return toAdd.equals(otherAddStallCommand.toAdd);","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"teoks0199":23,"-":51}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"beatricecst"},"content":"    /** The application should show the details of a particular stall. */","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"beatricecst"},"content":"    private final boolean isStallDetail;","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"beatricecst"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, boolean isStallDetail) {","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"beatricecst"},"content":"        this.isStallDetail \u003d isStallDetail;","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"beatricecst"},"content":"        this(feedbackToUser, false, false, false);","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"beatricecst"},"content":"    public boolean isStallDetail() {","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"beatricecst"},"content":"        return isStallDetail;","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"beatricecst"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"beatricecst"},"content":"                \u0026\u0026 isStallDetail \u003d\u003d otherCommandResult.isStallDetail;","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"beatricecst"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit, isStallDetail);","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .add(\"feedbackToUser\", feedbackToUser)","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                .add(\"showHelp\", showHelp)","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                .add(\"exit\", exit)","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"beatricecst"},"content":"                .add(\"isStallDetail\", isStallDetail)","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"beatricecst":14,"-":78}},{"path":"src/main/java/seedu/address/logic/commands/DeleteItemCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ruizhi2001"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Ruizhi2001"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"Ruizhi2001"},"content":"import java.util.List;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Ruizhi2001"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"Ruizhi2001"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"Ruizhi2001"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"Ruizhi2001"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"Ruizhi2001"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"Ruizhi2001"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"Ruizhi2001"},"content":"import seedu.address.model.item.UniqueItemList;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"Ruizhi2001"},"content":"import seedu.address.model.stall.Stall;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"Ruizhi2001"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"Ruizhi2001"},"content":" * Deletes a item identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"Ruizhi2001"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"Ruizhi2001"},"content":"public class DeleteItemCommand extends Command {","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"Ruizhi2001"},"content":"    public static final String COMMAND_WORD \u003d \"delete-item\";","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"Ruizhi2001"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"Ruizhi2001"},"content":"            + \": Deletes the item identified by the index number used in the displayed item list.\\n\"","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"Ruizhi2001"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"Ruizhi2001"},"content":"            + \"Example: \" + COMMAND_WORD + \" s/1 i/1\";","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"Ruizhi2001"},"content":"    public static final String MESSAGE_DELETE_ITEM_SUCCESS \u003d \"Deleted Item: %1$s from Stall: %2$s\";","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"Ruizhi2001"},"content":"    private final Index itemIndex;","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"Ruizhi2001"},"content":"    private final Index stallIndex;","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"Ruizhi2001"},"content":"     * Creates a DeleteItemCommand to delete the specified {@code Item}","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"Ruizhi2001"},"content":"    public DeleteItemCommand(Index stallIndex, Index itemIndex) {","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"Ruizhi2001"},"content":"        this.itemIndex \u003d itemIndex;","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"Ruizhi2001"},"content":"        this.stallIndex \u003d stallIndex;","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"Ruizhi2001"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"Ruizhi2001"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"Ruizhi2001"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"Ruizhi2001"},"content":"        List\u003cStall\u003e lastShownList \u003d model.getFilteredStallList();","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"Ruizhi2001"},"content":"        if (stallIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"Ruizhi2001"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ITEM_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"Ruizhi2001"},"content":"        Stall stallToDeleteFrom \u003d lastShownList.get(stallIndex.getZeroBased());","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"Ruizhi2001"},"content":"        UniqueItemList menu \u003d stallToDeleteFrom.getMenu();","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"Ruizhi2001"},"content":"        if (itemIndex.getZeroBased() \u003e\u003d menu.getSize()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"Ruizhi2001"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ITEM_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"Ruizhi2001"},"content":"        Item itemToDelete \u003d menu.getItem(itemIndex.getZeroBased());","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"Ruizhi2001"},"content":"        model.deleteItem(stallToDeleteFrom, itemToDelete);","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"Ruizhi2001"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_ITEM_SUCCESS, Messages.format(itemToDelete), Messages","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"Ruizhi2001"},"content":"                .format(stallToDeleteFrom)));","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"Ruizhi2001"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"Ruizhi2001"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"Ruizhi2001"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"Ruizhi2001"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"Ruizhi2001"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"Ruizhi2001"},"content":"        if (!(other instanceof DeleteItemCommand)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"Ruizhi2001"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"Ruizhi2001"},"content":"        DeleteItemCommand otherDeleteItemCommand \u003d (DeleteItemCommand) other;","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"Ruizhi2001"},"content":"        return itemIndex.equals(otherDeleteItemCommand.itemIndex);","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"Ruizhi2001"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"Ruizhi2001"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"Ruizhi2001"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"Ruizhi2001"},"content":"                .add(\"itemIndex\", itemIndex)","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"Ruizhi2001"},"content":"                .toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"Ruizhi2001"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"Ruizhi2001":85}},{"path":"src/main/java/seedu/address/logic/commands/DeleteItemReviewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelmui8"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"samuelmui8"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"samuelmui8"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ITEM;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"samuelmui8"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STALL;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"samuelmui8"},"content":"import java.util.List;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"samuelmui8"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"samuelmui8"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"samuelmui8"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"samuelmui8"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"samuelmui8"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"samuelmui8"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"samuelmui8"},"content":"import seedu.address.model.item.UniqueItemList;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"samuelmui8"},"content":"import seedu.address.model.stall.Stall;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"samuelmui8"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"samuelmui8"},"content":" * Deletes a review from an item from a stall.","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"samuelmui8"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"samuelmui8"},"content":"public class DeleteItemReviewCommand extends Command {","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"samuelmui8"},"content":"    public static final String COMMAND_WORD \u003d \"delete-item-review\";","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"samuelmui8"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Deletes a review from an item from a stall.\"","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"samuelmui8"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"samuelmui8"},"content":"            + PREFIX_STALL + \"STALL NUMBER \"","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"samuelmui8"},"content":"            + PREFIX_ITEM + \"ITEM NUMBER \\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"samuelmui8"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"samuelmui8"},"content":"            + PREFIX_STALL + \"1 \"","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"samuelmui8"},"content":"            + PREFIX_ITEM + \"1 \";","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"samuelmui8"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"You have deleted a review for the %1$s at %2$s.\";","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"samuelmui8"},"content":"    private static final String MESSAGE_ITEM_REVIEW_NOT_FOUND \u003d \"This item does not have a review.\";","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"samuelmui8"},"content":"    private final Index stallIndex;","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"samuelmui8"},"content":"    private final Index itemIndex;","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"samuelmui8"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"samuelmui8"},"content":"     * Creates an DeleteItemReviewCommand to delete the specified {@code ItemReview}","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"samuelmui8"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"samuelmui8"},"content":"    public DeleteItemReviewCommand(Index stallIndex, Index itemIndex) {","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"samuelmui8"},"content":"        this.stallIndex \u003d stallIndex;","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"samuelmui8"},"content":"        this.itemIndex \u003d itemIndex;","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"samuelmui8"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"samuelmui8"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"samuelmui8"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"samuelmui8"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"samuelmui8"},"content":"        List\u003cStall\u003e lastShownList \u003d model.getFilteredStallList();","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"samuelmui8"},"content":"        if (stallIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"samuelmui8"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STALL_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"samuelmui8"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"samuelmui8"},"content":"        Stall stallToUpdate \u003d lastShownList.get(stallIndex.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"samuelmui8"},"content":"        UniqueItemList menu \u003d stallToUpdate.getMenu();","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"samuelmui8"},"content":"        if (itemIndex.getZeroBased() \u003e\u003d menu.getSize()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"samuelmui8"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ITEM_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"samuelmui8"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"samuelmui8"},"content":"        Item itemToUpdate \u003d menu.getItem(itemIndex.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"samuelmui8"},"content":"        if (!model.hasItemReview(stallToUpdate, itemToUpdate)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"samuelmui8"},"content":"            throw new CommandException(MESSAGE_ITEM_REVIEW_NOT_FOUND);","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"samuelmui8"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"samuelmui8"},"content":"        model.deleteItemReview(stallToUpdate, itemToUpdate);","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"samuelmui8"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(itemToUpdate), Messages","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"samuelmui8"},"content":"                .format(stallToUpdate)));","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"samuelmui8"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"samuelmui8"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"samuelmui8"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"samuelmui8"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"samuelmui8"},"content":"                || (other instanceof DeleteItemReviewCommand // instanceof handles nulls","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"samuelmui8"},"content":"                \u0026\u0026 stallIndex.equals(((DeleteItemReviewCommand) other).stallIndex)","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"samuelmui8"},"content":"                \u0026\u0026 itemIndex.equals(((DeleteItemReviewCommand) other).itemIndex));","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"samuelmui8"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"samuelmui8"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"samuelmui8"},"content":"    public String toString() {","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"samuelmui8"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"samuelmui8"},"content":"                .add(\"stallIndex\", stallIndex)","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"samuelmui8"},"content":"                .add(\"itemIndex\", itemIndex)","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"samuelmui8"},"content":"                .toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"samuelmui8"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":89,"author":{"gitId":"samuelmui8"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"samuelmui8":89}},{"path":"src/main/java/seedu/address/logic/commands/DeleteStallCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STALL;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Stall;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"teoks0199"},"content":" * Deletes a stall identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"teoks0199"},"content":"public class DeleteStallCommand extends Command {","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"teoks0199"},"content":"    public static final String COMMAND_WORD \u003d \"delete-stall\";","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"teoks0199"},"content":"            + \": Deletes the stall identified by the index number used in the displayed stall list.\\n\"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"teoks0199"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"teoks0199"},"content":"            + PREFIX_STALL + \"STALL_INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"teoks0199"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"teoks0199"},"content":"            + PREFIX_STALL + \"1\";","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"teoks0199"},"content":"    public static final String MESSAGE_DELETE_STALL_SUCCESS \u003d \"Deleted Stall: %1$s\";","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"teoks0199"},"content":"    public DeleteStallCommand(Index targetIndex) {","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"teoks0199"},"content":"        List\u003cStall\u003e lastShownList \u003d model.getFilteredStallList();","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"teoks0199"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STALL_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"teoks0199"},"content":"        Stall stallToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"teoks0199"},"content":"        model.deleteStall(stallToDelete);","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"teoks0199"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_STALL_SUCCESS, Messages.format(stallToDelete)));","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"teoks0199"},"content":"        if (!(other instanceof DeleteStallCommand)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"teoks0199"},"content":"        DeleteStallCommand otherDeleteStallCommand \u003d (DeleteStallCommand) other;","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"teoks0199"},"content":"        return targetIndex.equals(otherDeleteStallCommand.targetIndex);","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"teoks0199":20,"-":52}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STALLS;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Location;","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Name;","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Stall;","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"teoks0199"},"content":" * Edits the details of an existing stall in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"teoks0199"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the stall identified \"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"teoks0199"},"content":"            + \"by the index number used in the displayed stall list. \"","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"teoks0199"},"content":"            + \"[\" + PREFIX_LOCATION + \"LOCATION] \";","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"teoks0199"},"content":"    public static final String MESSAGE_EDIT_STALL_SUCCESS \u003d \"Edited Stall: %1$s\";","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"teoks0199"},"content":"    public static final String MESSAGE_DUPLICATE_STALL \u003d \"This stall already exists in the address book.\";","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"teoks0199"},"content":"    private final EditStallDescriptor editStallDescriptor;","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"teoks0199"},"content":"     * @param index of the stall in the filtered stall list to edit","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"teoks0199"},"content":"     * @param editStallDescriptor details to edit the stall with","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"teoks0199"},"content":"    public EditCommand(Index index, EditStallDescriptor editStallDescriptor) {","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":50,"author":{"gitId":"teoks0199"},"content":"        requireNonNull(editStallDescriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":53,"author":{"gitId":"teoks0199"},"content":"        this.editStallDescriptor \u003d new EditStallDescriptor(editStallDescriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"teoks0199"},"content":"        List\u003cStall\u003e lastShownList \u003d model.getFilteredStallList();","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"teoks0199"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STALL_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"teoks0199"},"content":"        Stall stallToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"teoks0199"},"content":"        Stall editedStall \u003d createEditedStall(stallToEdit, editStallDescriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"teoks0199"},"content":"        if (!stallToEdit.isSameStall(editedStall) \u0026\u0026 model.hasStall(editedStall)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"teoks0199"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_STALL);","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"teoks0199"},"content":"        model.setStall(stallToEdit, editedStall);","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"teoks0199"},"content":"        model.updateFilteredStallList(PREDICATE_SHOW_ALL_STALLS);","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"teoks0199"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_STALL_SUCCESS, Messages.format(editedStall)));","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"teoks0199"},"content":"     * Creates and returns a {@code Stall} with the details of {@code stallToEdit}","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"teoks0199"},"content":"     * edited with {@code editStallDescriptor}.","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"teoks0199"},"content":"    private static Stall createEditedStall(Stall stallToEdit, EditStallDescriptor editStallDescriptor) {","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"teoks0199"},"content":"        assert stallToEdit !\u003d null;","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":84,"author":{"gitId":"teoks0199"},"content":"        Name updatedName \u003d editStallDescriptor.getName().orElse(stallToEdit.getName());","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"teoks0199"},"content":"        Location updatedLocation \u003d editStallDescriptor.getLocation().orElse(stallToEdit.getLocation());","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":87,"author":{"gitId":"teoks0199"},"content":"        return new Stall(updatedName, updatedLocation);","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":103,"author":{"gitId":"teoks0199"},"content":"                \u0026\u0026 editStallDescriptor.equals(otherEditCommand.editStallDescriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"teoks0199"},"content":"                .add(\"editStallDescriptor\", editStallDescriptor)","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":115,"author":{"gitId":"teoks0199"},"content":"     * Stores the details to edit the stall with. Each non-empty field value will replace the","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"teoks0199"},"content":"     * corresponding field value of the stall.","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":118,"author":{"gitId":"teoks0199"},"content":"    public static class EditStallDescriptor {","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":120,"author":{"gitId":"teoks0199"},"content":"        private Location location;","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"teoks0199"},"content":"        public EditStallDescriptor() {}","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":127,"author":{"gitId":"teoks0199"},"content":"        public EditStallDescriptor(EditStallDescriptor toCopy) {","lastModifiedDate":"2023-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":129,"author":{"gitId":"teoks0199"},"content":"            setLocation(toCopy.location);","lastModifiedDate":"2023-10-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"teoks0199"},"content":"            return CollectionUtil.isAnyNonNull(name, location);","lastModifiedDate":"2023-10-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"teoks0199"},"content":"        public void setLocation(Location location) {","lastModifiedDate":"2023-10-13"},{"lineNumber":148,"author":{"gitId":"teoks0199"},"content":"            this.location \u003d location;","lastModifiedDate":"2023-10-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":151,"author":{"gitId":"teoks0199"},"content":"        public Optional\u003cLocation\u003e getLocation() {","lastModifiedDate":"2023-10-13"},{"lineNumber":152,"author":{"gitId":"teoks0199"},"content":"            return Optional.ofNullable(location);","lastModifiedDate":"2023-10-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":163,"author":{"gitId":"teoks0199"},"content":"            if (!(other instanceof EditStallDescriptor)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":167,"author":{"gitId":"teoks0199"},"content":"            EditStallDescriptor otherEditStallDescriptor \u003d (EditStallDescriptor) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":168,"author":{"gitId":"teoks0199"},"content":"            return Objects.equals(name, otherEditStallDescriptor.name)","lastModifiedDate":"2023-10-13"},{"lineNumber":169,"author":{"gitId":"teoks0199"},"content":"                    \u0026\u0026 Objects.equals(location, otherEditStallDescriptor.location);","lastModifiedDate":"2023-10-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":176,"author":{"gitId":"teoks0199"},"content":"                    .add(\"location\", location)","lastModifiedDate":"2023-10-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"teoks0199":53,"-":127}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"beatricecst"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false);","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"beatricecst":1,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"teoks0199"},"content":" * Finds and lists all stalls in address book whose name contains any of the argument keywords.","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"teoks0199"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all stalls whose names contain any of \"","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"teoks0199"},"content":"        model.updateFilteredStallList(predicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"teoks0199"},"content":"                String.format(Messages.MESSAGE_STALLS_LISTED_OVERVIEW, model.getFilteredStallList().size()));","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"teoks0199":5,"-":53}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"beatricecst"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false, false);","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"beatricecst":1,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STALLS;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"teoks0199"},"content":" * Lists all stalls in the address book to the user.","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"teoks0199"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all stalls\";","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"teoks0199"},"content":"        model.updateFilteredStallList(PREDICATE_SHOW_ALL_STALLS);","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"beatricecst"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false, false);","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"beatricecst":1,"teoks0199":4,"-":19}},{"path":"src/main/java/seedu/address/logic/commands/ViewStallCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"beatricecst"},"content":"import seedu.address.model.stall.Stall;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"beatricecst"},"content":" * Deletes a stall identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"beatricecst"},"content":"public class ViewStallCommand extends Command {","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"beatricecst"},"content":"    public static final String COMMAND_WORD \u003d \"view-stall\";","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"beatricecst"},"content":"            + \": Displays the details of the stall identified by the index number used in the displayed stall list.\\n\"","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"beatricecst"},"content":"    public static final String MESSAGE_VIEW_STALL_SUCCESS \u003d \"Here are the details of this stall.\";","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"beatricecst"},"content":"    public ViewStallCommand(Index targetIndex) {","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"beatricecst"},"content":"        List\u003cStall\u003e lastShownList \u003d model.getFilteredStallList();","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"beatricecst"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STALL_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"beatricecst"},"content":"        Stall stallToView \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"beatricecst"},"content":"        model.showStall(stallToView);","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"beatricecst"},"content":"        return new CommandResult(String.format(MESSAGE_VIEW_STALL_SUCCESS, Messages.format(stallToView)),","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"beatricecst"},"content":"                false, false, true);","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"beatricecst"},"content":"        if (!(other instanceof ViewStallCommand)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"beatricecst"},"content":"        ViewStallCommand otherViewStallCommand \u003d (ViewStallCommand) other;","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"beatricecst"},"content":"        return targetIndex.equals(otherViewStallCommand.targetIndex);","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"beatricecst":16,"-":53}},{"path":"src/main/java/seedu/address/logic/parser/AddItemCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ruizhi2001"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Ruizhi2001"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Ruizhi2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ITEM;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"Ruizhi2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STALL;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Ruizhi2001"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"Ruizhi2001"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"Ruizhi2001"},"content":"import seedu.address.logic.commands.AddItemCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"Ruizhi2001"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"Ruizhi2001"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"Ruizhi2001"},"content":"import seedu.address.model.item.ItemName;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"Ruizhi2001"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"Ruizhi2001"},"content":" * Parses input arguments and creates a new AddItemCommand object","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"Ruizhi2001"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"Ruizhi2001"},"content":"public class AddItemCommandParser implements Parser\u003cAddItemCommand\u003e {","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"Ruizhi2001"},"content":"     * Parses the given {@code String} of arguments in the context of the AddItemCommand","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"Ruizhi2001"},"content":"     * and returns an AddItemCommand object for execution.","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"Ruizhi2001"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"Ruizhi2001"},"content":"    public AddItemCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"Ruizhi2001"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"Ruizhi2001"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_STALL, PREFIX_ITEM);","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"Ruizhi2001"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_STALL, PREFIX_ITEM)","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"Ruizhi2001"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"Ruizhi2001"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddItemCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"Ruizhi2001"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_STALL, PREFIX_ITEM);","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"Ruizhi2001"},"content":"        Index stallIndex \u003d ParserUtil.parseStallIndex(argMultimap.getValue(PREFIX_STALL).get());","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"Ruizhi2001"},"content":"        ItemName itemName \u003d ParserUtil.parseItemName(argMultimap.getValue(PREFIX_ITEM).get());","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"Ruizhi2001"},"content":"        Item item \u003d new Item(itemName);","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"Ruizhi2001"},"content":"        return new AddItemCommand(stallIndex, item);","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"Ruizhi2001"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"Ruizhi2001"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"Ruizhi2001"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"Ruizhi2001"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"Ruizhi2001"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"Ruizhi2001":52}},{"path":"src/main/java/seedu/address/logic/parser/AddItemReviewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelmui8"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"samuelmui8"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"samuelmui8"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"samuelmui8"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ITEM;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"samuelmui8"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RATING;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"samuelmui8"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STALL;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"samuelmui8"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"samuelmui8"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"samuelmui8"},"content":"import seedu.address.logic.commands.AddItemReviewCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"samuelmui8"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"samuelmui8"},"content":"import seedu.address.model.item.review.Description;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"samuelmui8"},"content":"import seedu.address.model.item.review.ItemReview;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"samuelmui8"},"content":"import seedu.address.model.item.review.Rating;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"samuelmui8"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"samuelmui8"},"content":" * Parses input arguments and creates a new AddItemCommand object","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"samuelmui8"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"samuelmui8"},"content":"public class AddItemReviewCommandParser implements Parser\u003cAddItemReviewCommand\u003e {","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"samuelmui8"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"samuelmui8"},"content":"     * Parses the given {@code String} of arguments in the context of the AddItemReviewCommand","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"samuelmui8"},"content":"     * and returns an AddItemReviewCommand object for execution.","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"samuelmui8"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"samuelmui8"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"samuelmui8"},"content":"    public AddItemReviewCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"samuelmui8"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"samuelmui8"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_STALL, PREFIX_ITEM, PREFIX_RATING, PREFIX_DESCRIPTION);","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"samuelmui8"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_STALL, PREFIX_ITEM, PREFIX_RATING, PREFIX_DESCRIPTION)","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"samuelmui8"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"samuelmui8"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddItemReviewCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"samuelmui8"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"samuelmui8"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_STALL, PREFIX_ITEM, PREFIX_RATING, PREFIX_DESCRIPTION);","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"samuelmui8"},"content":"        Index stallIndex \u003d ParserUtil.parseStallIndex(argMultimap.getValue(PREFIX_STALL).get());","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"samuelmui8"},"content":"        Index itemIndex \u003d ParserUtil.parseItemIndex(argMultimap.getValue(PREFIX_ITEM).get());","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"samuelmui8"},"content":"        Rating rating \u003d ParserUtil.parseRating(argMultimap.getValue(PREFIX_RATING).get());","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"samuelmui8"},"content":"        Description description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"samuelmui8"},"content":"        ItemReview itemReview \u003d new ItemReview(rating, description);","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"samuelmui8"},"content":"        return new AddItemReviewCommand(stallIndex, itemIndex, itemReview);","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"samuelmui8"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"samuelmui8"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"samuelmui8"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"samuelmui8"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"samuelmui8"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"samuelmui8"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"samuelmui8"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"samuelmui8"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"samuelmui8"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"samuelmui8":57}},{"path":"src/main/java/seedu/address/logic/parser/AddStallCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"teoks0199"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"teoks0199"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"teoks0199"},"content":"import seedu.address.logic.commands.AddStallCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"teoks0199"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Location;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Name;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Stall;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"teoks0199"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"teoks0199"},"content":" * Parses input arguments and creates a new AddStallCommand object","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"teoks0199"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"teoks0199"},"content":"public class AddStallCommandParser implements Parser\u003cAddStallCommand\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"teoks0199"},"content":"     * Parses the given {@code String} of arguments in the context of the AddStallCommand","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"teoks0199"},"content":"     * and returns an AddStallCommand object for execution.","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"teoks0199"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"teoks0199"},"content":"    public AddStallCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"teoks0199"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"teoks0199"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_LOCATION);","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"teoks0199"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_LOCATION)","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"teoks0199"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"teoks0199"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddStallCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"teoks0199"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"teoks0199"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_LOCATION);","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"teoks0199"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"teoks0199"},"content":"        Location location \u003d ParserUtil.parseLocation(argMultimap.getValue(PREFIX_LOCATION).get());","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"teoks0199"},"content":"        Stall stall \u003d new Stall(name, location);","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"teoks0199"},"content":"        return new AddStallCommand(stall);","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"teoks0199"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"teoks0199"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"teoks0199"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"teoks0199"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"teoks0199"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"teoks0199":51}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"Ruizhi2001"},"content":"import seedu.address.logic.commands.AddItemCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"samuelmui8"},"content":"import seedu.address.logic.commands.AddItemReviewCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"teoks0199"},"content":"import seedu.address.logic.commands.AddStallCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"Ruizhi2001"},"content":"import seedu.address.logic.commands.DeleteItemCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"samuelmui8"},"content":"import seedu.address.logic.commands.DeleteItemReviewCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"teoks0199"},"content":"import seedu.address.logic.commands.DeleteStallCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"beatricecst"},"content":"import seedu.address.logic.commands.ViewStallCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"teoks0199"},"content":"        case AddStallCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"teoks0199"},"content":"            return new AddStallCommandParser().parse(arguments);","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":68,"author":{"gitId":"teoks0199"},"content":"        case DeleteStallCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"teoks0199"},"content":"            return new DeleteStallCommandParser().parse(arguments);","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"Ruizhi2001"},"content":"        case AddItemCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"Ruizhi2001"},"content":"            return new AddItemCommandParser().parse(arguments);","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"Ruizhi2001"},"content":"        case DeleteItemCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"Ruizhi2001"},"content":"            return new DeleteItemCommandParser().parse(arguments);","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"samuelmui8"},"content":"        case AddItemReviewCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"samuelmui8"},"content":"            return new AddItemReviewCommandParser().parse(arguments);","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"samuelmui8"},"content":"        case DeleteItemReviewCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"samuelmui8"},"content":"            return new DeleteItemReviewCommandParser().parse(arguments);","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":98,"author":{"gitId":"beatricecst"},"content":"        case ViewStallCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"beatricecst"},"content":"            return new ViewStallCommandParser().parse(arguments);","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Ruizhi2001":8,"samuelmui8":8,"beatricecst":4,"teoks0199":6,"-":81}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"teoks0199"},"content":"    public static final Prefix PREFIX_LOCATION \u003d new Prefix(\"l/\");","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"Ruizhi2001"},"content":"    public static final Prefix PREFIX_ITEM \u003d new Prefix(\"i/\");","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"Ruizhi2001"},"content":"    public static final Prefix PREFIX_STALL \u003d new Prefix(\"s/\");","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"samuelmui8"},"content":"    public static final Prefix PREFIX_RATING \u003d new Prefix(\"r/\");","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"samuelmui8"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"d/\");","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Ruizhi2001":3,"samuelmui8":2,"teoks0199":1,"-":11}},{"path":"src/main/java/seedu/address/logic/parser/DeleteItemCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ruizhi2001"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Ruizhi2001"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Ruizhi2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ITEM;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"Ruizhi2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STALL;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Ruizhi2001"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"Ruizhi2001"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"Ruizhi2001"},"content":"import seedu.address.logic.commands.DeleteItemCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"Ruizhi2001"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"Ruizhi2001"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"Ruizhi2001"},"content":" * Parses input arguments and creates a new DeleteStallCommand object","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"Ruizhi2001"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"Ruizhi2001"},"content":"public class DeleteItemCommandParser implements Parser\u003cDeleteItemCommand\u003e {","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"Ruizhi2001"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteStallCommand","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"Ruizhi2001"},"content":"     * and returns a DeleteStallCommand object for execution.","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"Ruizhi2001"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"Ruizhi2001"},"content":"    public DeleteItemCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"Ruizhi2001"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"Ruizhi2001"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_STALL, PREFIX_ITEM);","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"Ruizhi2001"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_STALL, PREFIX_ITEM)","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"Ruizhi2001"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"Ruizhi2001"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteItemCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"Ruizhi2001"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"Ruizhi2001"},"content":"            argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_STALL, PREFIX_ITEM);","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"Ruizhi2001"},"content":"            Index stallIndex \u003d ParserUtil.parseStallIndex(argMultimap.getValue(PREFIX_STALL).get());","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"Ruizhi2001"},"content":"            Index itemIndex \u003d ParserUtil.parseItemIndex(argMultimap.getValue(PREFIX_ITEM).get());","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"Ruizhi2001"},"content":"            return new DeleteItemCommand(stallIndex, itemIndex);","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"Ruizhi2001"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"Ruizhi2001"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"Ruizhi2001"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteItemCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"Ruizhi2001"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"Ruizhi2001"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"Ruizhi2001"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"Ruizhi2001"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"Ruizhi2001"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"Ruizhi2001":51}},{"path":"src/main/java/seedu/address/logic/parser/DeleteItemReviewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelmui8"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"samuelmui8"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"samuelmui8"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ITEM;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"samuelmui8"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STALL;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"samuelmui8"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"samuelmui8"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"samuelmui8"},"content":"import seedu.address.logic.commands.DeleteItemReviewCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"samuelmui8"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"samuelmui8"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"samuelmui8"},"content":" * Parses input arguments and creates a new DeleteItemReviewCommand object","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"samuelmui8"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"samuelmui8"},"content":"public class DeleteItemReviewCommandParser implements Parser\u003cDeleteItemReviewCommand\u003e {","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"samuelmui8"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"samuelmui8"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteItemReviewCommand","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"samuelmui8"},"content":"     * and returns an DeleteItemReviewCommand object for execution.","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"samuelmui8"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"samuelmui8"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"samuelmui8"},"content":"    public DeleteItemReviewCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"samuelmui8"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"samuelmui8"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_STALL, PREFIX_ITEM);","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"samuelmui8"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_STALL, PREFIX_ITEM)","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"samuelmui8"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"samuelmui8"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"samuelmui8"},"content":"                    DeleteItemReviewCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"samuelmui8"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"samuelmui8"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_STALL, PREFIX_ITEM);","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"samuelmui8"},"content":"        Index stallIndex \u003d ParserUtil.parseStallIndex(argMultimap.getValue(PREFIX_STALL).get());","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"samuelmui8"},"content":"        Index itemIndex \u003d ParserUtil.parseItemIndex(argMultimap.getValue(PREFIX_ITEM).get());","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"samuelmui8"},"content":"        return new DeleteItemReviewCommand(stallIndex, itemIndex);","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"samuelmui8"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"samuelmui8"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"samuelmui8"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"samuelmui8"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"samuelmui8"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"samuelmui8"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"samuelmui8"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"samuelmui8"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"samuelmui8"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"samuelmui8":47}},{"path":"src/main/java/seedu/address/logic/parser/DeleteStallCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"teoks0199"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ITEM;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STALL;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"teoks0199"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"teoks0199"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"teoks0199"},"content":"import seedu.address.logic.commands.DeleteStallCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"teoks0199"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"teoks0199"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"teoks0199"},"content":" * Parses input arguments and creates a new DeleteStallCommand object","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"teoks0199"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"teoks0199"},"content":"public class DeleteStallCommandParser implements Parser\u003cDeleteStallCommand\u003e {","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"teoks0199"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteStallCommand","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"teoks0199"},"content":"     * and returns a DeleteStallCommand object for execution.","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"teoks0199"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"teoks0199"},"content":"    public DeleteStallCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"teoks0199"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"teoks0199"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_STALL);","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"teoks0199"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_STALL)","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"teoks0199"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"teoks0199"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteStallCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"teoks0199"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"teoks0199"},"content":"        try {","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"teoks0199"},"content":"            argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_STALL, PREFIX_ITEM);","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"teoks0199"},"content":"            Index stallIndex \u003d ParserUtil.parseStallIndex(argMultimap.getValue(PREFIX_STALL).get());","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"teoks0199"},"content":"            return new DeleteStallCommand(stallIndex);","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"teoks0199"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"teoks0199"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"teoks0199"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteStallCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"teoks0199"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"teoks0199"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"teoks0199"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"teoks0199"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"teoks0199"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"teoks0199"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"teoks0199":50}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"teoks0199"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_LOCATION);","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"teoks0199"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_LOCATION);","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"teoks0199"},"content":"        EditCommand.EditStallDescriptor editStallDescriptor \u003d new EditCommand.EditStallDescriptor();","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"teoks0199"},"content":"            editStallDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"teoks0199"},"content":"        if (argMultimap.getValue(PREFIX_LOCATION).isPresent()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"teoks0199"},"content":"            editStallDescriptor.setLocation(ParserUtil.parseLocation(argMultimap.getValue(PREFIX_LOCATION).get()));","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"teoks0199"},"content":"        if (!editStallDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"teoks0199"},"content":"        return new EditCommand(index, editStallDescriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"teoks0199":9,"-":46}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"teoks0199":1,"-":32}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":8,"author":{"gitId":"Ruizhi2001"},"content":"import seedu.address.model.item.ItemName;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"samuelmui8"},"content":"import seedu.address.model.item.review.Description;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"samuelmui8"},"content":"import seedu.address.model.item.review.Rating;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Location;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Name;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"teoks0199"},"content":"     * Parses a {@code String location} into a {@code Location}.","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"teoks0199"},"content":"     * @throws ParseException if the given {@code location} is invalid.","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"teoks0199"},"content":"    public static Location parseLocation(String location) throws ParseException {","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"teoks0199"},"content":"        requireNonNull(location);","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"teoks0199"},"content":"        String trimmedLocation \u003d location.trim();","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"teoks0199"},"content":"        if (!Location.isValidLocation(trimmedLocation)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"teoks0199"},"content":"            throw new ParseException(Location.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"teoks0199"},"content":"        return new Location(trimmedLocation);","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"Ruizhi2001"},"content":"     * Parses a {@code String itemName} into a {@code ItemName}.","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"Ruizhi2001"},"content":"     * @throws ParseException if the given {@code itemName} is invalid.","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"Ruizhi2001"},"content":"    public static ItemName parseItemName(String itemName) throws ParseException {","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"Ruizhi2001"},"content":"        requireNonNull(itemName);","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"Ruizhi2001"},"content":"        String trimmedItemName \u003d itemName.trim();","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"Ruizhi2001"},"content":"        if (!ItemName.isValidItemName(trimmedItemName)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"Ruizhi2001"},"content":"            throw new ParseException(ItemName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"Ruizhi2001"},"content":"        return new ItemName(trimmedItemName);","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"Ruizhi2001"},"content":"     * Parses a {@code String stallName} into a {@code StallName}.","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"Ruizhi2001"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"Ruizhi2001"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"Ruizhi2001"},"content":"     * @throws ParseException if the given {@code stallName} is invalid.","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"Ruizhi2001"},"content":"    public static Index parseStallIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"Ruizhi2001"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"Ruizhi2001"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"Ruizhi2001"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"Ruizhi2001"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"Ruizhi2001"},"content":"     * Parses a {@code String ItemIndex} into a {@code ItemIndex}.","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"Ruizhi2001"},"content":"     * @throws ParseException if the given {@code itemIndex} is invalid.","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"Ruizhi2001"},"content":"    public static Index parseItemIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"Ruizhi2001"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"Ruizhi2001"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"Ruizhi2001"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"Ruizhi2001"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"samuelmui8"},"content":"     * Parses a {@code String rating} into a {@code Rating}.","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"samuelmui8"},"content":"     * @throws ParseException if the given {@code rating} is invalid.","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"samuelmui8"},"content":"    public static Rating parseRating(String rating) throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"samuelmui8"},"content":"        requireNonNull(rating);","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"samuelmui8"},"content":"        String trimmedRating \u003d rating.trim();","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"samuelmui8"},"content":"        if (!Rating.isValidRating(trimmedRating)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"samuelmui8"},"content":"            throw new ParseException(Rating.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"samuelmui8"},"content":"        return new Rating(trimmedRating);","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"samuelmui8"},"content":"     * Parses a {@code String description} into a {@code Description}.","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"samuelmui8"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"samuelmui8"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"samuelmui8"},"content":"     * @throws ParseException if the given {@code description} is invalid.","lastModifiedDate":"2023-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":128,"author":{"gitId":"samuelmui8"},"content":"    public static Description parseDescription(String description) throws ParseException {","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"samuelmui8"},"content":"        requireNonNull(description);","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"samuelmui8"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"samuelmui8"},"content":"        if (!Description.isValidDescription(trimmedDescription)) {","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"samuelmui8"},"content":"            throw new ParseException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"samuelmui8"},"content":"        return new Description(trimmedDescription);","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Ruizhi2001":30,"samuelmui8":20,"teoks0199":10,"-":76}},{"path":"src/main/java/seedu/address/logic/parser/ViewStallCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"beatricecst"},"content":"import seedu.address.logic.commands.ViewStallCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"beatricecst"},"content":"public class ViewStallCommandParser implements Parser\u003cViewStallCommand\u003e {","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"beatricecst"},"content":"    public ViewStallCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"beatricecst"},"content":"            return new ViewStallCommand(index);","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"beatricecst"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewStallCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"beatricecst":5,"-":24}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Stall;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.UniqueStallList;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"teoks0199"},"content":" * Duplicates are not allowed (by .isSameStall comparison)","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"teoks0199"},"content":"    private final UniqueStallList stalls;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"teoks0199"},"content":"        stalls \u003d new UniqueStallList();","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"teoks0199"},"content":"     * Creates an AddressBook using the stalls in the {@code toBeCopied}","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"teoks0199"},"content":"     * Replaces the contents of the stall list with {@code stalls}.","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"teoks0199"},"content":"     * {@code stalls} must not contain duplicate stalls.","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"teoks0199"},"content":"    public void setStalls(List\u003cStall\u003e stalls) {","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"teoks0199"},"content":"        this.stalls.setStalls(stalls);","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"teoks0199"},"content":"        setStalls(newData.getStallList());","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"teoks0199"},"content":"    //// stall-level operations","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"teoks0199"},"content":"     * Returns true if a stall with the same identity as {@code stall} exists in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"teoks0199"},"content":"    public boolean hasStall(Stall stall) {","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"teoks0199"},"content":"        requireNonNull(stall);","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"teoks0199"},"content":"        return stalls.contains(stall);","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"teoks0199"},"content":"     * Adds a stall to the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"teoks0199"},"content":"     * The stall must not already exist in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"teoks0199"},"content":"    public void addStall(Stall p) {","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"teoks0199"},"content":"        stalls.add(p);","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"teoks0199"},"content":"     * Replaces the given stall {@code target} in the list with {@code editedStall}.","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"teoks0199"},"content":"     * The stall identity of {@code editedStall} must not be the same as another existing stall in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"teoks0199"},"content":"    public void setStall(Stall target, Stall editedStall) {","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"teoks0199"},"content":"        requireNonNull(editedStall);","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"teoks0199"},"content":"        stalls.setStall(target, editedStall);","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"teoks0199"},"content":"    public void removeStall(Stall key) {","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"teoks0199"},"content":"        stalls.remove(key);","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"teoks0199"},"content":"                .add(\"stalls\", stalls)","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"teoks0199"},"content":"    public ObservableList\u003cStall\u003e getStallList() {","lastModifiedDate":"2023-10-13"},{"lineNumber":108,"author":{"gitId":"teoks0199"},"content":"        return stalls.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"teoks0199"},"content":"        return stalls.equals(otherAddressBook.stalls);","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"teoks0199"},"content":"        return stalls.hashCode();","lastModifiedDate":"2023-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"teoks0199":32,"-":98}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"Ruizhi2001"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"samuelmui8"},"content":"import seedu.address.model.item.review.ItemReview;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Stall;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"teoks0199"},"content":"    Predicate\u003cStall\u003e PREDICATE_SHOW_ALL_STALLS \u003d unused -\u003e true;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"teoks0199"},"content":"     * Returns true if a stall with the same identity as {@code stall} exists in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"teoks0199"},"content":"    boolean hasStall(Stall stall);","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"teoks0199"},"content":"     * Deletes the given stall.","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"teoks0199"},"content":"     * The stall must exist in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"teoks0199"},"content":"    void deleteStall(Stall target);","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"beatricecst"},"content":"    void showStall(Stall stall);","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"teoks0199"},"content":"     * Adds the given stall.","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"teoks0199"},"content":"     * {@code stall} must not already exist in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"teoks0199"},"content":"    void addStall(Stall stall);","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"teoks0199"},"content":"     * Replaces the given stall {@code target} with {@code editedStall}.","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"teoks0199"},"content":"     * The stall identity of {@code editedStall} must not be the same as another existing stall in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"teoks0199"},"content":"    void setStall(Stall target, Stall editedStall);","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"teoks0199"},"content":"    /** Returns an unmodifiable view of the filtered stall list */","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"teoks0199"},"content":"    ObservableList\u003cStall\u003e getFilteredStallList();","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"beatricecst"},"content":"    ObservableList\u003cStall\u003e getTempFilteredStallList();","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"teoks0199"},"content":"     * Updates the filter of the filtered stall list to filter by the given {@code predicate}.","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"teoks0199"},"content":"    void updateFilteredStallList(Predicate\u003cStall\u003e predicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"Ruizhi2001"},"content":"     * Returns true if an item with the same identity as {@code item} exists in the menu.","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"Ruizhi2001"},"content":"    boolean hasItem(Stall stallIndex, Item item);","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"samuelmui8"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"samuelmui8"},"content":"     * Returns true if an item review exists in the item.","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"samuelmui8"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"samuelmui8"},"content":"    boolean hasItemReview(Stall stallIndex, Item item);","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"Ruizhi2001"},"content":"     * Adds the given item.","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"Ruizhi2001"},"content":"     * {@code item} must not already exist in the menu.","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"Ruizhi2001"},"content":"    void addItem(Stall stallIndex, Item item);","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"Ruizhi2001"},"content":"     * Deletes the given item.","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"Ruizhi2001"},"content":"     * The item must exist in the address book.","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"Ruizhi2001"},"content":"    void deleteItem(Stall stallIndex, Item item);","lastModifiedDate":"2023-10-15"},{"lineNumber":115,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"samuelmui8"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"samuelmui8"},"content":"     * Adds the given item review.","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"samuelmui8"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"samuelmui8"},"content":"     * {@code itemReview} must not already exist in the item.","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"samuelmui8"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"samuelmui8"},"content":"    void addItemReview(Stall stallIndex, Item itemIndex, ItemReview itemReview);","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"samuelmui8"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"samuelmui8"},"content":"     * Deletes the given item review.","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"samuelmui8"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"samuelmui8"},"content":"     * {@code itemReview} must exist in the item.","lastModifiedDate":"2023-10-16"},{"lineNumber":127,"author":{"gitId":"samuelmui8"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":128,"author":{"gitId":"samuelmui8"},"content":"    void deleteItemReview(Stall stallIndex, Item itemIndex);","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Ruizhi2001":19,"samuelmui8":19,"beatricecst":2,"teoks0199":17,"-":72}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"Ruizhi2001"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"samuelmui8"},"content":"import seedu.address.model.item.review.ItemReview;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Stall;","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"teoks0199"},"content":"    private final FilteredList\u003cStall\u003e filteredStalls;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"beatricecst"},"content":"    private final FilteredList\u003cStall\u003e tempFilteredStalls;","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"teoks0199"},"content":"        filteredStalls \u003d new FilteredList\u003c\u003e(this.addressBook.getStallList());","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"beatricecst"},"content":"        tempFilteredStalls \u003d new FilteredList\u003c\u003e(this.addressBook.getStallList());","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"teoks0199"},"content":"    public boolean hasStall(Stall stall) {","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"teoks0199"},"content":"        requireNonNull(stall);","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"teoks0199"},"content":"        return addressBook.hasStall(stall);","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"beatricecst"},"content":"    public void showStall(Stall stall) {","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"beatricecst"},"content":"        requireNonNull(stall);","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"beatricecst"},"content":"        Predicate\u003cStall\u003e predicate \u003d stallll -\u003e stallll.equals(stall);","lastModifiedDate":"2023-10-14"},{"lineNumber":104,"author":{"gitId":"beatricecst"},"content":"        tempFilteredStalls.setPredicate(predicate);","lastModifiedDate":"2023-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":108,"author":{"gitId":"teoks0199"},"content":"    public void deleteStall(Stall target) {","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"teoks0199"},"content":"        addressBook.removeStall(target);","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":113,"author":{"gitId":"teoks0199"},"content":"    public void addStall(Stall stall) {","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"teoks0199"},"content":"        addressBook.addStall(stall);","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"teoks0199"},"content":"        updateFilteredStallList(PREDICATE_SHOW_ALL_STALLS);","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"teoks0199"},"content":"    public void setStall(Stall target, Stall editedStall) {","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"teoks0199"},"content":"        requireAllNonNull(target, editedStall);","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":122,"author":{"gitId":"teoks0199"},"content":"        addressBook.setStall(target, editedStall);","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":125,"author":{"gitId":"teoks0199"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Stall List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":128,"author":{"gitId":"teoks0199"},"content":"     * Returns an unmodifiable view of the list of {@code Stall} backed by the internal list of","lastModifiedDate":"2023-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":132,"author":{"gitId":"teoks0199"},"content":"    public ObservableList\u003cStall\u003e getFilteredStallList() {","lastModifiedDate":"2023-10-13"},{"lineNumber":133,"author":{"gitId":"teoks0199"},"content":"        return filteredStalls;","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":136,"author":{"gitId":"beatricecst"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"beatricecst"},"content":"    public ObservableList\u003cStall\u003e getTempFilteredStallList() {","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"beatricecst"},"content":"        return tempFilteredStalls;","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":142,"author":{"gitId":"teoks0199"},"content":"    public void updateFilteredStallList(Predicate\u003cStall\u003e predicate) {","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":144,"author":{"gitId":"teoks0199"},"content":"        filteredStalls.setPredicate(predicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":147,"author":{"gitId":"Ruizhi2001"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":148,"author":{"gitId":"Ruizhi2001"},"content":"    public boolean hasItem(Stall stall, Item item) {","lastModifiedDate":"2023-10-15"},{"lineNumber":149,"author":{"gitId":"Ruizhi2001"},"content":"        requireNonNull(stall);","lastModifiedDate":"2023-10-15"},{"lineNumber":150,"author":{"gitId":"Ruizhi2001"},"content":"        requireNonNull(item);","lastModifiedDate":"2023-10-15"},{"lineNumber":151,"author":{"gitId":"Ruizhi2001"},"content":"        return stall.hasItem(item);","lastModifiedDate":"2023-10-15"},{"lineNumber":152,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":153,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":154,"author":{"gitId":"samuelmui8"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":155,"author":{"gitId":"samuelmui8"},"content":"    public boolean hasItemReview(Stall stall, Item item) {","lastModifiedDate":"2023-10-16"},{"lineNumber":156,"author":{"gitId":"samuelmui8"},"content":"        requireNonNull(stall);","lastModifiedDate":"2023-10-16"},{"lineNumber":157,"author":{"gitId":"samuelmui8"},"content":"        requireNonNull(item);","lastModifiedDate":"2023-10-16"},{"lineNumber":158,"author":{"gitId":"samuelmui8"},"content":"        return stall.getMenu().getItem(item).hasItemReview();","lastModifiedDate":"2023-10-16"},{"lineNumber":159,"author":{"gitId":"samuelmui8"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":160,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":161,"author":{"gitId":"Ruizhi2001"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":162,"author":{"gitId":"Ruizhi2001"},"content":"    public void addItem(Stall stall, Item item) {","lastModifiedDate":"2023-10-15"},{"lineNumber":163,"author":{"gitId":"Ruizhi2001"},"content":"        requireNonNull(stall);","lastModifiedDate":"2023-10-15"},{"lineNumber":164,"author":{"gitId":"Ruizhi2001"},"content":"        requireNonNull(item);","lastModifiedDate":"2023-10-15"},{"lineNumber":165,"author":{"gitId":"Ruizhi2001"},"content":"        stall.addItem(item);","lastModifiedDate":"2023-10-15"},{"lineNumber":166,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":167,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":168,"author":{"gitId":"Ruizhi2001"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":169,"author":{"gitId":"Ruizhi2001"},"content":"    public void deleteItem(Stall stall, Item item) {","lastModifiedDate":"2023-10-15"},{"lineNumber":170,"author":{"gitId":"Ruizhi2001"},"content":"        requireNonNull(stall);","lastModifiedDate":"2023-10-15"},{"lineNumber":171,"author":{"gitId":"Ruizhi2001"},"content":"        requireNonNull(item);","lastModifiedDate":"2023-10-15"},{"lineNumber":172,"author":{"gitId":"Ruizhi2001"},"content":"        stall.deleteItem(item);","lastModifiedDate":"2023-10-15"},{"lineNumber":173,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":174,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":175,"author":{"gitId":"samuelmui8"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":176,"author":{"gitId":"samuelmui8"},"content":"    public void addItemReview(Stall stall, Item item, ItemReview itemReview) {","lastModifiedDate":"2023-10-16"},{"lineNumber":177,"author":{"gitId":"samuelmui8"},"content":"        requireNonNull(stall);","lastModifiedDate":"2023-10-16"},{"lineNumber":178,"author":{"gitId":"samuelmui8"},"content":"        requireNonNull(item);","lastModifiedDate":"2023-10-16"},{"lineNumber":179,"author":{"gitId":"samuelmui8"},"content":"        requireNonNull(itemReview);","lastModifiedDate":"2023-10-16"},{"lineNumber":180,"author":{"gitId":"samuelmui8"},"content":"        stall.getMenu().getItem(item).addItemReview(itemReview);","lastModifiedDate":"2023-10-16"},{"lineNumber":181,"author":{"gitId":"samuelmui8"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":182,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":183,"author":{"gitId":"samuelmui8"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":184,"author":{"gitId":"samuelmui8"},"content":"    public void deleteItemReview(Stall stall, Item item) {","lastModifiedDate":"2023-10-16"},{"lineNumber":185,"author":{"gitId":"samuelmui8"},"content":"        requireNonNull(stall);","lastModifiedDate":"2023-10-16"},{"lineNumber":186,"author":{"gitId":"samuelmui8"},"content":"        requireNonNull(item);","lastModifiedDate":"2023-10-16"},{"lineNumber":187,"author":{"gitId":"samuelmui8"},"content":"        stall.getMenu().getItem(item).deleteItemReview();","lastModifiedDate":"2023-10-16"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":204,"author":{"gitId":"teoks0199"},"content":"                \u0026\u0026 filteredStalls.equals(otherModelManager.filteredStalls);","lastModifiedDate":"2023-10-13"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Ruizhi2001":22,"samuelmui8":21,"beatricecst":9,"teoks0199":21,"-":134}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Stall;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"teoks0199"},"content":"     * Returns an unmodifiable view of the stalls list.","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"teoks0199"},"content":"     * This list will not contain any duplicate stalls.","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"teoks0199"},"content":"    ObservableList\u003cStall\u003e getStallList();","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"teoks0199":4,"-":13}},{"path":"src/main/java/seedu/address/model/item/Item.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ruizhi2001"},"content":"package seedu.address.model.item;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Ruizhi2001"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"Ruizhi2001"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Ruizhi2001"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"samuelmui8"},"content":"import seedu.address.model.item.review.ItemReview;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"samuelmui8"},"content":"import seedu.address.model.item.review.exceptions.DuplicateItemReviewException;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"samuelmui8"},"content":"import seedu.address.model.item.review.exceptions.ItemReviewNotFoundException;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"Ruizhi2001"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"Ruizhi2001"},"content":" * Represents an Item in the address book.","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"samuelmui8"},"content":" * Guarantees: details are present and not null, field values are validated.","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"Ruizhi2001"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"Ruizhi2001"},"content":"public class Item {","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"Ruizhi2001"},"content":"    // Identity fields","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"Ruizhi2001"},"content":"    private final ItemName itemName;","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"samuelmui8"},"content":"    private ItemReview itemReview;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"Ruizhi2001"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"Ruizhi2001"},"content":"    public Item(ItemName itemName) {","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"Ruizhi2001"},"content":"        requireAllNonNull(itemName);","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"Ruizhi2001"},"content":"        this.itemName \u003d itemName;","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"samuelmui8"},"content":"        this.itemReview \u003d null;","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"Ruizhi2001"},"content":"    public ItemName getName() {","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"Ruizhi2001"},"content":"        return itemName;","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"samuelmui8"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"samuelmui8"},"content":"     * Adds an item review to the item.","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"samuelmui8"},"content":"     *","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"samuelmui8"},"content":"     * @param itemReview the item review to be added.","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"samuelmui8"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"samuelmui8"},"content":"    public void addItemReview(ItemReview itemReview) {","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"samuelmui8"},"content":"        requireAllNonNull(itemReview);","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"samuelmui8"},"content":"        if (hasItemReview()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"samuelmui8"},"content":"            throw new DuplicateItemReviewException();","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"samuelmui8"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"samuelmui8"},"content":"        this.itemReview \u003d itemReview;","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"samuelmui8"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"samuelmui8"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"samuelmui8"},"content":"     * Deletes the item review from the item.","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"samuelmui8"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"samuelmui8"},"content":"    public void deleteItemReview() {","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"samuelmui8"},"content":"        if (!hasItemReview()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"samuelmui8"},"content":"            throw new ItemReviewNotFoundException();","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"samuelmui8"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"samuelmui8"},"content":"        this.itemReview \u003d null;","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"samuelmui8"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"samuelmui8"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"samuelmui8"},"content":"     * Returns true if the item has an item review.","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"samuelmui8"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"samuelmui8"},"content":"    public boolean hasItemReview() {","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"samuelmui8"},"content":"        return this.itemReview !\u003d null;","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"samuelmui8"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"Ruizhi2001"},"content":"     * Returns true if both items have the same itemName.","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"Ruizhi2001"},"content":"     * This defines a weaker notion of equality between two stalls.","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"Ruizhi2001"},"content":"    public boolean isSameItem(Item otherItem) {","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"Ruizhi2001"},"content":"        if (otherItem \u003d\u003d this) {","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"Ruizhi2001"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"Ruizhi2001"},"content":"        return otherItem !\u003d null","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"Ruizhi2001"},"content":"                \u0026\u0026 otherItem.getName().equals(getName());","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"samuelmui8"},"content":"     * Returns true if both items have the same identity and data fields.","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"samuelmui8"},"content":"     * This defines a stronger notion of equality between two items.","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"Ruizhi2001"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"Ruizhi2001"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"Ruizhi2001"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"Ruizhi2001"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"Ruizhi2001"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"Ruizhi2001"},"content":"        if (!(other instanceof Item)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"Ruizhi2001"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"Ruizhi2001"},"content":"        Item otherItem \u003d (Item) other;","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"Ruizhi2001"},"content":"        return itemName.equals(otherItem.itemName);","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"Ruizhi2001"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"Ruizhi2001"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"Ruizhi2001"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"Ruizhi2001"},"content":"        return Objects.hash(itemName);","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"Ruizhi2001"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"Ruizhi2001"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"Ruizhi2001"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"Ruizhi2001"},"content":"                .add(\"itemName\", itemName)","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"Ruizhi2001"},"content":"                .toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"Ruizhi2001"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"Ruizhi2001":73,"samuelmui8":38}},{"path":"src/main/java/seedu/address/model/item/ItemName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ruizhi2001"},"content":"package seedu.address.model.item;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Ruizhi2001"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Ruizhi2001"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Ruizhi2001"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Ruizhi2001"},"content":" * Represents an Item\u0027s name in the address book.","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"Ruizhi2001"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidItemName(String)}","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"Ruizhi2001"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"Ruizhi2001"},"content":"public class ItemName {","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"Ruizhi2001"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"Ruizhi2001"},"content":"            \"Names should not be blank\";","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"Ruizhi2001"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"Ruizhi2001"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"Ruizhi2001"},"content":"     * This regex matches any string containing at least one non-whitespace character","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"Ruizhi2001"},"content":"    public static final String VALIDATION_REGEX \u003d \"(.|\\\\s)*\\\\S(.|\\\\s)*\";","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"Ruizhi2001"},"content":"    public final String fullName;","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"Ruizhi2001"},"content":"     * Constructs a {@code ItemName}.","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"Ruizhi2001"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"Ruizhi2001"},"content":"     * @param itemName A valid name.","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"Ruizhi2001"},"content":"    public ItemName(String itemName) {","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"Ruizhi2001"},"content":"        requireNonNull(itemName);","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"Ruizhi2001"},"content":"        checkArgument(isValidItemName(itemName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"Ruizhi2001"},"content":"        fullName \u003d itemName;","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"Ruizhi2001"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"Ruizhi2001"},"content":"    public static boolean isValidItemName(String test) {","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"Ruizhi2001"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"Ruizhi2001"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"Ruizhi2001"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"Ruizhi2001"},"content":"        return fullName;","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"Ruizhi2001"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"Ruizhi2001"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"Ruizhi2001"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"Ruizhi2001"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"Ruizhi2001"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"Ruizhi2001"},"content":"        if (!(other instanceof ItemName)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"Ruizhi2001"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"Ruizhi2001"},"content":"        ItemName otherItemName \u003d (ItemName) other;","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"Ruizhi2001"},"content":"        return fullName.equals(otherItemName.fullName);","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"Ruizhi2001"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"Ruizhi2001"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"Ruizhi2001"},"content":"        return fullName.hashCode();","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"Ruizhi2001"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"Ruizhi2001":68}},{"path":"src/main/java/seedu/address/model/item/UniqueItemList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ruizhi2001"},"content":"package seedu.address.model.item;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Ruizhi2001"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Ruizhi2001"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Ruizhi2001"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Ruizhi2001"},"content":"import java.util.List;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"Ruizhi2001"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"Ruizhi2001"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"Ruizhi2001"},"content":"import seedu.address.model.item.exceptions.DuplicateItemException;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"Ruizhi2001"},"content":"import seedu.address.model.item.exceptions.ItemNotFoundException;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"Ruizhi2001"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"Ruizhi2001"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"Ruizhi2001"},"content":" * An item is considered unique by comparing using {@code item#isSamePerson(item)}. As such, adding and updating of","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"Ruizhi2001"},"content":" * persons uses item#isSamePerson(item) for equality to ensure that the item being added or updated is","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"Ruizhi2001"},"content":" * unique in terms of identity in the UniqueitemList. However, the removal of an item uses item#equals(Object)","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"Ruizhi2001"},"content":" * to ensure that the item with exactly the same fields will be removed.","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"Ruizhi2001"},"content":" *","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"Ruizhi2001"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"Ruizhi2001"},"content":" *","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"Ruizhi2001"},"content":" * @see Item#isSameItem(Item)","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"Ruizhi2001"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"Ruizhi2001"},"content":"public class UniqueItemList implements Iterable\u003cItem\u003e {","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"Ruizhi2001"},"content":"    private final ObservableList\u003cItem\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"Ruizhi2001"},"content":"    private final ObservableList\u003cItem\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"Ruizhi2001"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"Ruizhi2001"},"content":"     * Returns size of list","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"Ruizhi2001"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"Ruizhi2001"},"content":"     * @return size of list","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"Ruizhi2001"},"content":"    public int getSize() {","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"Ruizhi2001"},"content":"        return internalList.size();","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"Ruizhi2001"},"content":"     * Returns Item at index","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"Ruizhi2001"},"content":"     * @param index index of item","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"Ruizhi2001"},"content":"     * @return item at index","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"Ruizhi2001"},"content":"    public Item getItem(int index) {","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"Ruizhi2001"},"content":"        return internalList.get(index);","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"samuelmui8"},"content":"    public Item getItem(Item item) {","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"samuelmui8"},"content":"        requireNonNull(item);","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"samuelmui8"},"content":"        return internalList.stream().filter(item::isSameItem).findFirst().get();","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"samuelmui8"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"Ruizhi2001"},"content":"     * Returns true if the list contains an equivalent item as the given argument.","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"Ruizhi2001"},"content":"    public boolean contains(Item toCheck) {","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"Ruizhi2001"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"Ruizhi2001"},"content":"        return internalList.stream().anyMatch(toCheck::isSameItem);","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"Ruizhi2001"},"content":"     * Adds an item to the list.","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"Ruizhi2001"},"content":"     * The item must not already exist in the list.","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"Ruizhi2001"},"content":"    public void add(Item toAdd) {","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"Ruizhi2001"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"Ruizhi2001"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"Ruizhi2001"},"content":"            throw new DuplicateItemException();","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"Ruizhi2001"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"Ruizhi2001"},"content":"     * Replaces the item {@code target} in the list with {@code editeditem}.","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"Ruizhi2001"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"Ruizhi2001"},"content":"     * The item identity of {@code editeditem} must not be the same as another existing item in the list.","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"Ruizhi2001"},"content":"    public void setitem(Item target, Item editeditem) {","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"Ruizhi2001"},"content":"        requireAllNonNull(target, editeditem);","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"Ruizhi2001"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"Ruizhi2001"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"Ruizhi2001"},"content":"            throw new ItemNotFoundException();","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"Ruizhi2001"},"content":"        if (!target.isSameItem(editeditem) \u0026\u0026 contains(editeditem)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"Ruizhi2001"},"content":"            throw new DuplicateItemException();","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"Ruizhi2001"},"content":"        internalList.set(index, editeditem);","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"Ruizhi2001"},"content":"     * Removes the equivalent item from the list.","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"Ruizhi2001"},"content":"     * The item must exist in the list.","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"Ruizhi2001"},"content":"    public void remove(Item toRemove) {","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"Ruizhi2001"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"Ruizhi2001"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"Ruizhi2001"},"content":"            throw new ItemNotFoundException();","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"Ruizhi2001"},"content":"    public void setitems(UniqueItemList replacement) {","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"Ruizhi2001"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"Ruizhi2001"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"Ruizhi2001"},"content":"     * Replaces the contents of this list with {@code items}.","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"Ruizhi2001"},"content":"     * {@code items} must not contain duplicate items.","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"Ruizhi2001"},"content":"    public void setitems(List\u003cItem\u003e items) {","lastModifiedDate":"2023-10-15"},{"lineNumber":115,"author":{"gitId":"Ruizhi2001"},"content":"        requireAllNonNull(items);","lastModifiedDate":"2023-10-15"},{"lineNumber":116,"author":{"gitId":"Ruizhi2001"},"content":"        if (!itemsAreUnique(items)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"Ruizhi2001"},"content":"            throw new DuplicateItemException();","lastModifiedDate":"2023-10-15"},{"lineNumber":118,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"Ruizhi2001"},"content":"        internalList.setAll(items);","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"Ruizhi2001"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-10-15"},{"lineNumber":125,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"Ruizhi2001"},"content":"    public ObservableList\u003cItem\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-15"},{"lineNumber":127,"author":{"gitId":"Ruizhi2001"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-15"},{"lineNumber":128,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":129,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":130,"author":{"gitId":"Ruizhi2001"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":131,"author":{"gitId":"Ruizhi2001"},"content":"    public Iterator\u003cItem\u003e iterator() {","lastModifiedDate":"2023-10-15"},{"lineNumber":132,"author":{"gitId":"Ruizhi2001"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-15"},{"lineNumber":133,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":134,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":135,"author":{"gitId":"Ruizhi2001"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":136,"author":{"gitId":"Ruizhi2001"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":137,"author":{"gitId":"Ruizhi2001"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-15"},{"lineNumber":138,"author":{"gitId":"Ruizhi2001"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":139,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":140,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":141,"author":{"gitId":"Ruizhi2001"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-15"},{"lineNumber":142,"author":{"gitId":"Ruizhi2001"},"content":"        if (!(other instanceof UniqueItemList)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":143,"author":{"gitId":"Ruizhi2001"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":144,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":145,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":146,"author":{"gitId":"Ruizhi2001"},"content":"        UniqueItemList otherUniqueitemList \u003d (UniqueItemList) other;","lastModifiedDate":"2023-10-15"},{"lineNumber":147,"author":{"gitId":"Ruizhi2001"},"content":"        return internalList.equals(otherUniqueitemList.internalList);","lastModifiedDate":"2023-10-15"},{"lineNumber":148,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":149,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":150,"author":{"gitId":"Ruizhi2001"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":151,"author":{"gitId":"Ruizhi2001"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-15"},{"lineNumber":152,"author":{"gitId":"Ruizhi2001"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-15"},{"lineNumber":153,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":154,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":155,"author":{"gitId":"Ruizhi2001"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":156,"author":{"gitId":"Ruizhi2001"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":157,"author":{"gitId":"Ruizhi2001"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":158,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":159,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":160,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":161,"author":{"gitId":"Ruizhi2001"},"content":"     * Returns true if {@code items} contains only unique items.","lastModifiedDate":"2023-10-15"},{"lineNumber":162,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":163,"author":{"gitId":"Ruizhi2001"},"content":"    private boolean itemsAreUnique(List\u003cItem\u003e items) {","lastModifiedDate":"2023-10-15"},{"lineNumber":164,"author":{"gitId":"Ruizhi2001"},"content":"        for (int i \u003d 0; i \u003c items.size() - 1; i++) {","lastModifiedDate":"2023-10-15"},{"lineNumber":165,"author":{"gitId":"Ruizhi2001"},"content":"            for (int j \u003d i + 1; j \u003c items.size(); j++) {","lastModifiedDate":"2023-10-15"},{"lineNumber":166,"author":{"gitId":"Ruizhi2001"},"content":"                if (items.get(i).isSameItem(items.get(j))) {","lastModifiedDate":"2023-10-15"},{"lineNumber":167,"author":{"gitId":"Ruizhi2001"},"content":"                    return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":168,"author":{"gitId":"Ruizhi2001"},"content":"                }","lastModifiedDate":"2023-10-15"},{"lineNumber":169,"author":{"gitId":"Ruizhi2001"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":170,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":171,"author":{"gitId":"Ruizhi2001"},"content":"        return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":172,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":173,"author":{"gitId":"Ruizhi2001"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"Ruizhi2001":168,"samuelmui8":5}},{"path":"src/main/java/seedu/address/model/item/exceptions/DuplicateItemException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ruizhi2001"},"content":"package seedu.address.model.item.exceptions;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Ruizhi2001"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Ruizhi2001"},"content":" * Signals that the operation will result in duplicate Items (Items are considered duplicates if they have the same","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"Ruizhi2001"},"content":" * name).","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Ruizhi2001"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Ruizhi2001"},"content":"public class DuplicateItemException extends RuntimeException {","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"Ruizhi2001"},"content":"    public DuplicateItemException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"Ruizhi2001"},"content":"        super(\"Operation would result in duplicate items\");","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"Ruizhi2001"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"Ruizhi2001":11}},{"path":"src/main/java/seedu/address/model/item/exceptions/ItemNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ruizhi2001"},"content":"package seedu.address.model.item.exceptions;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Ruizhi2001"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Ruizhi2001"},"content":" * Signals that the operation is unable to find the specified item.","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"Ruizhi2001"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Ruizhi2001"},"content":"public class ItemNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"Ruizhi2001":6}},{"path":"src/main/java/seedu/address/model/item/review/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelmui8"},"content":"package seedu.address.model.item.review;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"samuelmui8"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"samuelmui8"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"samuelmui8"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"samuelmui8"},"content":" * Represents a Review\u0027s description in the review list.","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"samuelmui8"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDescription(String)}","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"samuelmui8"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"samuelmui8"},"content":"public class Description {","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"samuelmui8"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"samuelmui8"},"content":"            \"Description should not be blank\";","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"samuelmui8"},"content":"    public static final String VALIDATION_REGEX \u003d \"(.|\\\\s)*\\\\S(.|\\\\s)*\";","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"samuelmui8"},"content":"    public final String description;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"samuelmui8"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"samuelmui8"},"content":"     * Constructs a {@code Description}.","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"samuelmui8"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"samuelmui8"},"content":"    public Description(String description) {","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"samuelmui8"},"content":"        requireNonNull(description);","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"samuelmui8"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"samuelmui8"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"samuelmui8"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"samuelmui8"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"samuelmui8"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"samuelmui8"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"samuelmui8"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"samuelmui8"},"content":"    public String toString() {","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"samuelmui8"},"content":"        return description;","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"samuelmui8"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"samuelmui8"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"samuelmui8"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"samuelmui8"},"content":"        return description.hashCode();","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"samuelmui8"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"samuelmui8"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"samuelmui8":40}},{"path":"src/main/java/seedu/address/model/item/review/ItemReview.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelmui8"},"content":"package seedu.address.model.item.review;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"samuelmui8"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"samuelmui8"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"samuelmui8"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"samuelmui8"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"samuelmui8"},"content":" * Represents a ItemReview in the address book.","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"samuelmui8"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"samuelmui8"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"samuelmui8"},"content":"public class ItemReview {","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"samuelmui8"},"content":"    private final Rating rating;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"samuelmui8"},"content":"    private final Description description;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"samuelmui8"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"samuelmui8"},"content":"     * Constructs a {@code ItemReview}.","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"samuelmui8"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"samuelmui8"},"content":"    public ItemReview(Rating rating, Description description) {","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"samuelmui8"},"content":"        requireAllNonNull(rating, description);","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"samuelmui8"},"content":"        this.rating \u003d rating;","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"samuelmui8"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"samuelmui8"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"samuelmui8"},"content":"    public Rating getRating() {","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"samuelmui8"},"content":"        return rating;","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"samuelmui8"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"samuelmui8"},"content":"    public Description getDescription() {","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"samuelmui8"},"content":"        return description;","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"samuelmui8"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"samuelmui8"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"samuelmui8"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"samuelmui8"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"samuelmui8"},"content":"        return Objects.hash(rating, description);","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"samuelmui8"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"samuelmui8"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"samuelmui8"},"content":"    public String toString() {","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"samuelmui8"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"samuelmui8"},"content":"                .add(\"rating\", rating)","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"samuelmui8"},"content":"                .add(\"description\", description)","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"samuelmui8"},"content":"                .toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"samuelmui8"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"samuelmui8"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"samuelmui8":50}},{"path":"src/main/java/seedu/address/model/item/review/Rating.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelmui8"},"content":"package seedu.address.model.item.review;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"samuelmui8"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"samuelmui8"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"samuelmui8"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"samuelmui8"},"content":" * Represents a Review\u0027s rating in the review list.","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"samuelmui8"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidRating(String)}","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"samuelmui8"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"samuelmui8"},"content":"public class Rating {","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"samuelmui8"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"samuelmui8"},"content":"            \"Rating should be a number from 1 to 5, inclusive\";","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"samuelmui8"},"content":"    public static final String VALIDATION_REGEX \u003d \"[1-5]\";","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"samuelmui8"},"content":"    public final String rating;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"samuelmui8"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"samuelmui8"},"content":"     * Constructs a {@code Rating}.","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"samuelmui8"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"samuelmui8"},"content":"    public Rating(String rating) {","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"samuelmui8"},"content":"        requireNonNull(rating);","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"samuelmui8"},"content":"        checkArgument(isValidRating(rating), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"samuelmui8"},"content":"        this.rating \u003d starRating(Integer.parseInt(rating));","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"samuelmui8"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"samuelmui8"},"content":"    public static boolean isValidRating(String test) {","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"samuelmui8"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"samuelmui8"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"samuelmui8"},"content":"    private String starRating(int rating) {","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"samuelmui8"},"content":"        StringBuilder starRating \u003d new StringBuilder();","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"samuelmui8"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"samuelmui8"},"content":"            if (i \u003c rating) {","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"samuelmui8"},"content":"                starRating.append(\"★\");","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"samuelmui8"},"content":"            } else {","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"samuelmui8"},"content":"                starRating.append(\"☆\");","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"samuelmui8"},"content":"            }","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"samuelmui8"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"samuelmui8"},"content":"        return starRating.toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"samuelmui8"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"samuelmui8"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"samuelmui8"},"content":"    public String toString() {","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"samuelmui8"},"content":"        return rating;","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"samuelmui8"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"samuelmui8"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"samuelmui8"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"samuelmui8"},"content":"        return rating.hashCode();","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"samuelmui8"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"samuelmui8"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"samuelmui8":53}},{"path":"src/main/java/seedu/address/model/item/review/exceptions/DuplicateItemReviewException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelmui8"},"content":"package seedu.address.model.item.review.exceptions;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"samuelmui8"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"samuelmui8"},"content":" * Signals that the item review already exists.","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"samuelmui8"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"samuelmui8"},"content":"public class DuplicateItemReviewException extends RuntimeException {","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"samuelmui8"},"content":"    public DuplicateItemReviewException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"samuelmui8"},"content":"        super(\"Item review already exists\");","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"samuelmui8"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"samuelmui8"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"samuelmui8":10}},{"path":"src/main/java/seedu/address/model/item/review/exceptions/ItemReviewNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelmui8"},"content":"package seedu.address.model.item.review.exceptions;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"samuelmui8"},"content":"/**","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"samuelmui8"},"content":" * Signals that the item review does not exist.","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"samuelmui8"},"content":" */","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"samuelmui8"},"content":"public class ItemReviewNotFoundException extends RuntimeException {","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"samuelmui8"},"content":"    public ItemReviewNotFoundException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"samuelmui8"},"content":"        super(\"Item review does not exist\");","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"samuelmui8"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"samuelmui8"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"samuelmui8":10}},{"path":"src/main/java/seedu/address/model/stall/Location.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"teoks0199"},"content":"package seedu.address.model.stall;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"teoks0199"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"teoks0199"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"teoks0199"},"content":" * Represents a Stall\u0027s location in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"teoks0199"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidLocation(String)}","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"teoks0199"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"teoks0199"},"content":"public class Location {","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"teoks0199"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"teoks0199"},"content":"            \"Locations should not be blank\";","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"teoks0199"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"teoks0199"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"teoks0199"},"content":"     * This regex matches any string containing at least one non-whitespace character","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"teoks0199"},"content":"    public static final String VALIDATION_REGEX \u003d \"(.|\\\\s)*\\\\S(.|\\\\s)*\";","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"teoks0199"},"content":"    public final String locationName;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"teoks0199"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"teoks0199"},"content":"     *","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"teoks0199"},"content":"     * @param name A valid name.","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"teoks0199"},"content":"    public Location(String name) {","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"teoks0199"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"teoks0199"},"content":"        checkArgument(isValidLocation(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"teoks0199"},"content":"        locationName \u003d name;","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"teoks0199"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"teoks0199"},"content":"     */","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"teoks0199"},"content":"    public static boolean isValidLocation(String test) {","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"teoks0199"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"teoks0199"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"teoks0199"},"content":"    public String toString() {","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"teoks0199"},"content":"        return locationName;","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"teoks0199"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"teoks0199"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"teoks0199"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"teoks0199"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"teoks0199"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"teoks0199"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"teoks0199"},"content":"        if (!(other instanceof Location)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"teoks0199"},"content":"            return false;","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"teoks0199"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"teoks0199"},"content":"        Location otherLocation \u003d (Location) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"teoks0199"},"content":"        return locationName.equals(otherLocation.locationName);","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"teoks0199"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"teoks0199"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"teoks0199"},"content":"        return locationName.hashCode();","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"teoks0199"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"teoks0199":68}},{"path":"src/main/java/seedu/address/model/stall/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"teoks0199"},"content":"package seedu.address.model.stall;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"teoks0199"},"content":" * Represents a Stall\u0027s name in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"teoks0199"},"content":"            \"Names should not be blank\";","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"teoks0199"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"teoks0199"},"content":"     * This regex matches any string containing at least one non-whitespace character","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"teoks0199"},"content":"    public static final String VALIDATION_REGEX \u003d \"(.|\\\\s)*\\\\S(.|\\\\s)*\";","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return fullName.equals(otherName.fullName);","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"teoks0199":6,"-":62}},{"path":"src/main/java/seedu/address/model/stall/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"teoks0199"},"content":"package seedu.address.model.stall;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"teoks0199"},"content":" * Tests that a {@code Stall}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"teoks0199"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cStall\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"teoks0199"},"content":"    public boolean test(Stall stall) {","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"teoks0199"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(stall.getName().fullName, keyword));","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"teoks0199":5,"-":39}},{"path":"src/main/java/seedu/address/model/stall/Stall.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"teoks0199"},"content":"package seedu.address.model.stall;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"Ruizhi2001"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"Ruizhi2001"},"content":"import seedu.address.model.item.UniqueItemList;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"teoks0199"},"content":" * Represents a Stall in the address book.","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"teoks0199"},"content":"public class Stall {","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":19,"author":{"gitId":"teoks0199"},"content":"    private final Location location;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"Ruizhi2001"},"content":"    private final UniqueItemList menu;","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"teoks0199"},"content":"    public Stall(Name name, Location location) {","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"teoks0199"},"content":"        requireAllNonNull(name, location);","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"teoks0199"},"content":"        this.location \u003d location;","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"Ruizhi2001"},"content":"        this.menu \u003d new UniqueItemList();","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"teoks0199"},"content":"    public Location getLocation() {","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"teoks0199"},"content":"        return location;","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"Ruizhi2001"},"content":"    public UniqueItemList getMenu() {","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"Ruizhi2001"},"content":"        return menu;","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"teoks0199"},"content":"     * Returns true if both stalls have the same name and location.","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"teoks0199"},"content":"     * This defines a weaker notion of equality between two stalls.","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"teoks0199"},"content":"    public boolean isSameStall(Stall otherStall) {","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"teoks0199"},"content":"        if (otherStall \u003d\u003d this) {","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"teoks0199"},"content":"        return otherStall !\u003d null","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"teoks0199"},"content":"                \u0026\u0026 otherStall.getName().equals(getName()) \u0026\u0026 otherStall.getLocation().equals(getLocation());","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"Ruizhi2001"},"content":"     * Returns true if both stalls have the same identity and data fields.","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"Ruizhi2001"},"content":"     * This defines a stronger notion of equality between two stalls.","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"Ruizhi2001"},"content":"    public boolean hasItem(Item item) {","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"Ruizhi2001"},"content":"        return menu.contains(item);","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"Ruizhi2001"},"content":"     * Adds an item to the menu.","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"Ruizhi2001"},"content":"     * The item must not already exist in the menu.","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"Ruizhi2001"},"content":"    public void addItem(Item item) {","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"Ruizhi2001"},"content":"        menu.add(item);","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"Ruizhi2001"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"Ruizhi2001"},"content":"     * Deletes an item from the menu.","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"Ruizhi2001"},"content":"     * The item must already exist in the menu.","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"Ruizhi2001"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"Ruizhi2001"},"content":"    public void deleteItem(Item item) {","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"Ruizhi2001"},"content":"        menu.remove(item);","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"Ruizhi2001"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"teoks0199"},"content":"     * Returns true if both stalls have the same identity and data fields.","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"teoks0199"},"content":"     * This defines a stronger notion of equality between two stalls.","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":93,"author":{"gitId":"teoks0199"},"content":"        if (!(other instanceof Stall)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"teoks0199"},"content":"        Stall otherStall \u003d (Stall) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"teoks0199"},"content":"        return name.equals(otherStall.name)","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"teoks0199"},"content":"                \u0026\u0026 location.equals(otherStall.location);","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"teoks0199"},"content":"        return Objects.hash(name, location);","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"teoks0199"},"content":"                .add(\"location\", location)","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Ruizhi2001":32,"teoks0199":26,"-":57}},{"path":"src/main/java/seedu/address/model/stall/UniqueStallList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"teoks0199"},"content":"package seedu.address.model.stall;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.exceptions.DuplicateStallException;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.exceptions.StallNotFoundException;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"teoks0199"},"content":" * A stall is considered unique by comparing using {@code Stall#isSamePerson(Stall)}. As such, adding and updating of","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"Ruizhi2001"},"content":" * persons uses Stall#isSamePerson(Stall) for equality to ensure that the stall being added or updated is","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"teoks0199"},"content":" * unique in terms of identity in the UniqueStallList. However, the removal of a stall uses Stall#equals(Object) so","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"teoks0199"},"content":" * as to ensure that the stall with exactly the same fields will be removed.","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"teoks0199"},"content":" * @see Stall#isSameStall(Stall)","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"teoks0199"},"content":"public class UniqueStallList implements Iterable\u003cStall\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"teoks0199"},"content":"    private final ObservableList\u003cStall\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"teoks0199"},"content":"    private final ObservableList\u003cStall\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"teoks0199"},"content":"     * Returns true if the list contains an equivalent stall as the given argument.","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"teoks0199"},"content":"    public boolean contains(Stall toCheck) {","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"teoks0199"},"content":"        return internalList.stream().anyMatch(toCheck::isSameStall);","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"teoks0199"},"content":"     * Adds a stall to the list.","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"teoks0199"},"content":"     * The stall must not already exist in the list.","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"teoks0199"},"content":"    public void add(Stall toAdd) {","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"teoks0199"},"content":"            throw new DuplicateStallException();","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"teoks0199"},"content":"     * Replaces the stall {@code target} in the list with {@code editedStall}.","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"teoks0199"},"content":"     * The stall identity of {@code editedStall} must not be the same as another existing stall in the list.","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"teoks0199"},"content":"    public void setStall(Stall target, Stall editedStall) {","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"teoks0199"},"content":"        requireAllNonNull(target, editedStall);","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"teoks0199"},"content":"            throw new StallNotFoundException();","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"teoks0199"},"content":"        if (!target.isSameStall(editedStall) \u0026\u0026 contains(editedStall)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"teoks0199"},"content":"            throw new DuplicateStallException();","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"teoks0199"},"content":"        internalList.set(index, editedStall);","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"teoks0199"},"content":"     * Removes the equivalent stall from the list.","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"teoks0199"},"content":"     * The stall must exist in the list.","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"teoks0199"},"content":"    public void remove(Stall toRemove) {","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"teoks0199"},"content":"            throw new StallNotFoundException();","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"teoks0199"},"content":"    public void setStalls(UniqueStallList replacement) {","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"teoks0199"},"content":"     * Replaces the contents of this list with {@code stalls}.","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"teoks0199"},"content":"     * {@code stalls} must not contain duplicate stalls.","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"teoks0199"},"content":"    public void setStalls(List\u003cStall\u003e stalls) {","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"teoks0199"},"content":"        requireAllNonNull(stalls);","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"teoks0199"},"content":"        if (!stallsAreUnique(stalls)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"teoks0199"},"content":"            throw new DuplicateStallException();","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"teoks0199"},"content":"        internalList.setAll(stalls);","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"teoks0199"},"content":"    public ObservableList\u003cStall\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"teoks0199"},"content":"    public Iterator\u003cStall\u003e iterator() {","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":119,"author":{"gitId":"teoks0199"},"content":"        if (!(other instanceof UniqueStallList)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"teoks0199"},"content":"        UniqueStallList otherUniqueStallList \u003d (UniqueStallList) other;","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"teoks0199"},"content":"        return internalList.equals(otherUniqueStallList.internalList);","lastModifiedDate":"2023-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"teoks0199"},"content":"     * Returns true if {@code stalls} contains only unique stalls.","lastModifiedDate":"2023-10-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"teoks0199"},"content":"    private boolean stallsAreUnique(List\u003cStall\u003e stalls) {","lastModifiedDate":"2023-10-13"},{"lineNumber":141,"author":{"gitId":"teoks0199"},"content":"        for (int i \u003d 0; i \u003c stalls.size() - 1; i++) {","lastModifiedDate":"2023-10-13"},{"lineNumber":142,"author":{"gitId":"teoks0199"},"content":"            for (int j \u003d i + 1; j \u003c stalls.size(); j++) {","lastModifiedDate":"2023-10-13"},{"lineNumber":143,"author":{"gitId":"teoks0199"},"content":"                if (stalls.get(i).isSameStall(stalls.get(j))) {","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Ruizhi2001":1,"teoks0199":47,"-":102}},{"path":"src/main/java/seedu/address/model/stall/exceptions/DuplicateStallException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"teoks0199"},"content":"package seedu.address.model.stall.exceptions;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"teoks0199"},"content":"public class DuplicateStallException extends RuntimeException {","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"teoks0199"},"content":"    public DuplicateStallException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"teoks0199"},"content":"        super(\"Operation would result in duplicate stalls\");","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"teoks0199":4,"-":7}},{"path":"src/main/java/seedu/address/model/stall/exceptions/StallNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"teoks0199"},"content":"package seedu.address.model.stall.exceptions;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"teoks0199"},"content":"/**","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"teoks0199"},"content":" * Signals that the operation is unable to find the specified stall.","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"teoks0199"},"content":" */","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"teoks0199"},"content":"public class StallNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"teoks0199":6}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Location;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Name;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Stall;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"teoks0199"},"content":"    public static Stall[] getSampleStalls() {","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"teoks0199"},"content":"        return new Stall[] {","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"teoks0199"},"content":"            new Stall(new Name(\"Alex Yeoh\"), new Location(\"Deck\")),","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"teoks0199"},"content":"            new Stall(new Name(\"Bernice Yu\"), new Location(\"Deck\")),","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"teoks0199"},"content":"            new Stall(new Name(\"Charlotte Oliveiro\"), new Location(\"Deck\")),","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"teoks0199"},"content":"            new Stall(new Name(\"David Li\"), new Location(\"Deck\")),","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"teoks0199"},"content":"            new Stall(new Name(\"Irfan Ibrahim\"), new Location(\"Deck\")),","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"teoks0199"},"content":"            new Stall(new Name(\"Roy Balakrishnan\"), new Location(\"Deck\"))","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":31,"author":{"gitId":"teoks0199"},"content":"        for (Stall sampleStall : getSampleStalls()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"teoks0199"},"content":"            sampleAb.addStall(sampleStall);","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"teoks0199":13,"-":33}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedStall.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Location;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Name;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Stall;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"teoks0199"},"content":" * Jackson-friendly version of {@link Stall}.","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"teoks0199"},"content":"class JsonAdaptedStall {","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"teoks0199"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Stall\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"teoks0199"},"content":"    private final String location;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"teoks0199"},"content":"     * Constructs a {@code JsonAdaptedStall} with the given stall details.","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"teoks0199"},"content":"    public JsonAdaptedStall(@JsonProperty(\"name\") String name, @JsonProperty(\"location\") String location) {","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"teoks0199"},"content":"        this.location \u003d location;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"teoks0199"},"content":"     * Converts a given {@code Stall} into this class for Json use.","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"teoks0199"},"content":"    public JsonAdaptedStall(Stall source) {","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"teoks0199"},"content":"        location \u003d source.getLocation().locationName;","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"teoks0199"},"content":"     * Converts this Jackson-friendly adapted stall object into the model\u0027s {@code Stall} object.","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"teoks0199"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted stall.","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"teoks0199"},"content":"    public Stall toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"teoks0199"},"content":"        if (location \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"teoks0199"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"teoks0199"},"content":"                    Location.class.getSimpleName()));","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"teoks0199"},"content":"        if (!Location.isValidLocation(location)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"teoks0199"},"content":"            throw new IllegalValueException(Location.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"teoks0199"},"content":"        final Location modelLocation \u003d new Location(location);","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"teoks0199"},"content":"        return new Stall(modelName, modelLocation);","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"teoks0199":23,"-":41}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Stall;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"teoks0199"},"content":"    public static final String MESSAGE_DUPLICATE_STALL \u003d \"Stalls list contains duplicate stall(s).\";","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"teoks0199"},"content":"    private final List\u003cJsonAdaptedStall\u003e stalls \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"teoks0199"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"stalls\") List\u003cJsonAdaptedStall\u003e stalls) {","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"teoks0199"},"content":"        this.stalls.addAll(stalls);","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"teoks0199"},"content":"        stalls.addAll(source.getStallList().stream().map(JsonAdaptedStall::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"teoks0199"},"content":"        for (JsonAdaptedStall jsonAdaptedStall : stalls) {","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"teoks0199"},"content":"            Stall stall \u003d jsonAdaptedStall.toModelType();","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"teoks0199"},"content":"            if (addressBook.hasStall(stall)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"teoks0199"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_STALL);","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"teoks0199"},"content":"            addressBook.addStall(stall);","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"teoks0199":11,"-":49}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"teoks0199"},"content":"    private StallListPanel stallListPanel;","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"beatricecst"},"content":"    private OneStallPanel oneStallPanel;","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"teoks0199"},"content":"    private StackPane stallListPanelPlaceholder;","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"beatricecst"},"content":"    @FXML","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"beatricecst"},"content":"    private StackPane stallDetailsPanelPlaceholder;","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"teoks0199"},"content":"        stallListPanel \u003d new StallListPanel(logic.getFilteredStallList());","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"teoks0199"},"content":"        stallListPanelPlaceholder.getChildren().add(stallListPanel.getRoot());","lastModifiedDate":"2023-10-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2023-10-17"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":173,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":174,"author":{"gitId":"beatricecst"},"content":"     * Switches to the window with only one stall detail.","lastModifiedDate":"2023-10-15"},{"lineNumber":175,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":176,"author":{"gitId":"beatricecst"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":177,"author":{"gitId":"beatricecst"},"content":"    public void handleIsStallDetail() {","lastModifiedDate":"2023-10-15"},{"lineNumber":178,"author":{"gitId":"beatricecst"},"content":"        oneStallPanel \u003d new OneStallPanel(logic.getTempFilteredStallList());","lastModifiedDate":"2023-10-17"},{"lineNumber":179,"author":{"gitId":"beatricecst"},"content":"        stallDetailsPanelPlaceholder.getChildren().add(oneStallPanel.getRoot());","lastModifiedDate":"2023-10-17"},{"lineNumber":180,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":181,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":182,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":183,"author":{"gitId":"teoks0199"},"content":"    public StallListPanel getStallListPanel() {","lastModifiedDate":"2023-10-14"},{"lineNumber":184,"author":{"gitId":"teoks0199"},"content":"        return stallListPanel;","lastModifiedDate":"2023-10-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"beatricecst"},"content":"            if (commandResult.isStallDetail()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":207,"author":{"gitId":"beatricecst"},"content":"                handleIsStallDetail();","lastModifiedDate":"2023-10-15"},{"lineNumber":208,"author":{"gitId":"beatricecst"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":209,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"beatricecst":20,"teoks0199":6,"-":191}},{"path":"src/main/java/seedu/address/ui/OneStallPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"beatricecst"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"beatricecst"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"beatricecst"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"beatricecst"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"beatricecst"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"beatricecst"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"beatricecst"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"beatricecst"},"content":"import seedu.address.model.stall.Stall;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"beatricecst"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"beatricecst"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"beatricecst"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"beatricecst"},"content":"public class OneStallPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"beatricecst"},"content":"    private static final String FXML \u003d \"StallDetailsPanel.fxml\";","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"beatricecst"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(StallListPanel.class);","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"beatricecst"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"beatricecst"},"content":"    private ListView\u003cStall\u003e oneStallView;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"beatricecst"},"content":"     * Creates a {@code StallListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"beatricecst"},"content":"    public OneStallPanel(ObservableList\u003cStall\u003e stallList) {","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"beatricecst"},"content":"        super(FXML);","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"beatricecst"},"content":"        oneStallView.setItems(stallList);","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"beatricecst"},"content":"        oneStallView.setCellFactory(listView -\u003e new OneStallViewCell());","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"beatricecst"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Stall} using a {@code StallCard}.","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"beatricecst"},"content":"    class OneStallViewCell extends ListCell\u003cStall\u003e {","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"beatricecst"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"beatricecst"},"content":"        protected void updateItem(Stall stall, boolean empty) {","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"beatricecst"},"content":"            super.updateItem(stall, empty);","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"beatricecst"},"content":"            if (empty || stall \u003d\u003d null) {","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"beatricecst"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"beatricecst"},"content":"                setText(null);","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"beatricecst"},"content":"            } else {","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"beatricecst"},"content":"                setGraphic(new StallDetailsCard(stall, getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"beatricecst"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"beatricecst"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"beatricecst"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"beatricecst":48}},{"path":"src/main/java/seedu/address/ui/StallCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Stall;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":10,"author":{"gitId":"teoks0199"},"content":" * An UI component that displays information of a {@code Stall}.","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"teoks0199"},"content":"public class StallCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"teoks0199"},"content":"    private static final String FXML \u003d \"StallListCard.fxml\";","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"teoks0199"},"content":"    public final Stall stall;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"teoks0199"},"content":"    private Label locationName;","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"teoks0199"},"content":"     * Creates a {@code PersonCode} with the given {@code Stall} and index to display.","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"teoks0199"},"content":"    public StallCard(Stall stall, int displayedIndex) {","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"teoks0199"},"content":"        this.stall \u003d stall;","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"teoks0199"},"content":"        name.setText(stall.getName().fullName);","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"teoks0199"},"content":"        locationName.setText(stall.getLocation().locationName);","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"teoks0199":11,"-":34}},{"path":"src/main/java/seedu/address/ui/StallDetailsCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"beatricecst"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"beatricecst"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"beatricecst"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"beatricecst"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"beatricecst"},"content":"import seedu.address.model.stall.Stall;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"beatricecst"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"beatricecst"},"content":" * An UI component that displays information of a {@code Stall}.","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"beatricecst"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"beatricecst"},"content":"public class StallDetailsCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"beatricecst"},"content":"    private static final String FXML \u003d \"StallDetailsCard.fxml\";","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"beatricecst"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"beatricecst"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"beatricecst"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"beatricecst"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"beatricecst"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"beatricecst"},"content":"    public final Stall stall;","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"beatricecst"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"beatricecst"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"beatricecst"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"beatricecst"},"content":"    private Label name;","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"beatricecst"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"beatricecst"},"content":"    private Label locationName;","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"beatricecst"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"beatricecst"},"content":"    private Label review;","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"beatricecst"},"content":"    @FXML","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"beatricecst"},"content":"    private Label menuItem;","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"beatricecst"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"beatricecst"},"content":"     * Creates a {@code PersonCode} with the given {@code Stall} and index to display.","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"beatricecst"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"beatricecst"},"content":"    public StallDetailsCard(Stall stall, int displayedIndex) {","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"beatricecst"},"content":"        super(FXML);","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"beatricecst"},"content":"        this.stall \u003d stall;","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"beatricecst"},"content":"        name.setText(stall.getName().fullName);","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"beatricecst"},"content":"        locationName.setText(stall.getLocation().locationName);","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"beatricecst"},"content":"        if (stall.getMenu().getSize() \u003d\u003d 0) {","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"beatricecst"},"content":"            String str \u003d \"No menu item added to this stall yet\";","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"beatricecst"},"content":"            menuItem.setText(str);","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"beatricecst"},"content":"        } else {","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"beatricecst"},"content":"            menuItem.setText(stall.getMenu().toString());","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"beatricecst"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"beatricecst"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"beatricecst":55}},{"path":"src/main/java/seedu/address/ui/StallListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Stall;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"teoks0199"},"content":"public class StallListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"teoks0199"},"content":"    private static final String FXML \u003d \"StallListPanel.fxml\";","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"teoks0199"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(StallListPanel.class);","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"teoks0199"},"content":"    private ListView\u003cStall\u003e stallListView;","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"teoks0199"},"content":"     * Creates a {@code StallListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"teoks0199"},"content":"    public StallListPanel(ObservableList\u003cStall\u003e stallList) {","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"teoks0199"},"content":"        stallListView.setItems(stallList);","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"teoks0199"},"content":"        stallListView.setCellFactory(listView -\u003e new StallListViewCell());","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"teoks0199"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Stall} using a {@code StallCard}.","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"teoks0199"},"content":"    class StallListViewCell extends ListCell\u003cStall\u003e {","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"teoks0199"},"content":"        protected void updateItem(Stall stall, boolean empty) {","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"teoks0199"},"content":"            super.updateItem(stall, empty);","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"teoks0199"},"content":"            if (empty || stall \u003d\u003d null) {","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"teoks0199"},"content":"                setGraphic(new StallCard(stall, getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"teoks0199":15,"-":34}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"beatricecst"},"content":"    -fx-background-color: derive(#01FFFF, 20%);","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"beatricecst":1,"-":351}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"beatricecst"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"beatricecst"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"         title\u003d\"Address App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":51,"author":{"gitId":"beatricecst"},"content":"        \u003cSplitPane orientation\u003d\"HORIZONTAL\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"beatricecst"},"content":"        \u003citems\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"beatricecst"},"content":"          \u003cVBox fx:id\u003d\"stallList\" styleClass\u003d\"pane-with-border\" prefWidth\u003d\"170\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":57,"author":{"gitId":"teoks0199"},"content":"            \u003cStackPane fx:id\u003d\"stallListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":60,"author":{"gitId":"beatricecst"},"content":"          \u003cVBox fx:id\u003d\"stallDetails\" styleClass\u003d\"pane-with-border\" prefWidth\u003d\"170\" minHeight\u003d\"100\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"beatricecst"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"beatricecst"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"beatricecst"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"beatricecst"},"content":"            \u003cStackPane fx:id\u003d\"stallDetailsPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"beatricecst"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"beatricecst"},"content":"        \u003c/items\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"beatricecst"},"content":"        \u003c/SplitPane\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"beatricecst":13,"teoks0199":1,"-":59}},{"path":"src/main/resources/view/StallDetailsCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"beatricecst"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"beatricecst"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"beatricecst"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"beatricecst"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"beatricecst"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"beatricecst"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"beatricecst"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"beatricecst"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"beatricecst"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"beatricecst"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"beatricecst"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"beatricecst"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"beatricecst"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"beatricecst"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"150\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"beatricecst"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"beatricecst"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"beatricecst"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"beatricecst"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"beatricecst"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"beatricecst"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"beatricecst"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"beatricecst"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"beatricecst"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"beatricecst"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"beatricecst"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"beatricecst"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"beatricecst"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"beatricecst"},"content":"            \u003cLabel fx:id\u003d\"locationName\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$locationName\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"beatricecst"},"content":"            \u003cLabel fx:id\u003d\"menuItem\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$locationName\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"beatricecst"},"content":"            \u003c!--      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e--\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"beatricecst"},"content":"            \u003c!--      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e--\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"beatricecst"},"content":"            \u003c!--      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e--\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"beatricecst"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"beatricecst"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"beatricecst"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"beatricecst":38}},{"path":"src/main/resources/view/StallDetailsPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"beatricecst"},"content":"    \u003cListView fx:id\u003d\"oneStallView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"beatricecst":1,"-":7}},{"path":"src/main/resources/view/StallListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"teoks0199"},"content":"        \u003cLabel fx:id\u003d\"locationName\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$locationName\" /\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"teoks0199"},"content":"\u003c!--      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e--\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"teoks0199"},"content":"\u003c!--      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e--\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"teoks0199"},"content":"\u003c!--      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e--\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"teoks0199":4,"-":33}},{"path":"src/main/resources/view/StallListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":7,"author":{"gitId":"teoks0199"},"content":"  \u003cListView fx:id\u003d\"stallListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"teoks0199":1,"-":7}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_STALL_DISPLAYED_INDEX;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LOCATION_DESC_ASIAN;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_ASIAN;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":9,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.testutil.TypicalStalls.ASIAN;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":19,"author":{"gitId":"teoks0199"},"content":"import seedu.address.logic.commands.AddStallCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":28,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Stall;","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"teoks0199"},"content":"import seedu.address.testutil.StallBuilder;","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"teoks0199"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"teoks0199"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"teoks0199"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"teoks0199"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"teoks0199"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"teoks0199"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"teoks0199"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"teoks0199"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":73,"author":{"gitId":"teoks0199"},"content":"        String deleteCommand \u003d \"delete-stall s/9\";","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"teoks0199"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_STALL_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"teoks0199"},"content":"    public void getFilteredStallList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"teoks0199"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredStallList().remove(0));","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-10-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-10-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-10-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-10-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-10-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-10-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-10-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-10-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-10-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-10-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-10-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-10-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-10-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-10-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-10-14"},{"lineNumber":166,"author":{"gitId":"teoks0199"},"content":"        String addCommand \u003d AddStallCommand.COMMAND_WORD + NAME_DESC_ASIAN + LOCATION_DESC_ASIAN;","lastModifiedDate":"2023-10-14"},{"lineNumber":167,"author":{"gitId":"teoks0199"},"content":"        Stall expectedStall \u003d new StallBuilder(ASIAN).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-10-14"},{"lineNumber":169,"author":{"gitId":"teoks0199"},"content":"        expectedModel.addStall(expectedStall);","lastModifiedDate":"2023-10-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":172,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"teoks0199":27,"-":146}},{"path":"src/test/java/seedu/address/logic/commands/AddStallCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.testutil.TypicalStalls.getTypicalAddressBook;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Stall;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"teoks0199"},"content":"import seedu.address.testutil.StallBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"teoks0199"},"content":" * Contains integration tests (interaction with the Model) for {@code AddStallCommand}.","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"teoks0199"},"content":"public class AddStallCommandIntegrationTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"teoks0199"},"content":"    public void execute_newStall_success() {","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"teoks0199"},"content":"        Stall validStall \u003d new StallBuilder().build();","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"teoks0199"},"content":"        expectedModel.addStall(validStall);","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"teoks0199"},"content":"        assertCommandSuccess(new AddStallCommand(validStall), model,","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"teoks0199"},"content":"                String.format(AddStallCommand.MESSAGE_SUCCESS, Messages.format(validStall)),","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"teoks0199"},"content":"    public void execute_duplicateStall_throwsCommandException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"teoks0199"},"content":"        Stall stallInList \u003d model.getAddressBook().getStallList().get(0);","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"teoks0199"},"content":"        assertCommandFailure(new AddStallCommand(stallInList), model,","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"teoks0199"},"content":"                AddStallCommand.MESSAGE_DUPLICATE_STALL);","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"teoks0199":14,"-":33}},{"path":"src/test/java/seedu/address/logic/commands/AddStallCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.testutil.TypicalStalls.AUNTIES_COOKING;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"Ruizhi2001"},"content":"import seedu.address.model.item.Item;","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"samuelmui8"},"content":"import seedu.address.model.item.review.ItemReview;","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Stall;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"teoks0199"},"content":"import seedu.address.testutil.StallBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"teoks0199"},"content":"public class AddStallCommandTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"teoks0199"},"content":"    public void constructor_nullStall_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"teoks0199"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddStallCommand(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"teoks0199"},"content":"    public void execute_stallAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"teoks0199"},"content":"        ModelStubAcceptingStallAdded modelStub \u003d new ModelStubAcceptingStallAdded();","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"teoks0199"},"content":"        Stall validStall \u003d new StallBuilder().build();","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"teoks0199"},"content":"        CommandResult commandResult \u003d new AddStallCommand(validStall).execute(modelStub);","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"teoks0199"},"content":"        assertEquals(String.format(AddStallCommand.MESSAGE_SUCCESS, Messages.format(validStall)),","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"teoks0199"},"content":"        assertEquals(Arrays.asList(validStall), modelStub.stallsAdded);","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"teoks0199"},"content":"    public void execute_duplicateStall_throwsCommandException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"teoks0199"},"content":"        Stall validStall \u003d new StallBuilder().build();","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"teoks0199"},"content":"        AddStallCommand addStallCommand \u003d new AddStallCommand(validStall);","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"teoks0199"},"content":"        ModelStub modelStub \u003d new ModelStubWithStall(validStall);","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"teoks0199"},"content":"        assertThrows(CommandException.class, AddStallCommand.MESSAGE_DUPLICATE_STALL, () -\u003e addStallCommand","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"teoks0199"},"content":"                .execute(modelStub));","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"teoks0199"},"content":"        Stall alice \u003d new StallBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"teoks0199"},"content":"        Stall bob \u003d new StallBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"teoks0199"},"content":"        AddStallCommand addAliceCommand \u003d new AddStallCommand(alice);","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"teoks0199"},"content":"        AddStallCommand addBobCommand \u003d new AddStallCommand(bob);","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"teoks0199"},"content":"        AddStallCommand addAliceCommandCopy \u003d new AddStallCommand(alice);","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"teoks0199"},"content":"        // different stall -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"teoks0199"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"teoks0199"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"teoks0199"},"content":"        AddStallCommand addCommand \u003d new AddStallCommand(AUNTIES_COOKING);","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"teoks0199"},"content":"        String expected \u003d AddStallCommand.class.getCanonicalName() + \"{toAdd\u003d\" + AUNTIES_COOKING + \"}\";","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"teoks0199"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":93,"author":{"gitId":"beatricecst"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"teoks0199"},"content":"        public void addStall(Stall stall) {","lastModifiedDate":"2023-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"teoks0199"},"content":"        public boolean hasStall(Stall stall) {","lastModifiedDate":"2023-10-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"teoks0199"},"content":"        public void deleteStall(Stall target) {","lastModifiedDate":"2023-10-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"beatricecst"},"content":"        @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":150,"author":{"gitId":"beatricecst"},"content":"        public void showStall(Stall stall) {","lastModifiedDate":"2023-10-14"},{"lineNumber":151,"author":{"gitId":"beatricecst"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-14"},{"lineNumber":152,"author":{"gitId":"beatricecst"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":153,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"teoks0199"},"content":"        public void setStall(Stall target, Stall editedStall) {","lastModifiedDate":"2023-10-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"teoks0199"},"content":"        public ObservableList\u003cStall\u003e getFilteredStallList() {","lastModifiedDate":"2023-10-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":162,"author":{"gitId":"beatricecst"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":163,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":164,"author":{"gitId":"beatricecst"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":165,"author":{"gitId":"beatricecst"},"content":"        public ObservableList\u003cStall\u003e getTempFilteredStallList() {","lastModifiedDate":"2023-10-16"},{"lineNumber":166,"author":{"gitId":"beatricecst"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"teoks0199"},"content":"        public void updateFilteredStallList(Predicate\u003cStall\u003e predicate) {","lastModifiedDate":"2023-10-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":174,"author":{"gitId":"Ruizhi2001"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":175,"author":{"gitId":"Ruizhi2001"},"content":"        public void addItem(Stall stall, Item item) {","lastModifiedDate":"2023-10-15"},{"lineNumber":176,"author":{"gitId":"Ruizhi2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-15"},{"lineNumber":177,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":178,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":179,"author":{"gitId":"Ruizhi2001"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":180,"author":{"gitId":"Ruizhi2001"},"content":"        public void deleteItem(Stall stall, Item item) {","lastModifiedDate":"2023-10-15"},{"lineNumber":181,"author":{"gitId":"Ruizhi2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-15"},{"lineNumber":182,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":183,"author":{"gitId":"Ruizhi2001"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":184,"author":{"gitId":"Ruizhi2001"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":185,"author":{"gitId":"Ruizhi2001"},"content":"        public boolean hasItem(Stall stall, Item item) {","lastModifiedDate":"2023-10-15"},{"lineNumber":186,"author":{"gitId":"Ruizhi2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-15"},{"lineNumber":187,"author":{"gitId":"Ruizhi2001"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":188,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":189,"author":{"gitId":"samuelmui8"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":190,"author":{"gitId":"samuelmui8"},"content":"        public void addItemReview(Stall stall, Item item, ItemReview itemReview) {","lastModifiedDate":"2023-10-16"},{"lineNumber":191,"author":{"gitId":"samuelmui8"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":192,"author":{"gitId":"samuelmui8"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":193,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":194,"author":{"gitId":"samuelmui8"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":195,"author":{"gitId":"samuelmui8"},"content":"        public void deleteItemReview(Stall stall, Item item) {","lastModifiedDate":"2023-10-16"},{"lineNumber":196,"author":{"gitId":"samuelmui8"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":197,"author":{"gitId":"samuelmui8"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":198,"author":{"gitId":"samuelmui8"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":199,"author":{"gitId":"samuelmui8"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":200,"author":{"gitId":"samuelmui8"},"content":"        public boolean hasItemReview(Stall stall, Item item) {","lastModifiedDate":"2023-10-16"},{"lineNumber":201,"author":{"gitId":"samuelmui8"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":202,"author":{"gitId":"samuelmui8"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"teoks0199"},"content":"     * A Model stub that contains a single stall.","lastModifiedDate":"2023-10-13"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"teoks0199"},"content":"    private class ModelStubWithStall extends ModelStub {","lastModifiedDate":"2023-10-13"},{"lineNumber":209,"author":{"gitId":"teoks0199"},"content":"        private final Stall stall;","lastModifiedDate":"2023-10-13"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":211,"author":{"gitId":"teoks0199"},"content":"        ModelStubWithStall(Stall stall) {","lastModifiedDate":"2023-10-13"},{"lineNumber":212,"author":{"gitId":"teoks0199"},"content":"            requireNonNull(stall);","lastModifiedDate":"2023-10-13"},{"lineNumber":213,"author":{"gitId":"teoks0199"},"content":"            this.stall \u003d stall;","lastModifiedDate":"2023-10-13"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"teoks0199"},"content":"        public boolean hasStall(Stall stall) {","lastModifiedDate":"2023-10-13"},{"lineNumber":218,"author":{"gitId":"teoks0199"},"content":"            requireNonNull(stall);","lastModifiedDate":"2023-10-13"},{"lineNumber":219,"author":{"gitId":"teoks0199"},"content":"            return this.stall.isSameStall(stall);","lastModifiedDate":"2023-10-13"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":222,"author":{"gitId":"beatricecst"},"content":"        @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":223,"author":{"gitId":"beatricecst"},"content":"        public void showStall(Stall stall) {","lastModifiedDate":"2023-10-14"},{"lineNumber":224,"author":{"gitId":"beatricecst"},"content":"            requireNonNull(stall);","lastModifiedDate":"2023-10-14"},{"lineNumber":225,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":226,"author":{"gitId":"beatricecst"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"teoks0199"},"content":"     * A Model stub that always accept the stall being added.","lastModifiedDate":"2023-10-13"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":232,"author":{"gitId":"teoks0199"},"content":"    private class ModelStubAcceptingStallAdded extends ModelStub {","lastModifiedDate":"2023-10-13"},{"lineNumber":233,"author":{"gitId":"teoks0199"},"content":"        final ArrayList\u003cStall\u003e stallsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-13"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":236,"author":{"gitId":"teoks0199"},"content":"        public boolean hasStall(Stall stall) {","lastModifiedDate":"2023-10-13"},{"lineNumber":237,"author":{"gitId":"teoks0199"},"content":"            requireNonNull(stall);","lastModifiedDate":"2023-10-13"},{"lineNumber":238,"author":{"gitId":"teoks0199"},"content":"            return stallsAdded.stream().anyMatch(stall::isSameStall);","lastModifiedDate":"2023-10-13"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":241,"author":{"gitId":"beatricecst"},"content":"        @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":242,"author":{"gitId":"beatricecst"},"content":"        public void showStall(Stall stall) {","lastModifiedDate":"2023-10-14"},{"lineNumber":243,"author":{"gitId":"beatricecst"},"content":"            requireNonNull(stall);","lastModifiedDate":"2023-10-14"},{"lineNumber":244,"author":{"gitId":"beatricecst"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":245,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":247,"author":{"gitId":"teoks0199"},"content":"        public void addStall(Stall stall) {","lastModifiedDate":"2023-10-13"},{"lineNumber":248,"author":{"gitId":"teoks0199"},"content":"            requireNonNull(stall);","lastModifiedDate":"2023-10-13"},{"lineNumber":249,"author":{"gitId":"teoks0199"},"content":"            stallsAdded.add(stall);","lastModifiedDate":"2023-10-13"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"Ruizhi2001":16,"samuelmui8":16,"beatricecst":22,"teoks0199":55,"-":149}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.testutil.TypicalStalls.getTypicalAddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"teoks0199":1,"-":30}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"beatricecst"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false, false)));","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"beatricecst"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false, false)));","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"beatricecst"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true, false)));","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"beatricecst"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false, false).hashCode());","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"beatricecst"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true, false).hashCode());","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expected \u003d CommandResult.class.getCanonicalName() + \"{feedbackToUser\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                + commandResult.getFeedbackToUser() + \", showHelp\u003d\" + commandResult.isShowHelp()","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"beatricecst"},"content":"                + \", exit\u003d\" + commandResult.isExit()","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"beatricecst"},"content":"                + \", isStallDetail\u003d\" + commandResult.isStallDetail() + \"}\";","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(expected, commandResult.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"beatricecst":7,"-":57}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Stall;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"teoks0199"},"content":"import seedu.address.testutil.EditStallDescriptorBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"teoks0199"},"content":"    public static final String VALID_NAME_ASIAN \u003d \"Asian Cuisine\";","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"teoks0199"},"content":"    public static final String VALID_NAME_BRITISH \u003d \"British Cuisine\";","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"teoks0199"},"content":"    public static final String VALID_LOCATION_ASIAN \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"teoks0199"},"content":"    public static final String VALID_LOCATION_BRITISH \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"teoks0199"},"content":"    public static final String NAME_DESC_ASIAN \u003d \" \" + PREFIX_NAME + VALID_NAME_ASIAN;","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"teoks0199"},"content":"    public static final String NAME_DESC_BRITISH \u003d \" \" + PREFIX_NAME + VALID_NAME_BRITISH;","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"teoks0199"},"content":"    public static final String LOCATION_DESC_ASIAN \u003d \" \" + PREFIX_LOCATION + VALID_LOCATION_ASIAN;","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"teoks0199"},"content":"    public static final String LOCATION_DESC_BRITISH \u003d \" \" + PREFIX_LOCATION + VALID_LOCATION_BRITISH;","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"teoks0199"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \" \"; // empty names not allowed","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"teoks0199"},"content":"    public static final String INVALID_LOCATION_DESC \u003d \" \" + PREFIX_LOCATION; // empty locations not allowed","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":40,"author":{"gitId":"teoks0199"},"content":"    public static final EditCommand.EditStallDescriptor DESC_ASIAN;","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"teoks0199"},"content":"    public static final EditCommand.EditStallDescriptor DESC_BRITISH;","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"teoks0199"},"content":"        DESC_ASIAN \u003d new EditStallDescriptorBuilder()","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"teoks0199"},"content":"                .withName(VALID_NAME_ASIAN).withLocation(VALID_LOCATION_ASIAN).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"teoks0199"},"content":"        DESC_BRITISH \u003d new EditStallDescriptorBuilder()","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"teoks0199"},"content":"                .withName(VALID_NAME_BRITISH).withLocation(VALID_LOCATION_BRITISH).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"teoks0199"},"content":"     * - the address book, filtered stall list and selected stall in {@code actualModel} remain unchanged","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"teoks0199"},"content":"        List\u003cStall\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredStallList());","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"teoks0199"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredStallList());","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":93,"author":{"gitId":"teoks0199"},"content":"     * Updates {@code model}\u0027s filtered list to show only the stall at the given {@code targetIndex} in the","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":96,"author":{"gitId":"teoks0199"},"content":"    public static void showStallAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"teoks0199"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredStallList().size());","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":99,"author":{"gitId":"teoks0199"},"content":"        Stall stall \u003d model.getFilteredStallList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"teoks0199"},"content":"        final String[] splitName \u003d stall.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"teoks0199"},"content":"        model.updateFilteredStallList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":103,"author":{"gitId":"teoks0199"},"content":"        assertEquals(1, model.getFilteredStallList().size());","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"teoks0199":30,"-":76}},{"path":"src/test/java/seedu/address/logic/commands/DeleteStallCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showStallAtIndex;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STALL;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_STALL;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.testutil.TypicalStalls.getTypicalAddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Stall;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"teoks0199"},"content":" * {@code DeleteStallCommand}.","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"teoks0199"},"content":"public class DeleteStallCommandTest {","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"teoks0199"},"content":"        Stall stallToDelete \u003d model.getFilteredStallList().get(INDEX_FIRST_STALL.getZeroBased());","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"teoks0199"},"content":"        DeleteStallCommand deleteStallCommand \u003d new DeleteStallCommand(INDEX_FIRST_STALL);","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"teoks0199"},"content":"        String expectedMessage \u003d String.format(DeleteStallCommand.MESSAGE_DELETE_STALL_SUCCESS,","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"teoks0199"},"content":"                Messages.format(stallToDelete));","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"teoks0199"},"content":"        expectedModel.deleteStall(stallToDelete);","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"teoks0199"},"content":"        assertCommandSuccess(deleteStallCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"teoks0199"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStallList().size() + 1);","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"teoks0199"},"content":"        DeleteStallCommand deleteStallCommand \u003d new DeleteStallCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"teoks0199"},"content":"        assertCommandFailure(deleteStallCommand, model, Messages.MESSAGE_INVALID_STALL_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"teoks0199"},"content":"        showStallAtIndex(model, INDEX_FIRST_STALL);","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"teoks0199"},"content":"        Stall stallToDelete \u003d model.getFilteredStallList().get(INDEX_FIRST_STALL.getZeroBased());","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"teoks0199"},"content":"        DeleteStallCommand deleteStallCommand \u003d new DeleteStallCommand(INDEX_FIRST_STALL);","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"teoks0199"},"content":"        String expectedMessage \u003d String.format(DeleteStallCommand.MESSAGE_DELETE_STALL_SUCCESS,","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"teoks0199"},"content":"                Messages.format(stallToDelete));","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"teoks0199"},"content":"        expectedModel.deleteStall(stallToDelete);","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"teoks0199"},"content":"        showNoStall(expectedModel);","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"teoks0199"},"content":"        assertCommandSuccess(deleteStallCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"teoks0199"},"content":"        showStallAtIndex(model, INDEX_FIRST_STALL);","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"teoks0199"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_STALL;","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"teoks0199"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getStallList().size());","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"teoks0199"},"content":"        DeleteStallCommand deleteStallCommand \u003d new DeleteStallCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"teoks0199"},"content":"        assertCommandFailure(deleteStallCommand, model, Messages.MESSAGE_INVALID_STALL_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"teoks0199"},"content":"        DeleteStallCommand deleteFirstCommand \u003d new DeleteStallCommand(INDEX_FIRST_STALL);","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"teoks0199"},"content":"        DeleteStallCommand deleteSecondCommand \u003d new DeleteStallCommand(INDEX_SECOND_STALL);","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"teoks0199"},"content":"        DeleteStallCommand deleteFirstCommandCopy \u003d new DeleteStallCommand(INDEX_FIRST_STALL);","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"teoks0199"},"content":"        // different stall -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"teoks0199"},"content":"        DeleteStallCommand deleteStallCommand \u003d new DeleteStallCommand(targetIndex);","lastModifiedDate":"2023-10-14"},{"lineNumber":108,"author":{"gitId":"teoks0199"},"content":"        String expected \u003d DeleteStallCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2023-10-14"},{"lineNumber":109,"author":{"gitId":"teoks0199"},"content":"        assertEquals(expected, deleteStallCommand.toString());","lastModifiedDate":"2023-10-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"teoks0199"},"content":"    private void showNoStall(Model model) {","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"teoks0199"},"content":"        model.updateFilteredStallList(p -\u003e false);","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"teoks0199"},"content":"        assertTrue(model.getFilteredStallList().isEmpty());","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"teoks0199":39,"-":81}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_ASIAN;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BRITISH;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_BRITISH;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BRITISH;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showStallAtIndex;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STALL;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_STALL;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.testutil.TypicalStalls.getTypicalAddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":21,"author":{"gitId":"teoks0199"},"content":"import seedu.address.logic.commands.EditCommand.EditStallDescriptor;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Stall;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"teoks0199"},"content":"import seedu.address.testutil.EditStallDescriptorBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"teoks0199"},"content":"import seedu.address.testutil.StallBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"teoks0199"},"content":"        Stall editedStall \u003d new StallBuilder().build();","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"teoks0199"},"content":"        EditStallDescriptor descriptor \u003d new EditStallDescriptorBuilder(editedStall).build();","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"teoks0199"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_STALL, descriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"teoks0199"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STALL_SUCCESS, Messages.format(editedStall));","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"teoks0199"},"content":"        expectedModel.setStall(model.getFilteredStallList().get(0), editedStall);","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"teoks0199"},"content":"        Index indexLastStall \u003d Index.fromOneBased(model.getFilteredStallList().size());","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"teoks0199"},"content":"        Stall lastStall \u003d model.getFilteredStallList().get(indexLastStall.getZeroBased());","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"teoks0199"},"content":"        StallBuilder stallInList \u003d new StallBuilder(lastStall);","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"teoks0199"},"content":"        Stall editedStall \u003d stallInList.withName(VALID_NAME_BRITISH).withLocation(VALID_LOCATION_BRITISH).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"teoks0199"},"content":"        EditStallDescriptor descriptor \u003d new EditStallDescriptorBuilder().withName(VALID_NAME_BRITISH)","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"teoks0199"},"content":"                .withLocation(VALID_LOCATION_BRITISH).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"teoks0199"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastStall, descriptor);","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"teoks0199"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STALL_SUCCESS, Messages.format(editedStall));","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"teoks0199"},"content":"        expectedModel.setStall(lastStall, editedStall);","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"teoks0199"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_STALL, new EditStallDescriptor());","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"teoks0199"},"content":"        Stall editedStall \u003d model.getFilteredStallList().get(INDEX_FIRST_STALL.getZeroBased());","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"teoks0199"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STALL_SUCCESS, Messages.format(editedStall));","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"teoks0199"},"content":"        showStallAtIndex(model, INDEX_FIRST_STALL);","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"teoks0199"},"content":"        Stall stallInFilteredList \u003d model.getFilteredStallList().get(INDEX_FIRST_STALL.getZeroBased());","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"teoks0199"},"content":"        Stall editedStall \u003d new StallBuilder(stallInFilteredList).withName(VALID_NAME_BRITISH).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"teoks0199"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_STALL,","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"teoks0199"},"content":"                new EditStallDescriptorBuilder().withName(VALID_NAME_BRITISH).build());","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"teoks0199"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STALL_SUCCESS, Messages.format(editedStall));","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"teoks0199"},"content":"        expectedModel.setStall(model.getFilteredStallList().get(0), editedStall);","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"teoks0199"},"content":"    public void execute_duplicateStallUnfilteredList_failure() {","lastModifiedDate":"2023-10-13"},{"lineNumber":101,"author":{"gitId":"teoks0199"},"content":"        Stall firstStall \u003d model.getFilteredStallList().get(INDEX_FIRST_STALL.getZeroBased());","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"teoks0199"},"content":"        EditStallDescriptor descriptor \u003d new EditStallDescriptorBuilder(firstStall).build();","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"teoks0199"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_STALL, descriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"teoks0199"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_STALL);","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"teoks0199"},"content":"    public void execute_duplicateStallFilteredList_failure() {","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"teoks0199"},"content":"        showStallAtIndex(model, INDEX_FIRST_STALL);","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":112,"author":{"gitId":"teoks0199"},"content":"        // edit stall in filtered list into a duplicate in address book","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"teoks0199"},"content":"        Stall stallInList \u003d model.getAddressBook().getStallList().get(INDEX_SECOND_STALL.getZeroBased());","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"teoks0199"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_STALL,","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"teoks0199"},"content":"                new EditStallDescriptorBuilder(stallInList).build());","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"teoks0199"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_STALL);","lastModifiedDate":"2023-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"teoks0199"},"content":"    public void execute_invalidStallIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"teoks0199"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStallList().size() + 1);","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"teoks0199"},"content":"        EditStallDescriptor descriptor \u003d new EditStallDescriptorBuilder().withName(VALID_NAME_BRITISH).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"teoks0199"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_STALL_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"teoks0199"},"content":"    public void execute_invalidStallIndexFilteredList_failure() {","lastModifiedDate":"2023-10-13"},{"lineNumber":135,"author":{"gitId":"teoks0199"},"content":"        showStallAtIndex(model, INDEX_FIRST_STALL);","lastModifiedDate":"2023-10-13"},{"lineNumber":136,"author":{"gitId":"teoks0199"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_STALL;","lastModifiedDate":"2023-10-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"teoks0199"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getStallList().size());","lastModifiedDate":"2023-10-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"teoks0199"},"content":"                new EditStallDescriptorBuilder().withName(VALID_NAME_BRITISH).build());","lastModifiedDate":"2023-10-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"teoks0199"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_STALL_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"teoks0199"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_STALL, DESC_ASIAN);","lastModifiedDate":"2023-10-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":151,"author":{"gitId":"teoks0199"},"content":"        EditStallDescriptor copyDescriptor \u003d new EditStallDescriptor(DESC_ASIAN);","lastModifiedDate":"2023-10-14"},{"lineNumber":152,"author":{"gitId":"teoks0199"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_STALL, copyDescriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"teoks0199"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_STALL, DESC_ASIAN)));","lastModifiedDate":"2023-10-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"teoks0199"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_STALL, DESC_BRITISH)));","lastModifiedDate":"2023-10-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":174,"author":{"gitId":"teoks0199"},"content":"        EditStallDescriptor editStallDescriptor \u003d new EditStallDescriptor();","lastModifiedDate":"2023-10-13"},{"lineNumber":175,"author":{"gitId":"teoks0199"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editStallDescriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":176,"author":{"gitId":"teoks0199"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editStallDescriptor\u003d\"","lastModifiedDate":"2023-10-13"},{"lineNumber":177,"author":{"gitId":"teoks0199"},"content":"                + editStallDescriptor + \"}\";","lastModifiedDate":"2023-10-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"teoks0199":67,"-":114}},{"path":"src/test/java/seedu/address/logic/commands/EditStallDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_ASIAN;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BRITISH;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_BRITISH;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BRITISH;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"teoks0199"},"content":"import seedu.address.logic.commands.EditCommand.EditStallDescriptor;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"teoks0199"},"content":"import seedu.address.testutil.EditStallDescriptorBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"teoks0199"},"content":"public class EditStallDescriptorTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"teoks0199"},"content":"        EditCommand.EditStallDescriptor descriptorWithSameValues \u003d new EditStallDescriptor(DESC_ASIAN);","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"teoks0199"},"content":"        assertTrue(DESC_ASIAN.equals(descriptorWithSameValues));","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"teoks0199"},"content":"        assertTrue(DESC_ASIAN.equals(DESC_ASIAN));","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"teoks0199"},"content":"        assertFalse(DESC_ASIAN.equals(null));","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"teoks0199"},"content":"        assertFalse(DESC_ASIAN.equals(5));","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"teoks0199"},"content":"        assertFalse(DESC_ASIAN.equals(DESC_BRITISH));","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"teoks0199"},"content":"        EditStallDescriptor editedAsian \u003d new EditStallDescriptorBuilder(DESC_ASIAN)","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"teoks0199"},"content":"                .withName(VALID_NAME_BRITISH).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"teoks0199"},"content":"        assertFalse(DESC_ASIAN.equals(editedAsian));","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"teoks0199"},"content":"        // different location -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"teoks0199"},"content":"        editedAsian \u003d new EditStallDescriptorBuilder(DESC_ASIAN).withLocation(VALID_LOCATION_BRITISH).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"teoks0199"},"content":"        assertFalse(DESC_ASIAN.equals(editedAsian));","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"teoks0199"},"content":"        EditCommand.EditStallDescriptor editStallDescriptor \u003d new EditCommand.EditStallDescriptor();","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"teoks0199"},"content":"        String expected \u003d EditCommand.EditStallDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"teoks0199"},"content":"                + editStallDescriptor.getName().orElse(null) + \", location\u003d\"","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"teoks0199"},"content":"                + editStallDescriptor.getLocation().orElse(null) + \"}\";","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"teoks0199"},"content":"        assertEquals(expected, editStallDescriptor.toString());","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"teoks0199":24,"-":31}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"beatricecst"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false);","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"beatricecst":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.Messages.MESSAGE_STALLS_LISTED_OVERVIEW;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.testutil.TypicalStalls.AUNTIES_COOKING;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.testutil.TypicalStalls.DRINKS_STALL;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.testutil.TypicalStalls.ECONOMIC_RICE;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.testutil.TypicalStalls.getTypicalAddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"teoks0199"},"content":"        // different stall -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"teoks0199"},"content":"    public void execute_zeroKeywords_noStallFound() {","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"teoks0199"},"content":"        String expectedMessage \u003d String.format(MESSAGE_STALLS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"teoks0199"},"content":"        expectedModel.updateFilteredStallList(predicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"teoks0199"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredStallList());","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"teoks0199"},"content":"    public void execute_multipleKeywords_multipleStallsFound() {","lastModifiedDate":"2023-10-13"},{"lineNumber":69,"author":{"gitId":"teoks0199"},"content":"        String expectedMessage \u003d String.format(MESSAGE_STALLS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"teoks0199"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Rice Drinks Cooking\");","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"teoks0199"},"content":"        expectedModel.updateFilteredStallList(predicate);","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"teoks0199"},"content":"        assertEquals(Arrays.asList(AUNTIES_COOKING, DRINKS_STALL, ECONOMIC_RICE), model.getFilteredStallList());","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"teoks0199":16,"-":75}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"beatricecst"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false, false);","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"beatricecst":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showStallAtIndex;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STALL;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.testutil.TypicalStalls.getTypicalAddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"teoks0199"},"content":"        showStallAtIndex(model, INDEX_FIRST_STALL);","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"teoks0199":4,"-":35}},{"path":"src/test/java/seedu/address/logic/commands/ViewStallCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"beatricecst"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"beatricecst"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"beatricecst"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"beatricecst"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"beatricecst"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"beatricecst"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showStallAtIndex;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"beatricecst"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STALL;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"beatricecst"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_STALL;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"beatricecst"},"content":"import static seedu.address.testutil.TypicalStalls.getTypicalAddressBook;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"beatricecst"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"beatricecst"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"beatricecst"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"beatricecst"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"beatricecst"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"beatricecst"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"beatricecst"},"content":"import seedu.address.model.stall.Stall;","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"beatricecst"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"beatricecst"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"beatricecst"},"content":" * {@code DeleteStallCommand}.","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"beatricecst"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"beatricecst"},"content":"public class ViewStallCommandTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"beatricecst"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"beatricecst"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"beatricecst"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"beatricecst"},"content":"        Stall stallToView \u003d model.getFilteredStallList().get(INDEX_FIRST_STALL.getZeroBased());","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"beatricecst"},"content":"        ViewStallCommand viewStallCommand \u003d new ViewStallCommand(INDEX_FIRST_STALL);","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"beatricecst"},"content":"        CommandResult expectedMessage \u003d new CommandResult(","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"beatricecst"},"content":"                String.format(ViewStallCommand.MESSAGE_VIEW_STALL_SUCCESS,","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"beatricecst"},"content":"                Messages.format(stallToView)), false, false, true);","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"beatricecst"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"beatricecst"},"content":"        expectedModel.showStall(stallToView);","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"beatricecst"},"content":"        assertCommandSuccess(viewStallCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"beatricecst"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"beatricecst"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"beatricecst"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStallList().size() + 1);","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"beatricecst"},"content":"        ViewStallCommand viewStallCommand \u003d new ViewStallCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"beatricecst"},"content":"        assertCommandFailure(viewStallCommand, model, Messages.MESSAGE_INVALID_STALL_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"beatricecst"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"beatricecst"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"beatricecst"},"content":"        showStallAtIndex(model, INDEX_FIRST_STALL);","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"beatricecst"},"content":"        Stall stallToView \u003d model.getFilteredStallList().get(INDEX_FIRST_STALL.getZeroBased());","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"beatricecst"},"content":"        ViewStallCommand viewStallCommand \u003d new ViewStallCommand(INDEX_FIRST_STALL);","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"beatricecst"},"content":"        CommandResult expectedMessage \u003d new CommandResult(String.format(","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"beatricecst"},"content":"                ViewStallCommand.MESSAGE_VIEW_STALL_SUCCESS,","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"beatricecst"},"content":"                Messages.format(stallToView)), false, false, true);","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"beatricecst"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"beatricecst"},"content":"        expectedModel.showStall(stallToView);","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"beatricecst"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"beatricecst"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"beatricecst"},"content":"        showStallAtIndex(model, INDEX_FIRST_STALL);","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"beatricecst"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_STALL;","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"beatricecst"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getStallList().size());","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"beatricecst"},"content":"        ViewStallCommand viewStallCommand \u003d new ViewStallCommand(outOfBoundIndex);","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"beatricecst"},"content":"        assertCommandFailure(viewStallCommand, model, Messages.MESSAGE_INVALID_STALL_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"beatricecst"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"beatricecst"},"content":"    public void equals() {","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"beatricecst"},"content":"        ViewStallCommand viewFirstCommand \u003d new ViewStallCommand(INDEX_FIRST_STALL);","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"beatricecst"},"content":"        ViewStallCommand viewSecondCommand \u003d new ViewStallCommand(INDEX_SECOND_STALL);","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"beatricecst"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"beatricecst"},"content":"        assertTrue(viewFirstCommand.equals(viewFirstCommand));","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"beatricecst"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"beatricecst"},"content":"        ViewStallCommand viewFirstCommandCopy \u003d new ViewStallCommand(INDEX_FIRST_STALL);","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"beatricecst"},"content":"        assertTrue(viewFirstCommand.equals(viewFirstCommandCopy));","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"beatricecst"},"content":"        assertFalse(viewFirstCommand.equals(1));","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"beatricecst"},"content":"        assertFalse(viewFirstCommand.equals(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"beatricecst"},"content":"        assertFalse(viewFirstCommand.equals(viewSecondCommand));","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"beatricecst"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"beatricecst"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"beatricecst"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"beatricecst"},"content":"        ViewStallCommand viewStallCommand \u003d new ViewStallCommand(targetIndex);","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"beatricecst"},"content":"        String expected \u003d ViewStallCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"beatricecst"},"content":"        assertEquals(expected, viewStallCommand.toString());","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"beatricecst"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"beatricecst":107}},{"path":"src/test/java/seedu/address/logic/parser/AddStallCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_LOCATION_DESC;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LOCATION_DESC_ASIAN;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LOCATION_DESC_BRITISH;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_ASIAN;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BRITISH;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_BRITISH;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BRITISH;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-07-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":18,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.testutil.TypicalStalls.BRITISH;","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"teoks0199"},"content":"import seedu.address.logic.commands.AddStallCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Location;","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Stall;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"teoks0199"},"content":"import seedu.address.testutil.StallBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"teoks0199"},"content":"public class AddStallCommandParserTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"teoks0199"},"content":"    private AddStallCommandParser parser \u003d new AddStallCommandParser();","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"teoks0199"},"content":"        Stall expectedStall \u003d new StallBuilder(BRITISH).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":37,"author":{"gitId":"teoks0199"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BRITISH","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"teoks0199"},"content":"                + LOCATION_DESC_BRITISH, new AddStallCommand(expectedStall));","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"teoks0199"},"content":"        Stall expectedStallMultipleTags \u003d new StallBuilder(BRITISH).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":44,"author":{"gitId":"teoks0199"},"content":"                NAME_DESC_BRITISH + LOCATION_DESC_BRITISH,","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"teoks0199"},"content":"                new AddStallCommand(expectedStallMultipleTags));","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":50,"author":{"gitId":"teoks0199"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BRITISH + LOCATION_DESC_BRITISH;","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":53,"author":{"gitId":"teoks0199"},"content":"        assertParseFailure(parser, NAME_DESC_ASIAN + validExpectedPersonString,","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":56,"author":{"gitId":"teoks0199"},"content":"        // multiple locations","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"teoks0199"},"content":"        assertParseFailure(parser, LOCATION_DESC_ASIAN + validExpectedPersonString,","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"teoks0199"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_LOCATION));","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":63,"author":{"gitId":"teoks0199"},"content":"                validExpectedPersonString + NAME_DESC_ASIAN + LOCATION_DESC_ASIAN","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                        + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":65,"author":{"gitId":"teoks0199"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_LOCATION));","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"teoks0199"},"content":"        // invalid location","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"teoks0199"},"content":"        assertParseFailure(parser, INVALID_LOCATION_DESC + validExpectedPersonString,","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"teoks0199"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_LOCATION));","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"teoks0199"},"content":"        // invalid location","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"teoks0199"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_LOCATION_DESC,","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"teoks0199"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_LOCATION));","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"teoks0199"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddStallCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"teoks0199"},"content":"        assertParseFailure(parser, VALID_NAME_BRITISH + LOCATION_DESC_BRITISH,","lastModifiedDate":"2023-10-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"teoks0199"},"content":"        // missing location prefix","lastModifiedDate":"2023-10-14"},{"lineNumber":100,"author":{"gitId":"teoks0199"},"content":"        assertParseFailure(parser, NAME_DESC_BRITISH + VALID_LOCATION_BRITISH,","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"teoks0199"},"content":"        assertParseFailure(parser, VALID_NAME_BRITISH + VALID_LOCATION_BRITISH,","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"teoks0199"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + LOCATION_DESC_BRITISH, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"teoks0199"},"content":"        // invalid location","lastModifiedDate":"2023-10-14"},{"lineNumber":114,"author":{"gitId":"teoks0199"},"content":"        assertParseFailure(parser, NAME_DESC_BRITISH + INVALID_LOCATION_DESC, Location.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"teoks0199"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + INVALID_LOCATION_DESC,","lastModifiedDate":"2023-10-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":121,"author":{"gitId":"teoks0199"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BRITISH","lastModifiedDate":"2023-10-14"},{"lineNumber":122,"author":{"gitId":"teoks0199"},"content":"                + LOCATION_DESC_BRITISH,","lastModifiedDate":"2023-10-14"},{"lineNumber":123,"author":{"gitId":"teoks0199"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddStallCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"teoks0199":47,"-":78}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STALL;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STALL;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"teoks0199"},"content":"import seedu.address.logic.commands.AddStallCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"teoks0199"},"content":"import seedu.address.logic.commands.DeleteStallCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Stall;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"teoks0199"},"content":"import seedu.address.testutil.EditStallDescriptorBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"teoks0199"},"content":"import seedu.address.testutil.StallBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"teoks0199"},"content":"import seedu.address.testutil.StallUtil;","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"teoks0199"},"content":"    public void parseCommand_addStall() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"teoks0199"},"content":"        Stall stall \u003d new StallBuilder().build();","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"teoks0199"},"content":"        AddStallCommand command \u003d (AddStallCommand) parser.parseCommand(StallUtil.getAddCommand(stall));","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"teoks0199"},"content":"        assertEquals(new AddStallCommand(stall), command);","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"teoks0199"},"content":"    public void parseCommand_deleteStall() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"teoks0199"},"content":"        DeleteStallCommand command \u003d (DeleteStallCommand) parser.parseCommand(","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"teoks0199"},"content":"                DeleteStallCommand.COMMAND_WORD + \" \" + PREFIX_STALL + INDEX_FIRST_STALL.getOneBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"teoks0199"},"content":"        assertEquals(new DeleteStallCommand(INDEX_FIRST_STALL), command);","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"teoks0199"},"content":"        Stall stall \u003d new StallBuilder().build();","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"teoks0199"},"content":"        EditCommand.EditStallDescriptor descriptor \u003d new EditStallDescriptorBuilder(stall).build();","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"teoks0199"},"content":"                + INDEX_FIRST_STALL.getOneBased() + \" \" + StallUtil.getEditStallDescriptorDetails(descriptor));","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"teoks0199"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_STALL, descriptor), command);","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"teoks0199":21,"-":80}},{"path":"src/test/java/seedu/address/logic/parser/DeleteStallCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STALL;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STALL;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"teoks0199"},"content":"import seedu.address.logic.commands.DeleteStallCommand;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"teoks0199"},"content":" * outside of the DeleteStallCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"teoks0199"},"content":" * same path through the DeleteStallCommand, and therefore we test only one of them.","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"teoks0199"},"content":"public class DeleteStallCommandParserTest {","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"teoks0199"},"content":"    private DeleteStallCommandParser parser \u003d new DeleteStallCommandParser();","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"teoks0199"},"content":"        String userInput \u003d PREAMBLE_WHITESPACE + \" \" + PREFIX_STALL + \"1\";","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"teoks0199"},"content":"        assertParseSuccess(parser, userInput, new DeleteStallCommand(INDEX_FIRST_STALL));","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"teoks0199"},"content":"        String userInput \u003d PREAMBLE_WHITESPACE + \" \" + PREFIX_STALL + \"a\";","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"teoks0199"},"content":"        assertParseFailure(parser, userInput, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"teoks0199"},"content":"                DeleteStallCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"teoks0199":13,"-":24}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_LOCATION_DESC;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LOCATION_DESC_ASIAN;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LOCATION_DESC_BRITISH;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_ASIAN;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BRITISH;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_ASIAN;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_ASIAN;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STALL;","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_STALL;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_STALL;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Location;","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"teoks0199"},"content":"import seedu.address.testutil.EditStallDescriptorBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"teoks0199"},"content":"        assertParseFailure(parser, VALID_NAME_ASIAN, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"teoks0199"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_ASIAN, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":54,"author":{"gitId":"teoks0199"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_ASIAN, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":66,"author":{"gitId":"teoks0199"},"content":"        assertParseFailure(parser, \"1\"","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"teoks0199"},"content":"                + INVALID_LOCATION_DESC, Location.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"teoks0199"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_LOCATION_DESC,","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"teoks0199"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"teoks0199"},"content":"        Index targetIndex \u003d INDEX_FIRST_STALL;","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"teoks0199"},"content":"        String userInput \u003d targetIndex.getOneBased() + LOCATION_DESC_ASIAN;","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"teoks0199"},"content":"        EditCommand.EditStallDescriptor descriptor \u003d new EditStallDescriptorBuilder()","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"teoks0199"},"content":"                .withLocation(VALID_LOCATION_ASIAN).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"teoks0199"},"content":"        Index targetIndex \u003d INDEX_SECOND_STALL;","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"teoks0199"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_ASIAN + LOCATION_DESC_ASIAN;","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"teoks0199"},"content":"        EditCommand.EditStallDescriptor descriptor \u003d new EditStallDescriptorBuilder().withName(VALID_NAME_ASIAN)","lastModifiedDate":"2023-10-14"},{"lineNumber":91,"author":{"gitId":"teoks0199"},"content":"                .withLocation(VALID_LOCATION_ASIAN).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"teoks0199"},"content":"        Index targetIndex \u003d INDEX_THIRD_STALL;","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"teoks0199"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_ASIAN;","lastModifiedDate":"2023-10-14"},{"lineNumber":103,"author":{"gitId":"teoks0199"},"content":"        EditCommand.EditStallDescriptor descriptor \u003d new EditStallDescriptorBuilder()","lastModifiedDate":"2023-10-14"},{"lineNumber":104,"author":{"gitId":"teoks0199"},"content":"                .withName(VALID_NAME_ASIAN).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"teoks0199"},"content":"        // location","lastModifiedDate":"2023-10-14"},{"lineNumber":109,"author":{"gitId":"teoks0199"},"content":"        userInput \u003d targetIndex.getOneBased() + LOCATION_DESC_ASIAN;","lastModifiedDate":"2023-10-14"},{"lineNumber":110,"author":{"gitId":"teoks0199"},"content":"        descriptor \u003d new EditStallDescriptorBuilder().withLocation(VALID_LOCATION_ASIAN).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-10-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-10-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-10-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-10-14"},{"lineNumber":121,"author":{"gitId":"teoks0199"},"content":"        Index targetIndex \u003d INDEX_FIRST_STALL;","lastModifiedDate":"2023-10-14"},{"lineNumber":122,"author":{"gitId":"teoks0199"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_NAME_DESC + NAME_DESC_ASIAN;","lastModifiedDate":"2023-10-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":124,"author":{"gitId":"Ruizhi2001"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-10-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-10-14"},{"lineNumber":127,"author":{"gitId":"teoks0199"},"content":"        userInput \u003d targetIndex.getOneBased() + LOCATION_DESC_ASIAN + INVALID_LOCATION_DESC;","lastModifiedDate":"2023-10-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":129,"author":{"gitId":"Ruizhi2001"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_LOCATION));","lastModifiedDate":"2023-10-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-10-14"},{"lineNumber":132,"author":{"gitId":"teoks0199"},"content":"        userInput \u003d targetIndex.getOneBased() + NAME_DESC_ASIAN + LOCATION_DESC_ASIAN","lastModifiedDate":"2023-10-14"},{"lineNumber":133,"author":{"gitId":"teoks0199"},"content":"                + NAME_DESC_ASIAN + LOCATION_DESC_ASIAN + NAME_DESC_BRITISH + LOCATION_DESC_BRITISH;","lastModifiedDate":"2023-10-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-10-14"},{"lineNumber":136,"author":{"gitId":"teoks0199"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_LOCATION));","lastModifiedDate":"2023-10-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-10-14"},{"lineNumber":139,"author":{"gitId":"teoks0199"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_NAME_DESC + INVALID_LOCATION_DESC","lastModifiedDate":"2023-10-14"},{"lineNumber":140,"author":{"gitId":"teoks0199"},"content":"                + INVALID_NAME_DESC + INVALID_LOCATION_DESC;","lastModifiedDate":"2023-10-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-10-14"},{"lineNumber":143,"author":{"gitId":"teoks0199"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_LOCATION));","lastModifiedDate":"2023-10-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"Ruizhi2001":2,"teoks0199":46,"-":97}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"teoks0199"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"teoks0199"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"teoks0199":3,"-":32}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_STALL;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":11,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Location;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"teoks0199"},"content":"    private static final String INVALID_NAME \u003d \" \";","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"teoks0199"},"content":"    private static final String INVALID_LOCATION \u003d \" \";","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"teoks0199"},"content":"    private static final String VALID_NAME \u003d \"Chicken Rice\";","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"teoks0199"},"content":"    private static final String VALID_LOCATION \u003d \"Deck\";","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":39,"author":{"gitId":"teoks0199"},"content":"        assertEquals(INDEX_FIRST_STALL, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"teoks0199"},"content":"        assertEquals(INDEX_FIRST_STALL, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"teoks0199"},"content":"    public void parseLocation_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"teoks0199"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseLocation((String) null));","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"teoks0199"},"content":"    public void parseLocation_invalidValue_throwsParseException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"teoks0199"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseLocation(INVALID_LOCATION));","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"teoks0199"},"content":"    public void parseLocation_validValueWithoutWhitespace_returnsLocation() throws Exception {","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"teoks0199"},"content":"        Location expectedAddress \u003d new Location(VALID_LOCATION);","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"teoks0199"},"content":"        assertEquals(expectedAddress, ParserUtil.parseLocation(VALID_LOCATION));","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"teoks0199"},"content":"    public void parseLocation_validValueWithWhitespace_returnsTrimmedLocation() throws Exception {","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"teoks0199"},"content":"        String locationWithWhitespace \u003d WHITESPACE + VALID_LOCATION + WHITESPACE;","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"teoks0199"},"content":"        Location expectedLocation \u003d new Location(VALID_LOCATION);","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"teoks0199"},"content":"        assertEquals(expectedLocation, ParserUtil.parseLocation(locationWithWhitespace));","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"teoks0199":23,"-":68}},{"path":"src/test/java/seedu/address/logic/parser/ViewStallCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"beatricecst"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"beatricecst"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"beatricecst"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"beatricecst"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"beatricecst"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"beatricecst"},"content":"import seedu.address.logic.commands.ViewStallCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"beatricecst"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"beatricecst"},"content":"public class ViewStallCommandParserTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"beatricecst"},"content":"    private final ViewStallCommandParser parser \u003d new ViewStallCommandParser();","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"beatricecst"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"beatricecst"},"content":"    public void parse_validArgs_returnsViewStallCommand() throws ParseException {","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"beatricecst"},"content":"        String validArgs \u003d \"1\";","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"beatricecst"},"content":"        ViewStallCommand expectedCommand \u003d new ViewStallCommand(Index.fromOneBased(1));","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"beatricecst"},"content":"        assertEquals(expectedCommand, parser.parse(validArgs));","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"beatricecst"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"beatricecst"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"beatricecst"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"beatricecst"},"content":"        String invalidArgs \u003d \"abc\"; // Non-integer argument","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"beatricecst"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(invalidArgs));","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"beatricecst"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"beatricecst"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"beatricecst":28}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_BRITISH;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.testutil.TypicalStalls.AUNTIES_COOKING;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.testutil.TypicalStalls.getTypicalAddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Stall;","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.exceptions.DuplicateStallException;","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"teoks0199"},"content":"import seedu.address.testutil.StallBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"teoks0199"},"content":"        assertEquals(Collections.emptyList(), addressBook.getStallList());","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"teoks0199"},"content":"    public void resetData_withDuplicateStalls_throwsDuplicateStallException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"teoks0199"},"content":"        // Two stalls with the same identity fields","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"teoks0199"},"content":"        Stall editedAlice1 \u003d new StallBuilder(AUNTIES_COOKING).withLocation(VALID_LOCATION_BRITISH).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"teoks0199"},"content":"        Stall editedAlice2 \u003d new StallBuilder(AUNTIES_COOKING).withLocation(VALID_LOCATION_BRITISH).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"teoks0199"},"content":"        List\u003cStall\u003e newStalls \u003d Arrays.asList(editedAlice1, editedAlice2);","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"teoks0199"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newStalls);","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"teoks0199"},"content":"        assertThrows(DuplicateStallException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"teoks0199"},"content":"    public void hasStall_nullStall_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"teoks0199"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasStall(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"teoks0199"},"content":"    public void hasStall_stallNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"teoks0199"},"content":"        assertFalse(addressBook.hasStall(AUNTIES_COOKING));","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"teoks0199"},"content":"    public void hasStall_stallInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"teoks0199"},"content":"        addressBook.addStall(AUNTIES_COOKING);","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"teoks0199"},"content":"        assertTrue(addressBook.hasStall(AUNTIES_COOKING));","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"teoks0199"},"content":"    public void hasStall_stallWithSameIdentityFieldsInAddressBook_returnsFalse() {","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"teoks0199"},"content":"        addressBook.addStall(AUNTIES_COOKING);","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"teoks0199"},"content":"        Stall editedAlice \u003d new StallBuilder(AUNTIES_COOKING).withLocation(VALID_LOCATION_BRITISH)","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"teoks0199"},"content":"        assertFalse(addressBook.hasStall(editedAlice));","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":81,"author":{"gitId":"teoks0199"},"content":"    public void getStallList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"teoks0199"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getStallList().remove(0));","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"teoks0199"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{stalls\u003d\" + addressBook.getStallList() + \"}\";","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"teoks0199"},"content":"     * A stub ReadOnlyAddressBook whose stalls list can violate interface constraints.","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"teoks0199"},"content":"        private final ObservableList\u003cStall\u003e stalls \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"teoks0199"},"content":"        AddressBookStub(Collection\u003cStall\u003e stalls) {","lastModifiedDate":"2023-10-13"},{"lineNumber":98,"author":{"gitId":"teoks0199"},"content":"            this.stalls.setAll(stalls);","lastModifiedDate":"2023-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"teoks0199"},"content":"        public ObservableList\u003cStall\u003e getStallList() {","lastModifiedDate":"2023-10-13"},{"lineNumber":103,"author":{"gitId":"teoks0199"},"content":"            return stalls;","lastModifiedDate":"2023-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"teoks0199":34,"-":73}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STALLS;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.testutil.TypicalStalls.AUNTIES_COOKING;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.testutil.TypicalStalls.BEVERAGES;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"teoks0199"},"content":"    public void hasStall_nullStall_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"teoks0199"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasStall(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"teoks0199"},"content":"    public void hasStall_stallNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"teoks0199"},"content":"        assertFalse(modelManager.hasStall(AUNTIES_COOKING));","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"teoks0199"},"content":"    public void hasStall_stallInAddressBook_returnsTrue() {","lastModifiedDate":"2023-10-13"},{"lineNumber":87,"author":{"gitId":"teoks0199"},"content":"        modelManager.addStall(AUNTIES_COOKING);","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"teoks0199"},"content":"        assertTrue(modelManager.hasStall(AUNTIES_COOKING));","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"teoks0199"},"content":"    public void getFilteredStallList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"teoks0199"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredStallList().remove(0));","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"teoks0199"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withStall(AUNTIES_COOKING).withStall(BEVERAGES).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"teoks0199"},"content":"        String[] keywords \u003d AUNTIES_COOKING.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-10-14"},{"lineNumber":121,"author":{"gitId":"teoks0199"},"content":"        modelManager.updateFilteredStallList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"teoks0199"},"content":"        modelManager.updateFilteredStallList(PREDICATE_SHOW_ALL_STALLS);","lastModifiedDate":"2023-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"teoks0199":17,"-":115}},{"path":"src/test/java/seedu/address/model/stall/LocationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"teoks0199"},"content":"package seedu.address.model.stall;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"teoks0199"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"teoks0199"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"teoks0199"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"teoks0199"},"content":"public class LocationTest {","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"teoks0199"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"teoks0199"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"teoks0199"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Location(null));","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"teoks0199"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"teoks0199"},"content":"    public void constructor_invalidLocation_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"teoks0199"},"content":"        String invalidLocation \u003d \"\";","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"teoks0199"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Location(invalidLocation));","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"teoks0199"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"teoks0199"},"content":"    public void isValidLocation() {","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"teoks0199"},"content":"        // null location","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"teoks0199"},"content":"        assertThrows(NullPointerException.class, () -\u003e Location.isValidLocation(null));","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"teoks0199"},"content":"        // invalid locations","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"teoks0199"},"content":"        assertFalse(Location.isValidLocation(\"\")); // empty string","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"teoks0199"},"content":"        assertFalse(Location.isValidLocation(\" \")); // spaces only","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"teoks0199"},"content":"        // valid locations","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"teoks0199"},"content":"        assertTrue(Location.isValidLocation(\"Deck\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"teoks0199"},"content":"        assertTrue(Location.isValidLocation(\"-\")); // one character","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"teoks0199"},"content":"        assertTrue(Location.isValidLocation(\"Leng Inc; \"","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"teoks0199"},"content":"                + \"1234 Market St; San Francisco CA 2349879; USA\")); // long location","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"teoks0199"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"teoks0199"},"content":"    public void equals() {","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"teoks0199"},"content":"        Location location \u003d new Location(\"Valid Location\");","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"teoks0199"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"teoks0199"},"content":"        assertTrue(location.equals(new Location(\"Valid Location\")));","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"teoks0199"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"teoks0199"},"content":"        assertTrue(location.equals(location));","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"teoks0199"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"teoks0199"},"content":"        assertFalse(location.equals(null));","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"teoks0199"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"teoks0199"},"content":"        assertFalse(location.equals(5.0f));","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"teoks0199"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"teoks0199"},"content":"        assertFalse(location.equals(new Location(\"Other Valid Location\")));","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"teoks0199"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"teoks0199":56}},{"path":"src/test/java/seedu/address/model/stall/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"teoks0199"},"content":"package seedu.address.model.stall;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"teoks0199"},"content":"import seedu.address.testutil.StallBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"teoks0199"},"content":"        // different stall -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"teoks0199"},"content":"        assertTrue(predicate.test(new StallBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"teoks0199"},"content":"        assertTrue(predicate.test(new StallBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"teoks0199"},"content":"        assertTrue(predicate.test(new StallBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"teoks0199"},"content":"        assertTrue(predicate.test(new StallBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"teoks0199"},"content":"        assertFalse(predicate.test(new StallBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"teoks0199"},"content":"        assertFalse(predicate.test(new StallBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"teoks0199"},"content":"        assertFalse(predicate.test(new StallBuilder().withName(\"Alice\").withLocation(\"Main Street\").build()));","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"teoks0199":10,"-":74}},{"path":"src/test/java/seedu/address/model/stall/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"teoks0199"},"content":"package seedu.address.model.stall;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"teoks0199"},"content":"        assertTrue(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"teoks0199"},"content":"        assertTrue(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Name name \u003d new Name(\"Valid Name\");","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(new Name(\"Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(new Name(\"Other Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"teoks0199":3,"-":57}},{"path":"src/test/java/seedu/address/model/stall/StallTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"teoks0199"},"content":"package seedu.address.model.stall;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_BRITISH;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BRITISH;","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"teoks0199"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.testutil.TypicalStalls.AUNTIES_COOKING;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.testutil.TypicalStalls.BRITISH;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":14,"author":{"gitId":"teoks0199"},"content":"import seedu.address.testutil.StallBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"teoks0199"},"content":"public class StallTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"teoks0199"},"content":"    //    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"teoks0199"},"content":"    //    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"teoks0199"},"content":"    //        Stall stall \u003d new StallBuilder().build();","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"teoks0199"},"content":"    //        assertThrows(UnsupportedOperationException.class, () -\u003e stall.getTags().remove(0));","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"teoks0199"},"content":"    //    }","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"teoks0199"},"content":"    public void isSameStall() {","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"teoks0199"},"content":"        assertTrue(AUNTIES_COOKING.isSameStall(AUNTIES_COOKING));","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"teoks0199"},"content":"        assertFalse(AUNTIES_COOKING.isSameStall(null));","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"teoks0199"},"content":"        // same name, all other attributes different -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"teoks0199"},"content":"        Stall editedAlice \u003d new StallBuilder(AUNTIES_COOKING).withLocation(VALID_LOCATION_BRITISH).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"teoks0199"},"content":"        assertFalse(AUNTIES_COOKING.isSameStall(editedAlice));","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"teoks0199"},"content":"        editedAlice \u003d new StallBuilder(AUNTIES_COOKING).withName(VALID_NAME_BRITISH).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"teoks0199"},"content":"        assertFalse(AUNTIES_COOKING.isSameStall(editedAlice));","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"teoks0199"},"content":"        Stall editedBob \u003d new StallBuilder(BRITISH).withName(VALID_NAME_BRITISH.toLowerCase()).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"teoks0199"},"content":"        assertFalse(BRITISH.isSameStall(editedBob));","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"teoks0199"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BRITISH + \" \";","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"teoks0199"},"content":"        editedBob \u003d new StallBuilder(BRITISH).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"teoks0199"},"content":"        assertFalse(BRITISH.isSameStall(editedBob));","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"teoks0199"},"content":"        Stall aliceCopy \u003d new StallBuilder(AUNTIES_COOKING).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"teoks0199"},"content":"        assertTrue(AUNTIES_COOKING.equals(aliceCopy));","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"teoks0199"},"content":"        assertTrue(AUNTIES_COOKING.equals(AUNTIES_COOKING));","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"teoks0199"},"content":"        assertFalse(AUNTIES_COOKING.equals(null));","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"teoks0199"},"content":"        assertFalse(AUNTIES_COOKING.equals(5));","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"teoks0199"},"content":"        // different stall -\u003e returns false","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"teoks0199"},"content":"        assertFalse(AUNTIES_COOKING.equals(BRITISH));","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"teoks0199"},"content":"        Stall editedAlice \u003d new StallBuilder(AUNTIES_COOKING).withName(VALID_NAME_BRITISH).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"teoks0199"},"content":"        assertFalse(AUNTIES_COOKING.equals(editedAlice));","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"teoks0199"},"content":"        // different location -\u003e returns false","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"teoks0199"},"content":"        editedAlice \u003d new StallBuilder(AUNTIES_COOKING).withLocation(VALID_LOCATION_BRITISH).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"teoks0199"},"content":"        assertFalse(AUNTIES_COOKING.equals(editedAlice));","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"teoks0199"},"content":"        String expected \u003d Stall.class.getCanonicalName() + \"{name\u003d\" + AUNTIES_COOKING.getName() + \", location\u003d\"","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"teoks0199"},"content":"                + AUNTIES_COOKING.getLocation() + \"}\";","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"teoks0199"},"content":"        assertEquals(expected, AUNTIES_COOKING.toString());","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"teoks0199":41,"-":42}},{"path":"src/test/java/seedu/address/model/stall/UniqueStallListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"teoks0199"},"content":"package seedu.address.model.stall;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_BRITISH;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.testutil.TypicalStalls.AUNTIES_COOKING;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.testutil.TypicalStalls.BRITISH;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.exceptions.DuplicateStallException;","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.exceptions.StallNotFoundException;","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"teoks0199"},"content":"import seedu.address.testutil.StallBuilder;","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"teoks0199"},"content":"public class UniqueStallListTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"teoks0199"},"content":"    private final UniqueStallList uniqueStallList \u003d new UniqueStallList();","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"teoks0199"},"content":"    public void contains_nullStall_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"teoks0199"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStallList.contains(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"teoks0199"},"content":"    public void contains_stallNotInList_returnsFalse() {","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"teoks0199"},"content":"        assertFalse(uniqueStallList.contains(AUNTIES_COOKING));","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"teoks0199"},"content":"    public void contains_stallInList_returnsTrue() {","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"teoks0199"},"content":"        uniqueStallList.add(AUNTIES_COOKING);","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"teoks0199"},"content":"        assertTrue(uniqueStallList.contains(AUNTIES_COOKING));","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"teoks0199"},"content":"    public void contains_stallWithSameIdentityFieldsInList_returnsFalse() {","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"teoks0199"},"content":"        uniqueStallList.add(AUNTIES_COOKING);","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"teoks0199"},"content":"        Stall editedAlice \u003d new StallBuilder(AUNTIES_COOKING).withLocation(VALID_LOCATION_BRITISH)","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"teoks0199"},"content":"        assertFalse(uniqueStallList.contains(editedAlice));","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"teoks0199"},"content":"    public void add_nullStall_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"teoks0199"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStallList.add(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"teoks0199"},"content":"    public void add_duplicateStall_throwsDuplicateStallException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"teoks0199"},"content":"        uniqueStallList.add(AUNTIES_COOKING);","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"teoks0199"},"content":"        assertThrows(DuplicateStallException.class, () -\u003e uniqueStallList.add(AUNTIES_COOKING));","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"teoks0199"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"teoks0199"},"content":"    public void setStall_nullTargetStall_throwsNullPointerException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"teoks0199"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStallList.setStall(null, AUNTIES_COOKING));","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"teoks0199"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"teoks0199"},"content":"    public void setStall_nullEditedStall_throwsNullPointerException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"teoks0199"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStallList.setStall(AUNTIES_COOKING, null));","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"teoks0199"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"teoks0199"},"content":"    public void setStall_targetStallNotInList_throwsStallNotFoundException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"teoks0199"},"content":"        assertThrows(StallNotFoundException.class, () -\u003e uniqueStallList.setStall(AUNTIES_COOKING, AUNTIES_COOKING));","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"teoks0199"},"content":"    public void setStall_editedStallIsSameStall_success() {","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"teoks0199"},"content":"        uniqueStallList.add(AUNTIES_COOKING);","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"teoks0199"},"content":"        uniqueStallList.setStall(AUNTIES_COOKING, AUNTIES_COOKING);","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"teoks0199"},"content":"        UniqueStallList expectedUniqueStallList \u003d new UniqueStallList();","lastModifiedDate":"2023-10-13"},{"lineNumber":80,"author":{"gitId":"teoks0199"},"content":"        expectedUniqueStallList.add(AUNTIES_COOKING);","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"teoks0199"},"content":"        assertEquals(expectedUniqueStallList, uniqueStallList);","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"teoks0199"},"content":"    public void setStall_editedStallHasSameIdentity_success() {","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"teoks0199"},"content":"        uniqueStallList.add(AUNTIES_COOKING);","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"teoks0199"},"content":"        Stall editedAlice \u003d new StallBuilder(AUNTIES_COOKING).withLocation(VALID_LOCATION_BRITISH)","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"teoks0199"},"content":"        uniqueStallList.setStall(AUNTIES_COOKING, editedAlice);","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"teoks0199"},"content":"        UniqueStallList expectedUniqueStallList \u003d new UniqueStallList();","lastModifiedDate":"2023-10-13"},{"lineNumber":91,"author":{"gitId":"teoks0199"},"content":"        expectedUniqueStallList.add(editedAlice);","lastModifiedDate":"2023-10-13"},{"lineNumber":92,"author":{"gitId":"teoks0199"},"content":"        assertEquals(expectedUniqueStallList, uniqueStallList);","lastModifiedDate":"2023-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"teoks0199"},"content":"    public void setStall_editedStallHasDifferentIdentity_success() {","lastModifiedDate":"2023-10-13"},{"lineNumber":97,"author":{"gitId":"teoks0199"},"content":"        uniqueStallList.add(AUNTIES_COOKING);","lastModifiedDate":"2023-10-14"},{"lineNumber":98,"author":{"gitId":"teoks0199"},"content":"        uniqueStallList.setStall(AUNTIES_COOKING, BRITISH);","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"teoks0199"},"content":"        UniqueStallList expectedUniqueStallList \u003d new UniqueStallList();","lastModifiedDate":"2023-10-13"},{"lineNumber":100,"author":{"gitId":"teoks0199"},"content":"        expectedUniqueStallList.add(BRITISH);","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"teoks0199"},"content":"        assertEquals(expectedUniqueStallList, uniqueStallList);","lastModifiedDate":"2023-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"teoks0199"},"content":"    public void setStall_editedStallHasNonUniqueIdentity_throwsDuplicateStallException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"teoks0199"},"content":"        uniqueStallList.add(AUNTIES_COOKING);","lastModifiedDate":"2023-10-14"},{"lineNumber":107,"author":{"gitId":"teoks0199"},"content":"        uniqueStallList.add(BRITISH);","lastModifiedDate":"2023-10-14"},{"lineNumber":108,"author":{"gitId":"teoks0199"},"content":"        assertThrows(DuplicateStallException.class, () -\u003e uniqueStallList.setStall(AUNTIES_COOKING, BRITISH));","lastModifiedDate":"2023-10-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"teoks0199"},"content":"    public void remove_nullStall_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":113,"author":{"gitId":"teoks0199"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStallList.remove(null));","lastModifiedDate":"2023-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"teoks0199"},"content":"    @Test","lastModifiedDate":"2023-10-14"},{"lineNumber":117,"author":{"gitId":"teoks0199"},"content":"    public void remove_stallDoesNotExist_throwsStallNotFoundException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":118,"author":{"gitId":"teoks0199"},"content":"        assertThrows(StallNotFoundException.class, () -\u003e uniqueStallList.remove(AUNTIES_COOKING));","lastModifiedDate":"2023-10-14"},{"lineNumber":119,"author":{"gitId":"teoks0199"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":120,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"teoks0199"},"content":"    public void remove_existingStall_removesStall() {","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"teoks0199"},"content":"        uniqueStallList.add(AUNTIES_COOKING);","lastModifiedDate":"2023-10-14"},{"lineNumber":124,"author":{"gitId":"teoks0199"},"content":"        uniqueStallList.remove(AUNTIES_COOKING);","lastModifiedDate":"2023-10-14"},{"lineNumber":125,"author":{"gitId":"teoks0199"},"content":"        UniqueStallList expectedUniqueStallList \u003d new UniqueStallList();","lastModifiedDate":"2023-10-13"},{"lineNumber":126,"author":{"gitId":"teoks0199"},"content":"        assertEquals(expectedUniqueStallList, uniqueStallList);","lastModifiedDate":"2023-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"teoks0199"},"content":"    public void setStalls_nullUniqueStallList_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":131,"author":{"gitId":"teoks0199"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStallList.setStalls((UniqueStallList) null));","lastModifiedDate":"2023-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"teoks0199"},"content":"    public void setStalls_uniqueStallList_replacesOwnListWithProvidedUniqueStallList() {","lastModifiedDate":"2023-10-13"},{"lineNumber":136,"author":{"gitId":"teoks0199"},"content":"        uniqueStallList.add(AUNTIES_COOKING);","lastModifiedDate":"2023-10-14"},{"lineNumber":137,"author":{"gitId":"teoks0199"},"content":"        UniqueStallList expectedUniqueStallList \u003d new UniqueStallList();","lastModifiedDate":"2023-10-13"},{"lineNumber":138,"author":{"gitId":"teoks0199"},"content":"        expectedUniqueStallList.add(BRITISH);","lastModifiedDate":"2023-10-14"},{"lineNumber":139,"author":{"gitId":"teoks0199"},"content":"        uniqueStallList.setStalls(expectedUniqueStallList);","lastModifiedDate":"2023-10-13"},{"lineNumber":140,"author":{"gitId":"teoks0199"},"content":"        assertEquals(expectedUniqueStallList, uniqueStallList);","lastModifiedDate":"2023-10-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"teoks0199"},"content":"    public void setStalls_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":145,"author":{"gitId":"teoks0199"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueStallList.setStalls((List\u003cStall\u003e) null));","lastModifiedDate":"2023-10-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"teoks0199"},"content":"    public void setStalls_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-10-13"},{"lineNumber":150,"author":{"gitId":"teoks0199"},"content":"        uniqueStallList.add(AUNTIES_COOKING);","lastModifiedDate":"2023-10-14"},{"lineNumber":151,"author":{"gitId":"teoks0199"},"content":"        List\u003cStall\u003e stallList \u003d Collections.singletonList(BRITISH);","lastModifiedDate":"2023-10-14"},{"lineNumber":152,"author":{"gitId":"teoks0199"},"content":"        uniqueStallList.setStalls(stallList);","lastModifiedDate":"2023-10-13"},{"lineNumber":153,"author":{"gitId":"teoks0199"},"content":"        UniqueStallList expectedUniqueStallList \u003d new UniqueStallList();","lastModifiedDate":"2023-10-13"},{"lineNumber":154,"author":{"gitId":"teoks0199"},"content":"        expectedUniqueStallList.add(BRITISH);","lastModifiedDate":"2023-10-14"},{"lineNumber":155,"author":{"gitId":"teoks0199"},"content":"        assertEquals(expectedUniqueStallList, uniqueStallList);","lastModifiedDate":"2023-10-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"teoks0199"},"content":"    public void setStalls_listWithDuplicateStalls_throwsDuplicateStallException() {","lastModifiedDate":"2023-10-13"},{"lineNumber":160,"author":{"gitId":"teoks0199"},"content":"        List\u003cStall\u003e listWithDuplicateStalls \u003d Arrays.asList(AUNTIES_COOKING, AUNTIES_COOKING);","lastModifiedDate":"2023-10-14"},{"lineNumber":161,"author":{"gitId":"teoks0199"},"content":"        assertThrows(DuplicateStallException.class, () -\u003e uniqueStallList.setStalls(listWithDuplicateStalls));","lastModifiedDate":"2023-10-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":167,"author":{"gitId":"teoks0199"},"content":"            -\u003e uniqueStallList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-10-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":172,"author":{"gitId":"teoks0199"},"content":"        assertEquals(uniqueStallList.asUnmodifiableObservableList().toString(), uniqueStallList.toString());","lastModifiedDate":"2023-10-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"teoks0199":97,"-":77}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedStallTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.storage.JsonAdaptedStall.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.testutil.TypicalStalls.BEVERAGES;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Location;","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"teoks0199"},"content":"public class JsonAdaptedStallTest {","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"teoks0199"},"content":"    private static final String INVALID_NAME \u003d \" \";","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"teoks0199"},"content":"    private static final String INVALID_LOCATION \u003d \" \";","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"teoks0199"},"content":"    private static final String VALID_NAME \u003d BEVERAGES.getName().toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"teoks0199"},"content":"    private static final String VALID_LOCATION \u003d BEVERAGES.getLocation().toString();","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"teoks0199"},"content":"    public void toModelType_validStallDetails_returnsStall() throws Exception {","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"teoks0199"},"content":"        JsonAdaptedStall stall \u003d new JsonAdaptedStall(BEVERAGES);","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"teoks0199"},"content":"        assertEquals(BEVERAGES, stall.toModelType());","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"teoks0199"},"content":"        JsonAdaptedStall stall \u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"teoks0199"},"content":"                new JsonAdaptedStall(INVALID_NAME, VALID_LOCATION);","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"teoks0199"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, stall::toModelType);","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"teoks0199"},"content":"        JsonAdaptedStall stall \u003d new JsonAdaptedStall(null, VALID_LOCATION);","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"teoks0199"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, stall::toModelType);","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"teoks0199"},"content":"    public void toModelType_invalidLocation_throwsIllegalValueException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"teoks0199"},"content":"        JsonAdaptedStall stall \u003d","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"teoks0199"},"content":"                new JsonAdaptedStall(VALID_NAME, INVALID_LOCATION);","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"teoks0199"},"content":"        String expectedMessage \u003d Location.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"teoks0199"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, stall::toModelType);","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"teoks0199"},"content":"    public void toModelType_nullLocation_throwsIllegalValueException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"teoks0199"},"content":"        JsonAdaptedStall stall \u003d new JsonAdaptedStall(VALID_NAME, null);","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"teoks0199"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Location.class.getSimpleName());","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"teoks0199"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, stall::toModelType);","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"teoks0199":26,"-":31}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.testutil.TypicalStalls.AUNTIES_COOKING;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.testutil.TypicalStalls.HOON;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.testutil.TypicalStalls.IDA;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.testutil.TypicalStalls.getTypicalAddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"teoks0199"},"content":"    public void readAddressBook_invalidStallAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"teoks0199"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidStallAddressBook.json\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"teoks0199"},"content":"    public void readAddressBook_invalidAndValidStallAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"teoks0199"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidAndValidStallAddressBook.json\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"teoks0199"},"content":"        original.addStall(HOON);","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"teoks0199"},"content":"        original.removeStall(AUNTIES_COOKING);","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"teoks0199"},"content":"        original.addStall(IDA);","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"teoks0199":11,"-":99}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"teoks0199"},"content":"import seedu.address.testutil.TypicalStalls;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"teoks0199"},"content":"    private static final Path TYPICAL_STALLS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalStallsAddressBook.json\");","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"teoks0199"},"content":"    private static final Path INVALID_STALL_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidStallAddressBook.json\");","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"teoks0199"},"content":"    private static final Path DUPLICATE_STALL_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateStallAddressBook.json\");","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"teoks0199"},"content":"    public void toModelType_typicalStallsFile_success() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"teoks0199"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_STALLS_FILE,","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"teoks0199"},"content":"        AddressBook typicalStallsAddressBook \u003d TypicalStalls.getTypicalAddressBook();","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"teoks0199"},"content":"        assertEquals(addressBookFromFile, typicalStallsAddressBook);","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"teoks0199"},"content":"    public void toModelType_invalidStallFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"teoks0199"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_STALL_FILE,","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"teoks0199"},"content":"    public void toModelType_duplicateStalls_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"teoks0199"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_STALL_FILE,","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"teoks0199"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_STALL,","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"teoks0199":13,"-":34}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.testutil.TypicalStalls.getTypicalAddressBook;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"teoks0199":1,"-":67}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Stall;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"teoks0199"},"content":"     * Adds a new {@code Stall} to the {@code AddressBook} that we are building.","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"teoks0199"},"content":"    public AddressBookBuilder withStall(Stall stall) {","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"teoks0199"},"content":"        addressBook.addStall(stall);","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"teoks0199":4,"-":30}},{"path":"src/test/java/seedu/address/testutil/EditStallDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"teoks0199"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"teoks0199"},"content":"import seedu.address.logic.commands.EditCommand.EditStallDescriptor;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Location;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Stall;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":10,"author":{"gitId":"teoks0199"},"content":" * A utility class to help with building EditStallDescriptor objects.","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":12,"author":{"gitId":"teoks0199"},"content":"public class EditStallDescriptorBuilder {","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"teoks0199"},"content":"    private EditStallDescriptor descriptor;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"teoks0199"},"content":"    public EditStallDescriptorBuilder() {","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"teoks0199"},"content":"        descriptor \u003d new EditCommand.EditStallDescriptor();","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"teoks0199"},"content":"    public EditStallDescriptorBuilder(EditStallDescriptor descriptor) {","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"teoks0199"},"content":"        this.descriptor \u003d new EditCommand.EditStallDescriptor(descriptor);","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"teoks0199"},"content":"     * Returns an {@code EditStallDescriptor} with fields containing {@code stall}\u0027s details","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"teoks0199"},"content":"    public EditStallDescriptorBuilder(Stall stall) {","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"teoks0199"},"content":"        descriptor \u003d new EditStallDescriptor();","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"teoks0199"},"content":"        descriptor.setName(stall.getName());","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"teoks0199"},"content":"        descriptor.setLocation(stall.getLocation());","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":34,"author":{"gitId":"teoks0199"},"content":"     * Sets the {@code Name} of the {@code EditStallDescriptor} that we are building.","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":36,"author":{"gitId":"teoks0199"},"content":"    public EditStallDescriptorBuilder withName(String name) {","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":42,"author":{"gitId":"teoks0199"},"content":"     * Sets the {@code Location} of the {@code EditStallDescriptor} that we are building.","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"teoks0199"},"content":"    public EditStallDescriptorBuilder withLocation(String location) {","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"teoks0199"},"content":"        descriptor.setLocation(new Location(location));","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"teoks0199"},"content":"    public EditStallDescriptor build() {","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"teoks0199":23,"-":29}},{"path":"src/test/java/seedu/address/testutil/StallBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Location;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Name;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Stall;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":8,"author":{"gitId":"teoks0199"},"content":" * A utility class to help with building Stall objects.","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":10,"author":{"gitId":"teoks0199"},"content":"public class StallBuilder {","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":12,"author":{"gitId":"teoks0199"},"content":"    public static final String DEFAULT_NAME \u003d \"Chicken Rice\";","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"teoks0199"},"content":"    public static final String DEFAULT_LOCATION \u003d \"Deck\";","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"teoks0199"},"content":"    private Location location;","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":19,"author":{"gitId":"teoks0199"},"content":"     * Creates a {@code StallBuilder} with the default details.","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"teoks0199"},"content":"    public StallBuilder() {","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"teoks0199"},"content":"        location \u003d new Location(DEFAULT_LOCATION);","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":27,"author":{"gitId":"teoks0199"},"content":"     * Initializes the StallBuilder with the data of {@code stallToCopy}.","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":29,"author":{"gitId":"teoks0199"},"content":"    public StallBuilder(Stall stallToCopy) {","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"teoks0199"},"content":"        name \u003d stallToCopy.getName();","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"teoks0199"},"content":"        location \u003d stallToCopy.getLocation();","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":35,"author":{"gitId":"teoks0199"},"content":"     * Sets the {@code Name} of the {@code Stall} that we are building.","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":37,"author":{"gitId":"teoks0199"},"content":"    public StallBuilder withName(String name) {","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"teoks0199"},"content":"     * Sets the {@code Location} of the {@code Stall} that we are building.","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"teoks0199"},"content":"    public StallBuilder withLocation(String location) {","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"teoks0199"},"content":"        this.location \u003d new Location(location);","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":50,"author":{"gitId":"teoks0199"},"content":"    public Stall build() {","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"teoks0199"},"content":"        return new Stall(name, location);","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"teoks0199":23,"-":31}},{"path":"src/test/java/seedu/address/testutil/StallUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":6,"author":{"gitId":"teoks0199"},"content":"import seedu.address.logic.commands.AddStallCommand;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"teoks0199"},"content":"import seedu.address.logic.commands.EditCommand.EditStallDescriptor;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Stall;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"teoks0199"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"teoks0199"},"content":" * A utility class for Stall.","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"teoks0199"},"content":"public class StallUtil {","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"teoks0199"},"content":"     * Returns an add command string for adding the {@code stall}.","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"teoks0199"},"content":"    public static String getAddCommand(Stall stall) {","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"teoks0199"},"content":"        return AddStallCommand.COMMAND_WORD + \" \" + getStallDetails(stall);","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":24,"author":{"gitId":"teoks0199"},"content":"     * Returns the part of command string for the given {@code stall}\u0027s details.","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":26,"author":{"gitId":"teoks0199"},"content":"    public static String getStallDetails(Stall stall) {","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"teoks0199"},"content":"        sb.append(PREFIX_NAME + stall.getName().fullName + \" \");","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"teoks0199"},"content":"        sb.append(PREFIX_LOCATION + stall.getLocation().locationName + \" \");","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":34,"author":{"gitId":"teoks0199"},"content":"     * Returns the part of command string for the given {@code EditStallDescriptor}\u0027s details.","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":36,"author":{"gitId":"teoks0199"},"content":"    public static String getEditStallDescriptorDetails(EditStallDescriptor descriptor) {","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"teoks0199"},"content":"        descriptor.getLocation().ifPresent(location -\u003e sb.append(PREFIX_LOCATION).append(location.locationName)","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"teoks0199"},"content":"                .append(\" \"));","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"teoks0199":18,"-":25}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Stall;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"teoks0199"},"content":"     * Returns the middle index of the stall in the {@code model}\u0027s stall list.","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"teoks0199"},"content":"        return Index.fromOneBased(model.getFilteredStallList().size() / 2);","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"teoks0199"},"content":"     * Returns the last index of the stall in the {@code model}\u0027s stall list.","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"teoks0199"},"content":"        return Index.fromOneBased(model.getFilteredStallList().size());","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"teoks0199"},"content":"     * Returns the stall in the {@code model}\u0027s stall list at {@code index}.","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"teoks0199"},"content":"    public static Stall getStall(Model model, Index index) {","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"teoks0199"},"content":"        return model.getFilteredStallList().get(index.getZeroBased());","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"teoks0199":8,"-":47}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"teoks0199"},"content":"    public static final Index INDEX_FIRST_STALL \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"teoks0199"},"content":"    public static final Index INDEX_SECOND_STALL \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"teoks0199"},"content":"    public static final Index INDEX_THIRD_STALL \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"teoks0199":3,"-":9}},{"path":"src/test/java/seedu/address/testutil/TypicalStalls.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_ASIAN;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_BRITISH;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_ASIAN;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"teoks0199"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BRITISH;","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"teoks0199"},"content":"import seedu.address.model.stall.Stall;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":16,"author":{"gitId":"teoks0199"},"content":" * A utility class containing a list of {@code Stall} objects to be used in tests.","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":18,"author":{"gitId":"teoks0199"},"content":"public class TypicalStalls {","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":20,"author":{"gitId":"teoks0199"},"content":"    public static final Stall AUNTIES_COOKING \u003d new StallBuilder().withName(\"Auntie\u0027s Cooking\")","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"teoks0199"},"content":"            .withLocation(\"Deck\").build();","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"teoks0199"},"content":"    public static final Stall BEVERAGES \u003d new StallBuilder().withName(\"Beverages\")","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"teoks0199"},"content":"            .withLocation(\"Deck\").build();","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"teoks0199"},"content":"    public static final Stall CHINESE \u003d new StallBuilder().withName(\"Chinese\")","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"teoks0199"},"content":"            .withLocation(\"wall street\").build();","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"teoks0199"},"content":"    public static final Stall DRINKS_STALL \u003d new StallBuilder().withName(\"Drinks Stall\")","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"teoks0199"},"content":"            .withLocation(\"10th street\").build();","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"teoks0199"},"content":"    public static final Stall ECONOMIC_RICE \u003d new StallBuilder().withName(\"Economic Rice\")","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"teoks0199"},"content":"            .withLocation(\"michegan ave\").build();","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"teoks0199"},"content":"    public static final Stall FRENCH \u003d new StallBuilder().withName(\"French\").withLocation(\"little tokyo\").build();","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"teoks0199"},"content":"    public static final Stall GOODFOOD \u003d new StallBuilder().withName(\"GoodFood\").withLocation(\"4th street\").build();","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":34,"author":{"gitId":"teoks0199"},"content":"    public static final Stall HOON \u003d new StallBuilder().withName(\"Hoon Meier\").withLocation(\"little india\").build();","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"teoks0199"},"content":"    public static final Stall IDA \u003d new StallBuilder().withName(\"Ida Mueller\").withLocation(\"chicago ave\").build();","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":37,"author":{"gitId":"teoks0199"},"content":"    // Manually added - Stall\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"teoks0199"},"content":"    public static final Stall ASIAN \u003d new StallBuilder()","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"teoks0199"},"content":"            .withName(VALID_NAME_ASIAN).withLocation(VALID_LOCATION_ASIAN).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"teoks0199"},"content":"    public static final Stall BRITISH \u003d new StallBuilder()","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"teoks0199"},"content":"            .withName(VALID_NAME_BRITISH).withLocation(VALID_LOCATION_BRITISH).build();","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":45,"author":{"gitId":"teoks0199"},"content":"    private TypicalStalls() {} // prevents instantiation","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":52,"author":{"gitId":"teoks0199"},"content":"        for (Stall stall : getTypicalStalls()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"teoks0199"},"content":"            ab.addStall(stall);","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":58,"author":{"gitId":"teoks0199"},"content":"    public static List\u003cStall\u003e getTypicalStalls() {","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"teoks0199"},"content":"        return new ArrayList\u003c\u003e(Arrays","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"teoks0199"},"content":"                .asList(AUNTIES_COOKING, BEVERAGES, CHINESE, DRINKS_STALL, ECONOMIC_RICE, FRENCH, GOODFOOD));","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"teoks0199":32,"-":30}}]

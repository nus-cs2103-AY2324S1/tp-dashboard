[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LamJiuFong"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-W16-2/tp/actions)","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"## EzContact","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"This is a contact book that is designed for salespersons to keep track of their past, current and potential customer.","lastModifiedDate":"2023-09-30"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"This is a CLI application and is supposed to be beneficial for users that are able to type **FAST**.","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"### Features","lastModifiedDate":"2023-09-30"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"* Add customer to contact book, where name, phone number and email address are required details","lastModifiedDate":"2023-09-30"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"* Edit an existing entry of contact book, i.e. updating a new phone number of a customer","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"* Remove entries from the contact book","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"* Searching of customers using whole or partial information","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"* Adding priorities to customers in contact book, i.e. customers with ongoing sales deal can be given higher priority","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"* Tagging appearances to customers to help visualise the appearance of the customers","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"Click [here](https://ay2324s1-cs2103t-w16-2.github.io/tp) to learn more!","lastModifiedDate":"2023-09-30"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"yucongkoo":16,"LamJiuFong":1,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    archiveFileName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"yucongkoo"},"content":"run {","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"yucongkoo"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-10-20"},{"lineNumber":76,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"yucongkoo":4,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"LamJiuFong"},"content":"You can reach us at the email `e0960521@u.nus.edu`","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"### Koo Yu Cong","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"\u003cimg src\u003d\"images/yucongkoo.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"[[github](https://github.com/yucongkoo)]","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"[[portfolio](team/yucongkoo.md)]","lastModifiedDate":"2023-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"* Role: Developer","lastModifiedDate":"2023-09-30"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"* Responsibilities: Ensuring deliverables and deadlines are met","lastModifiedDate":"2023-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"### Joshua Wee","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"Jweewee"},"content":"\u003cimg src\u003d\"images/jweewee.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"Jweewee"},"content":"[[github](http://github.com/jweewee)]","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"Jweewee"},"content":"[[portfolio](team/jweewee.md)]","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"Jweewee"},"content":"* Role: Integration","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"Jweewee"},"content":"* Responsibilities: In charge of versioning of the code, maintaining the code repository, integrating various parts of the software to create a whole.","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"### Song Fang Yi","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"songfangyl"},"content":"\u003cimg src\u003d\"images/songfangyl.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"songfangyl"},"content":"[[github](http://github.com/songfangyl)]","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"songfangyl"},"content":"[[portfolio](team/songfangyl.md)]","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"songfangyl"},"content":"* Role: Code quality","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"songfangyl"},"content":"* Responsibilities: Looks after code quality, ensures adherence to coding standards.","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"TehOPanas"},"content":"### Lian Zhi Xuan","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"TehOPanas"},"content":"\u003cimg src\u003d\"images/tehopanas.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"TehOPanas"},"content":"[[github](https://github.com/TehOPanas)] [[portfolio](team/tehopanas.md)]","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"TehOPanas"},"content":"* Role: Developer, Documentation","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"TehOPanas"},"content":"* Responsibilities: Responsible for the quality of various project documents","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"LamJiuFong"},"content":"### Lam Jiu Fong","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"LamJiuFong"},"content":"\u003cimg src\u003d\"images/lamjiufong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"LamJiuFong"},"content":"[[github](http://github.com/LamJiuFong)]","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"LamJiuFong"},"content":"[[portfolio](team/lamjiufong.md)]","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"LamJiuFong"},"content":"* Role: Developer, Code Testing","lastModifiedDate":"2023-10-05"},{"lineNumber":61,"author":{"gitId":"LamJiuFong"},"content":"* Responsibilities: Ensures the testing of the project is done properly and on time","lastModifiedDate":"2023-10-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"TehOPanas":5,"yucongkoo":6,"songfangyl":6,"LamJiuFong":7,"-":32,"Jweewee":6}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# AB-3 Developer Guide","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"TehOPanas"},"content":"# **Acknowledgements**","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"_{ list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well }_","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"TehOPanas"},"content":"# **Setting up, getting started**","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"TehOPanas"},"content":"# **Design**","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"TehOPanas"},"content":"## UI component","lastModifiedDate":"2023-10-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"yucongkoo"},"content":"## Logic component \u003ca id\u003d\"logic-component\"/\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"TehOPanas"},"content":"## Model component","lastModifiedDate":"2023-10-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"TehOPanas"},"content":"## Storage component","lastModifiedDate":"2023-10-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"TehOPanas"},"content":"## Common classes","lastModifiedDate":"2023-10-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"TehOPanas"},"content":"# **Implementation**","lastModifiedDate":"2023-10-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"yucongkoo"},"content":"## Tag feature","lastModifiedDate":"2023-10-23"},{"lineNumber":163,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":164,"author":{"gitId":"yucongkoo"},"content":"### Implementation","lastModifiedDate":"2023-10-23"},{"lineNumber":165,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":166,"author":{"gitId":"yucongkoo"},"content":"Before implementing the actual command execution of tag,","lastModifiedDate":"2023-10-23"},{"lineNumber":167,"author":{"gitId":"yucongkoo"},"content":"tags first needs to be stored in a `Person` object accordingly.","lastModifiedDate":"2023-10-23"},{"lineNumber":168,"author":{"gitId":"yucongkoo"},"content":"A `Person` is associated to any number of `Tag`s.","lastModifiedDate":"2023-10-23"},{"lineNumber":169,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":170,"author":{"gitId":"yucongkoo"},"content":"\u003cpuml src\u003d\"diagrams/tag-feature/PersonClassDiagram.puml\"/\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":171,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":172,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":173,"author":{"gitId":"yucongkoo"},"content":"**Implementing `TagCommandParser`**","lastModifiedDate":"2023-10-23"},{"lineNumber":174,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":175,"author":{"gitId":"yucongkoo"},"content":"`TagCommandParser` plays the role of parsing arguments into three information: `index`, `tagsToAdd` and `tagsToDelete`.","lastModifiedDate":"2023-10-23"},{"lineNumber":176,"author":{"gitId":"yucongkoo"},"content":"`tagsToAdd` and `tagsToDelete` are then used to create an `UpdatePersonTagsDescriptor` which encapsulates these information.","lastModifiedDate":"2023-10-23"},{"lineNumber":177,"author":{"gitId":"yucongkoo"},"content":"Note that **duplicate tags will be ignored**.","lastModifiedDate":"2023-10-23"},{"lineNumber":178,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":179,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":180,"author":{"gitId":"yucongkoo"},"content":"The sequence diagram below illustrates the interactions of `TagCommandParser#parse(String arguments)`,","lastModifiedDate":"2023-10-23"},{"lineNumber":181,"author":{"gitId":"yucongkoo"},"content":"taking `parse(1 at/tall dt/short at/handsome)` call to the `TagCommandParser` as an example.","lastModifiedDate":"2023-10-23"},{"lineNumber":182,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":183,"author":{"gitId":"yucongkoo"},"content":"\u003cpuml src\u003d\"diagrams/tag-feature/ParseSequenceDiagram.puml\"/\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":184,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":185,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":186,"author":{"gitId":"yucongkoo"},"content":"**Implementing `TagCommand`**","lastModifiedDate":"2023-10-23"},{"lineNumber":187,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":188,"author":{"gitId":"yucongkoo"},"content":"`TagCommand` plays the role of executing the tag command on a `Model`, it will update the `Model` accordingly to","lastModifiedDate":"2023-10-23"},{"lineNumber":189,"author":{"gitId":"yucongkoo"},"content":"reflect the changes after the tag command completes its execution.","lastModifiedDate":"2023-10-23"},{"lineNumber":190,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":191,"author":{"gitId":"yucongkoo"},"content":"The sequence diagram below illustrates the interations of `TagCommand#execute(Model model)`,","lastModifiedDate":"2023-10-23"},{"lineNumber":192,"author":{"gitId":"yucongkoo"},"content":"taking `execute(m)` call to the `TagCommand` as an example.","lastModifiedDate":"2023-10-23"},{"lineNumber":193,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":194,"author":{"gitId":"yucongkoo"},"content":"\u003cpuml src\u003d\"diagrams/tag-feature/ExecuteSequenceDiagram.puml\" /\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":195,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":196,"author":{"gitId":"yucongkoo"},"content":"**Integrating `TagCommandParser` and `TagCommand` into execution logic**","lastModifiedDate":"2023-10-23"},{"lineNumber":197,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":198,"author":{"gitId":"yucongkoo"},"content":"Since both `TagCommandParser` and `TagCommand` are implemented accordingly, all that is left","lastModifiedDate":"2023-10-23"},{"lineNumber":199,"author":{"gitId":"yucongkoo"},"content":"is to integrate them into the execution logic as described in [LogicComponent](#logic-component).","lastModifiedDate":"2023-10-23"},{"lineNumber":200,"author":{"gitId":"yucongkoo"},"content":"The `AddressBookParser` is updated to recognise the `tag` command word, and will create a `TagCommandParser`","lastModifiedDate":"2023-10-23"},{"lineNumber":201,"author":{"gitId":"yucongkoo"},"content":"to parse the arguments.","lastModifiedDate":"2023-10-23"},{"lineNumber":202,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":203,"author":{"gitId":"yucongkoo"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component when executing a tag command,","lastModifiedDate":"2023-10-23"},{"lineNumber":204,"author":{"gitId":"yucongkoo"},"content":"taking `execute(\"tag 1 at/tall dt/short at/handsome\")` API call as an example.","lastModifiedDate":"2023-10-23"},{"lineNumber":205,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":206,"author":{"gitId":"yucongkoo"},"content":"\u003cpuml src\u003d\"diagrams/tag-feature/TagSequenceDiagram.puml\" /\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":207,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":208,"author":{"gitId":"yucongkoo"},"content":"### Design considerations:","lastModifiedDate":"2023-10-23"},{"lineNumber":209,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":210,"author":{"gitId":"yucongkoo"},"content":"**Aspect: Data structure to store tags in a Person object:**","lastModifiedDate":"2023-10-23"},{"lineNumber":211,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":212,"author":{"gitId":"yucongkoo"},"content":"* **Alternative 1(current choice):** Using `Set\u003cTag\u003e`.","lastModifiedDate":"2023-10-23"},{"lineNumber":213,"author":{"gitId":"yucongkoo"},"content":"  * Pros: Easy to implement, enforces implicit uniqueness of each `Tag` in the `Set\u003cTag\u003e`.","lastModifiedDate":"2023-10-23"},{"lineNumber":214,"author":{"gitId":"yucongkoo"},"content":"  * Cons: Tags are not ordered according to the time it is added.","lastModifiedDate":"2023-10-23"},{"lineNumber":215,"author":{"gitId":"yucongkoo"},"content":"* **Alternative 2:** Using `List\u003cTag\u003e`.","lastModifiedDate":"2023-10-23"},{"lineNumber":216,"author":{"gitId":"yucongkoo"},"content":"  * Pros: Tags are ordered according to the time it is added.","lastModifiedDate":"2023-10-23"},{"lineNumber":217,"author":{"gitId":"yucongkoo"},"content":"  * Cons: Hard to implement, handling of duplicate `Tag` is more complicated.","lastModifiedDate":"2023-10-23"},{"lineNumber":218,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":219,"author":{"gitId":"yucongkoo"},"content":"Alternative 1 was chosen over alternative 2 as the ordering of tags is considered not that important in the case of","lastModifiedDate":"2023-10-23"},{"lineNumber":220,"author":{"gitId":"yucongkoo"},"content":"storing tags.","lastModifiedDate":"2023-10-23"},{"lineNumber":221,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":222,"author":{"gitId":"yucongkoo"},"content":"**Aspect: Duplicate tags handling:**","lastModifiedDate":"2023-10-23"},{"lineNumber":223,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":224,"author":{"gitId":"yucongkoo"},"content":"* **Alternative 1(current choice):** Allow users to add/delete duplicate tags as long as not conflicting(i.e. not adding and deleting the same tag).","lastModifiedDate":"2023-10-23"},{"lineNumber":225,"author":{"gitId":"yucongkoo"},"content":"  * Pros: Users will not be blocked from their action if they accidentally entered a duplicate tag.","lastModifiedDate":"2023-10-23"},{"lineNumber":226,"author":{"gitId":"yucongkoo"},"content":"  * Cons: Users might not be warned that they have entered a duplicate tag.","lastModifiedDate":"2023-10-23"},{"lineNumber":227,"author":{"gitId":"yucongkoo"},"content":"* **Alternative 2:** Block users from adding/deleting duplicate tags","lastModifiedDate":"2023-10-23"},{"lineNumber":228,"author":{"gitId":"yucongkoo"},"content":"  * Pros: Easy to implement","lastModifiedDate":"2023-10-23"},{"lineNumber":229,"author":{"gitId":"yucongkoo"},"content":"  * Cons: Users might be blocked from their action because they forgot that they already entered such a tag.","lastModifiedDate":"2023-10-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":231,"author":{"gitId":"yucongkoo"},"content":"Alternative 1 was chosen over alternative 2 based on the following reasons:","lastModifiedDate":"2023-10-23"},{"lineNumber":232,"author":{"gitId":"yucongkoo"},"content":"* Repeated action signals the user\u0027s strong intention of performing that action(e.g. wanting to add the same tag twice shows the importance of that tag).","lastModifiedDate":"2023-10-23"},{"lineNumber":233,"author":{"gitId":"yucongkoo"},"content":"* The target audience is forgetful and careless, it is common for the users to enter duplicate tags without realising it, blocking such actions brings no value to the product.","lastModifiedDate":"2023-10-23"},{"lineNumber":234,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":235,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":236,"author":{"gitId":"yucongkoo"},"content":"**Aspect: Deletion of non-existing tags:**","lastModifiedDate":"2023-10-23"},{"lineNumber":237,"author":{"gitId":"yucongkoo"},"content":"* **Alternative 1(current choice):** Simply ignore such deletions.","lastModifiedDate":"2023-10-23"},{"lineNumber":238,"author":{"gitId":"yucongkoo"},"content":"  * Pros: Users will not be blocked from their action(other tags will still be added/deleted) even though the command consists of such deletions.","lastModifiedDate":"2023-10-23"},{"lineNumber":239,"author":{"gitId":"yucongkoo"},"content":"  * Cons: Users will not be aware that the tag they are deleting from the customer does not exist, this may lead to certain misconceptions.","lastModifiedDate":"2023-10-23"},{"lineNumber":240,"author":{"gitId":"yucongkoo"},"content":"* **Alternative 2:** Block users from such deletions.","lastModifiedDate":"2023-10-23"},{"lineNumber":241,"author":{"gitId":"yucongkoo"},"content":"  * Pros: Easy to implement, users will be aware that the customer does not have the tag they are trying to delete.","lastModifiedDate":"2023-10-23"},{"lineNumber":242,"author":{"gitId":"yucongkoo"},"content":"  * Cons: User might be blocked from their action because they thought that the targeted customer does have the tag.","lastModifiedDate":"2023-10-23"},{"lineNumber":243,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":244,"author":{"gitId":"yucongkoo"},"content":"Alternative 1 was selected over alternative 2 because the primary reason for users deleting a specific tag is that","lastModifiedDate":"2023-10-23"},{"lineNumber":245,"author":{"gitId":"yucongkoo"},"content":"they wish to prevent the tagged customer from having that tag. Therefore, whether or not the targeted customer","lastModifiedDate":"2023-10-23"},{"lineNumber":246,"author":{"gitId":"yucongkoo"},"content":"initially possesses the tag is of lesser importance in this context.","lastModifiedDate":"2023-10-23"},{"lineNumber":247,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":248,"author":{"gitId":"TehOPanas"},"content":"## \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2023-10-05"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"TehOPanas"},"content":"### Proposed Implementation","lastModifiedDate":"2023-10-05"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-09-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":278,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram.puml\" alt\u003d\"UndoSequenceDiagram\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":306,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-09-12"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"TehOPanas"},"content":"### Design considerations:","lastModifiedDate":"2023-10-05"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"TehOPanas"},"content":"## \\[Proposed\\] Data archiving","lastModifiedDate":"2023-10-05"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"TehOPanas"},"content":"# **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2023-10-05"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":347,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":348,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":349,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":350,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"TehOPanas"},"content":"# **Appendix: Requirements**","lastModifiedDate":"2023-10-05"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"TehOPanas"},"content":"## Product scope","lastModifiedDate":"2023-10-05"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"TehOPanas"},"content":"Target user : Insurance agent","lastModifiedDate":"2023-10-16"},{"lineNumber":361,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":362,"author":{"gitId":"TehOPanas"},"content":"* needs to provide services / insurance plans to customer","lastModifiedDate":"2023-10-16"},{"lineNumber":363,"author":{"gitId":"TehOPanas"},"content":"* has a need to manage a significant number of customers","lastModifiedDate":"2023-10-16"},{"lineNumber":364,"author":{"gitId":"TehOPanas"},"content":"* needs to maintain interactions with his/her customers over a long time span","lastModifiedDate":"2023-10-19"},{"lineNumber":365,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":368,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"TehOPanas"},"content":"**Value proposition**:  manage customers\u0027 contact for existing/potential insurance contracts faster than GUI driven apps","lastModifiedDate":"2023-10-19"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"TehOPanas"},"content":"## User stories","lastModifiedDate":"2023-10-05"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"songfangyl"},"content":"Priorities: High - `* * *`, Medium - `* *`, Low - `*`","lastModifiedDate":"2023-10-05"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"| Priority | As a …​          | I want to …​                                                                      | So that I can…​                                                  |","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"TehOPanas"},"content":"|----------|------------------|-----------------------------------------------------------------------------------|------------------------------------------------------------------|","lastModifiedDate":"2023-10-19"},{"lineNumber":379,"author":{"gitId":"TehOPanas"},"content":"| `* * *`  | insurance agent  | to be able to add customers\u0027 contacts to EZContact                                | reach out to existing and potential customers easily             |","lastModifiedDate":"2023-10-19"},{"lineNumber":380,"author":{"gitId":"TehOPanas"},"content":"| `* * *`  | user             | to add new contacts to EZContact                                                  |                                                                  |","lastModifiedDate":"2023-10-19"},{"lineNumber":381,"author":{"gitId":"TehOPanas"},"content":"| `* * *`  | user             | update my contacts/information easily                                             |                                                                  |","lastModifiedDate":"2023-10-08"},{"lineNumber":382,"author":{"gitId":"TehOPanas"},"content":"| `* * *`  | insurance agent  | be able to assign priorities to each customer                                     | prioritise customers that have a higher chance on sealing a deal |","lastModifiedDate":"2023-10-19"},{"lineNumber":383,"author":{"gitId":"TehOPanas"},"content":"| `* * *`  | insurance agent  | view the type of insurance my customer currently holds                            | to check customers\u0027 profile                                      |","lastModifiedDate":"2023-10-19"},{"lineNumber":384,"author":{"gitId":"TehOPanas"},"content":"| `* * *`  | user             | be able to search for specific contacts                                           | quickly lookup a customer and get their contact                  |","lastModifiedDate":"2023-10-08"},{"lineNumber":385,"author":{"gitId":"songfangyl"},"content":"| `* * *`  | user             | be able to delete contacts                                                        |                                                                  |","lastModifiedDate":"2023-10-05"},{"lineNumber":386,"author":{"gitId":"songfangyl"},"content":"| `* * *`  | user             | to list out all my contacts                                                       | to see all the person in my list                                 |","lastModifiedDate":"2023-10-05"},{"lineNumber":387,"author":{"gitId":"TehOPanas"},"content":"| `* * *`  | user             | be able to see my total numbers of entries in EZContact                           | know how many contacts are in EZContact now                      |","lastModifiedDate":"2023-10-19"},{"lineNumber":388,"author":{"gitId":"TehOPanas"},"content":"| `* *`    | first time user  | be able to know commands in EZContact                                             | play around with the features and get used to the application    |","lastModifiedDate":"2023-10-19"},{"lineNumber":389,"author":{"gitId":"TehOPanas"},"content":"| `* *`    | fast typist      | have short commands                                                               | execute command faster                                           |","lastModifiedDate":"2023-10-08"},{"lineNumber":390,"author":{"gitId":"TehOPanas"},"content":"| `* *`    | forgetful person | apply tags to my contacts                                                         | identify the person quickly                                      |","lastModifiedDate":"2023-10-08"},{"lineNumber":391,"author":{"gitId":"TehOPanas"},"content":"| `* *`    | forgetful person | search for contacts using partial keyword                                         | find the contact without remembering their full name             |","lastModifiedDate":"2023-10-08"},{"lineNumber":392,"author":{"gitId":"songfangyl"},"content":"| `* *`    | careless person  | be able to undo previous command                                                  | recover from unintentional commands                              |","lastModifiedDate":"2023-10-05"},{"lineNumber":393,"author":{"gitId":"TehOPanas"},"content":"| `* *`    | careless person  | be stopped from adding duplicate entries                                          | avoid adding redundant data                                      |","lastModifiedDate":"2023-10-08"},{"lineNumber":394,"author":{"gitId":"TehOPanas"},"content":"| `* *`    | careless person  | want the address book to suggest similar names when im searching for a person     | avoid typographical errors                                       |","lastModifiedDate":"2023-10-08"},{"lineNumber":395,"author":{"gitId":"songfangyl"},"content":"| `* *`    | forgetful person | have the application remind me of important task associated with certain contacts |                                                                  |","lastModifiedDate":"2023-10-05"},{"lineNumber":396,"author":{"gitId":"TehOPanas"},"content":"| `* *`    | user             | search for a contact by its other particulars(not necessarily names)              | be more flexible when searching for contacts                     |","lastModifiedDate":"2023-10-19"},{"lineNumber":397,"author":{"gitId":"TehOPanas"},"content":"| `*`      | user             | import my data from external sources into EZContact                               | avoid copying my data manually                                   |","lastModifiedDate":"2023-10-19"},{"lineNumber":398,"author":{"gitId":"TehOPanas"},"content":"| `*`      | advanced user    | have multiple contact books                                                       | neatly organize my contacts based on contexts                    |","lastModifiedDate":"2023-10-19"},{"lineNumber":399,"author":{"gitId":"TehOPanas"},"content":"| `*`      | user             | be able to export my data                                                         | have a backup when data loss happens                             |","lastModifiedDate":"2023-10-09"},{"lineNumber":400,"author":{"gitId":"TehOPanas"},"content":"| `*`      | forgetful person | be able to add remarks to a certain contact                                       | be reminded of things to take note of when contacting a person   |","lastModifiedDate":"2023-10-19"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":405,"author":{"gitId":"TehOPanas"},"content":"## Use cases","lastModifiedDate":"2023-10-05"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"TehOPanas"},"content":"(For all use cases below, the **System** is the `EZContact` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-10-16"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"TehOPanas"},"content":"#### Adding a customer","lastModifiedDate":"2023-10-19"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"TehOPanas"},"content":"**Use Case: UC01 - add a customer**","lastModifiedDate":"2023-10-16"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"yucongkoo"},"content":"**MSS:**","lastModifiedDate":"2023-10-05"},{"lineNumber":414,"author":{"gitId":"TehOPanas"},"content":"1. User enters the details of customer to be added.","lastModifiedDate":"2023-10-16"},{"lineNumber":415,"author":{"gitId":"TehOPanas"},"content":"2. System adds the customer.","lastModifiedDate":"2023-10-19"},{"lineNumber":416,"author":{"gitId":"TehOPanas"},"content":"3. System displays the details of customer added by user.\u003c/br\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":417,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"yucongkoo"},"content":"**Extensions:**\u003c/br\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":420,"author":{"gitId":"yucongkoo"},"content":"2a.  Details provided by user is incomplete or invalid.\u003c/br\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":421,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;2a1. System shows an error message to alert User.\u003c/br\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":422,"author":{"gitId":"yucongkoo"},"content":"\u0026emsp;\u0026emsp;\u0026emsp;Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"TehOPanas"},"content":"#### Filtering customers","lastModifiedDate":"2023-10-19"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":426,"author":{"gitId":"TehOPanas"},"content":"**Use case: UC02 - filter customers**","lastModifiedDate":"2023-10-16"},{"lineNumber":427,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":428,"author":{"gitId":"Jweewee"},"content":"**MSS:**","lastModifiedDate":"2023-10-06"},{"lineNumber":429,"author":{"gitId":"TehOPanas"},"content":"1. User chooses to filter customers.","lastModifiedDate":"2023-10-16"},{"lineNumber":430,"author":{"gitId":"TehOPanas"},"content":"2. User enters filter command and selectively adds one/multiple category parameters to filter the customers for.","lastModifiedDate":"2023-10-16"},{"lineNumber":431,"author":{"gitId":"TehOPanas"},"content":"3. System filters the customers list.","lastModifiedDate":"2023-10-19"},{"lineNumber":432,"author":{"gitId":"TehOPanas"},"content":"4. System displays the list of customers that meet the criteria.","lastModifiedDate":"2023-10-19"},{"lineNumber":433,"author":{"gitId":"Jweewee"},"content":"   Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":434,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":435,"author":{"gitId":"Jweewee"},"content":"**Extensions:**\u003c/br\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":436,"author":{"gitId":"Jweewee"},"content":"2b.  User doesn\u0027t select any categories to filter for.\u003cbr\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":437,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;2b1. System shows an error message to alert User about the invalid command.","lastModifiedDate":"2023-10-19"},{"lineNumber":438,"author":{"gitId":"Jweewee"},"content":"\u0026emsp;\u0026emsp;\u0026emsp;Use case ends.","lastModifiedDate":"2023-10-06"},{"lineNumber":439,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":440,"author":{"gitId":"Jweewee"},"content":"3a.  None of the contacts meet the filter criteria.","lastModifiedDate":"2023-10-06"},{"lineNumber":441,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;3a1. System shows an empty list with a warning message.","lastModifiedDate":"2023-10-19"},{"lineNumber":442,"author":{"gitId":"Jweewee"},"content":"\u0026emsp;\u0026emsp;\u0026emsp;Use case ends.### Searching for a person","lastModifiedDate":"2023-10-06"},{"lineNumber":443,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":444,"author":{"gitId":"TehOPanas"},"content":"#### Deleting a customer","lastModifiedDate":"2023-10-19"},{"lineNumber":445,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":446,"author":{"gitId":"TehOPanas"},"content":"**Use Case: UC03 - delete a customer**","lastModifiedDate":"2023-10-16"},{"lineNumber":447,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":448,"author":{"gitId":"songfangyl"},"content":"**MSS:**","lastModifiedDate":"2023-10-05"},{"lineNumber":449,"author":{"gitId":"TehOPanas"},"content":"1. User lists out the customers.","lastModifiedDate":"2023-10-16"},{"lineNumber":450,"author":{"gitId":"TehOPanas"},"content":"2. System shows the list of customers to user.","lastModifiedDate":"2023-10-19"},{"lineNumber":451,"author":{"gitId":"TehOPanas"},"content":"3. User deletes the customer with the index number shown in the displayed list.","lastModifiedDate":"2023-10-16"},{"lineNumber":452,"author":{"gitId":"TehOPanas"},"content":"4. System displays the details of the removed customer.\u003c/br\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":453,"author":{"gitId":"songfangyl"},"content":"   Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":454,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":455,"author":{"gitId":"songfangyl"},"content":"**Extensions:**\u003c/br\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":456,"author":{"gitId":"songfangyl"},"content":"4a. Invalid delete command or invalid index.\u003c/br\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":457,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;4a1. System shows an error message to alert User about the invalid command.\u003c/br\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":458,"author":{"gitId":"songfangyl"},"content":"\u0026emsp;\u0026emsp;\u0026emsp;Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":459,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":460,"author":{"gitId":"TehOPanas"},"content":"#### Editing a customer","lastModifiedDate":"2023-10-19"},{"lineNumber":461,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":462,"author":{"gitId":"TehOPanas"},"content":"**Use Case: UC04 - edit a customer\u0027s details**","lastModifiedDate":"2023-10-16"},{"lineNumber":463,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":464,"author":{"gitId":"LamJiuFong"},"content":"**MSS:**","lastModifiedDate":"2023-10-05"},{"lineNumber":465,"author":{"gitId":"TehOPanas"},"content":"1.  User lists out the customers.","lastModifiedDate":"2023-10-16"},{"lineNumber":466,"author":{"gitId":"TehOPanas"},"content":"2.  System shows the list of customers.","lastModifiedDate":"2023-10-19"},{"lineNumber":467,"author":{"gitId":"TehOPanas"},"content":"3.  User edits the customer with the index number shown in the displayed customer list and provides the field prefix along with the new details.","lastModifiedDate":"2023-10-16"},{"lineNumber":468,"author":{"gitId":"TehOPanas"},"content":"4.  System displays the details of the deleted person.\u003c/br\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":469,"author":{"gitId":"LamJiuFong"},"content":"   Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":470,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":471,"author":{"gitId":"LamJiuFong"},"content":"**Extensions:**\u003c/br\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":472,"author":{"gitId":"TehOPanas"},"content":"4a. Index provided by user or information provided by user is invalid.\u003c/br\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":473,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;4a1. System shows an error message to alert User about the invalid command.\u003c/br\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":474,"author":{"gitId":"LamJiuFong"},"content":"\u0026emsp;\u0026emsp;\u0026emsp;Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":475,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":476,"author":{"gitId":"TehOPanas"},"content":"#### Searching for a customer","lastModifiedDate":"2023-10-19"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"TehOPanas"},"content":"**Use Case: UC05 - search for a customer**","lastModifiedDate":"2023-10-19"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"TehOPanas"},"content":"**MSS:**","lastModifiedDate":"2023-10-05"},{"lineNumber":481,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":482,"author":{"gitId":"TehOPanas"},"content":"1.  User searches with a prompt.","lastModifiedDate":"2023-10-05"},{"lineNumber":483,"author":{"gitId":"TehOPanas"},"content":"2.  System shows a list of customers matching the prompt.","lastModifiedDate":"2023-10-19"},{"lineNumber":484,"author":{"gitId":"TehOPanas"},"content":"3.  User views the customers\u0027 information.\u003c/br\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":485,"author":{"gitId":"yucongkoo"},"content":"    Use case ends.","lastModifiedDate":"2023-10-01"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"Jweewee"},"content":"**Extensions:**\u003c/br\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":488,"author":{"gitId":"Jweewee"},"content":"1a. User searches with an invalid prompt format\u003c/br\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":489,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;1a1. System shows an error message to User.\u003c/br\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":490,"author":{"gitId":"Jweewee"},"content":"\u0026emsp;\u0026emsp;\u0026emsp;\u0026nbsp;Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":491,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":492,"author":{"gitId":"TehOPanas"},"content":"2a. There is no customer that match the prompt.\u003c/br\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":493,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;2a1. System shows an empty list.\u003c/br\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":494,"author":{"gitId":"Jweewee"},"content":"\u0026emsp;\u0026emsp;\u0026emsp;\u0026nbsp;Use case ends.","lastModifiedDate":"2023-10-05"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":499,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"TehOPanas"},"content":"2.  Should be able to hold up to 1000 customer without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-10-16"},{"lineNumber":503,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"Jweewee"},"content":"4.  The user interface should be intuitive, easy to navigate and understand (i.e. concise and simple)","lastModifiedDate":"2023-10-05"},{"lineNumber":505,"author":{"gitId":"Jweewee"},"content":"5.  The application should gracefully handle errors to prevent system crashes and data corruption.","lastModifiedDate":"2023-10-05"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"TehOPanas"},"content":"## Glossary","lastModifiedDate":"2023-10-05"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"TehOPanas"},"content":"# **Appendix: Instructions for manual testing**","lastModifiedDate":"2023-10-05"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":522,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":523,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"TehOPanas"},"content":"## Launch and shutdown","lastModifiedDate":"2023-10-05"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"TehOPanas"},"content":"## Deleting a person","lastModifiedDate":"2023-10-05"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"TehOPanas"},"content":"## Saving data","lastModifiedDate":"2023-10-05"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"TehOPanas":88,"yucongkoo":92,"songfangyl":14,"LamJiuFong":7,"-":348,"Jweewee":18}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"User Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"TehOPanas"},"content":"# EzContact","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"TehOPanas"},"content":"EzContact is a","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"TehOPanas"},"content":"* desktop app made for insurance agents to manage customer details, optimized for usage via Command Line Interface (CLI)","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"TehOPanas"},"content":"* while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"TehOPanas"},"content":"* If you can type fast, EzContact can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"TehOPanas"},"content":"2. Download the latest `ezcontact.jar` from [here](https://github.com/AY2324S1-CS2103T-W16-2/tp/releases).","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"TehOPanas"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your EzContact.","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"TehOPanas"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar ezcontact.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"TehOPanas"},"content":"5. Type the command in the command box and press Enter to execute it.","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"TehOPanas"},"content":"### Adding a customer: `add`","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"yucongkoo"},"content":"**Adds a new customer to EZContact**.","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"yucongkoo"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL [a/ADDRESS] [t/TAG]...`","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"yucongkoo"},"content":"* Adds a new customer with the respective details to EzContact.","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":68,"author":{"gitId":"yucongkoo"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"yucongkoo"},"content":"**Caution:**","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"yucongkoo"},"content":"* `NAME` should **not be longer than 64 characters**.","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"yucongkoo"},"content":"* `PHONE_NUMBER` should be an **8-digit number**(i.e. a Singapore number).","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"yucongkoo"},"content":"* `EMAIL` should be a **valid email address**(i.e. `local-part@domain`).","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"yucongkoo"},"content":"* `ADDRESS` should be **non-empty**.","lastModifiedDate":"2023-10-22"},{"lineNumber":75,"author":{"gitId":"yucongkoo"},"content":"* `TAG` should be **alphanumeric** and **not longer than 20 characters**.","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"yucongkoo"},"content":"* A customer **must not have more than 10 tags** assigned to it.","lastModifiedDate":"2023-10-22"},{"lineNumber":77,"author":{"gitId":"yucongkoo"},"content":"* Adding a customer with a `NAME` that **already exists** in EzContact is **not allowed**.","lastModifiedDate":"2023-10-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"yucongkoo"},"content":"* `add n/Betsy Crowe e/betsycrowe@example.com p/12345678`","lastModifiedDate":"2023-10-01"},{"lineNumber":83,"author":{"gitId":"yucongkoo"},"content":"* `add n/Ryan Ong p/64238876 e/ryanong@gmail.com t/tall t/skinny t/wears spectacles`","lastModifiedDate":"2023-10-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"TehOPanas"},"content":"### Listing all customers : `list`","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"TehOPanas"},"content":"Shows a list of all existing customers in EZContact and the size of the list.","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"Jweewee"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":93,"author":{"gitId":"Jweewee"},"content":"**Caution:** A list command does not take in parameters e.g. `list 1`, `list first`, `list all` will be invalid.","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":95,"author":{"gitId":"Jweewee"},"content":"Examples:","lastModifiedDate":"2023-10-04"},{"lineNumber":96,"author":{"gitId":"Jweewee"},"content":"* `list` shows a list of all existing customers and the size of the list.","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":98,"author":{"gitId":"Jweewee"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-10-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":100,"author":{"gitId":"TehOPanas"},"content":"### Deleting a customer : `delete`","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":102,"author":{"gitId":"TehOPanas"},"content":"Deletes the specified customer from EZContact.","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":104,"author":{"gitId":"songfangyl"},"content":"Format: `delete INDEX`","lastModifiedDate":"2023-10-05"},{"lineNumber":105,"author":{"gitId":"TehOPanas"},"content":"* Deletes the customer at the specified `INDEX`.","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"TehOPanas"},"content":"* The index refers to the index number shown in the displayed customers list.","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"songfangyl"},"content":"* The `INDEX` is 1-indexed","lastModifiedDate":"2023-10-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":109,"author":{"gitId":"songfangyl"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":110,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":111,"author":{"gitId":"songfangyl"},"content":"**Caution:** The index **must be a positive integer** 1, 2, 3, ...","lastModifiedDate":"2023-10-05"},{"lineNumber":112,"author":{"gitId":"songfangyl"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-05"},{"lineNumber":116,"author":{"gitId":"TehOPanas"},"content":"* `list` followed by `delete 2` deletes the 2nd customer in the address book.","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"TehOPanas"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st customer in the results of the `find` command.","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":120,"author":{"gitId":"TehOPanas"},"content":"### Editing a customer : `edit`","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"TehOPanas"},"content":"Edits an existing customer in EZContact.","lastModifiedDate":"2023-10-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"LamJiuFong"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS]`","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"TehOPanas"},"content":"* Edits the customer at the specified `INDEX`. The index refers to the index number shown in the displayed customer list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"LamJiuFong"},"content":"* Tags are not editable.","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"TehOPanas"},"content":"*  `edit 1 p/91234567 e/jiufong@example.com` Edits the phone number and email address of the 1st customer to be `91234567` and `jiufong@example.com` respectively.","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"TehOPanas"},"content":"*  `edit 2 n/Betsy Crower` Edits the name of the 2nd customer to be `Betsy Crower`.","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"songfangyl"},"content":"### Finding persons : `find`","lastModifiedDate":"2023-10-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":137,"author":{"gitId":"songfangyl"},"content":"Finds customers whose names contain all the given keywords as prefix.","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":139,"author":{"gitId":"songfangyl"},"content":"Format: `find KEYWORD [MORE_KEYWORD]`","lastModifiedDate":"2023-10-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":141,"author":{"gitId":"songfangyl"},"content":"* The search is case-insensitive. e.g. `find Adam` returns `adam`","lastModifiedDate":"2023-10-14"},{"lineNumber":142,"author":{"gitId":"songfangyl"},"content":"* The order of the keywords does not matter. e.g.`find Adam Leong` returns `Leong Adam` or `Adam Chen Leong`","lastModifiedDate":"2023-10-14"},{"lineNumber":143,"author":{"gitId":"songfangyl"},"content":"* Only the name information is searched.","lastModifiedDate":"2023-10-14"},{"lineNumber":144,"author":{"gitId":"songfangyl"},"content":"* The search support partial search, only required keywords match name as a prefix. e.g. `find A` returns `Adam Leong` or `Andy Chong`","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"songfangyl"},"content":"* Only the customers matching all the keywords will be returned e.g. \u003c/br\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":146,"author":{"gitId":"songfangyl"},"content":"`find Adam Leong` return `Adam Leong Keng Fat` but not `Adam Huat`\u003c/br\u003e","lastModifiedDate":"2023-10-18"},{"lineNumber":147,"author":{"gitId":"songfangyl"},"content":"`find A L` return `Adam Leong` but not `Adam Tan`","lastModifiedDate":"2023-10-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":149,"author":{"gitId":"songfangyl"},"content":"Examples:","lastModifiedDate":"2023-10-12"},{"lineNumber":150,"author":{"gitId":"songfangyl"},"content":"* `find Adam H` Finds all the customers whose name contains `Adam` and  `H` as prefix","lastModifiedDate":"2023-10-18"},{"lineNumber":151,"author":{"gitId":"songfangyl"},"content":"* `find Song` Finds all the customers whose name contains `Song` as prefix","lastModifiedDate":"2023-10-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":153,"author":{"gitId":"yucongkoo"},"content":"### Tagging a customer: `tag`","lastModifiedDate":"2023-10-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":155,"author":{"gitId":"yucongkoo"},"content":"**Updates the tags assigned to an existing customer**.","lastModifiedDate":"2023-10-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":157,"author":{"gitId":"yucongkoo"},"content":"Format: `tag INDEX [at/TAG_TO_ADD]... [dt/TAG_TO_DELETE]...`","lastModifiedDate":"2023-10-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":159,"author":{"gitId":"yucongkoo"},"content":"* Updates the tags assigned to the customer at `INDEX` in the displayed customer list.","lastModifiedDate":"2023-10-22"},{"lineNumber":160,"author":{"gitId":"yucongkoo"},"content":"* Duplicate tags to add/delete will be ignored by EzContact.","lastModifiedDate":"2023-10-22"},{"lineNumber":161,"author":{"gitId":"yucongkoo"},"content":"* Adding an existing tag or deleting a non-existing tag will be ignored by EzContact.","lastModifiedDate":"2023-10-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-10-22"},{"lineNumber":166,"author":{"gitId":"yucongkoo"},"content":"* **At least one** `TAG_TO_ADD` or `TAG_TO_DELETE` should be provided.","lastModifiedDate":"2023-10-22"},{"lineNumber":167,"author":{"gitId":"yucongkoo"},"content":"* Adding and deleting the same tag is **not allowed**.","lastModifiedDate":"2023-10-22"},{"lineNumber":168,"author":{"gitId":"yucongkoo"},"content":"* `INDEX` should be a **positive integer** and **not exceed** the index of the last person in the displayed customer list.","lastModifiedDate":"2023-10-22"},{"lineNumber":169,"author":{"gitId":"yucongkoo"},"content":"* `TAG_TO_ADD` and `TAG_TO_DELETE` should be **alphanumeric** and **not longer than 20 characters**.","lastModifiedDate":"2023-10-22"},{"lineNumber":170,"author":{"gitId":"yucongkoo"},"content":"* The number of tags assigned to the customer after an update should **not exceed 10 tags**.","lastModifiedDate":"2023-10-22"},{"lineNumber":171,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":174,"author":{"gitId":"yucongkoo"},"content":"Examples:","lastModifiedDate":"2023-10-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":176,"author":{"gitId":"yucongkoo"},"content":"`tag 1 at/tall dt/short`","lastModifiedDate":"2023-10-22"},{"lineNumber":177,"author":{"gitId":"yucongkoo"},"content":"* Adds `tall` tag to the first person.","lastModifiedDate":"2023-10-22"},{"lineNumber":178,"author":{"gitId":"yucongkoo"},"content":"* Deletes `short` tag from the first person(ignored if the first person does not have `short` tag originally).","lastModifiedDate":"2023-10-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":180,"author":{"gitId":"yucongkoo"},"content":"`tag 2 at/tall at/wears spectacles dt/short at/tall`","lastModifiedDate":"2023-10-22"},{"lineNumber":181,"author":{"gitId":"yucongkoo"},"content":"* Adds `tall` and `wears spectacles` tag to the second person (duplicate `tall` is ignored).","lastModifiedDate":"2023-10-22"},{"lineNumber":182,"author":{"gitId":"yucongkoo"},"content":"* Deletes `short` tag from the second person.","lastModifiedDate":"2023-10-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"TehOPanas"},"content":"_More coming soon ..._","lastModifiedDate":"2023-10-05"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"yucongkoo"},"content":"| Action     | Format and Examples                                                                                                                                                    |","lastModifiedDate":"2023-10-22"},{"lineNumber":199,"author":{"gitId":"yucongkoo"},"content":"|------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-10-22"},{"lineNumber":200,"author":{"gitId":"yucongkoo"},"content":"| **Add**    | `add n/NAME p/PHONE_NUMBER e/EMAIL [a/ADDRESS] [t/TAG]...`         \u003chr\u003e           `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/tall` |","lastModifiedDate":"2023-10-22"},{"lineNumber":201,"author":{"gitId":"yucongkoo"},"content":"| **Delete** | `delete INDEX`                                            \u003chr\u003e       `delete 3`                                                                                        |","lastModifiedDate":"2023-10-22"},{"lineNumber":202,"author":{"gitId":"yucongkoo"},"content":"| **Edit**   | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` \u003chr\u003e `edit 2 n/James Lee e/jameslee@example.com`                                                |","lastModifiedDate":"2023-10-22"},{"lineNumber":203,"author":{"gitId":"yucongkoo"},"content":"| **List**   | `list`                                                                      \u003chr\u003e                                                                                       |","lastModifiedDate":"2023-10-22"},{"lineNumber":204,"author":{"gitId":"yucongkoo"},"content":"| **Find**   | `find NAME`                                        \u003chr\u003e                                                                                                                |","lastModifiedDate":"2023-10-22"},{"lineNumber":205,"author":{"gitId":"yucongkoo"},"content":"| **Tag** | `tag INDEX [at/TAG_TO_ADD]... [dt/TAG_TO_DELETE]...`     \u003chr\u003e         `tag 1 at/tall dt/short at/male`                                                                 |","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"TehOPanas":25,"yucongkoo":41,"songfangyl":19,"LamJiuFong":2,"-":113,"Jweewee":5}},{"path":"docs/diagrams/tag-feature/ExecuteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"@startuml","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"!include ../style.puml","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"participant \":TagCommand\" as TagCommand LOGIC_COLOR","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"participant \":UpdatePersonTagsDescriptor\" as UpdatePersonTagsDescriptor LOGIC_COLOR","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"end box","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"participant \"Person\" as PersonClass \u003c\u003cclass\u003e\u003e MODEL_COLOR","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"participant \":Person\" as Person MODEL_COLOR","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"end box","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"[-\u003e TagCommand: execute(m)","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"TagCommand -\u003e Model: getFilteredPersonList()","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"Model --\u003e TagCommand: lastShownList","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"opt index not in range of lastShownList","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"[\u003c-- TagCommand: throw CommandException","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"end","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"|||","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"TagCommand -\u003e UpdatePersonTagsDescriptor:containsCommonTagToAddAndDelete()","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"return hasConflictingTags","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"|||","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"opt has conflicting tags","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"[\u003c-- TagCommand: throw CommandException","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"end","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"|||","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"TagCommand -\u003e PersonClass: createPersonWithUpdatedTags(personToUpdate, tagsToAdd, tagsToDelete)","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"activate PersonClass","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"create Person","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"PersonClass -\u003e Person","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"activate Person","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"return updatedPerson","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"return updatedPerson","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"opt updatedPerson\u0027s tag exceeds\\n maximum tags allowed","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"[\u003c-- TagCommand: throw CommandException","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"end","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"|||","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"TagCommand -\u003e Model: setPerson(personToUpdate, updatedPerson)","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"yucongkoo"},"content":"|||","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"|||","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"yucongkoo"},"content":"create CommandResult","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"yucongkoo"},"content":"TagCommand -\u003e CommandResult","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"yucongkoo"},"content":"activate CommandResult","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"yucongkoo"},"content":"return result","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"yucongkoo"},"content":"[\u003c-- TagCommand: result","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"yucongkoo"},"content":"@enduml","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"yucongkoo":55}},{"path":"docs/diagrams/tag-feature/ParseDetailsSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"@startuml","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"!include ../style.puml","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"mainframe sd parse arguments","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"participant \":TagCommandParser\" as TagCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"participant \":ParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"TagCommandParser -\u003e ParserUtil: \u003c\u003cstatic\u003e\u003e \\nparseIndex(\"1\")","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"alt valid index","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"    ParserUtil --\u003e TagCommandParser: index","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"else","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"    ParserUtil --\u003e TagCommandParser: throws ParseException","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"    deactivate ParserUtil","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"end","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"|||","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"TagCommandParser -\u003e TagCommandParser: parseTags(\"tall\", \"handsome\")","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"alt all tags valid","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"    TagCommandParser --\u003e TagCommandParser: tagsToAdd","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"else","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"    TagCommandParser --\u003e TagCommandParser: throws ParseException","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"end","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"|||","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"TagCommandParser -\u003e TagCommandParser: parseTags(\"short\")","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"alt all tags valid","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"    TagCommandParser --\u003e TagCommandParser: tagsToDelete","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"else","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"    TagCommandParser --\u003e TagCommandParser: throws ParseException","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"end","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"@enduml","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"yucongkoo":32}},{"path":"docs/diagrams/tag-feature/ParseSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"@startuml","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"!include ../style.puml","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"participant \":TagCommandParser\" as TagCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"participant \":UpdatePersonTagsDescriptor\" as UpdatePersonTagsDescriptor LOGIC_COLOR","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"participant \":TagCommand\" as TagCommand LOGIC_COLOR","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"[-\u003e TagCommandParser : parse(\"tag 1 at/tall \\ndt/short at/handsome\")","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"ref over TagCommandParser: parse arguments","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"note right: This reference frame has been omitted.\\n Parsing of index, tagsToAdd and tagsToDelete is performed here.","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"|||","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"create UpdatePersonTagsDescriptor","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"TagCommandParser -\u003e UpdatePersonTagsDescriptor","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"activate UpdatePersonTagsDescriptor","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"note right: Contains information of \\ntagsToAdd and tagsToDelete.","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"return descriptor","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"|||","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"TagCommandParser -\u003e UpdatePersonTagsDescriptor: hasTagToUpdate()","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"return","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"opt no tag to update","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"    [\u003c--TagCommandParser: throws ParseException","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"end","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"|||","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"create TagCommand","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"    TagCommandParser -\u003e TagCommand: new TagCommand(1, descriptor)","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"    activate TagCommand","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"    return command","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"    [\u003c--TagCommandParser : command","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"@enduml","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"yucongkoo":33}},{"path":"docs/diagrams/tag-feature/PersonClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"@startuml","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"!include ../style.puml","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"Class Person","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"note right of Person","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":" A person is associated to other attribute classes such as","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":" \u003cb\u003eName\u003c/b\u003e, \u003cb\u003ePhone\u003c/b\u003e, \u003cb\u003eEmail\u003c/b\u003e...","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":" which are ommited here as they are irrelevant","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":" when discussing the tag feature.","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"end note","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"Class Tag","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"@enduml","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"yucongkoo":17}},{"path":"docs/diagrams/tag-feature/TagSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"@startuml","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"!include ../style.puml","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"participant \":TagCommandParser\" as TagCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"participant \"t:TagCommand\" as TagCommand LOGIC_COLOR","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"end box","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"end box","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"[-\u003e LogicManager : execute(\"tag 1 at/tall \\ndt/short at/handsome\")","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"activate LogicManager","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"tag 1 at/tall \\ndt/short at/handsome\")","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"create TagCommandParser","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"AddressBookParser -\u003e TagCommandParser","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"activate TagCommandParser","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"TagCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"deactivate TagCommandParser","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"AddressBookParser -\u003e TagCommandParser : parse(\"1 at/tall \\ndt/short at/handsome\")","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"activate TagCommandParser","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"create TagCommand","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"TagCommandParser -\u003e TagCommand","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"activate TagCommand","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"TagCommand --\u003e TagCommandParser : t","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"deactivate TagCommand","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"TagCommandParser --\u003e AddressBookParser : t","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"deactivate TagCommandParser","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"TagCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"destroy TagCommandParser","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"AddressBookParser --\u003e LogicManager : t","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"yucongkoo"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"yucongkoo"},"content":"LogicManager -\u003e TagCommand : execute()","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"yucongkoo"},"content":"activate TagCommand","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"yucongkoo"},"content":"TagCommand -\u003e Model : setPerson(personToUpdate,\\n updatedPerson)","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"yucongkoo"},"content":"activate Model","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"yucongkoo"},"content":"Model --\u003e TagCommand","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"yucongkoo"},"content":"deactivate Model","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"yucongkoo"},"content":"create CommandResult","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"yucongkoo"},"content":"TagCommand -\u003e CommandResult","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"yucongkoo"},"content":"activate CommandResult","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"yucongkoo"},"content":"CommandResult --\u003e TagCommand : result","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"yucongkoo"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"yucongkoo"},"content":"TagCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"yucongkoo"},"content":"deactivate TagCommand","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"yucongkoo"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"yucongkoo"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"yucongkoo"},"content":"@enduml","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"yucongkoo":70}},{"path":"docs/team/jweewee.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"layout: default.md","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"title: \"Jweewee\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"`to be added soon`","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"* **New Feature**: `to be added soon`","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":"    * What it does: `to be added soon`","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":"    * Justification: `to be added soon`","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"    * Highlights: `to be added soon`","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":"* **New Feature**: `to be added soon`","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"Jweewee"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003djweewee\u0026breakdown\u003dfalse\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos)","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":"* **Project management**:","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"Jweewee"},"content":"    * `to be added soon`","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"Jweewee"},"content":"    * `to be added soon`","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"Jweewee"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"Jweewee"},"content":"    * User Guide: `to be added soon`","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"Jweewee"},"content":"    * Developer Guide: `to be added soon`","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"Jweewee"},"content":"* **Community**:","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"Jweewee"},"content":"    * `to be added soon`","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"Jweewee"},"content":"* **Tools**:","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"Jweewee"},"content":"    * `to be added soon`","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"Jweewee":35}},{"path":"docs/team/lamjiufong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LamJiuFong"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"LamJiuFong"},"content":"layout: default.md","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"LamJiuFong"},"content":"title: \"LamJiuFong\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"LamJiuFong"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"LamJiuFong"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"LamJiuFong"},"content":"`to be added soon`","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"LamJiuFong"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":"* **New Feature**: `to be added soon`","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"LamJiuFong"},"content":"  * What it does: `to be added soon`","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"LamJiuFong"},"content":"  * Justification: `to be added soon`","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"LamJiuFong"},"content":"  * Highlights: `to be added soon`","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"LamJiuFong"},"content":"* **New Feature**: `to be added soon`","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"LamJiuFong"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dLamJiuFong\u0026breakdown\u003dfalse\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos)","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"LamJiuFong"},"content":"* **Project management**:","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"LamJiuFong"},"content":"  * `to be added soon`","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"LamJiuFong"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"LamJiuFong"},"content":"  * `to be added soon`","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"LamJiuFong"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"LamJiuFong"},"content":"  * User Guide: `to be added soon`","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"LamJiuFong"},"content":"  * Developer Guide: `to be added soon`","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"LamJiuFong"},"content":"* **Community**:","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"LamJiuFong"},"content":"  * `to be added soon`","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"LamJiuFong"},"content":"* **Tools**:","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"LamJiuFong"},"content":"  * `to be added soon`","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"LamJiuFong":35}},{"path":"docs/team/songfangyl.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"  layout: default.md","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"  title: \"songfangyl\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"`to be added soon`","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"* **New Feature**: `to be added soon`","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"    * What it does: `to be added soon`","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"    * Justification: `to be added soon`","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"    * Highlights: `to be added soon`","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"* **New Feature**: `to be added soon`","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dsongfangyl\u0026breakdown\u003dfalse\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos)","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"* **Project management**:","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"    * `to be added soon`","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"    * `to be added soon`","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"    * User Guide: `to be added soon`","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"    * Developer Guide: `to be added soon`","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"* **Community**:","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"    * `to be added soon`","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"* **Tools**:","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"    * `to be added soon`","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"songfangyl":35}},{"path":"docs/team/tehopanas.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TehOPanas"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"TehOPanas"},"content":"layout: default.md","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"TehOPanas"},"content":"title: \"TehOPanas\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"TehOPanas"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"TehOPanas"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"TehOPanas"},"content":"`to be added soon`","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"TehOPanas"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"TehOPanas"},"content":"* **New Feature**: `to be added soon`","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"TehOPanas"},"content":"    * What it does: `to be added soon`","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"TehOPanas"},"content":"    * Justification: `to be added soon`","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"TehOPanas"},"content":"    * Highlights: `to be added soon`","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":17,"author":{"gitId":"TehOPanas"},"content":"* **New Feature**: `to be added soon`","lastModifiedDate":"2023-10-05"},{"lineNumber":18,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"TehOPanas"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dtehopanas\u0026breakdown\u003dfalse\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos)","lastModifiedDate":"2023-10-05"},{"lineNumber":20,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":21,"author":{"gitId":"TehOPanas"},"content":"* **Project management**:","lastModifiedDate":"2023-10-05"},{"lineNumber":22,"author":{"gitId":"TehOPanas"},"content":"    * `to be added soon`","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"TehOPanas"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"TehOPanas"},"content":"    * `to be added soon`","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"TehOPanas"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"TehOPanas"},"content":"    * User Guide: `to be added soon`","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"TehOPanas"},"content":"    * Developer Guide: `to be added soon`","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"TehOPanas"},"content":"* **Community**:","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"TehOPanas"},"content":"    * `to be added soon`","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"TehOPanas"},"content":"* **Tools**:","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"TehOPanas"},"content":"    * `to be added soon`","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"TehOPanas":35}},{"path":"docs/team/yucongkoo.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"---","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"  layout: default.md","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"  title: \"Yucongkoo\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"---","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-09-30"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"`to be added soon`","lastModifiedDate":"2023-09-30"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-30"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"* **New Feature**: `to be added soon`","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"    * What it does: `to be added soon`","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"    * Justification: `to be added soon`","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"    * Highlights: `to be added soon`","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"* **New Feature**: `to be added soon`","lastModifiedDate":"2023-09-30"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dyucongkoo\u0026breakdown\u003dfalse\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos)","lastModifiedDate":"2023-09-30"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"* **Project management**:","lastModifiedDate":"2023-09-30"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"    * `to be added soon`","lastModifiedDate":"2023-09-30"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-09-30"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"    * `to be added soon`","lastModifiedDate":"2023-09-30"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-30"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"    * User Guide: `to be added soon`","lastModifiedDate":"2023-09-30"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"    * Developer Guide: `to be added soon`","lastModifiedDate":"2023-09-30"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"* **Community**:","lastModifiedDate":"2023-09-30"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"    * `to be added soon`","lastModifiedDate":"2023-09-30"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"* **Tools**:","lastModifiedDate":"2023-09-30"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"    * `to be added soon`","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"yucongkoo":35}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.model.tag.Tag.MAXIMUM_TAGS_PER_PERSON;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"    public static final String MESSAGE_NO_PERSON_FOUND \u003d \"No person found!\";","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"    public static final String MESSAGE_TAG_COUNT_EXCEED \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"            String.format(\"Command will cause number of tags to exceed the limit of %d.\", MAXIMUM_TAGS_PER_PERSON);","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"LamJiuFong"},"content":"        builder.append(\"; Priority: \")","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"LamJiuFong"},"content":"                .append(person.getPriority());","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yucongkoo":4,"songfangyl":1,"LamJiuFong":2,"-":51}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.Messages.MESSAGE_TAG_COUNT_EXCEED;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.model.tag.Tag.MAXIMUM_TAGS_PER_PERSON;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"TehOPanas"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"TehOPanas"},"content":"            + \"Usage: \"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"TehOPanas"},"content":"            + PREFIX_NAME + \"\u003cname\u003e \"","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"TehOPanas"},"content":"            + PREFIX_PHONE + \"\u003cphone number\u003e \"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"TehOPanas"},"content":"            + PREFIX_EMAIL + \"\u003cemail address\u003e \"","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"TehOPanas"},"content":"            + \"[\" + PREFIX_ADDRESS + \"\u003chome/office address\u003e]\";","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"TehOPanas"},"content":"    private static final String OPTIONAL_TAG_USAGE \u003d \"[\" + PREFIX_TAG + \"TAG]...\\n\";","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"     * Creates an AddCommand to add the specified {@code Person}.","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"yucongkoo"},"content":"        if (toAdd.getTagsCount() \u003e MAXIMUM_TAGS_PER_PERSON) {","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"yucongkoo"},"content":"            throw new CommandException(MESSAGE_TAG_COUNT_EXCEED);","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"TehOPanas":7,"yucongkoo":7,"-":68}},{"path":"src/main/java/seedu/address/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"     * @return feedback message of the operation result for display.","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yucongkoo":1,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"    public static final String MESSAGE_USAGE \u003d \"Usage: \"","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"            + COMMAND_WORD + \"\u003cINDEX\u003e (INDEX must be a positive integer)\\n\"","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"            + \"INDEX: the index shown in the displayed list\";","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"songfangyl":3,"-":65}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.priority.Priority;","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"LamJiuFong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits a person\u0027s information. \\n\"","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"LamJiuFong"},"content":"            + \"Usage: \"","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"LamJiuFong"},"content":"            + \"INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"LamJiuFong"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \";","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"LamJiuFong"},"content":"    public static final String MESSAGE_EDIT_TAG \u003d \"Cannot edit tags. Please use tag command to add/delete tags.\";","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"LamJiuFong"},"content":"    public static final String MESSAGE_EDIT_PRIORITY \u003d \"Cannot edit priorities. Please use pr command to assign \"","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"LamJiuFong"},"content":"            + \"new priority.\";","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"LamJiuFong"},"content":"    public static final HashMap\u003cPrefix, String\u003e MESSAGE_INVALID_PREFIX_MAP \u003d new HashMap\u003c\u003e() {","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"LamJiuFong"},"content":"        {","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"LamJiuFong"},"content":"            put(PREFIX_TAG, MESSAGE_EDIT_TAG);","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"LamJiuFong"},"content":"            put(PREFIX_PRIORITY, MESSAGE_EDIT_PRIORITY);","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"LamJiuFong"},"content":"    };","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":108,"author":{"gitId":"LamJiuFong"},"content":"        Set\u003cTag\u003e tags \u003d personToEdit.getTags();","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"LamJiuFong"},"content":"        Priority priority \u003d personToEdit.getPriority();","lastModifiedDate":"2023-10-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"LamJiuFong"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, tags, priority);","lastModifiedDate":"2023-10-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"LamJiuFong"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address);","lastModifiedDate":"2023-10-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":215,"author":{"gitId":"LamJiuFong"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address);","lastModifiedDate":"2023-10-18"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":228,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"LamJiuFong":22,"-":206}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"        if (model.getFilteredPersonList().size() \u003d\u003d 0) {","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"            return new CommandResult(Messages.MESSAGE_NO_PERSON_FOUND);","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"songfangyl":3,"-":58}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all %1$d customer(s)\";","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":"    public static final String MESSAGE_USAGE \u003d \"Usage: \"","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":"            + COMMAND_WORD + \" (no parameters)\";","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, model.getFilteredPersonListSize()));","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":22,"Jweewee":4}},{"path":"src/main/java/seedu/address/logic/commands/PriorityCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LamJiuFong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"LamJiuFong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.model.person.Person.createPersonWithUpdatedPriority;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"LamJiuFong"},"content":"import java.util.List;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.priority.Priority;","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"LamJiuFong"},"content":"/** Assigns priority to a person. **/","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"LamJiuFong"},"content":"public class PriorityCommand extends Command {","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"LamJiuFong"},"content":"    public static final String COMMAND_WORD \u003d \"pr\";","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"LamJiuFong"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Assign priority to a person \"","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"LamJiuFong"},"content":"            + \"by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"LamJiuFong"},"content":"            + \"Usage: \"","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"LamJiuFong"},"content":"            + COMMAND_WORD + \" \u003cINDEX\u003e (must be a positive integer) \"","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"LamJiuFong"},"content":"            + \"\u003cPRIORITY_LEVEL\u003e\\n\"","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"LamJiuFong"},"content":"            + Priority.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"LamJiuFong"},"content":"    public static final String MESSAGE_NOT_ASSIGNED \u003d \"Priority given is the same as previous one.\";","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"LamJiuFong"},"content":"    public static final String MESSAGE_ASSIGN_PERSON_SUCCESS \u003d \"Updated priority of person: %1$s\";","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"LamJiuFong"},"content":"    private final Index index;","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"LamJiuFong"},"content":"    private final Priority priority;","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"LamJiuFong"},"content":"     * Constructs a PriorityCommand.","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"LamJiuFong"},"content":"     * @param index of the person in the filtered list to assign priority to.","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"LamJiuFong"},"content":"     * @param priority assigned to the person.","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"LamJiuFong"},"content":"    public PriorityCommand(Index index, Priority priority) {","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"LamJiuFong"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"LamJiuFong"},"content":"        requireNonNull(priority);","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"LamJiuFong"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"LamJiuFong"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"LamJiuFong"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"LamJiuFong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"LamJiuFong"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"LamJiuFong"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"LamJiuFong"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"LamJiuFong"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"LamJiuFong"},"content":"        Person personToUpdate \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"LamJiuFong"},"content":"        Person updatedPerson \u003d createPersonWithUpdatedPriority(personToUpdate, priority);","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"LamJiuFong"},"content":"        if (personToUpdate.hasSamePriority(priority)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"LamJiuFong"},"content":"            throw new CommandException(MESSAGE_NOT_ASSIGNED);","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"LamJiuFong"},"content":"        model.setPerson(personToUpdate, updatedPerson);","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"LamJiuFong"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"LamJiuFong"},"content":"        return new CommandResult(String.format(MESSAGE_ASSIGN_PERSON_SUCCESS, Messages.format(updatedPerson)));","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"LamJiuFong"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"LamJiuFong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-23"},{"lineNumber":72,"author":{"gitId":"LamJiuFong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-23"},{"lineNumber":73,"author":{"gitId":"LamJiuFong"},"content":"            return true;","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":75,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"LamJiuFong"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"LamJiuFong"},"content":"        if (!(other instanceof PriorityCommand)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":78,"author":{"gitId":"LamJiuFong"},"content":"            return false;","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":81,"author":{"gitId":"LamJiuFong"},"content":"        PriorityCommand otherPriorityCommand \u003d (PriorityCommand) other;","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"LamJiuFong"},"content":"        return priority.equals(otherPriorityCommand.priority) \u0026\u0026 index.equals(otherPriorityCommand.index);","lastModifiedDate":"2023-10-23"},{"lineNumber":83,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":84,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":85,"author":{"gitId":"LamJiuFong"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":86,"author":{"gitId":"LamJiuFong"},"content":"    public String toString() {","lastModifiedDate":"2023-10-23"},{"lineNumber":87,"author":{"gitId":"LamJiuFong"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"LamJiuFong"},"content":"                .add(\"priority\", priority)","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"LamJiuFong"},"content":"                .toString();","lastModifiedDate":"2023-10-23"},{"lineNumber":90,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":91,"author":{"gitId":"LamJiuFong"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"LamJiuFong":91}},{"path":"src/main/java/seedu/address/logic/commands/TagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.Messages.MESSAGE_TAG_COUNT_EXCEED;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_TAG;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DELETE_TAG;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.model.person.Person.createPersonWithUpdatedTags;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.model.tag.Tag.MAXIMUM_TAGS_PER_PERSON;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"import java.util.List;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":" * Adds or deletes tags of a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"public class TagCommand extends Command {","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"    public static final String COMMAND_WORD \u003d \"tag\";","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Add/Delete tags of the person identified \"","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"            + \"by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"            + \"Usage: \"","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"            + COMMAND_WORD + \" \u003cINDEX\u003e \"","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"            + \"[\" + PREFIX_ADD_TAG + \"\u003cTAG_TO_ADD\u003e]... \"","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"            + \"[\" + PREFIX_DELETE_TAG + \"\u003cTAG_TO_DELETE\u003e]...\\n\";","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"    public static final String MESSAGE_TAG_PERSON_SUCCESS \u003d \"Updated tag of person: %s\";","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"    public static final String MESSAGE_NOT_UPDATED \u003d \"At least one tag to add or delete must be provided.\";","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"    public static final String MESSAGE_COMMON_TAG_FAILURE \u003d \"Should not add and delete the same tag.\";","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(TagCommand.class);","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"    private final Index index;","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"    private final UpdatePersonTagsDescriptor updatePersonTagsDescriptor;","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"     * Constructs a Tag Command.","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"yucongkoo"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"yucongkoo"},"content":"     * @param index of the person in the filtered person list to tag.","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"yucongkoo"},"content":"     * @param updatePersonTagsDescriptor containing details of tags to update.","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"yucongkoo"},"content":"    public TagCommand(Index index, UpdatePersonTagsDescriptor updatePersonTagsDescriptor) {","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"yucongkoo"},"content":"        requireAllNonNull(index, updatePersonTagsDescriptor);","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"yucongkoo"},"content":"        assert updatePersonTagsDescriptor.hasTagToUpdate()","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"yucongkoo"},"content":"                : \"TagCommand expects an updatePersonTagsDescriptor that has tags to be updated\";","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"yucongkoo"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"yucongkoo"},"content":"        this.updatePersonTagsDescriptor \u003d new UpdatePersonTagsDescriptor(updatePersonTagsDescriptor);","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"yucongkoo"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"yucongkoo"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"yucongkoo"},"content":"        logger.fine(\"TagCommand executing...\");","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"yucongkoo"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"yucongkoo"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"yucongkoo"},"content":"            logger.finer(String.format(\"TagCommand execution failed due to index %d out of bound\",","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"yucongkoo"},"content":"                    index.getOneBased()));","lastModifiedDate":"2023-10-21"},{"lineNumber":73,"author":{"gitId":"yucongkoo"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"yucongkoo"},"content":"        if (updatePersonTagsDescriptor.containsCommonTagToAddAndDelete()) {","lastModifiedDate":"2023-10-20"},{"lineNumber":77,"author":{"gitId":"yucongkoo"},"content":"            logger.finer(\"TagCommand execution failed due to common tag in add and delete\");","lastModifiedDate":"2023-10-21"},{"lineNumber":78,"author":{"gitId":"yucongkoo"},"content":"            throw new CommandException(MESSAGE_COMMON_TAG_FAILURE);","lastModifiedDate":"2023-10-20"},{"lineNumber":79,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":80,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":81,"author":{"gitId":"yucongkoo"},"content":"        Person personToUpdate \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"yucongkoo"},"content":"        Person updatedPerson \u003d createPersonWithUpdatedTags(personToUpdate,","lastModifiedDate":"2023-10-20"},{"lineNumber":83,"author":{"gitId":"yucongkoo"},"content":"                updatePersonTagsDescriptor.getTagsToAdd(),","lastModifiedDate":"2023-10-20"},{"lineNumber":84,"author":{"gitId":"yucongkoo"},"content":"                updatePersonTagsDescriptor.getTagsToDelete());","lastModifiedDate":"2023-10-20"},{"lineNumber":85,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"yucongkoo"},"content":"        requireAllNonNull(personToUpdate, updatedPerson);","lastModifiedDate":"2023-10-21"},{"lineNumber":87,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":88,"author":{"gitId":"yucongkoo"},"content":"        if (updatedPerson.getTagsCount() \u003e MAXIMUM_TAGS_PER_PERSON) {","lastModifiedDate":"2023-10-20"},{"lineNumber":89,"author":{"gitId":"yucongkoo"},"content":"            logger.finer(\"TagCommand execution failed due to exceeding maximum tag counts allowed\");","lastModifiedDate":"2023-10-21"},{"lineNumber":90,"author":{"gitId":"yucongkoo"},"content":"            throw new CommandException(MESSAGE_TAG_COUNT_EXCEED);","lastModifiedDate":"2023-10-20"},{"lineNumber":91,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":92,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":93,"author":{"gitId":"yucongkoo"},"content":"        model.setPerson(personToUpdate, updatedPerson);","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"yucongkoo"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"yucongkoo"},"content":"        return new CommandResult(String.format(MESSAGE_TAG_PERSON_SUCCESS, Messages.format(updatedPerson)));","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"yucongkoo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"yucongkoo"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"yucongkoo"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"yucongkoo"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"yucongkoo"},"content":"        if (!(other instanceof TagCommand)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"yucongkoo"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"yucongkoo"},"content":"        TagCommand otherTagCommand \u003d (TagCommand) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"yucongkoo"},"content":"        return index.equals(otherTagCommand.index)","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"yucongkoo"},"content":"                \u0026\u0026 updatePersonTagsDescriptor.equals(otherTagCommand.updatePersonTagsDescriptor);","lastModifiedDate":"2023-10-20"},{"lineNumber":112,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":113,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":114,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":115,"author":{"gitId":"yucongkoo"},"content":"     * Stores the information of tags to add to and tags to delete from a person.","lastModifiedDate":"2023-10-20"},{"lineNumber":116,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":117,"author":{"gitId":"yucongkoo"},"content":"    public static class UpdatePersonTagsDescriptor {","lastModifiedDate":"2023-10-20"},{"lineNumber":118,"author":{"gitId":"yucongkoo"},"content":"        private Set\u003cTag\u003e tagsToAdd;","lastModifiedDate":"2023-10-20"},{"lineNumber":119,"author":{"gitId":"yucongkoo"},"content":"        private Set\u003cTag\u003e tagsToDelete;","lastModifiedDate":"2023-10-20"},{"lineNumber":120,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":121,"author":{"gitId":"yucongkoo"},"content":"        /**","lastModifiedDate":"2023-10-20"},{"lineNumber":122,"author":{"gitId":"yucongkoo"},"content":"         * Constructs a {@code UpdatePersonTagsDescriptor} with {@code tagsToAdd} and {@code tagsToDelete}.","lastModifiedDate":"2023-10-20"},{"lineNumber":123,"author":{"gitId":"yucongkoo"},"content":"         * A defensive copy of {@code tagsToAdd} and {@code tagsToDelete} is used internally.","lastModifiedDate":"2023-10-20"},{"lineNumber":124,"author":{"gitId":"yucongkoo"},"content":"         */","lastModifiedDate":"2023-10-20"},{"lineNumber":125,"author":{"gitId":"yucongkoo"},"content":"        public UpdatePersonTagsDescriptor(Set\u003cTag\u003e tagsToAdd, Set\u003cTag\u003e tagsToDelete) {","lastModifiedDate":"2023-10-20"},{"lineNumber":126,"author":{"gitId":"yucongkoo"},"content":"            requireAllNonNull(tagsToAdd, tagsToDelete);","lastModifiedDate":"2023-10-20"},{"lineNumber":127,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":128,"author":{"gitId":"yucongkoo"},"content":"            this.tagsToAdd \u003d new HashSet\u003c\u003e(tagsToAdd);","lastModifiedDate":"2023-10-20"},{"lineNumber":129,"author":{"gitId":"yucongkoo"},"content":"            this.tagsToDelete \u003d new HashSet\u003c\u003e(tagsToDelete);","lastModifiedDate":"2023-10-20"},{"lineNumber":130,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":131,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":132,"author":{"gitId":"yucongkoo"},"content":"        /**","lastModifiedDate":"2023-10-21"},{"lineNumber":133,"author":{"gitId":"yucongkoo"},"content":"         * Constructs a defensive copy of {@code toCopy}.","lastModifiedDate":"2023-10-21"},{"lineNumber":134,"author":{"gitId":"yucongkoo"},"content":"         */","lastModifiedDate":"2023-10-21"},{"lineNumber":135,"author":{"gitId":"yucongkoo"},"content":"        public UpdatePersonTagsDescriptor(UpdatePersonTagsDescriptor toCopy) {","lastModifiedDate":"2023-10-21"},{"lineNumber":136,"author":{"gitId":"yucongkoo"},"content":"            requireNonNull(toCopy);","lastModifiedDate":"2023-10-21"},{"lineNumber":137,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":138,"author":{"gitId":"yucongkoo"},"content":"            this.tagsToAdd \u003d new HashSet\u003c\u003e(toCopy.tagsToAdd);","lastModifiedDate":"2023-10-21"},{"lineNumber":139,"author":{"gitId":"yucongkoo"},"content":"            this.tagsToDelete \u003d new HashSet\u003c\u003e(toCopy.tagsToDelete);","lastModifiedDate":"2023-10-21"},{"lineNumber":140,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":141,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":142,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":143,"author":{"gitId":"yucongkoo"},"content":"        public void setTagsToAdd(Set\u003cTag\u003e tagsToAdd) {","lastModifiedDate":"2023-10-20"},{"lineNumber":144,"author":{"gitId":"yucongkoo"},"content":"            requireNonNull(tagsToAdd);","lastModifiedDate":"2023-10-20"},{"lineNumber":145,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":146,"author":{"gitId":"yucongkoo"},"content":"            this.tagsToAdd \u003d new HashSet\u003c\u003e(tagsToAdd);","lastModifiedDate":"2023-10-21"},{"lineNumber":147,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":148,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":149,"author":{"gitId":"yucongkoo"},"content":"        public void setTagsToDelete(Set\u003cTag\u003e tagsToDelete) {","lastModifiedDate":"2023-10-20"},{"lineNumber":150,"author":{"gitId":"yucongkoo"},"content":"            requireNonNull(tagsToDelete);","lastModifiedDate":"2023-10-20"},{"lineNumber":151,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":152,"author":{"gitId":"yucongkoo"},"content":"            this.tagsToDelete \u003d new HashSet\u003c\u003e(tagsToDelete);","lastModifiedDate":"2023-10-21"},{"lineNumber":153,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":154,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":155,"author":{"gitId":"yucongkoo"},"content":"        public Set\u003cTag\u003e getTagsToAdd() {","lastModifiedDate":"2023-10-20"},{"lineNumber":156,"author":{"gitId":"yucongkoo"},"content":"            return new HashSet\u003c\u003e(tagsToAdd);","lastModifiedDate":"2023-10-21"},{"lineNumber":157,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":158,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":159,"author":{"gitId":"yucongkoo"},"content":"        public Set\u003cTag\u003e getTagsToDelete() {","lastModifiedDate":"2023-10-20"},{"lineNumber":160,"author":{"gitId":"yucongkoo"},"content":"            return new HashSet\u003c\u003e(tagsToDelete);","lastModifiedDate":"2023-10-21"},{"lineNumber":161,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":162,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":163,"author":{"gitId":"yucongkoo"},"content":"        /**","lastModifiedDate":"2023-10-20"},{"lineNumber":164,"author":{"gitId":"yucongkoo"},"content":"         * Returns true if there is at least one tag to update.","lastModifiedDate":"2023-10-20"},{"lineNumber":165,"author":{"gitId":"yucongkoo"},"content":"         */","lastModifiedDate":"2023-10-20"},{"lineNumber":166,"author":{"gitId":"yucongkoo"},"content":"        public boolean hasTagToUpdate() {","lastModifiedDate":"2023-10-20"},{"lineNumber":167,"author":{"gitId":"yucongkoo"},"content":"            return !(tagsToAdd.isEmpty() \u0026\u0026 tagsToDelete.isEmpty());","lastModifiedDate":"2023-10-20"},{"lineNumber":168,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":169,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":170,"author":{"gitId":"yucongkoo"},"content":"        private boolean containsCommonTagToAddAndDelete() {","lastModifiedDate":"2023-10-20"},{"lineNumber":171,"author":{"gitId":"yucongkoo"},"content":"            Set\u003cTag\u003e intersectionSet \u003d new HashSet\u003c\u003e(tagsToAdd);","lastModifiedDate":"2023-10-20"},{"lineNumber":172,"author":{"gitId":"yucongkoo"},"content":"            intersectionSet.retainAll(tagsToDelete);","lastModifiedDate":"2023-10-20"},{"lineNumber":173,"author":{"gitId":"yucongkoo"},"content":"            return !intersectionSet.isEmpty();","lastModifiedDate":"2023-10-20"},{"lineNumber":174,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":175,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":176,"author":{"gitId":"yucongkoo"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":177,"author":{"gitId":"yucongkoo"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-10-20"},{"lineNumber":178,"author":{"gitId":"yucongkoo"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-20"},{"lineNumber":179,"author":{"gitId":"yucongkoo"},"content":"                return true;","lastModifiedDate":"2023-10-20"},{"lineNumber":180,"author":{"gitId":"yucongkoo"},"content":"            }","lastModifiedDate":"2023-10-20"},{"lineNumber":181,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":182,"author":{"gitId":"yucongkoo"},"content":"            if (!(other instanceof UpdatePersonTagsDescriptor)) {","lastModifiedDate":"2023-10-20"},{"lineNumber":183,"author":{"gitId":"yucongkoo"},"content":"                return false;","lastModifiedDate":"2023-10-20"},{"lineNumber":184,"author":{"gitId":"yucongkoo"},"content":"            }","lastModifiedDate":"2023-10-20"},{"lineNumber":185,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":186,"author":{"gitId":"yucongkoo"},"content":"            UpdatePersonTagsDescriptor otherUpdatePersonTagsDescriptor \u003d (UpdatePersonTagsDescriptor) other;","lastModifiedDate":"2023-10-20"},{"lineNumber":187,"author":{"gitId":"yucongkoo"},"content":"            return tagsToAdd.equals(otherUpdatePersonTagsDescriptor.tagsToAdd)","lastModifiedDate":"2023-10-20"},{"lineNumber":188,"author":{"gitId":"yucongkoo"},"content":"                    \u0026\u0026 tagsToDelete.equals(otherUpdatePersonTagsDescriptor.tagsToDelete);","lastModifiedDate":"2023-10-20"},{"lineNumber":189,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":190,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":191,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"yucongkoo":191}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.priority.Priority;","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG,","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"                        PREFIX_PRIORITY);","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2023-10-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"yucongkoo"},"content":"                PREFIX_PRIORITY);","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"yucongkoo"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).orElse(null));","lastModifiedDate":"2023-10-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"yucongkoo"},"content":"        Priority priority \u003d ParserUtil.parsePriority(argMultimap.getValue(PREFIX_PRIORITY)","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"yucongkoo"},"content":"                .orElse(Priority.NONE_PRIORITY_KEYWORD));","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"yucongkoo"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList, priority);","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"yucongkoo"},"content":"        requireAllNonNull(name, phone, email, address, tagList, person);","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"yucongkoo"},"content":"        requireAllNonNull(argumentMultimap, prefixes);","lastModifiedDate":"2023-10-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"yucongkoo":18,"-":57}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.logic.commands.PriorityCommand;","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.logic.commands.TagCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"Jweewee"},"content":"            return new ListCommandParser().parse(arguments);","lastModifiedDate":"2023-10-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":82,"author":{"gitId":"yucongkoo"},"content":"        case TagCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"yucongkoo"},"content":"            return new TagCommandParser().parse(arguments);","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"LamJiuFong"},"content":"        case PriorityCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-22"},{"lineNumber":86,"author":{"gitId":"LamJiuFong"},"content":"            return new PriorityCommandParser().parse(arguments);","lastModifiedDate":"2023-10-22"},{"lineNumber":87,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yucongkoo":4,"LamJiuFong":4,"-":85,"Jweewee":1}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMPTY;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-07-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"yucongkoo"},"content":"        return getValue(PREFIX_EMPTY).orElse(\"\");","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Throws a {@code ParseException} if any of the prefixes given in {@code prefixes} appeared more than","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * once among the arguments.","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void verifyNoDuplicatePrefixesFor(Prefix... prefixes) throws ParseException {","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Prefix[] duplicatedPrefixes \u003d Stream.of(prefixes).distinct()","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .filter(prefix -\u003e argMultimap.containsKey(prefix) \u0026\u0026 argMultimap.get(prefix).size() \u003e 1)","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .toArray(Prefix[]::new);","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (duplicatedPrefixes.length \u003e 0) {","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new ParseException(Messages.getErrorMessageForDuplicatePrefixes(duplicatedPrefixes));","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"yucongkoo":3,"-":77}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMPTY;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"yucongkoo"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(PREFIX_EMPTY, 0);","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"yucongkoo"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(PREFIX_EMPTY, argsString.length());","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"yucongkoo"},"content":"        int valueStartPos \u003d currentPrefixPosition.getEndPosition();","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"yucongkoo"},"content":"        int valueEndPos \u003d nextPrefixPosition.getStartPosition();","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"yucongkoo"},"content":"        String value \u003d argsString.substring(valueStartPos, valueEndPos);","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":148,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":149,"author":{"gitId":"yucongkoo"},"content":"        /**","lastModifiedDate":"2023-10-15"},{"lineNumber":150,"author":{"gitId":"yucongkoo"},"content":"         * Returns the end position of the prefix.","lastModifiedDate":"2023-10-15"},{"lineNumber":151,"author":{"gitId":"yucongkoo"},"content":"         */","lastModifiedDate":"2023-10-15"},{"lineNumber":152,"author":{"gitId":"yucongkoo"},"content":"        int getEndPosition() {","lastModifiedDate":"2023-10-15"},{"lineNumber":153,"author":{"gitId":"yucongkoo"},"content":"            return startPosition + prefix.getPrefixLength();","lastModifiedDate":"2023-10-15"},{"lineNumber":154,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"yucongkoo":15,"-":142}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"    public static final Prefix PREFIX_EMPTY \u003d new Prefix(\"\");","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"    public static final Prefix PREFIX_ADD_TAG \u003d new Prefix(\"at/\");","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"    public static final Prefix PREFIX_DELETE_TAG \u003d new Prefix(\"dt/\");","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"LamJiuFong"},"content":"    public static final Prefix PREFIX_PRIORITY \u003d new Prefix(\"pr/\");","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"yucongkoo":3,"LamJiuFong":1,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.EditCommand.MESSAGE_INVALID_PREFIX_MAP;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"LamJiuFong"},"content":" * Parses input arguments and creates a new EditCommand object.","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"LamJiuFong"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":32,"author":{"gitId":"LamJiuFong"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG,","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"LamJiuFong"},"content":"                        PREFIX_PRIORITY);","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"LamJiuFong"},"content":"        checkIsPresent(argMultimap, PREFIX_TAG, PREFIX_PRIORITY);","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-07-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"LamJiuFong"},"content":"    private void checkIsPresent(ArgumentMultimap argMultimap, Prefix... prefixes) throws ParseException {","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"LamJiuFong"},"content":"        String exceptionMessage \u003d \"\";","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"LamJiuFong"},"content":"        boolean hasInvalidPrefix \u003d false;","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"LamJiuFong"},"content":"        for (Prefix targetPrefix : prefixes) {","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"LamJiuFong"},"content":"            if (argMultimap.getValue(targetPrefix).isPresent()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"LamJiuFong"},"content":"                exceptionMessage +\u003d MESSAGE_INVALID_PREFIX_MAP.get(targetPrefix) + \"\\n\";","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"LamJiuFong"},"content":"                hasInvalidPrefix \u003d true;","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"LamJiuFong"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"LamJiuFong"},"content":"        if (hasInvalidPrefix) {","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"LamJiuFong"},"content":"            throw new ParseException(exceptionMessage);","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"LamJiuFong":21,"-":62}},{"path":"src/main/java/seedu/address/logic/parser/ListCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":" * Parses input arguments and creates a new ListCommand object","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"public class ListCommandParser implements Parser\u003cListCommand\u003e {","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"     * Parses the given {@code String} of arguments in the context of the ListCommand","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":"     * and returns a ListCommand object for execution.","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"    public ListCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":"        if (!args.isEmpty()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":"            throw new ParseException(ListCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"Jweewee"},"content":"        return new ListCommand();","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"Jweewee":25}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.model.priority.Priority.isValidPriority;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.person.EmptyAddress;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.person.NonEmptyAddress;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.priority.Priority;","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"yucongkoo"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2023-10-08"},{"lineNumber":80,"author":{"gitId":"yucongkoo"},"content":"            return EmptyAddress.getEmptyAddress();","lastModifiedDate":"2023-10-21"},{"lineNumber":81,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":82,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"yucongkoo"},"content":"        if (!NonEmptyAddress.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"yucongkoo"},"content":"            throw new ParseException(NonEmptyAddress.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"yucongkoo"},"content":"        return new NonEmptyAddress(trimmedAddress);","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":132,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":133,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":134,"author":{"gitId":"yucongkoo"},"content":"     * Parses a {@code String priority} into a {@code Priority}.","lastModifiedDate":"2023-10-24"},{"lineNumber":135,"author":{"gitId":"yucongkoo"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-24"},{"lineNumber":136,"author":{"gitId":"yucongkoo"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":137,"author":{"gitId":"yucongkoo"},"content":"     * @throws ParseException if the given {@code priority} is invalid.","lastModifiedDate":"2023-10-24"},{"lineNumber":138,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":139,"author":{"gitId":"yucongkoo"},"content":"    public static Priority parsePriority(String priority) throws ParseException {","lastModifiedDate":"2023-10-24"},{"lineNumber":140,"author":{"gitId":"yucongkoo"},"content":"        requireNonNull(priority);","lastModifiedDate":"2023-10-24"},{"lineNumber":141,"author":{"gitId":"yucongkoo"},"content":"        String trimmedPriority \u003d priority.trim();","lastModifiedDate":"2023-10-24"},{"lineNumber":142,"author":{"gitId":"yucongkoo"},"content":"        if (!isValidPriority(trimmedPriority)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":143,"author":{"gitId":"yucongkoo"},"content":"            throw new ParseException((Priority.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2023-10-24"},{"lineNumber":144,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":145,"author":{"gitId":"yucongkoo"},"content":"        return new Priority(trimmedPriority);","lastModifiedDate":"2023-10-24"},{"lineNumber":146,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"yucongkoo":26,"-":121}},{"path":"src/main/java/seedu/address/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"     * Returns the length of the prefix.","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"    public int getPrefixLength() {","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"        return prefix.length();","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!(other instanceof Prefix)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return prefix.equals(otherPrefix.prefix);","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"yucongkoo":7,"-":42}},{"path":"src/main/java/seedu/address/logic/parser/PriorityCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LamJiuFong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"LamJiuFong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.logic.commands.PriorityCommand;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.priority.Priority;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"LamJiuFong"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":" * Parses input arguments and creates a new PriorityCommand object.","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"LamJiuFong"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"LamJiuFong"},"content":"public class PriorityCommandParser implements Parser\u003cPriorityCommand\u003e {","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"LamJiuFong"},"content":"     * Parses the given {@code String} of arguments in the context of the ParserCommand","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"LamJiuFong"},"content":"     * and returns a ParserCommand object for execution.","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"LamJiuFong"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"LamJiuFong"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"LamJiuFong"},"content":"    public PriorityCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"LamJiuFong"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"LamJiuFong"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"LamJiuFong"},"content":"        String[] separatedArgs \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"LamJiuFong"},"content":"        Index index;","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"LamJiuFong"},"content":"            index \u003d ParserUtil.parseIndex(separatedArgs[0]);","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"LamJiuFong"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"LamJiuFong"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"LamJiuFong"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, PriorityCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"LamJiuFong"},"content":"        if (separatedArgs.length !\u003d 2) {","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"LamJiuFong"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"LamJiuFong"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, PriorityCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"LamJiuFong"},"content":"        Priority priority \u003d ParserUtil.parsePriority(separatedArgs[1]);","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"LamJiuFong"},"content":"        return new PriorityCommand(index, priority);","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"LamJiuFong"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"LamJiuFong":46}},{"path":"src/main/java/seedu/address/logic/parser/TagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_TAG;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DELETE_TAG;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"import java.util.Collection;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.logic.commands.TagCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.logic.commands.TagCommand.UpdatePersonTagsDescriptor;","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":" * Parses input arguments and creates a new TagCommand object","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"public class TagCommandParser implements Parser\u003cTagCommand\u003e {","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(TagCommandParser.class);","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"     * Parses the given {@code String} of arguments in the context of the TagCommand","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"     * and returns a TagCommand object for execution.","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"    public TagCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"        logger.fine(\"TagCommandParser parsing: \" + args);","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ADD_TAG, PREFIX_DELETE_TAG);","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"        Index index;","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"            logger.finer(\"TagCommandParser parse failed due to invalid index: \" + argMultimap.getPreamble());","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, TagCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"yucongkoo"},"content":"        Set\u003cTag\u003e tagsToAdd \u003d parseTags(argMultimap.getAllValues(PREFIX_ADD_TAG)).orElse(new HashSet\u003c\u003e());","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"yucongkoo"},"content":"        Set\u003cTag\u003e tagsToDelete \u003d parseTags(argMultimap.getAllValues(PREFIX_DELETE_TAG)).orElse(new HashSet\u003c\u003e());","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"yucongkoo"},"content":"        UpdatePersonTagsDescriptor updatePersonTagsDescriptor \u003d new UpdatePersonTagsDescriptor(tagsToAdd, tagsToDelete);","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"yucongkoo"},"content":"        if (!updatePersonTagsDescriptor.hasTagToUpdate()) {","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"yucongkoo"},"content":"            logger.finer(\"TagCommandParser parse failed due to missing tags to update\");","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"yucongkoo"},"content":"            throw new ParseException(TagCommand.MESSAGE_NOT_UPDATED);","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"yucongkoo"},"content":"        return new TagCommand(index, updatePersonTagsDescriptor);","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"yucongkoo"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"yucongkoo"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"yucongkoo"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"yucongkoo"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"yucongkoo"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"yucongkoo"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"yucongkoo"},"content":"            return Optional.empty();","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"yucongkoo"},"content":"        return Optional.of(ParserUtil.parseTags(tags));","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"yucongkoo":75}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"Jweewee"},"content":"     * Returns the size of the current filtered list.","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"Jweewee"},"content":"    int getFilteredPersonListSize();","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":87,"Jweewee":5}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":131,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"yucongkoo"},"content":"    public int getFilteredPersonListSize() {","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"yucongkoo"},"content":"        return filteredPersons.size();","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yucongkoo":5,"-":148}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"public abstract class Address {","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"     * Returns true if this instance is an empty address.","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"    public abstract boolean isEmptyAddress();","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"     * Returns the address value.","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"    public abstract String getValue();","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yucongkoo":5,"-":13}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"TehOPanas"},"content":"            + \"1.The email address should contain at least one character in the local part, \"","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"TehOPanas"},"content":"            + \"consisting of letters (both uppercase and lowercase), digits, \"","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"TehOPanas"},"content":"            + \"underscores, and certain special characters including +, \u0026, *, and -.\\n\"","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"TehOPanas"},"content":"            + \"2. The \\\"@\\\" symbol is required to separate the local part from the domain part.\\n\"","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"TehOPanas"},"content":"            + \"3. The domain part of the email address should consist of at \"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"TehOPanas"},"content":"            + \"least one domain label (excluding top-level domain), consisting of alphanumeric characters and -. \\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"TehOPanas"},"content":"            + \"4. The top-level domain (TLD) of the email address should consist of letters (uppercase or lowercase) \"","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"TehOPanas"},"content":"            + \"and have a length of between 2 and 7 characters.\\n\";","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"TehOPanas"},"content":"    private static final String OWASP_EMAIL_VALIDATION \u003d \"^[a-zA-Z0-9_+\u0026*-]+(?:\\\\.[a-zA-Z0-9_+\u0026*-]+)*@\"","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"TehOPanas"},"content":"            + \"(?:[a-zA-Z0-9-]+\\\\.)+[a-zA-Z]{2,7}\";","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"TehOPanas"},"content":"    public static final String VALIDATION_REGEX \u003d OWASP_EMAIL_VALIDATION;","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":44,"author":{"gitId":"TehOPanas"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"TehOPanas"},"content":"     * The format of email follows the OWASP email validation rule :","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"TehOPanas"},"content":"     * 1. The email address should contain at least one character in the local part,","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"TehOPanas"},"content":"     *    consisting of letters (both uppercase and lowercase), digits, underscores,","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"TehOPanas"},"content":"     *    and certain special characters including +, \u0026, *, and -.","lastModifiedDate":"2023-10-11"},{"lineNumber":49,"author":{"gitId":"TehOPanas"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"TehOPanas"},"content":"     * 2. The \"@\" symbol is required to separate the local part from the domain part.","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"TehOPanas"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":52,"author":{"gitId":"TehOPanas"},"content":"     * 3. The domain part of the email address should consist of at least one domain label,","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"TehOPanas"},"content":"     *    with each label containing letters, digits, and hyphens, and separated by periods.","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"TehOPanas"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"TehOPanas"},"content":"     * 4. The top-level domain (TLD) of the email address should consist of letters (uppercase or lowercase)","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"TehOPanas"},"content":"     *    and have a length of between 2 and 7 characters.","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return value.equals(otherEmail.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"TehOPanas":26,"-":61}},{"path":"src/main/java/seedu/address/model/person/EmptyAddress.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":" * Represents a Person\u0027s empty address in the address book as a singleton.","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"public class EmptyAddress extends Address {","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"    public static final String DUMMY_VALUE_FOR_EMPTY_ADDRESS \u003d \"-\";","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"    private static EmptyAddress emptyAddress;","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"    // make constructor private","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"    private EmptyAddress() {","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"     * Returns the singleton instance of {@code EmptyAddress}.","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"    public static EmptyAddress getEmptyAddress() {","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"        if (emptyAddress \u003d\u003d null) {","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"            emptyAddress \u003d new EmptyAddress();","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"        return emptyAddress;","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-10-08"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"    public boolean isEmptyAddress() {","lastModifiedDate":"2023-10-08"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"        return true;","lastModifiedDate":"2023-10-08"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"    public String getValue() {","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"        return DUMMY_VALUE_FOR_EMPTY_ADDRESS;","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-10-08"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-08"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"        return other \u003d\u003d this;","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"        return DUMMY_VALUE_FOR_EMPTY_ADDRESS;","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"yucongkoo":48}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"TehOPanas"},"content":"            \"Names should only contain alphanumeric characters,\"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"TehOPanas"},"content":"                    + \" and it should not be blank nor longer than 64 characters\";","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":37,"author":{"gitId":"TehOPanas"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"TehOPanas"},"content":"     * The name is only valid if the first character is not empty space and","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"TehOPanas"},"content":"     * the total length is not larger than 64 characters.","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"TehOPanas"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 test.length() \u003c\u003d 64;","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return fullName.equals(otherName.fullName);","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"songfangyl"},"content":"     * Checks if the full name contains a word that starts with the given prefix, ignoring case.","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"songfangyl"},"content":"     * @param prefix The prefix to search for.","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"songfangyl"},"content":"     * @return True if any word in the full name starts with the specified prefix, false otherwise.","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"songfangyl"},"content":"    public static boolean isFullNameContainsPrefix(Name name, String prefix) {","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"songfangyl"},"content":"        String lowerFullName \u003d name.fullName.toLowerCase();","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"songfangyl"},"content":"        String lowerPrefix \u003d prefix.toLowerCase();","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"songfangyl"},"content":"        for (String lowerName: lowerFullName.split(\"\\\\s+\")) {","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"songfangyl"},"content":"            if (lowerName.startsWith(lowerPrefix)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"songfangyl"},"content":"                return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"songfangyl"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"songfangyl"},"content":"        return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"TehOPanas":6,"songfangyl":17,"-":65}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"        if (keywords.isEmpty()) {","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"            return false;","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"                .allMatch(keyword -\u003e Name.isFullNameContainsPrefix(person.getName(), keyword));","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"songfangyl":4,"-":42}},{"path":"src/main/java/seedu/address/model/person/NonEmptyAddress.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":" * Represents a Person\u0027s non-empty address in the address book.","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"public class NonEmptyAddress extends Address {","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"    /*","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"    private final String value;","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"     * Constructs an {@code NonEmptyAddress}.","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"     * @param address A valid address.","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"    public NonEmptyAddress(String address) {","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"        requireNonNull(address);","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"        value \u003d address;","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"    public boolean isEmptyAddress() {","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"        return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"yucongkoo"},"content":"    public String getValue() {","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"        return value;","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"yucongkoo"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"yucongkoo"},"content":"        return value;","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"yucongkoo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"yucongkoo"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"yucongkoo"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"yucongkoo"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"yucongkoo"},"content":"        if (!(other instanceof NonEmptyAddress)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"yucongkoo"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"yucongkoo"},"content":"        NonEmptyAddress otherAddress \u003d (NonEmptyAddress) other;","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"yucongkoo"},"content":"        return value.equals(otherAddress.value);","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"yucongkoo"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"yucongkoo"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"yucongkoo":75}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"import java.util.Collection;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.priority.Priority;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":29,"author":{"gitId":"LamJiuFong"},"content":"    private final Priority priority;","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":41,"author":{"gitId":"LamJiuFong"},"content":"        this.priority \u003d new Priority(Priority.NONE_PRIORITY_KEYWORD);","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"LamJiuFong"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"LamJiuFong"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags, Priority priority) {","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"LamJiuFong"},"content":"        requireAllNonNull(name, phone, email, address, tags, priority);","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"LamJiuFong"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"LamJiuFong"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"LamJiuFong"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"LamJiuFong"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"LamJiuFong"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"LamJiuFong"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":73,"author":{"gitId":"LamJiuFong"},"content":"    public Priority getPriority() {","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"LamJiuFong"},"content":"        return priority;","lastModifiedDate":"2023-10-22"},{"lineNumber":75,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":86,"author":{"gitId":"yucongkoo"},"content":"     * Returns the number of tags assigned to this person.","lastModifiedDate":"2023-10-20"},{"lineNumber":87,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":88,"author":{"gitId":"yucongkoo"},"content":"    public int getTagsCount() {","lastModifiedDate":"2023-10-20"},{"lineNumber":89,"author":{"gitId":"yucongkoo"},"content":"        return tags.size();","lastModifiedDate":"2023-10-20"},{"lineNumber":90,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":91,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"yucongkoo"},"content":"     * Creates and returns a {@code Person} with details of {@code source}, adding tags in {@code tagsToAdd} and","lastModifiedDate":"2023-10-20"},{"lineNumber":107,"author":{"gitId":"yucongkoo"},"content":"     * removing tags in {@code tagsToDelete}.","lastModifiedDate":"2023-10-20"},{"lineNumber":108,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"yucongkoo"},"content":"    public static Person createPersonWithUpdatedTags(Person source,","lastModifiedDate":"2023-10-20"},{"lineNumber":110,"author":{"gitId":"yucongkoo"},"content":"            Collection\u003cTag\u003e tagsToAdd,","lastModifiedDate":"2023-10-20"},{"lineNumber":111,"author":{"gitId":"yucongkoo"},"content":"            Collection\u003cTag\u003e tagsToDelete) {","lastModifiedDate":"2023-10-20"},{"lineNumber":112,"author":{"gitId":"yucongkoo"},"content":"        requireAllNonNull(source, tagsToAdd, tagsToDelete);","lastModifiedDate":"2023-10-20"},{"lineNumber":113,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":114,"author":{"gitId":"yucongkoo"},"content":"        Set\u003cTag\u003e updatedTags \u003d new HashSet\u003c\u003e(source.tags);","lastModifiedDate":"2023-10-20"},{"lineNumber":115,"author":{"gitId":"yucongkoo"},"content":"        updatedTags.removeAll(tagsToDelete);","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"yucongkoo"},"content":"        updatedTags.addAll(tagsToAdd);","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"LamJiuFong"},"content":"        return new Person(source.name, source.phone, source.email, source.address, updatedTags, source.priority);","lastModifiedDate":"2023-10-22"},{"lineNumber":119,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":120,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":121,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":122,"author":{"gitId":"LamJiuFong"},"content":"     * Creates and returns a {@code Person} with details of {@code source}, assigning priority of","lastModifiedDate":"2023-10-22"},{"lineNumber":123,"author":{"gitId":"LamJiuFong"},"content":"     * {@code newPriority}.","lastModifiedDate":"2023-10-22"},{"lineNumber":124,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":125,"author":{"gitId":"LamJiuFong"},"content":"    public static Person createPersonWithUpdatedPriority(Person source, Priority newPriority) {","lastModifiedDate":"2023-10-23"},{"lineNumber":126,"author":{"gitId":"LamJiuFong"},"content":"        requireAllNonNull(source, newPriority);","lastModifiedDate":"2023-10-23"},{"lineNumber":127,"author":{"gitId":"LamJiuFong"},"content":"        return new Person(source.name, source.phone, source.email, source.address, source.tags, newPriority);","lastModifiedDate":"2023-10-22"},{"lineNumber":128,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":131,"author":{"gitId":"LamJiuFong"},"content":"     * Returns true is the Person has the same priority as {@code priority}.","lastModifiedDate":"2023-10-24"},{"lineNumber":132,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":133,"author":{"gitId":"LamJiuFong"},"content":"    public boolean hasSamePriority(Priority priority) {","lastModifiedDate":"2023-10-24"},{"lineNumber":134,"author":{"gitId":"LamJiuFong"},"content":"        return this.priority.equals(priority);","lastModifiedDate":"2023-10-24"},{"lineNumber":135,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":136,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":157,"author":{"gitId":"LamJiuFong"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags)","lastModifiedDate":"2023-10-22"},{"lineNumber":158,"author":{"gitId":"LamJiuFong"},"content":"                \u0026\u0026 priority.equals(otherPerson.priority);","lastModifiedDate":"2023-10-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":164,"author":{"gitId":"LamJiuFong"},"content":"        return Objects.hash(name, phone, email, address, tags, priority);","lastModifiedDate":"2023-10-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":175,"author":{"gitId":"LamJiuFong"},"content":"                .add(\"priority\", priority)","lastModifiedDate":"2023-10-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yucongkoo":23,"LamJiuFong":41,"-":114}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"TehOPanas"},"content":"            \"Phone numbers should only contain numbers, and it should be 8 digits long\";","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"TehOPanas"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{8}\";","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"TehOPanas"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"TehOPanas"},"content":"     * The phone number has to be 8 digits (Singapore number)","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"TehOPanas":4,"-":59}},{"path":"src/main/java/seedu/address/model/priority/Priority.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LamJiuFong"},"content":"package seedu.address.model.priority;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"LamJiuFong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"LamJiuFong"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"LamJiuFong"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"LamJiuFong"},"content":"/** Represents a Person\u0027s priority level. **/","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"LamJiuFong"},"content":"public class Priority {","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"LamJiuFong"},"content":"    /** Possible priorities level. **/","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":"    public enum Level { HIGH, MEDIUM, LOW, NONE };","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"LamJiuFong"},"content":"    public static final String HIGH_PRIORITY_KEYWORD \u003d \"high\";","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"LamJiuFong"},"content":"    public static final String MEDIUM_PRIORITY_KEYWORD \u003d \"medium\";","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"LamJiuFong"},"content":"    public static final String LOW_PRIORITY_KEYWORD \u003d \"low\";","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"LamJiuFong"},"content":"    public static final String NONE_PRIORITY_KEYWORD \u003d \"-\";","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"LamJiuFong"},"content":"    public static final HashSet\u003cString\u003e VALID_PRIORITY_KEYWORDS \u003d new HashSet\u003c\u003e() {","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"LamJiuFong"},"content":"        {","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"LamJiuFong"},"content":"            add(HIGH_PRIORITY_KEYWORD);","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"LamJiuFong"},"content":"            add(MEDIUM_PRIORITY_KEYWORD);","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"LamJiuFong"},"content":"            add(LOW_PRIORITY_KEYWORD);","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"LamJiuFong"},"content":"            add(NONE_PRIORITY_KEYWORD);","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"LamJiuFong"},"content":"    };","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"LamJiuFong"},"content":"    public static final HashMap\u003cLevel, String\u003e LEVEL_STRING_MAP \u003d new HashMap\u003c\u003e() {","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"LamJiuFong"},"content":"        {","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"LamJiuFong"},"content":"            put(Level.HIGH, HIGH_PRIORITY_KEYWORD);","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"LamJiuFong"},"content":"            put(Level.MEDIUM, MEDIUM_PRIORITY_KEYWORD);","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"LamJiuFong"},"content":"            put(Level.LOW, LOW_PRIORITY_KEYWORD);","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"LamJiuFong"},"content":"            put(Level.NONE, NONE_PRIORITY_KEYWORD);","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"LamJiuFong"},"content":"    };","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"LamJiuFong"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Priority levels should only be one of: { \"","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"LamJiuFong"},"content":"        + HIGH_PRIORITY_KEYWORD + \" \" + MEDIUM_PRIORITY_KEYWORD + \" \" + LOW_PRIORITY_KEYWORD + \" }\";","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"LamJiuFong"},"content":"    private Level level;","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"LamJiuFong"},"content":"     * Constructs a {@code Priority}.","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"LamJiuFong"},"content":"     * @param priority A valid priority.","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"LamJiuFong"},"content":"    public Priority(String priority) {","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"LamJiuFong"},"content":"        requireNonNull(priority);","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"LamJiuFong"},"content":"        checkArgument(isValidPriority(priority), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"LamJiuFong"},"content":"        assignPriorityLevel(priority);","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"LamJiuFong"},"content":"    private void assignPriorityLevel(String priority) {","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"LamJiuFong"},"content":"        switch (priority) {","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"LamJiuFong"},"content":"        case HIGH_PRIORITY_KEYWORD:","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"LamJiuFong"},"content":"            this.level \u003d Level.HIGH;","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"LamJiuFong"},"content":"            break;","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"LamJiuFong"},"content":"        case MEDIUM_PRIORITY_KEYWORD:","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"LamJiuFong"},"content":"            this.level \u003d Level.MEDIUM;","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"LamJiuFong"},"content":"            break;","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"LamJiuFong"},"content":"        case LOW_PRIORITY_KEYWORD:","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"LamJiuFong"},"content":"            this.level \u003d Level.LOW;","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"LamJiuFong"},"content":"            break;","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"LamJiuFong"},"content":"        default:","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"LamJiuFong"},"content":"            this.level \u003d Level.NONE;","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"LamJiuFong"},"content":"     * Checks if the priority given is valid.","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"LamJiuFong"},"content":"     * @param priority to check.","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"LamJiuFong"},"content":"    public static boolean isValidPriority(String priority) {","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"LamJiuFong"},"content":"        return VALID_PRIORITY_KEYWORDS.contains(priority);","lastModifiedDate":"2023-10-23"},{"lineNumber":75,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":77,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":78,"author":{"gitId":"LamJiuFong"},"content":"     * Returns priority level.","lastModifiedDate":"2023-10-22"},{"lineNumber":79,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"LamJiuFong"},"content":"    public Level getPriorityLevel() {","lastModifiedDate":"2023-10-23"},{"lineNumber":81,"author":{"gitId":"LamJiuFong"},"content":"        return this.level;","lastModifiedDate":"2023-10-22"},{"lineNumber":82,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":83,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":84,"author":{"gitId":"LamJiuFong"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":85,"author":{"gitId":"LamJiuFong"},"content":"    public String toString() {","lastModifiedDate":"2023-10-22"},{"lineNumber":86,"author":{"gitId":"LamJiuFong"},"content":"        return LEVEL_STRING_MAP.get(this.level);","lastModifiedDate":"2023-10-23"},{"lineNumber":87,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":88,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":89,"author":{"gitId":"LamJiuFong"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":90,"author":{"gitId":"LamJiuFong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-22"},{"lineNumber":91,"author":{"gitId":"LamJiuFong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-22"},{"lineNumber":92,"author":{"gitId":"LamJiuFong"},"content":"            return true;","lastModifiedDate":"2023-10-22"},{"lineNumber":93,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":94,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":95,"author":{"gitId":"LamJiuFong"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-22"},{"lineNumber":96,"author":{"gitId":"LamJiuFong"},"content":"        if (!(other instanceof Priority)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":97,"author":{"gitId":"LamJiuFong"},"content":"            return false;","lastModifiedDate":"2023-10-22"},{"lineNumber":98,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":99,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":100,"author":{"gitId":"LamJiuFong"},"content":"        Priority otherPriority \u003d (Priority) other;","lastModifiedDate":"2023-10-22"},{"lineNumber":101,"author":{"gitId":"LamJiuFong"},"content":"        return level.equals(otherPriority.level);","lastModifiedDate":"2023-10-22"},{"lineNumber":102,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":103,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":104,"author":{"gitId":"LamJiuFong"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":105,"author":{"gitId":"LamJiuFong"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-22"},{"lineNumber":106,"author":{"gitId":"LamJiuFong"},"content":"        return level.hashCode();","lastModifiedDate":"2023-10-22"},{"lineNumber":107,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":108,"author":{"gitId":"LamJiuFong"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"LamJiuFong":108}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"            \"Tags names should be alphanumeric and should not be longer than 20 characters.\";","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+(\\\\s+\\\\p{Alnum}+)*\";","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"    public static final int MAXIMUM_TAG_LENGTH \u003d 20;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"    public static final int MAXIMUM_TAGS_PER_PERSON \u003d 10;","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"    private final String tagName;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"        String trimmedTagName \u003d tagName.trim();","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"        checkArgument(isValidTagName(trimmedTagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"        this.tagName \u003d trimmedTagName;","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"    public String getTagName() {","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"        return tagName;","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"        requireNonNull(test);","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"        return test.length() \u003c\u003d MAXIMUM_TAG_LENGTH \u0026\u0026 test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return tagName.equals(otherTag.tagName);","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yucongkoo":13,"-":58}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.person.NonEmptyAddress;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"                new NonEmptyAddress(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"                new NonEmptyAddress(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"                new NonEmptyAddress(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"                new NonEmptyAddress(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"                new NonEmptyAddress(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"                new NonEmptyAddress(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"yucongkoo":7,"-":53}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.storage.jsonadaptedperson.JsonAdaptedPerson;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"yucongkoo":1,"-":60}},{"path":"src/main/java/seedu/address/storage/jsonadaptedperson/JsonAdaptedAddress.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package seedu.address.storage.jsonadaptedperson;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.person.EmptyAddress;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.person.NonEmptyAddress;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":" * Jackson-friendly version of {@link Address}.","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"class JsonAdaptedAddress {","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"    private final String value;","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"    private final boolean isEmptyAddress;","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"     * Constructs a {@code JsonAdaptedAddress} with the given {@code value} and {@code isEmptyAddress}.","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"    public JsonAdaptedAddress(@JsonProperty(\"value\") String value,","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"            @JsonProperty(\"isEmptyAddress\") boolean isEmptyAddress) {","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"        this.isEmptyAddress \u003d isEmptyAddress;","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"     * Converts a given {@code Address} into this class for Jackson use.","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"    public JsonAdaptedAddress(Address address) {","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"        requireNonNull(address);","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"        value \u003d address.getValue();","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"        isEmptyAddress \u003d address.isEmptyAddress();","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"     * Converts this Jackson-friendly adapted address object into the model\u0027s {@code Address} object.","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted address.","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"    public Address toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"yucongkoo"},"content":"        if (isEmptyAddress) {","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"            return EmptyAddress.getEmptyAddress();","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"yucongkoo"},"content":"        if (!NonEmptyAddress.isValidAddress(value)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"yucongkoo"},"content":"            throw new IllegalValueException(NonEmptyAddress.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"yucongkoo"},"content":"        return new NonEmptyAddress(value);","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"yucongkoo":58}},{"path":"src/main/java/seedu/address/storage/jsonadaptedperson/JsonAdaptedEmail.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package seedu.address.storage.jsonadaptedperson;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":" * Jackson-friendly version of {@link Email}.","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"class JsonAdaptedEmail {","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"    private final String value;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"     * Constructs a {@code JsonAdaptedEmail} with the given {@code value}.","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"    public JsonAdaptedEmail(@JsonProperty(\"value\") String value) {","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"     * Converts a given {@code Email} into this class for Jackson use.","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"    public JsonAdaptedEmail(Email email) {","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"        requireNonNull(email);","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"        value \u003d email.value;","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"     * Converts this Jackson-friendly adapted email object into the model\u0027s {@code Email} object.","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted email.","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"    public Email toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"        if (!Email.isValidEmail(value)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"        return new Email(value);","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"yucongkoo":46}},{"path":"src/main/java/seedu/address/storage/jsonadaptedperson/JsonAdaptedName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package seedu.address.storage.jsonadaptedperson;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":" * Jackson-friendly version of {@link Name}.","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"class JsonAdaptedName {","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"    private final String value;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"     * Constructs a {@code JsonAdaptedName} with the given {@code value}.","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"    public JsonAdaptedName(@JsonProperty(\"value\") String value) {","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"     * Converts a given {@code Name} into this class for Jackson use.","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"    public JsonAdaptedName(Name name) {","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"        value \u003d name.fullName;","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"     * Converts this Jackson-friendly adapted name object into the model\u0027s {@code Name} object.","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted name.","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"    public Name toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"        if (!Name.isValidName(value)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"        return new Name(value);","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"yucongkoo":46}},{"path":"src/main/java/seedu/address/storage/jsonadaptedperson/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package seedu.address.storage.jsonadaptedperson;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.priority.Priority;","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"public class JsonAdaptedPerson {","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"    private final JsonAdaptedName name;","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"    private final JsonAdaptedPhone phone;","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"    private final JsonAdaptedEmail email;","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"    private final JsonAdaptedAddress address;","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"    private final JsonAdaptedPriority priority;","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") JsonAdaptedName name,","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"                             @JsonProperty(\"phone\") JsonAdaptedPhone phone,","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"                             @JsonProperty(\"email\") JsonAdaptedEmail email,","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"                             @JsonProperty(\"address\") JsonAdaptedAddress address,","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"                             @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags,","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"                             @JsonProperty(\"priority\") JsonAdaptedPriority priority) {","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"yucongkoo"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"yucongkoo"},"content":"        requireNonNull(source);","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"yucongkoo"},"content":"        name \u003d new JsonAdaptedName(source.getName());","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"yucongkoo"},"content":"        phone \u003d new JsonAdaptedPhone(source.getPhone());","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"yucongkoo"},"content":"        email \u003d new JsonAdaptedEmail(source.getEmail());","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"yucongkoo"},"content":"        address \u003d new JsonAdaptedAddress(source.getAddress());","lastModifiedDate":"2023-10-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"yucongkoo"},"content":"        priority \u003d new JsonAdaptedPriority(source.getPriority());","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"yucongkoo"},"content":"        return new Person(getModelName(), getModelPhone(), getModelEmail(), getModelAddress(), getModelTags(),","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"yucongkoo"},"content":"                getModelPriority());","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"yucongkoo"},"content":"    private Name getModelName() throws IllegalValueException {","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"yucongkoo"},"content":"        return name.toModelType();","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"yucongkoo"},"content":"    private Phone getModelPhone() throws IllegalValueException {","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"yucongkoo"},"content":"        return phone.toModelType();","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"yucongkoo"},"content":"    private Email getModelEmail() throws IllegalValueException {","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"yucongkoo"},"content":"        return email.toModelType();","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"yucongkoo"},"content":"    private Address getModelAddress() throws IllegalValueException {","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"yucongkoo"},"content":"        return address.toModelType();","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"yucongkoo"},"content":"    private Set\u003cTag\u003e getModelTags() throws IllegalValueException {","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"yucongkoo"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"yucongkoo"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"yucongkoo"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2023-10-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"yucongkoo"},"content":"        return new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2023-10-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":120,"author":{"gitId":"yucongkoo"},"content":"    private Priority getModelPriority() throws IllegalValueException {","lastModifiedDate":"2023-10-24"},{"lineNumber":121,"author":{"gitId":"yucongkoo"},"content":"        if (priority \u003d\u003d null) {","lastModifiedDate":"2023-10-24"},{"lineNumber":122,"author":{"gitId":"yucongkoo"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-24"},{"lineNumber":123,"author":{"gitId":"yucongkoo"},"content":"                    Priority.class.getSimpleName()));","lastModifiedDate":"2023-10-24"},{"lineNumber":124,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":125,"author":{"gitId":"yucongkoo"},"content":"        return priority.toModelType();","lastModifiedDate":"2023-10-24"},{"lineNumber":126,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"yucongkoo":46,"-":81}},{"path":"src/main/java/seedu/address/storage/jsonadaptedperson/JsonAdaptedPhone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package seedu.address.storage.jsonadaptedperson;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":" * Jackson-friendly version of {@link Phone}.","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"class JsonAdaptedPhone {","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"    private final String value;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"     * Constructs a {@code JsonAdaptedPhone} with the given {@code value}.","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"    public JsonAdaptedPhone(@JsonProperty(\"value\") String value) {","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"     * Converts a given {@code Phone} into this class for Jackson use.","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"    public JsonAdaptedPhone(Phone phone) {","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"        requireNonNull(phone);","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"        value \u003d phone.value;","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"     * Converts this Jackson-friendly adapted phone object into the model\u0027s {@code Phone} object.","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted phone.","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"    public Phone toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"        if (!Phone.isValidPhone(value)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"        return new Phone(value);","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"yucongkoo":46}},{"path":"src/main/java/seedu/address/storage/jsonadaptedperson/JsonAdaptedPriority.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LamJiuFong"},"content":"package seedu.address.storage.jsonadaptedperson;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"LamJiuFong"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"LamJiuFong"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.priority.Priority;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"LamJiuFong"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"LamJiuFong"},"content":" * Jackson-friendly version of {@link Priority}.","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"LamJiuFong"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":"public class JsonAdaptedPriority {","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"LamJiuFong"},"content":"    private final String value;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"LamJiuFong"},"content":"     * Constructs a {@code JsonAdaptedPriority} with the given {@code value}.","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"LamJiuFong"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"LamJiuFong"},"content":"    public JsonAdaptedPriority(@JsonProperty(\"value\") String value) {","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"LamJiuFong"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"LamJiuFong"},"content":"     * Converts a given {@code Priority} into this class for Jackson use.","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"LamJiuFong"},"content":"    public JsonAdaptedPriority(Priority priority) {","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"LamJiuFong"},"content":"        value \u003d priority.toString();","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"LamJiuFong"},"content":"     * Converts this Jackson-friendly adapted priority object into the model\u0027s {@code Priority} object.","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"LamJiuFong"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted priority.","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"LamJiuFong"},"content":"    public Priority toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"LamJiuFong"},"content":"        if (!Priority.isValidPriority(value)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"LamJiuFong"},"content":"            throw new IllegalValueException(Priority.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"LamJiuFong"},"content":"        return new Priority(value);","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"LamJiuFong"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"LamJiuFong":42}},{"path":"src/main/java/seedu/address/storage/jsonadaptedperson/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package seedu.address.storage.jsonadaptedperson;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"        requireNonNull(source);","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"        tagName \u003d source.getTagName();","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"yucongkoo":4,"-":47}},{"path":"src/main/java/seedu/address/ui/Attribute.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LamJiuFong"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"LamJiuFong"},"content":"/** Attributes that a customer holds and which will be displayed in the Ui. **/","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"LamJiuFong"},"content":"public enum Attribute {","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":"    NAME, PHONE, EMAIL, ADDRESS","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"LamJiuFong"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"LamJiuFong":6}},{"path":"src/main/java/seedu/address/ui/FlowPaneLabel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":" * A UI component that displays the label within the FlowPane.","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"public class FlowPaneLabel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"    private static final String FXML \u003d \"FlowPaneLabel.fxml\";","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"    private static final CornerRadii radius \u003d new CornerRadii(3);","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"    private static final Insets padding \u003d new Insets(1);","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"    private HBox flowPaneLabel;","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"    @FXML","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"    private Label value;","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"     * Creates a FlowPaneLabel with text {@code value} and default styling.","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"    public FlowPaneLabel(String value) {","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"        super(FXML);","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"        this.value.setText(value);","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"        styleTagValue();","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"        styleTagLabel();","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"     * Constructs a FlowPaneLabel.","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"    // TODO: use priority enum to construct, including javadoc header","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"    public FlowPaneLabel(String value, int i) {","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"        super(FXML);","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"        this.value.setText(value);","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"        stylePriorityLabel(i);","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"        stylePriorityValue(i);","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"    private void styleTagLabel() {","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"yucongkoo"},"content":"        this.flowPaneLabel.setBackground(new Background(new BackgroundFill(Color.LIGHTBLUE, radius, padding)));","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"yucongkoo"},"content":"    private void styleTagValue() {","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"yucongkoo"},"content":"        this.value.setStyle(\"-fx-text-fill: #000000; -fx-background-color: transparent\");","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"yucongkoo"},"content":"    // TODO: provide styling of label, specifically saying the value of Color","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"yucongkoo"},"content":"    private void stylePriorityLabel(int i) {","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"yucongkoo"},"content":"        this.flowPaneLabel.setBackground(new Background(new BackgroundFill(Color.RED, radius, padding)));","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"yucongkoo"},"content":"    // TODO: provide styling of text, specifically saying the value to -fx-text-fill","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"yucongkoo"},"content":"    private void stylePriorityValue(int i) {","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"yucongkoo"},"content":"        this.value.setStyle(\"-fx-text-fill: #FFFFFF; -fx-background-color: transparent\");","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"yucongkoo":65}},{"path":"src/main/java/seedu/address/ui/PersonAttributeCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"LamJiuFong"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"LamJiuFong"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"LamJiuFong"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"LamJiuFong"},"content":" * A UI Component that displays the attribute of a person.","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"public class PersonAttributeCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"    private static final String FXML \u003d \"PersonAttributeCard.fxml\";","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"    @FXML","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"LamJiuFong"},"content":"    private HBox attributeCard;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"    @FXML","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"    private Label body;","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"LamJiuFong"},"content":"    @FXML","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"LamJiuFong"},"content":"    private ImageView imageView;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"LamJiuFong"},"content":"    private Image image;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"     * Creates an attribute card for {@code attribute} with the given {@code bodyText}.","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"LamJiuFong"},"content":"    public PersonAttributeCard(Attribute attribute, String bodyText) {","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"        super(FXML);","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"LamJiuFong"},"content":"        switch (attribute) {","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"LamJiuFong"},"content":"        case PHONE:","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"LamJiuFong"},"content":"            image \u003d new Image(\"images/phone.png\");","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"LamJiuFong"},"content":"            imageView.setImage(image);","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"LamJiuFong"},"content":"            break;","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"LamJiuFong"},"content":"        case ADDRESS:","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"LamJiuFong"},"content":"            image \u003d new Image(\"images/address.png\");","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"LamJiuFong"},"content":"            imageView.setImage(image);","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"LamJiuFong"},"content":"            break;","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"LamJiuFong"},"content":"        case EMAIL:","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"LamJiuFong"},"content":"            image \u003d new Image(\"images/email.png\");","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"LamJiuFong"},"content":"            imageView.setImage(image);","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"LamJiuFong"},"content":"            break;","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"LamJiuFong"},"content":"        default:","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"LamJiuFong"},"content":"            //do nothing","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"        body.setText(bodyText);","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"yucongkoo":22,"LamJiuFong":26}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.priority.Priority;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"    private final Person person;","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"    private final int displayedIndex;","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"    // Independent UI Parts residing in this PersonCard","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"    private PersonAttributeCard phoneCard;","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"    private PersonAttributeCard emailCard;","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"    private PersonAttributeCard addressCard;","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"LamJiuFong"},"content":"    private Label priority;","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"LamJiuFong"},"content":"    @FXML","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"    private VBox phoneCardPlaceholder;","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"    private VBox emailCardPlaceholder;","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"yucongkoo"},"content":"    private VBox addressCardPlaceholder;","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"yucongkoo"},"content":"        this.displayedIndex \u003d displayedIndex;","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":62,"author":{"gitId":"yucongkoo"},"content":"        fillPersonDetails();","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":64,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":65,"author":{"gitId":"yucongkoo"},"content":"    private void fillPersonDetails() {","lastModifiedDate":"2023-10-10"},{"lineNumber":66,"author":{"gitId":"yucongkoo"},"content":"        loadName();","lastModifiedDate":"2023-10-10"},{"lineNumber":67,"author":{"gitId":"LamJiuFong"},"content":"        loadPriority();","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"yucongkoo"},"content":"        loadPhoneCard();","lastModifiedDate":"2023-10-10"},{"lineNumber":69,"author":{"gitId":"yucongkoo"},"content":"        loadEmailCard();","lastModifiedDate":"2023-10-10"},{"lineNumber":70,"author":{"gitId":"yucongkoo"},"content":"        loadAddressCard();","lastModifiedDate":"2023-10-10"},{"lineNumber":71,"author":{"gitId":"yucongkoo"},"content":"        loadTags();","lastModifiedDate":"2023-10-10"},{"lineNumber":72,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":73,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":74,"author":{"gitId":"LamJiuFong"},"content":"    private void loadPriority() {","lastModifiedDate":"2023-10-22"},{"lineNumber":75,"author":{"gitId":"LamJiuFong"},"content":"        if (person.getPriority().getPriorityLevel() !\u003d Priority.Level.NONE) {","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"yucongkoo"},"content":"            // priority.setText(person.getPriority().toString());","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"yucongkoo"},"content":"            // TODO: Use priority enum to construct the label, so that each priority will have differen display","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"yucongkoo"},"content":"            tags.getChildren().add(0, new FlowPaneLabel(person.getPriority().toString(), 1).getRoot());","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":81,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":82,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":83,"author":{"gitId":"yucongkoo"},"content":"    private void loadName() {","lastModifiedDate":"2023-10-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":86,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":87,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":88,"author":{"gitId":"yucongkoo"},"content":"    private void loadTags() {","lastModifiedDate":"2023-10-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":90,"author":{"gitId":"yucongkoo"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.getTagName()))","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"yucongkoo"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new FlowPaneLabel(tag.getTagName()).getRoot()));","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":94,"author":{"gitId":"yucongkoo"},"content":"    private void loadPhoneCard() {","lastModifiedDate":"2023-10-10"},{"lineNumber":95,"author":{"gitId":"LamJiuFong"},"content":"        phoneCard \u003d new PersonAttributeCard(Attribute.PHONE, person.getPhone().value);","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"yucongkoo"},"content":"        phoneCardPlaceholder.getChildren().add(phoneCard.getRoot());","lastModifiedDate":"2023-10-10"},{"lineNumber":97,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":98,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":99,"author":{"gitId":"yucongkoo"},"content":"    private void loadEmailCard() {","lastModifiedDate":"2023-10-10"},{"lineNumber":100,"author":{"gitId":"LamJiuFong"},"content":"        emailCard \u003d new PersonAttributeCard(Attribute.EMAIL, person.getEmail().value);","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"yucongkoo"},"content":"        emailCardPlaceholder.getChildren().add(emailCard.getRoot());","lastModifiedDate":"2023-10-10"},{"lineNumber":102,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":103,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":104,"author":{"gitId":"yucongkoo"},"content":"    private void loadAddressCard() {","lastModifiedDate":"2023-10-10"},{"lineNumber":105,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":106,"author":{"gitId":"yucongkoo"},"content":"        if (person.getAddress().isEmptyAddress()) {","lastModifiedDate":"2023-10-10"},{"lineNumber":107,"author":{"gitId":"yucongkoo"},"content":"            return;","lastModifiedDate":"2023-10-10"},{"lineNumber":108,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":109,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":110,"author":{"gitId":"LamJiuFong"},"content":"        addressCard \u003d new PersonAttributeCard(Attribute.ADDRESS, person.getAddress().getValue());","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"yucongkoo"},"content":"        addressCardPlaceholder.getChildren().add(addressCard.getRoot());","lastModifiedDate":"2023-10-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"yucongkoo":50,"LamJiuFong":12,"-":51}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":354,"author":{"gitId":"yucongkoo"},"content":".attribute-card {","lastModifiedDate":"2023-10-11"},{"lineNumber":355,"author":{"gitId":"yucongkoo"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2023-10-11"},{"lineNumber":356,"author":{"gitId":"LamJiuFong"},"content":"    -fx-background-color: #FFFFFF;","lastModifiedDate":"2023-10-17"},{"lineNumber":357,"author":{"gitId":"LamJiuFong"},"content":"    -fx-min-width: 200px;","lastModifiedDate":"2023-10-17"},{"lineNumber":358,"author":{"gitId":"LamJiuFong"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":359,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":360,"author":{"gitId":"LamJiuFong"},"content":".attribute-card-container {","lastModifiedDate":"2023-10-17"},{"lineNumber":361,"author":{"gitId":"LamJiuFong"},"content":"    -fx-background-color: #FFFFFF;","lastModifiedDate":"2023-10-17"},{"lineNumber":362,"author":{"gitId":"LamJiuFong"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2023-10-17"},{"lineNumber":363,"author":{"gitId":"LamJiuFong"},"content":"    -fx-max-width: 200px;","lastModifiedDate":"2023-10-17"},{"lineNumber":364,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-11"},{"lineNumber":365,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":366,"author":{"gitId":"yucongkoo"},"content":".attribute-card-label-container {","lastModifiedDate":"2023-10-11"},{"lineNumber":367,"author":{"gitId":"yucongkoo"},"content":"    -fx-background-radius: 5;","lastModifiedDate":"2023-10-11"},{"lineNumber":368,"author":{"gitId":"LamJiuFong"},"content":"    -fx-background-color: #FFFFFF;","lastModifiedDate":"2023-10-17"},{"lineNumber":369,"author":{"gitId":"LamJiuFong"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":370,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":371,"author":{"gitId":"LamJiuFong"},"content":".icons-container {","lastModifiedDate":"2023-10-17"},{"lineNumber":372,"author":{"gitId":"LamJiuFong"},"content":"    -fx-max-height: 5;","lastModifiedDate":"2023-10-17"},{"lineNumber":373,"author":{"gitId":"LamJiuFong"},"content":"    -fx-max-width: 5;","lastModifiedDate":"2023-10-17"},{"lineNumber":374,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-11"},{"lineNumber":375,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":376,"author":{"gitId":"LamJiuFong"},"content":".priority {","lastModifiedDate":"2023-10-22"},{"lineNumber":377,"author":{"gitId":"LamJiuFong"},"content":"    -fx-font-family: \"Baloo Bhaijaan\";","lastModifiedDate":"2023-10-22"},{"lineNumber":378,"author":{"gitId":"LamJiuFong"},"content":"    -fx-background-color: #2ebb1d;","lastModifiedDate":"2023-10-22"},{"lineNumber":379,"author":{"gitId":"LamJiuFong"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"yucongkoo":8,"LamJiuFong":19,"-":352}},{"path":"src/main/resources/view/FlowPaneLabel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"\u003cHBox fx:id\u003d\"flowPaneLabel\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"    \u003cLabel fx:id\u003d\"value\" /\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"yucongkoo":8}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"         title\u003d\"Address App\" minWidth\u003d\"1000\" minHeight\u003d\"800\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"songfangyl"},"content":"                   minHeight\u003d\"150\" prefHeight\u003d\"150\" maxHeight\u003d\"150\"\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"songfangyl":2,"-":58}},{"path":"src/main/resources/view/PersonAttributeCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"LamJiuFong"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"LamJiuFong"},"content":"\u003cHBox fx:id\u003d\"attributeCard\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" spacing\u003d\"5\" styleClass\u003d\"attribute-card\" \u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"LamJiuFong"},"content":"    \u003cHBox styleClass\u003d\"icons-container\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"LamJiuFong"},"content":"        \u003cImageView fx:id\u003d\"imageView\" fitWidth\u003d\"30\" fitHeight\u003d\"30\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"LamJiuFong"},"content":"    \u003cHBox alignment\u003d\"BASELINE_LEFT\" styleClass\u003d\"attribute-card-label-container\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"        \u003cLabel fx:id\u003d\"body\" wrapText\u003d\"true\" style\u003d\"-fx-text-fill: #000000;\"/\u003e","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"LamJiuFong"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"LamJiuFong"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"yucongkoo":10,"LamJiuFong":9}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"      \u003cColumnConstraints hgrow\u003d\"NEVER\" minWidth\u003d\"10\" prefWidth\u003d\"200\" /\u003e","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"LamJiuFong"},"content":"    \u003c!-- Left VBox for name, priority and tags --\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"\u003c!--        \u003cLabel fx:id\u003d\"priority\" styleClass\u003d\"priority\"\u003e--\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"\u003c!--          \u003cminWidth\u003e--\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"\u003c!--            \u0026lt;!\u0026ndash; Ensures that the label text is never truncated \u0026ndash;\u0026gt;--\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"\u003c!--            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e--\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"\u003c!--          \u003c/minWidth\u003e--\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"\u003c!--        \u003c/Label\u003e--\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"      \u003cVBox prefHeight\u003d\"5\" minHeight\u003d\"5\" maxHeight\u003d\"5\"/\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"LamJiuFong"},"content":"    \u003c!-- Right HBox for customers information --\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"LamJiuFong"},"content":"    \u003cHBox GridPane.columnIndex\u003d\"1\" spacing\u003d\"10\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"yucongkoo"},"content":"        \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"yucongkoo"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"LamJiuFong"},"content":"      \u003cHBox styleClass\u003d\"attribute-card-container\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"LamJiuFong"},"content":"        \u003cVBox\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"yucongkoo"},"content":"          \u003cVBox fx:id\u003d\"phoneCardPlaceholder\"/\u003e","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"yucongkoo"},"content":"          \u003cVBox fx:id\u003d\"emailCardPlaceholder\" /\u003e","lastModifiedDate":"2023-10-10"},{"lineNumber":56,"author":{"gitId":"yucongkoo"},"content":"          \u003cVBox fx:id\u003d\"addressCardPlaceholder\" /\u003e","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"LamJiuFong"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"LamJiuFong"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"yucongkoo"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yucongkoo":23,"LamJiuFong":7,"-":32}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PRIORITY_DESC_HIGH;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"Jweewee"},"content":"        assertCommandSuccess(listCommand, String.format(ListCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"Jweewee"},"content":"                model.getFilteredPersonListSize()), model);","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"LamJiuFong"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + PRIORITY_DESC_HIGH;","lastModifiedDate":"2023-10-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"LamJiuFong":2,"-":173,"Jweewee":2}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"yucongkoo"},"content":"    public void execute_tagExceedLimit_throwsCommandException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"yucongkoo"},"content":"        Person person \u003d new PersonBuilder().withTags(\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\").build();","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"yucongkoo"},"content":"        Command command \u003d new AddCommand(person);","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"yucongkoo"},"content":"        assertThrows(CommandException.class, Messages.MESSAGE_TAG_COUNT_EXCEED, () -\u003e command.execute(new ModelStub()));","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":63,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"yucongkoo"},"content":"    public void execute_tagAtLimit_success() throws Exception {","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"yucongkoo"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"yucongkoo"},"content":"        Person person \u003d new PersonBuilder().withTags(\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\").build();","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"yucongkoo"},"content":"        CommandResult commandResult \u003d new AddCommand(person).execute(modelStub);","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(person)),","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"yucongkoo"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2023-10-20"},{"lineNumber":72,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":73,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":179,"author":{"gitId":"yucongkoo"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":180,"author":{"gitId":"yucongkoo"},"content":"        public int getFilteredPersonListSize() {","lastModifiedDate":"2023-10-16"},{"lineNumber":181,"author":{"gitId":"yucongkoo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":182,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"yucongkoo":23,"-":204}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_TAG;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DELETE_TAG;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"    public static final String VALID_NAME_CALMEN \u003d \"Calmen\";","lastModifiedDate":"2023-10-08"},{"lineNumber":35,"author":{"gitId":"LamJiuFong"},"content":"    public static final String VALID_NAME_DERRICK \u003d \"Derrick\";","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"    public static final String VALID_PHONE_CALMEN \u003d \"33333333\";","lastModifiedDate":"2023-10-08"},{"lineNumber":39,"author":{"gitId":"LamJiuFong"},"content":"    public static final String VALID_PHONE_DERRICK \u003d \"44444444\";","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"    public static final String VALID_EMAIL_CALMEN \u003d \"calmen@example.com\";","lastModifiedDate":"2023-10-08"},{"lineNumber":43,"author":{"gitId":"LamJiuFong"},"content":"    public static final String VALID_EMAIL_DERRICK \u003d \"derrick@example.com\";","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"LamJiuFong"},"content":"    public static final String VALID_ADDRESS_DERRICK \u003d \"Block 432, Derrick Road\";","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"LamJiuFong"},"content":"    public static final String VALID_ADDRESS_WITH_PREFIX_TAG \u003d \"51, Kent Ridge/t\";","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"yucongkoo"},"content":"    public static final String VALID_TAG_MALE \u003d \"male\";","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"LamJiuFong"},"content":"    public static final String VALID_PRIORITY_HIGH \u003d \"high\";","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"LamJiuFong"},"content":"    public static final String VALID_PRIORITY_LOW \u003d \"low\";","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"LamJiuFong"},"content":"    public static final String VALID_PRIORITY_NONE \u003d \"-\";","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"yucongkoo"},"content":"    public static final String NAME_DESC_CALMEN \u003d \" \" + PREFIX_NAME + VALID_NAME_CALMEN;","lastModifiedDate":"2023-10-08"},{"lineNumber":58,"author":{"gitId":"LamJiuFong"},"content":"    public static final String NAME_DESC_DERRICK \u003d \" \" + PREFIX_NAME + VALID_NAME_DERRICK;","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"yucongkoo"},"content":"    public static final String PHONE_DESC_CALMEN \u003d \" \" + PREFIX_PHONE + VALID_PHONE_CALMEN;","lastModifiedDate":"2023-10-08"},{"lineNumber":62,"author":{"gitId":"LamJiuFong"},"content":"    public static final String PHONE_DESC_DERRICK \u003d \" \" + PREFIX_PHONE + VALID_PHONE_DERRICK;","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"yucongkoo"},"content":"    public static final String EMAIL_DESC_CALMEN \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_CALMEN;","lastModifiedDate":"2023-10-08"},{"lineNumber":66,"author":{"gitId":"LamJiuFong"},"content":"    public static final String EMAIL_DESC_DERRICK \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_DERRICK;","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"LamJiuFong"},"content":"    public static final String ADDRESS_DESC_DERRICK \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_DERRICK;","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"LamJiuFong"},"content":"    public static final String ADDRESS_DESC_WITH_PREFIX_TAG \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_WITH_PREFIX_TAG;","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"yucongkoo"},"content":"    public static final String ADD_TAG_DESC_FRIEND \u003d \" \" + PREFIX_ADD_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"yucongkoo"},"content":"    public static final String DELETE_TAG_DESC_FRIEND \u003d \" \" + PREFIX_DELETE_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"LamJiuFong"},"content":"    public static final String PRIORITY_DESC_HIGH \u003d \" \" + PREFIX_PRIORITY + VALID_PRIORITY_HIGH;","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"LamJiuFong"},"content":"    public static final String PRIORITY_DESC_NONE \u003d \" \" + PREFIX_PRIORITY + VALID_PRIORITY_NONE;","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"LamJiuFong"},"content":"    public static final String INVALID_TAG_DESC2 \u003d \" \" + PREFIX_TAG; // empty string not allowed for tags","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"yucongkoo"},"content":"    public static final String INVALID_ADD_TAG_DESC \u003d \" \" + PREFIX_ADD_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"yucongkoo"},"content":"    public static final String INVALID_DELETE_TAG_DESC \u003d \" \" + PREFIX_DELETE_TAG + \"hubby*\";","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"LamJiuFong"},"content":"    public static final String INVALID_PRIORITY_DESC \u003d \" \" + PREFIX_PRIORITY + \"high low\"; // multiple arguments","lastModifiedDate":"2023-10-23"},{"lineNumber":87,"author":{"gitId":"LamJiuFong"},"content":"    public static final String INVALID_PRIORITY_DESC2 \u003d \" \" + PREFIX_PRIORITY + \"1\";","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"LamJiuFong"},"content":"    public static final String INVALID_PRIORITY_DESC3 \u003d \" \" + PREFIX_PRIORITY;","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":93,"author":{"gitId":"LamJiuFong"},"content":"    public static final String INVALID_PRIORITY \u003d \"high low\";","lastModifiedDate":"2023-10-23"},{"lineNumber":94,"author":{"gitId":"LamJiuFong"},"content":"    public static final String INVALID_PRIORITY2 \u003d \"1\";","lastModifiedDate":"2023-10-23"},{"lineNumber":95,"author":{"gitId":"LamJiuFong"},"content":"    public static final String INVALID_PRIORITY3 \u003d \" \";","lastModifiedDate":"2023-10-23"},{"lineNumber":96,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":103,"author":{"gitId":"LamJiuFong"},"content":"                .build();","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":106,"author":{"gitId":"LamJiuFong"},"content":"                .build();","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"yucongkoo":13,"LamJiuFong":26,"-":126}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"LamJiuFong"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"LamJiuFong"},"content":"    public void execute_allValidFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"LamJiuFong"},"content":"        Set\u003cTag\u003e tags \u003d model.getFilteredPersonList().get(0).getTags(); // tags should be inherited to the editedPerson","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"LamJiuFong"},"content":"        Person editedPerson \u003d new PersonBuilder().withTags(tags).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"LamJiuFong"},"content":"    public void execute_someValidFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"LamJiuFong"},"content":"        Set\u003cTag\u003e tags \u003d lastPerson.getTags(); // tags should be inherited to the editedPerson","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"LamJiuFong"},"content":"                .withTags(tags).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"LamJiuFong"},"content":"                .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":129,"author":{"gitId":"LamJiuFong"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonListSize() + 1);","lastModifiedDate":"2023-10-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2019-02-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"LamJiuFong":11,"-":177}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"LamJiuFong"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \"}\";","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"LamJiuFong":1,"-":64}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.logic.Messages.MESSAGE_NO_PERSON_FOUND;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.testutil.TypicalPersons.JOJO;","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.testutil.TypicalPersons.KAKA;","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"songfangyl"},"content":"        String expectedMessage \u003d String.format(MESSAGE_NO_PERSON_FOUND);","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"songfangyl"},"content":"    public void execute_oneKeyword_multiplePersonsFound() {","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"songfangyl"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2023-10-11"},{"lineNumber":72,"author":{"gitId":"songfangyl"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Best\");","lastModifiedDate":"2023-10-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"songfangyl"},"content":"        assertEquals(Arrays.asList(GEORGE, JOJO), model.getFilteredPersonList());","lastModifiedDate":"2023-10-11"},{"lineNumber":77,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":78,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":79,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":80,"author":{"gitId":"songfangyl"},"content":"    public void execute_multipleKeywords_onePersonFound() {","lastModifiedDate":"2023-10-11"},{"lineNumber":81,"author":{"gitId":"songfangyl"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2023-10-11"},{"lineNumber":82,"author":{"gitId":"songfangyl"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Jojo Best\");","lastModifiedDate":"2023-10-11"},{"lineNumber":83,"author":{"gitId":"songfangyl"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-10-11"},{"lineNumber":84,"author":{"gitId":"songfangyl"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-11"},{"lineNumber":85,"author":{"gitId":"songfangyl"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-11"},{"lineNumber":86,"author":{"gitId":"songfangyl"},"content":"        assertEquals(Arrays.asList(JOJO), model.getFilteredPersonList());","lastModifiedDate":"2023-10-11"},{"lineNumber":87,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":88,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":89,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":90,"author":{"gitId":"songfangyl"},"content":"    public void execute_multipleKeywords_onePersonWithAWordBetweenFound() {","lastModifiedDate":"2023-10-11"},{"lineNumber":91,"author":{"gitId":"songfangyl"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2023-10-11"},{"lineNumber":92,"author":{"gitId":"songfangyl"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"kaka many\");","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"songfangyl"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-10-11"},{"lineNumber":94,"author":{"gitId":"songfangyl"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-11"},{"lineNumber":95,"author":{"gitId":"songfangyl"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-11"},{"lineNumber":96,"author":{"gitId":"songfangyl"},"content":"        assertEquals(Arrays.asList(KAKA), model.getFilteredPersonList());","lastModifiedDate":"2023-10-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":99,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"songfangyl"},"content":"    public void execute_oneKeywordAsPrefix_onePersonFound() {","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"songfangyl"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"songfangyl"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"ka\");","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"songfangyl"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"songfangyl"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"songfangyl"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"songfangyl"},"content":"        assertEquals(Arrays.asList(KAKA), model.getFilteredPersonList());","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"songfangyl"},"content":"    public void execute_oneKeywordAsPrefix_multiplePersonFound() {","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"songfangyl"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"songfangyl"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"bes\");","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"songfangyl"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"songfangyl"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"songfangyl"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"songfangyl"},"content":"        assertEquals(Arrays.asList(GEORGE, JOJO), model.getFilteredPersonList());","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":119,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":120,"author":{"gitId":"songfangyl"},"content":"    public void execute_multipleKeywordAsPrefix_onePersonFound() {","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"songfangyl"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2023-10-18"},{"lineNumber":122,"author":{"gitId":"songfangyl"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Jo B\");","lastModifiedDate":"2023-10-18"},{"lineNumber":123,"author":{"gitId":"songfangyl"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"songfangyl"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"songfangyl"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"songfangyl"},"content":"        assertEquals(Arrays.asList(JOJO), model.getFilteredPersonList());","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":128,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":129,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":130,"author":{"gitId":"songfangyl"},"content":"    public void execute_multipleKeywordAsPrefix_multiplePersonFound() {","lastModifiedDate":"2023-10-18"},{"lineNumber":131,"author":{"gitId":"songfangyl"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2023-10-18"},{"lineNumber":132,"author":{"gitId":"songfangyl"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"D M\");","lastModifiedDate":"2023-10-18"},{"lineNumber":133,"author":{"gitId":"songfangyl"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":134,"author":{"gitId":"songfangyl"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-18"},{"lineNumber":135,"author":{"gitId":"songfangyl"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":136,"author":{"gitId":"songfangyl"},"content":"        assertEquals(Arrays.asList(DANIEL, KAKA), model.getFilteredPersonList());","lastModifiedDate":"2023-10-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2019-02-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"songfangyl":68,"-":85}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"Jweewee"},"content":"        String expectedMessage \u003d String.format(ListCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"Jweewee"},"content":"                expectedModel.getFilteredPersonListSize());","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"Jweewee"},"content":"        assertCommandSuccess(new ListCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":39,"author":{"gitId":"Jweewee"},"content":"        String expectedMessage \u003d String.format(ListCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Jweewee"},"content":"                expectedModel.getFilteredPersonListSize());","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Jweewee"},"content":"        assertCommandSuccess(new ListCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":37,"Jweewee":6}},{"path":"src/test/java/seedu/address/logic/commands/PriorityCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LamJiuFong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"LamJiuFong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"LamJiuFong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRIORITY_HIGH;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRIORITY_LOW;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRIORITY_NONE;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"LamJiuFong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.priority.Priority;","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"LamJiuFong"},"content":"public class PriorityCommandTest {","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"LamJiuFong"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"LamJiuFong"},"content":"    private Priority lowPriority \u003d new Priority(VALID_PRIORITY_LOW);","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"LamJiuFong"},"content":"    private Priority highPriority \u003d new Priority(VALID_PRIORITY_HIGH);","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"LamJiuFong"},"content":"    private Priority nonePriority \u003d new Priority(VALID_PRIORITY_NONE);","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"LamJiuFong"},"content":"    public void constructor_nullArguments_throwsNullPointerException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"LamJiuFong"},"content":"        Index index \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"LamJiuFong"},"content":"        // null index","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"LamJiuFong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new PriorityCommand(null, lowPriority));","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"LamJiuFong"},"content":"        // null priority","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"LamJiuFong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new PriorityCommand(index, null));","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"LamJiuFong"},"content":"        // null index and priority","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"LamJiuFong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new PriorityCommand(null, null));","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"LamJiuFong"},"content":"    public void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"LamJiuFong"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonListSize() + 1);","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"LamJiuFong"},"content":"        PriorityCommand pc \u003d new PriorityCommand(outOfBoundIndex, lowPriority);","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"LamJiuFong"},"content":"        assertCommandFailure(pc, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"LamJiuFong"},"content":"    public void execute_samePriority_throwsCommandException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"LamJiuFong"},"content":"        Index indexOfTargetPerson \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"LamJiuFong"},"content":"        PriorityCommand pc \u003d new PriorityCommand(indexOfTargetPerson, highPriority); // default priority is high","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"LamJiuFong"},"content":"        assertCommandFailure(pc, model, PriorityCommand.MESSAGE_NOT_ASSIGNED);","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"LamJiuFong"},"content":"    public void execute_validPriority_success() {","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"LamJiuFong"},"content":"        // change from high priority to low","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"LamJiuFong"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"LamJiuFong"},"content":"        Person expectedPerson \u003d new PersonBuilder(personInFilteredList).withPriority(VALID_PRIORITY_LOW).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"LamJiuFong"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"LamJiuFong"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()), expectedPerson);","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"LamJiuFong"},"content":"        String expectedMessage \u003d String.format(PriorityCommand.MESSAGE_ASSIGN_PERSON_SUCCESS,","lastModifiedDate":"2023-10-23"},{"lineNumber":72,"author":{"gitId":"LamJiuFong"},"content":"                Messages.format(expectedPerson));","lastModifiedDate":"2023-10-23"},{"lineNumber":73,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"LamJiuFong"},"content":"        Index indexOfTargetPerson \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-23"},{"lineNumber":75,"author":{"gitId":"LamJiuFong"},"content":"        PriorityCommand pc \u003d new PriorityCommand(indexOfTargetPerson, lowPriority);","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"LamJiuFong"},"content":"        assertCommandSuccess(pc, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":78,"author":{"gitId":"LamJiuFong"},"content":"        // change from high priority to none","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"LamJiuFong"},"content":"        personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"LamJiuFong"},"content":"        expectedPerson \u003d new PersonBuilder(personInFilteredList).withPriority(VALID_PRIORITY_NONE).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":81,"author":{"gitId":"LamJiuFong"},"content":"        expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"LamJiuFong"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased()), expectedPerson);","lastModifiedDate":"2023-10-23"},{"lineNumber":83,"author":{"gitId":"LamJiuFong"},"content":"        expectedMessage \u003d String.format(PriorityCommand.MESSAGE_ASSIGN_PERSON_SUCCESS, Messages.format(expectedPerson));","lastModifiedDate":"2023-10-23"},{"lineNumber":84,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":85,"author":{"gitId":"LamJiuFong"},"content":"        indexOfTargetPerson \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-23"},{"lineNumber":86,"author":{"gitId":"LamJiuFong"},"content":"        pc \u003d new PriorityCommand(indexOfTargetPerson, nonePriority);","lastModifiedDate":"2023-10-23"},{"lineNumber":87,"author":{"gitId":"LamJiuFong"},"content":"        assertCommandSuccess(pc, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":90,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":91,"author":{"gitId":"LamJiuFong"},"content":"    public void equals() {","lastModifiedDate":"2023-10-23"},{"lineNumber":92,"author":{"gitId":"LamJiuFong"},"content":"        final PriorityCommand standardCommand \u003d new PriorityCommand(INDEX_FIRST_PERSON, highPriority);","lastModifiedDate":"2023-10-23"},{"lineNumber":93,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":94,"author":{"gitId":"LamJiuFong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-23"},{"lineNumber":95,"author":{"gitId":"LamJiuFong"},"content":"        PriorityCommand commandWithSameValues \u003d new PriorityCommand(INDEX_FIRST_PERSON, highPriority);","lastModifiedDate":"2023-10-23"},{"lineNumber":96,"author":{"gitId":"LamJiuFong"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-10-23"},{"lineNumber":97,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":98,"author":{"gitId":"LamJiuFong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-23"},{"lineNumber":99,"author":{"gitId":"LamJiuFong"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-10-23"},{"lineNumber":100,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":101,"author":{"gitId":"LamJiuFong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":102,"author":{"gitId":"LamJiuFong"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-10-23"},{"lineNumber":103,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":104,"author":{"gitId":"LamJiuFong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":105,"author":{"gitId":"LamJiuFong"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-10-23"},{"lineNumber":106,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":107,"author":{"gitId":"LamJiuFong"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":108,"author":{"gitId":"LamJiuFong"},"content":"        assertFalse(standardCommand.equals(new PriorityCommand(INDEX_SECOND_PERSON, highPriority)));","lastModifiedDate":"2023-10-23"},{"lineNumber":109,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":110,"author":{"gitId":"LamJiuFong"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":111,"author":{"gitId":"LamJiuFong"},"content":"        assertFalse(standardCommand.equals(new PriorityCommand(INDEX_FIRST_PERSON, lowPriority)));","lastModifiedDate":"2023-10-23"},{"lineNumber":112,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":113,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":114,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":115,"author":{"gitId":"LamJiuFong"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-23"},{"lineNumber":116,"author":{"gitId":"LamJiuFong"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-23"},{"lineNumber":117,"author":{"gitId":"LamJiuFong"},"content":"        PriorityCommand pc \u003d new PriorityCommand(index, lowPriority);","lastModifiedDate":"2023-10-23"},{"lineNumber":118,"author":{"gitId":"LamJiuFong"},"content":"        String expected \u003d PriorityCommand.class.getCanonicalName() + \"{priority\u003d\"","lastModifiedDate":"2023-10-23"},{"lineNumber":119,"author":{"gitId":"LamJiuFong"},"content":"                + Priority.LOW_PRIORITY_KEYWORD + \"}\";","lastModifiedDate":"2023-10-23"},{"lineNumber":120,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(expected, pc.toString());","lastModifiedDate":"2023-10-23"},{"lineNumber":121,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":122,"author":{"gitId":"LamJiuFong"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"LamJiuFong":122}},{"path":"src/test/java/seedu/address/logic/commands/TagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_MALE;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.model.util.SampleDataUtil.getTagSet;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.logic.commands.TagCommand.UpdatePersonTagsDescriptor;","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"public class TagCommandTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"    // alice is first person","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"    private Index aliceIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"    private Person alice \u003d model.getFilteredPersonList().get(aliceIndex.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"    private String aliceTag \u003d \"friends\";","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"    // benson is second person","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"    private Index bensonIndex \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"    private Person benson \u003d model.getFilteredPersonList().get(bensonIndex.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"    private String bensonFirstTag \u003d \"owesMoney\";","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"    private String bensonSecondTag \u003d \"friends\";","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"    private UpdatePersonTagsDescriptor updatePersonTagsDescriptor \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"yucongkoo"},"content":"            new UpdatePersonTagsDescriptor(new HashSet\u003c\u003e(), new HashSet\u003c\u003e());","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"yucongkoo"},"content":"    public void constructor_nullArguments_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"yucongkoo"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TagCommand(null,","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"yucongkoo"},"content":"                new UpdatePersonTagsDescriptor(new HashSet\u003c\u003e(), new HashSet\u003c\u003e())));","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"yucongkoo"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"yucongkoo"},"content":"                new TagCommand(INDEX_FIRST_PERSON, null));","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"yucongkoo"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"yucongkoo"},"content":"                new TagCommand(INDEX_FIRST_PERSON, new UpdatePersonTagsDescriptor(null, new HashSet\u003c\u003e())));","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"yucongkoo"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"yucongkoo"},"content":"                new TagCommand(INDEX_FIRST_PERSON, new UpdatePersonTagsDescriptor(new HashSet\u003c\u003e(), null)));","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"yucongkoo"},"content":"    public void constructor_noTagToUpdate_assertionError() {","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"yucongkoo"},"content":"        assertThrows(AssertionError.class, () -\u003e","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"yucongkoo"},"content":"                new TagCommand(INDEX_FIRST_PERSON, new UpdatePersonTagsDescriptor(new HashSet\u003c\u003e(), new HashSet\u003c\u003e())));","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"yucongkoo"},"content":"    public void execute_onlyAddSingleTag_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"yucongkoo"},"content":"        updatePersonTagsDescriptor.setTagsToAdd(getTagSet(VALID_TAG_HUSBAND));","lastModifiedDate":"2023-10-20"},{"lineNumber":73,"author":{"gitId":"yucongkoo"},"content":"        updatePersonTagsDescriptor.setTagsToDelete(new HashSet\u003c\u003e());","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"yucongkoo"},"content":"        Command command \u003d new TagCommand(aliceIndex, updatePersonTagsDescriptor);","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"yucongkoo"},"content":"        Person updatedAlice \u003d new PersonBuilder(alice).withTags(aliceTag, VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"yucongkoo"},"content":"        String expectedMessage \u003d String.format(TagCommand.MESSAGE_TAG_PERSON_SUCCESS, Messages.format(updatedAlice));","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"yucongkoo"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"yucongkoo"},"content":"        expectedModel.setPerson(alice, updatedAlice);","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"yucongkoo"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"yucongkoo"},"content":"    public void execute_onlyAddMultipleTags_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":88,"author":{"gitId":"yucongkoo"},"content":"        updatePersonTagsDescriptor.setTagsToAdd(getTagSet(VALID_TAG_HUSBAND, VALID_TAG_MALE));","lastModifiedDate":"2023-10-20"},{"lineNumber":89,"author":{"gitId":"yucongkoo"},"content":"        updatePersonTagsDescriptor.setTagsToDelete(new HashSet\u003c\u003e());","lastModifiedDate":"2023-10-20"},{"lineNumber":90,"author":{"gitId":"yucongkoo"},"content":"        Command command \u003d new TagCommand(aliceIndex, updatePersonTagsDescriptor);","lastModifiedDate":"2023-10-20"},{"lineNumber":91,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"yucongkoo"},"content":"        Person updatedAlice \u003d new PersonBuilder(alice).withTags(aliceTag, VALID_TAG_HUSBAND, VALID_TAG_MALE).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"yucongkoo"},"content":"        String expectedMessage \u003d String.format(TagCommand.MESSAGE_TAG_PERSON_SUCCESS, Messages.format(updatedAlice));","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"yucongkoo"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"yucongkoo"},"content":"        expectedModel.setPerson(alice, updatedAlice);","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"yucongkoo"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"yucongkoo"},"content":"    public void execute_addDuplicateTag_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":104,"author":{"gitId":"yucongkoo"},"content":"        updatePersonTagsDescriptor.setTagsToAdd(getTagSet(aliceTag));","lastModifiedDate":"2023-10-20"},{"lineNumber":105,"author":{"gitId":"yucongkoo"},"content":"        updatePersonTagsDescriptor.setTagsToDelete(new HashSet\u003c\u003e());","lastModifiedDate":"2023-10-20"},{"lineNumber":106,"author":{"gitId":"yucongkoo"},"content":"        Command command \u003d new TagCommand(aliceIndex, updatePersonTagsDescriptor);","lastModifiedDate":"2023-10-20"},{"lineNumber":107,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"yucongkoo"},"content":"        String expectedMessage \u003d String.format(TagCommand.MESSAGE_TAG_PERSON_SUCCESS, Messages.format(alice));","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"yucongkoo"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"yucongkoo"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":117,"author":{"gitId":"yucongkoo"},"content":"    public void execute_onlyDeleteSingleTag_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":118,"author":{"gitId":"yucongkoo"},"content":"        updatePersonTagsDescriptor.setTagsToAdd(new HashSet\u003c\u003e());","lastModifiedDate":"2023-10-20"},{"lineNumber":119,"author":{"gitId":"yucongkoo"},"content":"        updatePersonTagsDescriptor.setTagsToDelete(getTagSet(aliceTag));","lastModifiedDate":"2023-10-20"},{"lineNumber":120,"author":{"gitId":"yucongkoo"},"content":"        Command command \u003d new TagCommand(aliceIndex, updatePersonTagsDescriptor);","lastModifiedDate":"2023-10-20"},{"lineNumber":121,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":122,"author":{"gitId":"yucongkoo"},"content":"        Person updatedAlice \u003d new PersonBuilder(alice).withTags().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":123,"author":{"gitId":"yucongkoo"},"content":"        String expectedMessage \u003d String.format(TagCommand.MESSAGE_TAG_PERSON_SUCCESS, Messages.format(updatedAlice));","lastModifiedDate":"2023-10-16"},{"lineNumber":124,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"yucongkoo"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"yucongkoo"},"content":"        expectedModel.setPerson(alice, updatedAlice);","lastModifiedDate":"2023-10-16"},{"lineNumber":127,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":128,"author":{"gitId":"yucongkoo"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"yucongkoo"},"content":"    public void execute_onlyDeleteMultipleTag_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"yucongkoo"},"content":"        updatePersonTagsDescriptor.setTagsToAdd(new HashSet\u003c\u003e());","lastModifiedDate":"2023-10-20"},{"lineNumber":134,"author":{"gitId":"yucongkoo"},"content":"        updatePersonTagsDescriptor.setTagsToDelete(getTagSet(bensonFirstTag, bensonSecondTag));","lastModifiedDate":"2023-10-20"},{"lineNumber":135,"author":{"gitId":"yucongkoo"},"content":"        Command command \u003d new TagCommand(bensonIndex, updatePersonTagsDescriptor);","lastModifiedDate":"2023-10-20"},{"lineNumber":136,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"yucongkoo"},"content":"        Person updatedBenson \u003d new PersonBuilder(benson).withTags().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"yucongkoo"},"content":"        String expectedMessage \u003d String.format(TagCommand.MESSAGE_TAG_PERSON_SUCCESS, Messages.format(updatedBenson));","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":140,"author":{"gitId":"yucongkoo"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":141,"author":{"gitId":"yucongkoo"},"content":"        expectedModel.setPerson(benson, updatedBenson);","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":143,"author":{"gitId":"yucongkoo"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"yucongkoo"},"content":"    public void execute_deleteNonExistingTag_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":148,"author":{"gitId":"yucongkoo"},"content":"        updatePersonTagsDescriptor.setTagsToAdd(new HashSet\u003c\u003e());","lastModifiedDate":"2023-10-20"},{"lineNumber":149,"author":{"gitId":"yucongkoo"},"content":"        updatePersonTagsDescriptor.setTagsToDelete(getTagSet(\"nonExistingTag\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":150,"author":{"gitId":"yucongkoo"},"content":"        Command command \u003d new TagCommand(aliceIndex, updatePersonTagsDescriptor);","lastModifiedDate":"2023-10-20"},{"lineNumber":151,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":152,"author":{"gitId":"yucongkoo"},"content":"        String expectedMessage \u003d String.format(TagCommand.MESSAGE_TAG_PERSON_SUCCESS, Messages.format(alice));","lastModifiedDate":"2023-10-16"},{"lineNumber":153,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":154,"author":{"gitId":"yucongkoo"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":155,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":156,"author":{"gitId":"yucongkoo"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":157,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":158,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":159,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":160,"author":{"gitId":"yucongkoo"},"content":"    public void execute_addAndDeleteTags_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":161,"author":{"gitId":"yucongkoo"},"content":"        Set\u003cTag\u003e tagsToBeAdded \u003d getTagSet(VALID_TAG_HUSBAND, VALID_TAG_MALE, bensonFirstTag);","lastModifiedDate":"2023-10-20"},{"lineNumber":162,"author":{"gitId":"yucongkoo"},"content":"        Set\u003cTag\u003e tagsToBeDeleted \u003d getTagSet(bensonSecondTag, \"nonExistingTag\");","lastModifiedDate":"2023-10-20"},{"lineNumber":163,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":164,"author":{"gitId":"yucongkoo"},"content":"        updatePersonTagsDescriptor.setTagsToAdd(tagsToBeAdded);","lastModifiedDate":"2023-10-20"},{"lineNumber":165,"author":{"gitId":"yucongkoo"},"content":"        updatePersonTagsDescriptor.setTagsToDelete(tagsToBeDeleted);","lastModifiedDate":"2023-10-20"},{"lineNumber":166,"author":{"gitId":"yucongkoo"},"content":"        Command command \u003d new TagCommand(bensonIndex, updatePersonTagsDescriptor);","lastModifiedDate":"2023-10-20"},{"lineNumber":167,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":168,"author":{"gitId":"yucongkoo"},"content":"        Person updatedBenson \u003d new PersonBuilder(benson)","lastModifiedDate":"2023-10-16"},{"lineNumber":169,"author":{"gitId":"yucongkoo"},"content":"                .withTags(bensonFirstTag, VALID_TAG_HUSBAND, VALID_TAG_MALE).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":170,"author":{"gitId":"yucongkoo"},"content":"        String expectedMessage \u003d String.format(TagCommand.MESSAGE_TAG_PERSON_SUCCESS, Messages.format(updatedBenson));","lastModifiedDate":"2023-10-16"},{"lineNumber":171,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":172,"author":{"gitId":"yucongkoo"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":173,"author":{"gitId":"yucongkoo"},"content":"        expectedModel.setPerson(benson, updatedBenson);","lastModifiedDate":"2023-10-16"},{"lineNumber":174,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":175,"author":{"gitId":"yucongkoo"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":176,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":177,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":178,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":179,"author":{"gitId":"yucongkoo"},"content":"    public void execute_indexOutOfBound_failure() {","lastModifiedDate":"2023-10-16"},{"lineNumber":180,"author":{"gitId":"yucongkoo"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonListSize() + 1);","lastModifiedDate":"2023-10-16"},{"lineNumber":181,"author":{"gitId":"yucongkoo"},"content":"        updatePersonTagsDescriptor.setTagsToAdd(getTagSet(\"tagToAdd\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":182,"author":{"gitId":"yucongkoo"},"content":"        Command command \u003d new TagCommand(outOfBoundIndex, updatePersonTagsDescriptor);","lastModifiedDate":"2023-10-20"},{"lineNumber":183,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":184,"author":{"gitId":"yucongkoo"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":185,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":186,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":187,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":188,"author":{"gitId":"yucongkoo"},"content":"    public void execute_addAndDeleteCommonTag_failure() {","lastModifiedDate":"2023-10-20"},{"lineNumber":189,"author":{"gitId":"yucongkoo"},"content":"        updatePersonTagsDescriptor.setTagsToAdd(getTagSet(\"commonTag\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":190,"author":{"gitId":"yucongkoo"},"content":"        updatePersonTagsDescriptor.setTagsToDelete(getTagSet(\"commonTag\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":191,"author":{"gitId":"yucongkoo"},"content":"        Command command \u003d new TagCommand(aliceIndex, updatePersonTagsDescriptor);","lastModifiedDate":"2023-10-20"},{"lineNumber":192,"author":{"gitId":"yucongkoo"},"content":"        assertCommandFailure(command, model, TagCommand.MESSAGE_COMMON_TAG_FAILURE);","lastModifiedDate":"2023-10-20"},{"lineNumber":193,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":194,"author":{"gitId":"yucongkoo"},"content":"        updatePersonTagsDescriptor.setTagsToAdd(getTagSet(\"commonTag\", \"validTag\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":195,"author":{"gitId":"yucongkoo"},"content":"        updatePersonTagsDescriptor.setTagsToDelete(getTagSet(\"commonTag\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":196,"author":{"gitId":"yucongkoo"},"content":"        command \u003d new TagCommand(aliceIndex, updatePersonTagsDescriptor);","lastModifiedDate":"2023-10-20"},{"lineNumber":197,"author":{"gitId":"yucongkoo"},"content":"        assertCommandFailure(command, model, TagCommand.MESSAGE_COMMON_TAG_FAILURE);","lastModifiedDate":"2023-10-20"},{"lineNumber":198,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":199,"author":{"gitId":"yucongkoo"},"content":"        updatePersonTagsDescriptor.setTagsToAdd(getTagSet(\"commonTag\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":200,"author":{"gitId":"yucongkoo"},"content":"        updatePersonTagsDescriptor.setTagsToDelete(getTagSet(\"commonTag\", \"validTag\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":201,"author":{"gitId":"yucongkoo"},"content":"        command \u003d new TagCommand(aliceIndex, updatePersonTagsDescriptor);","lastModifiedDate":"2023-10-20"},{"lineNumber":202,"author":{"gitId":"yucongkoo"},"content":"        assertCommandFailure(command, model, TagCommand.MESSAGE_COMMON_TAG_FAILURE);","lastModifiedDate":"2023-10-20"},{"lineNumber":203,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":204,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":205,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":206,"author":{"gitId":"yucongkoo"},"content":"    public void execute_tagCountExceedLimit_failure() {","lastModifiedDate":"2023-10-20"},{"lineNumber":207,"author":{"gitId":"yucongkoo"},"content":"        Set\u003cTag\u003e nineTags \u003d getTagSet(\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\");","lastModifiedDate":"2023-10-20"},{"lineNumber":208,"author":{"gitId":"yucongkoo"},"content":"        Set\u003cTag\u003e tenTags \u003d getTagSet(\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\");","lastModifiedDate":"2023-10-20"},{"lineNumber":209,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":210,"author":{"gitId":"yucongkoo"},"content":"        updatePersonTagsDescriptor.setTagsToAdd(nineTags);","lastModifiedDate":"2023-10-20"},{"lineNumber":211,"author":{"gitId":"yucongkoo"},"content":"        Command command \u003d new TagCommand(bensonIndex, updatePersonTagsDescriptor);","lastModifiedDate":"2023-10-20"},{"lineNumber":212,"author":{"gitId":"yucongkoo"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_TAG_COUNT_EXCEED);","lastModifiedDate":"2023-10-20"},{"lineNumber":213,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":214,"author":{"gitId":"yucongkoo"},"content":"        updatePersonTagsDescriptor.setTagsToAdd(tenTags);","lastModifiedDate":"2023-10-20"},{"lineNumber":215,"author":{"gitId":"yucongkoo"},"content":"        command \u003d new TagCommand(bensonIndex, updatePersonTagsDescriptor);","lastModifiedDate":"2023-10-20"},{"lineNumber":216,"author":{"gitId":"yucongkoo"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_TAG_COUNT_EXCEED);","lastModifiedDate":"2023-10-20"},{"lineNumber":217,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":218,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":219,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":220,"author":{"gitId":"yucongkoo"},"content":"    public void execute_tagCountAtLimit_success() {","lastModifiedDate":"2023-10-20"},{"lineNumber":221,"author":{"gitId":"yucongkoo"},"content":"        Set\u003cTag\u003e eightTags \u003d getTagSet(\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\");","lastModifiedDate":"2023-10-20"},{"lineNumber":222,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":223,"author":{"gitId":"yucongkoo"},"content":"        updatePersonTagsDescriptor.setTagsToAdd(eightTags);","lastModifiedDate":"2023-10-20"},{"lineNumber":224,"author":{"gitId":"yucongkoo"},"content":"        Command command \u003d new TagCommand(bensonIndex, updatePersonTagsDescriptor);","lastModifiedDate":"2023-10-20"},{"lineNumber":225,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":226,"author":{"gitId":"yucongkoo"},"content":"        Person updatedBenson \u003d new PersonBuilder(benson)","lastModifiedDate":"2023-10-20"},{"lineNumber":227,"author":{"gitId":"yucongkoo"},"content":"                .withTags(bensonFirstTag, bensonSecondTag, \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\").build();","lastModifiedDate":"2023-10-20"},{"lineNumber":228,"author":{"gitId":"yucongkoo"},"content":"        String expectedMessage \u003d String.format(TagCommand.MESSAGE_TAG_PERSON_SUCCESS, Messages.format(updatedBenson));","lastModifiedDate":"2023-10-20"},{"lineNumber":229,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":230,"author":{"gitId":"yucongkoo"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-20"},{"lineNumber":231,"author":{"gitId":"yucongkoo"},"content":"        expectedModel.setPerson(benson, updatedBenson);","lastModifiedDate":"2023-10-20"},{"lineNumber":232,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":233,"author":{"gitId":"yucongkoo"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-20"},{"lineNumber":234,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":235,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":236,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":237,"author":{"gitId":"yucongkoo"},"content":"    public void equals() {","lastModifiedDate":"2023-10-18"},{"lineNumber":238,"author":{"gitId":"yucongkoo"},"content":"        Index testIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-18"},{"lineNumber":239,"author":{"gitId":"yucongkoo"},"content":"        Set\u003cTag\u003e testSetToAdd \u003d getTagSet(\"tagToAdd\");","lastModifiedDate":"2023-10-20"},{"lineNumber":240,"author":{"gitId":"yucongkoo"},"content":"        Set\u003cTag\u003e testSetToDelete \u003d getTagSet(\"tagToDelete\");","lastModifiedDate":"2023-10-20"},{"lineNumber":241,"author":{"gitId":"yucongkoo"},"content":"        updatePersonTagsDescriptor.setTagsToAdd(testSetToAdd);","lastModifiedDate":"2023-10-20"},{"lineNumber":242,"author":{"gitId":"yucongkoo"},"content":"        updatePersonTagsDescriptor.setTagsToDelete(testSetToDelete);","lastModifiedDate":"2023-10-20"},{"lineNumber":243,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":244,"author":{"gitId":"yucongkoo"},"content":"        TagCommand tagCommand \u003d new TagCommand(testIndex, updatePersonTagsDescriptor);","lastModifiedDate":"2023-10-20"},{"lineNumber":245,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":246,"author":{"gitId":"yucongkoo"},"content":"        // same object -\u003e true","lastModifiedDate":"2023-10-18"},{"lineNumber":247,"author":{"gitId":"yucongkoo"},"content":"        assertTrue(tagCommand.equals(tagCommand));","lastModifiedDate":"2023-10-18"},{"lineNumber":248,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":249,"author":{"gitId":"yucongkoo"},"content":"        // different class -\u003e false","lastModifiedDate":"2023-10-18"},{"lineNumber":250,"author":{"gitId":"yucongkoo"},"content":"        assertFalse(tagCommand.equals(new Object()));","lastModifiedDate":"2023-10-18"},{"lineNumber":251,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":252,"author":{"gitId":"yucongkoo"},"content":"        // null -\u003e false","lastModifiedDate":"2023-10-18"},{"lineNumber":253,"author":{"gitId":"yucongkoo"},"content":"        assertFalse(tagCommand.equals(null));","lastModifiedDate":"2023-10-18"},{"lineNumber":254,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":255,"author":{"gitId":"yucongkoo"},"content":"        // same value -\u003e true","lastModifiedDate":"2023-10-18"},{"lineNumber":256,"author":{"gitId":"yucongkoo"},"content":"        assertTrue(tagCommand.equals(new TagCommand(testIndex,","lastModifiedDate":"2023-10-20"},{"lineNumber":257,"author":{"gitId":"yucongkoo"},"content":"                new UpdatePersonTagsDescriptor(testSetToAdd, testSetToDelete))));","lastModifiedDate":"2023-10-20"},{"lineNumber":258,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":259,"author":{"gitId":"yucongkoo"},"content":"        // different index -\u003e false","lastModifiedDate":"2023-10-18"},{"lineNumber":260,"author":{"gitId":"yucongkoo"},"content":"        assertFalse(tagCommand.equals(new TagCommand(INDEX_SECOND_PERSON,","lastModifiedDate":"2023-10-20"},{"lineNumber":261,"author":{"gitId":"yucongkoo"},"content":"                new UpdatePersonTagsDescriptor(testSetToAdd, testSetToDelete))));","lastModifiedDate":"2023-10-20"},{"lineNumber":262,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":263,"author":{"gitId":"yucongkoo"},"content":"        // different setToAdd -\u003e false","lastModifiedDate":"2023-10-18"},{"lineNumber":264,"author":{"gitId":"yucongkoo"},"content":"        assertFalse(tagCommand.equals(new TagCommand(testIndex,","lastModifiedDate":"2023-10-20"},{"lineNumber":265,"author":{"gitId":"yucongkoo"},"content":"                new UpdatePersonTagsDescriptor(new HashSet\u003c\u003e(), testSetToDelete))));","lastModifiedDate":"2023-10-20"},{"lineNumber":266,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":267,"author":{"gitId":"yucongkoo"},"content":"        // different setToDelete -\u003e false","lastModifiedDate":"2023-10-18"},{"lineNumber":268,"author":{"gitId":"yucongkoo"},"content":"        assertFalse(tagCommand.equals(new TagCommand(testIndex,","lastModifiedDate":"2023-10-20"},{"lineNumber":269,"author":{"gitId":"yucongkoo"},"content":"                new UpdatePersonTagsDescriptor(testSetToAdd, new HashSet\u003c\u003e()))));","lastModifiedDate":"2023-10-20"},{"lineNumber":270,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":271,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":272,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":273,"author":{"gitId":"yucongkoo"},"content":"    public void updatePersonDescriptorEquals() {","lastModifiedDate":"2023-10-21"},{"lineNumber":274,"author":{"gitId":"yucongkoo"},"content":"        assertTrue(updatePersonTagsDescriptor.equals(updatePersonTagsDescriptor)); // same object -\u003e true","lastModifiedDate":"2023-10-21"},{"lineNumber":275,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":276,"author":{"gitId":"yucongkoo"},"content":"        assertFalse(updatePersonTagsDescriptor.equals(new Object())); // different object type -\u003e false","lastModifiedDate":"2023-10-21"},{"lineNumber":277,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":278,"author":{"gitId":"yucongkoo"},"content":"        assertFalse(updatePersonTagsDescriptor.equals(null)); // null -\u003e false","lastModifiedDate":"2023-10-21"},{"lineNumber":279,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":280,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"yucongkoo":280}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_DERRICK;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_CALMEN;","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_DERRICK;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PRIORITY_DESC;","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PRIORITY_DESC2;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_CALMEN;","lastModifiedDate":"2023-10-08"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_DERRICK;","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_CALMEN;","lastModifiedDate":"2023-10-08"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_DERRICK;","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PRIORITY_DESC_HIGH;","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-07-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":47,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.testutil.TypicalPersons.CALMEN;","lastModifiedDate":"2023-10-08"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.testutil.TypicalPersons.DERRICK;","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.person.NonEmptyAddress;","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.priority.Priority;","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":67,"author":{"gitId":"yucongkoo"},"content":"    public void parse_null_failure() {","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"yucongkoo"},"content":"        assertThrows(NullPointerException.class, () -\u003e parser.parse(null));","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":73,"author":{"gitId":"yucongkoo"},"content":"        Person expectedPerson \u003d new PersonBuilder(DERRICK).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"yucongkoo"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_DERRICK + PHONE_DESC_DERRICK","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"yucongkoo"},"content":"                + EMAIL_DESC_DERRICK + ADDRESS_DESC_DERRICK + TAG_DESC_FRIEND + PRIORITY_DESC_HIGH,","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"yucongkoo"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"yucongkoo"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(DERRICK).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"yucongkoo"},"content":"                NAME_DESC_DERRICK + PHONE_DESC_DERRICK + EMAIL_DESC_DERRICK + ADDRESS_DESC_DERRICK","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"yucongkoo"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + PRIORITY_DESC_HIGH,","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"yucongkoo"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + PRIORITY_DESC_HIGH;","lastModifiedDate":"2023-10-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":106,"author":{"gitId":"yucongkoo"},"content":"        // multiple priorities","lastModifiedDate":"2023-10-24"},{"lineNumber":107,"author":{"gitId":"yucongkoo"},"content":"        assertParseFailure(parser, PRIORITY_DESC_HIGH + validExpectedPersonString,","lastModifiedDate":"2023-10-24"},{"lineNumber":108,"author":{"gitId":"yucongkoo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PRIORITY));","lastModifiedDate":"2023-10-24"},{"lineNumber":109,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":117,"author":{"gitId":"yucongkoo"},"content":"                        + PRIORITY_DESC_HIGH + validExpectedPersonString,","lastModifiedDate":"2023-10-24"},{"lineNumber":118,"author":{"gitId":"yucongkoo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_ADDRESS, PREFIX_EMAIL, PREFIX_PHONE,","lastModifiedDate":"2023-10-24"},{"lineNumber":119,"author":{"gitId":"yucongkoo"},"content":"                        PREFIX_PRIORITY));","lastModifiedDate":"2023-10-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"yucongkoo"},"content":"        // invalid value followed by valid values","lastModifiedDate":"2023-10-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":139,"author":{"gitId":"yucongkoo"},"content":"        // invalid priority","lastModifiedDate":"2023-10-24"},{"lineNumber":140,"author":{"gitId":"yucongkoo"},"content":"        assertParseFailure(parser, INVALID_PRIORITY_DESC + validExpectedPersonString,","lastModifiedDate":"2023-10-24"},{"lineNumber":141,"author":{"gitId":"yucongkoo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PRIORITY));","lastModifiedDate":"2023-10-24"},{"lineNumber":142,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":160,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":161,"author":{"gitId":"yucongkoo"},"content":"        // invalid priority","lastModifiedDate":"2023-10-24"},{"lineNumber":162,"author":{"gitId":"yucongkoo"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PRIORITY_DESC2,","lastModifiedDate":"2023-10-24"},{"lineNumber":163,"author":{"gitId":"yucongkoo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PRIORITY));","lastModifiedDate":"2023-10-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":170,"author":{"gitId":"yucongkoo"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-10-24"},{"lineNumber":171,"author":{"gitId":"yucongkoo"},"content":"                + PRIORITY_DESC_HIGH, new AddCommand(expectedPerson));","lastModifiedDate":"2023-10-24"},{"lineNumber":172,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":173,"author":{"gitId":"yucongkoo"},"content":"        // missing address","lastModifiedDate":"2023-10-08"},{"lineNumber":174,"author":{"gitId":"yucongkoo"},"content":"        Person expectedPersonWithoutAddress \u003d new PersonBuilder(CALMEN).build();","lastModifiedDate":"2023-10-08"},{"lineNumber":175,"author":{"gitId":"yucongkoo"},"content":"        assertParseSuccess(parser, NAME_DESC_CALMEN + PHONE_DESC_CALMEN + EMAIL_DESC_CALMEN","lastModifiedDate":"2023-10-24"},{"lineNumber":176,"author":{"gitId":"yucongkoo"},"content":"                + PRIORITY_DESC_HIGH, new AddCommand(expectedPersonWithoutAddress));","lastModifiedDate":"2023-10-24"},{"lineNumber":177,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":178,"author":{"gitId":"yucongkoo"},"content":"        // missing priority","lastModifiedDate":"2023-10-24"},{"lineNumber":179,"author":{"gitId":"yucongkoo"},"content":"        Person expectedPersonWithoutPriority \u003d new PersonBuilder(BOB).withPriority(Priority.NONE_PRIORITY_KEYWORD)","lastModifiedDate":"2023-10-24"},{"lineNumber":180,"author":{"gitId":"yucongkoo"},"content":"                .build();","lastModifiedDate":"2023-10-24"},{"lineNumber":181,"author":{"gitId":"yucongkoo"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-24"},{"lineNumber":182,"author":{"gitId":"yucongkoo"},"content":"                + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, new AddCommand(expectedPersonWithoutPriority));","lastModifiedDate":"2023-10-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":222,"author":{"gitId":"yucongkoo"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, NonEmptyAddress.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":228,"author":{"gitId":"yucongkoo"},"content":"        // invalid priority","lastModifiedDate":"2023-10-24"},{"lineNumber":229,"author":{"gitId":"yucongkoo"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-24"},{"lineNumber":230,"author":{"gitId":"yucongkoo"},"content":"                + TAG_DESC_FRIEND + INVALID_PRIORITY_DESC, Priority.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-24"},{"lineNumber":231,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":232,"author":{"gitId":"yucongkoo"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-24"},{"lineNumber":233,"author":{"gitId":"yucongkoo"},"content":"                + TAG_DESC_FRIEND + INVALID_PRIORITY_DESC2, Priority.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-24"},{"lineNumber":234,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"yucongkoo":66,"-":178}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRIORITY_LOW;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.logic.commands.PriorityCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.logic.commands.TagCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.logic.commands.TagCommand.UpdatePersonTagsDescriptor;","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.priority.Priority;","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"LamJiuFong"},"content":"        Person person \u003d new PersonBuilder().withTags(\"dad\").build();","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"Jweewee"},"content":"        assertThrows(ParseException.class, ListCommand.MESSAGE_USAGE, ()","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"Jweewee"},"content":"            -\u003e parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\"));","lastModifiedDate":"2023-10-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"yucongkoo"},"content":"    public void parseCommand_tag() throws Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"yucongkoo"},"content":"        Index testIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":105,"author":{"gitId":"yucongkoo"},"content":"        Set\u003cTag\u003e testSetToAdd \u003d Set.of(new Tag(\"tagToAdd\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"yucongkoo"},"content":"        Set\u003cTag\u003e testSetToDelete \u003d Set.of(new Tag(\"tagToDelete\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"yucongkoo"},"content":"        UpdatePersonTagsDescriptor updatePersonTagsDescriptor \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":108,"author":{"gitId":"yucongkoo"},"content":"                new UpdatePersonTagsDescriptor(testSetToAdd, testSetToDelete);","lastModifiedDate":"2023-10-20"},{"lineNumber":109,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"yucongkoo"},"content":"        TagCommand expectedCommand \u003d new TagCommand(testIndex, updatePersonTagsDescriptor);","lastModifiedDate":"2023-10-20"},{"lineNumber":111,"author":{"gitId":"yucongkoo"},"content":"        Command actualCommand \u003d parser.parseCommand(PersonUtil.getTagCommand(testIndex, updatePersonTagsDescriptor));","lastModifiedDate":"2023-10-20"},{"lineNumber":112,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(expectedCommand, actualCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":116,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":117,"author":{"gitId":"LamJiuFong"},"content":"    public void parseCommand_priority() throws Exception {","lastModifiedDate":"2023-10-23"},{"lineNumber":118,"author":{"gitId":"LamJiuFong"},"content":"        Index testIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-23"},{"lineNumber":119,"author":{"gitId":"LamJiuFong"},"content":"        Priority priority \u003d new Priority(VALID_PRIORITY_LOW);","lastModifiedDate":"2023-10-23"},{"lineNumber":120,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":121,"author":{"gitId":"LamJiuFong"},"content":"        PriorityCommand expectedCommand \u003d new PriorityCommand(testIndex, priority);","lastModifiedDate":"2023-10-23"},{"lineNumber":122,"author":{"gitId":"LamJiuFong"},"content":"        Command actualCommand \u003d parser.parseCommand(PersonUtil.getPriorityCommand(testIndex, priority));","lastModifiedDate":"2023-10-23"},{"lineNumber":123,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":124,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(expectedCommand, actualCommand);","lastModifiedDate":"2023-10-23"},{"lineNumber":125,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":126,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":127,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"yucongkoo":19,"LamJiuFong":16,"-":101,"Jweewee":2}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_WITH_PREFIX_TAG;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PRIORITY_DESC;","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PRIORITY_DESC2;","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PRIORITY_DESC3;","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC2;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_DERRICK;","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PRIORITY_DESC_HIGH;","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PRIORITY_DESC_NONE;","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_WITH_PREFIX_TAG;","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.EditCommand.MESSAGE_EDIT_PRIORITY;","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.EditCommand.MESSAGE_EDIT_TAG;","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.person.NonEmptyAddress;","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"yucongkoo"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, NonEmptyAddress.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":106,"author":{"gitId":"LamJiuFong"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"LamJiuFong"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"LamJiuFong"},"content":"                .build();","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"LamJiuFong"},"content":"        // address","lastModifiedDate":"2023-10-18"},{"lineNumber":157,"author":{"gitId":"LamJiuFong"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_WITH_PREFIX_TAG;","lastModifiedDate":"2023-10-18"},{"lineNumber":158,"author":{"gitId":"LamJiuFong"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_WITH_PREFIX_TAG).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":179,"author":{"gitId":"LamJiuFong"},"content":"        // multiple valid fields repeated","lastModifiedDate":"2023-10-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":181,"author":{"gitId":"LamJiuFong"},"content":"                + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-18"},{"lineNumber":182,"author":{"gitId":"LamJiuFong"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-07-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":196,"author":{"gitId":"LamJiuFong"},"content":"    public void parse_editTag_failure() {","lastModifiedDate":"2023-10-18"},{"lineNumber":197,"author":{"gitId":"LamJiuFong"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-18"},{"lineNumber":198,"author":{"gitId":"LamJiuFong"},"content":"        String exceptionMessage \u003d MESSAGE_EDIT_TAG + \"\\n\";","lastModifiedDate":"2023-10-24"},{"lineNumber":199,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":200,"author":{"gitId":"LamJiuFong"},"content":"        // all fields specified with tag","lastModifiedDate":"2023-10-23"},{"lineNumber":201,"author":{"gitId":"LamJiuFong"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_DERRICK + EMAIL_DESC_AMY + PHONE_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":202,"author":{"gitId":"LamJiuFong"},"content":"                + TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-23"},{"lineNumber":203,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, userInput, exceptionMessage);","lastModifiedDate":"2023-10-24"},{"lineNumber":204,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":205,"author":{"gitId":"LamJiuFong"},"content":"        // all fields specified with invalid tag","lastModifiedDate":"2023-10-23"},{"lineNumber":206,"author":{"gitId":"LamJiuFong"},"content":"        targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-18"},{"lineNumber":207,"author":{"gitId":"LamJiuFong"},"content":"        userInput \u003d targetIndex.getOneBased() + NAME_DESC_DERRICK + EMAIL_DESC_AMY + PHONE_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":208,"author":{"gitId":"LamJiuFong"},"content":"                + INVALID_TAG_DESC;","lastModifiedDate":"2023-10-23"},{"lineNumber":209,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, userInput, exceptionMessage);","lastModifiedDate":"2023-10-24"},{"lineNumber":210,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":211,"author":{"gitId":"LamJiuFong"},"content":"        // all fields specified with empty tag","lastModifiedDate":"2023-10-23"},{"lineNumber":212,"author":{"gitId":"LamJiuFong"},"content":"        targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-23"},{"lineNumber":213,"author":{"gitId":"LamJiuFong"},"content":"        userInput \u003d targetIndex.getOneBased() + NAME_DESC_DERRICK + EMAIL_DESC_AMY + PHONE_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":214,"author":{"gitId":"LamJiuFong"},"content":"                + INVALID_TAG_DESC2;","lastModifiedDate":"2023-10-23"},{"lineNumber":215,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, userInput, exceptionMessage);","lastModifiedDate":"2023-10-24"},{"lineNumber":216,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":218,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":219,"author":{"gitId":"LamJiuFong"},"content":"    public void parse_editPriority_failure() {","lastModifiedDate":"2023-10-23"},{"lineNumber":220,"author":{"gitId":"LamJiuFong"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-23"},{"lineNumber":221,"author":{"gitId":"LamJiuFong"},"content":"        String exceptionMessage \u003d MESSAGE_EDIT_PRIORITY + \"\\n\";","lastModifiedDate":"2023-10-24"},{"lineNumber":222,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":223,"author":{"gitId":"LamJiuFong"},"content":"        // all fields specified with priority high","lastModifiedDate":"2023-10-23"},{"lineNumber":224,"author":{"gitId":"LamJiuFong"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_DERRICK + EMAIL_DESC_AMY + PHONE_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":225,"author":{"gitId":"LamJiuFong"},"content":"                + PRIORITY_DESC_HIGH;","lastModifiedDate":"2023-10-23"},{"lineNumber":226,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, userInput, exceptionMessage);","lastModifiedDate":"2023-10-24"},{"lineNumber":227,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":228,"author":{"gitId":"LamJiuFong"},"content":"        // all fields specified with priority none","lastModifiedDate":"2023-10-23"},{"lineNumber":229,"author":{"gitId":"LamJiuFong"},"content":"        targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-18"},{"lineNumber":230,"author":{"gitId":"LamJiuFong"},"content":"        userInput \u003d targetIndex.getOneBased() + NAME_DESC_DERRICK + EMAIL_DESC_AMY + PHONE_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":231,"author":{"gitId":"LamJiuFong"},"content":"                + PRIORITY_DESC_NONE;","lastModifiedDate":"2023-10-23"},{"lineNumber":232,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, userInput, exceptionMessage);","lastModifiedDate":"2023-10-24"},{"lineNumber":233,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":234,"author":{"gitId":"LamJiuFong"},"content":"        // invalid priority","lastModifiedDate":"2023-10-23"},{"lineNumber":235,"author":{"gitId":"LamJiuFong"},"content":"        userInput \u003d targetIndex.getOneBased() + NAME_DESC_DERRICK + EMAIL_DESC_AMY + PHONE_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":236,"author":{"gitId":"LamJiuFong"},"content":"                + INVALID_PRIORITY_DESC;","lastModifiedDate":"2023-10-23"},{"lineNumber":237,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, userInput, exceptionMessage);","lastModifiedDate":"2023-10-24"},{"lineNumber":238,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":239,"author":{"gitId":"LamJiuFong"},"content":"        userInput \u003d targetIndex.getOneBased() + NAME_DESC_DERRICK + EMAIL_DESC_AMY + PHONE_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":240,"author":{"gitId":"LamJiuFong"},"content":"                + INVALID_PRIORITY_DESC2;","lastModifiedDate":"2023-10-23"},{"lineNumber":241,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, userInput, exceptionMessage);","lastModifiedDate":"2023-10-24"},{"lineNumber":242,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":243,"author":{"gitId":"LamJiuFong"},"content":"        // empty priority","lastModifiedDate":"2023-10-23"},{"lineNumber":244,"author":{"gitId":"LamJiuFong"},"content":"        userInput \u003d targetIndex.getOneBased() + NAME_DESC_DERRICK + EMAIL_DESC_AMY + PHONE_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":245,"author":{"gitId":"LamJiuFong"},"content":"                + INVALID_PRIORITY_DESC3;","lastModifiedDate":"2023-10-23"},{"lineNumber":246,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, userInput, exceptionMessage);","lastModifiedDate":"2023-10-24"},{"lineNumber":247,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":249,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":250,"author":{"gitId":"LamJiuFong"},"content":"    public void parse_bothTagAndPriority_failure() {","lastModifiedDate":"2023-10-23"},{"lineNumber":251,"author":{"gitId":"LamJiuFong"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-23"},{"lineNumber":252,"author":{"gitId":"LamJiuFong"},"content":"        String exceptionMessage \u003d MESSAGE_EDIT_TAG + \"\\n\" + MESSAGE_EDIT_PRIORITY + \"\\n\";","lastModifiedDate":"2023-10-24"},{"lineNumber":253,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":254,"author":{"gitId":"LamJiuFong"},"content":"        // both tags and priority are valid","lastModifiedDate":"2023-10-23"},{"lineNumber":255,"author":{"gitId":"LamJiuFong"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_DERRICK + EMAIL_DESC_AMY + PHONE_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":256,"author":{"gitId":"LamJiuFong"},"content":"                + TAG_DESC_FRIEND + PRIORITY_DESC_HIGH;","lastModifiedDate":"2023-10-23"},{"lineNumber":257,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, userInput, exceptionMessage);","lastModifiedDate":"2023-10-24"},{"lineNumber":258,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":259,"author":{"gitId":"LamJiuFong"},"content":"        // empty tag","lastModifiedDate":"2023-10-23"},{"lineNumber":260,"author":{"gitId":"LamJiuFong"},"content":"        userInput \u003d targetIndex.getOneBased() + NAME_DESC_DERRICK + EMAIL_DESC_AMY + PHONE_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":261,"author":{"gitId":"LamJiuFong"},"content":"                + INVALID_TAG_DESC2 + PRIORITY_DESC_HIGH;","lastModifiedDate":"2023-10-23"},{"lineNumber":262,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, userInput, exceptionMessage);","lastModifiedDate":"2023-10-24"},{"lineNumber":263,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":264,"author":{"gitId":"LamJiuFong"},"content":"        // empty priority","lastModifiedDate":"2023-10-23"},{"lineNumber":265,"author":{"gitId":"LamJiuFong"},"content":"        userInput \u003d targetIndex.getOneBased() + NAME_DESC_DERRICK + EMAIL_DESC_AMY + PHONE_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":266,"author":{"gitId":"LamJiuFong"},"content":"                + TAG_DESC_FRIEND + INVALID_PRIORITY_DESC3;","lastModifiedDate":"2023-10-23"},{"lineNumber":267,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, userInput, exceptionMessage);","lastModifiedDate":"2023-10-24"},{"lineNumber":268,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":269,"author":{"gitId":"LamJiuFong"},"content":"        // both tag and priority are empty","lastModifiedDate":"2023-10-23"},{"lineNumber":270,"author":{"gitId":"LamJiuFong"},"content":"        userInput \u003d targetIndex.getOneBased() + NAME_DESC_DERRICK + EMAIL_DESC_AMY + PHONE_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":271,"author":{"gitId":"LamJiuFong"},"content":"                + INVALID_TAG_DESC2 + INVALID_PRIORITY_DESC3;","lastModifiedDate":"2023-10-23"},{"lineNumber":272,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, userInput, exceptionMessage);","lastModifiedDate":"2023-10-24"},{"lineNumber":273,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":274,"author":{"gitId":"LamJiuFong"},"content":"        // invalid tag","lastModifiedDate":"2023-10-23"},{"lineNumber":275,"author":{"gitId":"LamJiuFong"},"content":"        userInput \u003d targetIndex.getOneBased() + NAME_DESC_DERRICK + EMAIL_DESC_AMY + PHONE_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":276,"author":{"gitId":"LamJiuFong"},"content":"                + INVALID_TAG_DESC + PRIORITY_DESC_HIGH;","lastModifiedDate":"2023-10-23"},{"lineNumber":277,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, userInput, exceptionMessage);","lastModifiedDate":"2023-10-24"},{"lineNumber":278,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":279,"author":{"gitId":"LamJiuFong"},"content":"        // invalid priority","lastModifiedDate":"2023-10-23"},{"lineNumber":280,"author":{"gitId":"LamJiuFong"},"content":"        userInput \u003d targetIndex.getOneBased() + NAME_DESC_DERRICK + EMAIL_DESC_AMY + PHONE_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":281,"author":{"gitId":"LamJiuFong"},"content":"                + TAG_DESC_FRIEND + INVALID_PRIORITY_DESC;","lastModifiedDate":"2023-10-23"},{"lineNumber":282,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, userInput, exceptionMessage);","lastModifiedDate":"2023-10-24"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":284,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"yucongkoo":2,"LamJiuFong":105,"-":177}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.person.EmptyAddress;","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.person.NonEmptyAddress;","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"TehOPanas"},"content":"    private static final String VALID_PHONE \u003d \"12345678\";","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"    private static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"    private static final String VALID_TAG_NEIGHBOUR \u003d \"neighbour\";","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"yucongkoo"},"content":"        Address expectedAddress \u003d new NonEmptyAddress(VALID_ADDRESS);","lastModifiedDate":"2023-10-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"yucongkoo"},"content":"        Address expectedAddress \u003d new NonEmptyAddress(VALID_ADDRESS);","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":126,"author":{"gitId":"yucongkoo"},"content":"    public void parseAddress_nullValue_returnsEmptyAddress() throws Exception {","lastModifiedDate":"2023-10-08"},{"lineNumber":127,"author":{"gitId":"yucongkoo"},"content":"        Address expectedAddress \u003d EmptyAddress.getEmptyAddress();","lastModifiedDate":"2023-10-21"},{"lineNumber":128,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(null));","lastModifiedDate":"2023-10-08"},{"lineNumber":129,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":130,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"yucongkoo"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_FRIEND);","lastModifiedDate":"2023-10-17"},{"lineNumber":167,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_FRIEND));","lastModifiedDate":"2023-10-17"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"yucongkoo"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_FRIEND + WHITESPACE;","lastModifiedDate":"2023-10-17"},{"lineNumber":173,"author":{"gitId":"yucongkoo"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_FRIEND);","lastModifiedDate":"2023-10-17"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":184,"author":{"gitId":"yucongkoo"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_FRIEND, INVALID_TAG)));","lastModifiedDate":"2023-10-17"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"yucongkoo"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_FRIEND, VALID_TAG_NEIGHBOUR));","lastModifiedDate":"2023-10-17"},{"lineNumber":195,"author":{"gitId":"yucongkoo"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003c\u003e(Arrays.asList(new Tag(VALID_TAG_FRIEND), new Tag(VALID_TAG_NEIGHBOUR)));","lastModifiedDate":"2023-10-17"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"TehOPanas":1,"yucongkoo":19,"-":179}},{"path":"src/test/java/seedu/address/logic/parser/PriorityCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LamJiuFong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PRIORITY;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PRIORITY2;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PRIORITY3;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRIORITY_HIGH;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRIORITY_NONE;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.model.priority.Priority.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"LamJiuFong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.logic.commands.PriorityCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.priority.Priority;","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"LamJiuFong"},"content":"public class PriorityCommandParserTest {","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"LamJiuFong"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"LamJiuFong"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, PriorityCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"LamJiuFong"},"content":"    private Parser parser \u003d new PriorityCommandParser();","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"LamJiuFong"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"LamJiuFong"},"content":"        // no index specified","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, VALID_PRIORITY_HIGH, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"LamJiuFong"},"content":"        // no field specified","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, \"1\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"LamJiuFong"},"content":"        // no index and no field specified","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"LamJiuFong"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"LamJiuFong"},"content":"        // negative index","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, \"-5\" + VALID_PRIORITY_HIGH, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"LamJiuFong"},"content":"        // zero index","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, \"0\" + VALID_PRIORITY_HIGH, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"LamJiuFong"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, \"one\" + VALID_PRIORITY_HIGH, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"LamJiuFong"},"content":"    public void parse_invalidPriority_failure() {","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, \"1 \" + INVALID_PRIORITY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, \"1 \" + INVALID_PRIORITY2, MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, \"1 \" + INVALID_PRIORITY3, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"LamJiuFong"},"content":"    public void parse_validFields_success() {","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"LamJiuFong"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"LamJiuFong"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + VALID_PRIORITY_HIGH;","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"LamJiuFong"},"content":"        Priority highPriority \u003d new Priority(Priority.HIGH_PRIORITY_KEYWORD);","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"LamJiuFong"},"content":"        assertParseSuccess(parser, userInput, new PriorityCommand(targetIndex, highPriority));","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"LamJiuFong"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \" + VALID_PRIORITY_NONE;","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"LamJiuFong"},"content":"        Priority nonePriority \u003d new Priority(Priority.NONE_PRIORITY_KEYWORD);","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"LamJiuFong"},"content":"        assertParseSuccess(parser, userInput, new PriorityCommand(targetIndex, nonePriority));","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"LamJiuFong"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"LamJiuFong":68}},{"path":"src/test/java/seedu/address/logic/parser/TagCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADD_TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DELETE_TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADD_TAG_DESC;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DELETE_TAG_DESC;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_TAG;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DELETE_TAG;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.logic.commands.TagCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.logic.commands.TagCommand.UpdatePersonTagsDescriptor;","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"public class TagCommandParserTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, TagCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"    private TagCommandParser parser \u003d new TagCommandParser();","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"    private Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"    private Tag friendTag \u003d new Tag(VALID_TAG_FRIEND);","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"    private Tag husbandTag \u003d new Tag(VALID_TAG_HUSBAND);","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"    private UpdatePersonTagsDescriptor updatePersonTagsDescriptor \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"            new UpdatePersonTagsDescriptor(new HashSet\u003c\u003e(), new HashSet\u003c\u003e());","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"    public void parse_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"        assertThrows(NullPointerException.class, () -\u003e parser.parse(null));","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"    public void parse_onlyAddTag_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"yucongkoo"},"content":"        // only add one tag","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"yucongkoo"},"content":"        updatePersonTagsDescriptor.setTagsToAdd(Set.of(friendTag));","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"yucongkoo"},"content":"        updatePersonTagsDescriptor.setTagsToDelete(new HashSet\u003c\u003e());","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"yucongkoo"},"content":"        Command expectedCommand \u003d new TagCommand(targetIndex, updatePersonTagsDescriptor);","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"yucongkoo"},"content":"        String userInput \u003d String.format(\"%d %s\",","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"yucongkoo"},"content":"                targetIndex.getOneBased(),","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"yucongkoo"},"content":"                PREFIX_ADD_TAG + VALID_TAG_FRIEND);","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"yucongkoo"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"yucongkoo"},"content":"        // add multiple tags","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"yucongkoo"},"content":"        updatePersonTagsDescriptor.setTagsToAdd(Set.of(friendTag, husbandTag));","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"yucongkoo"},"content":"        updatePersonTagsDescriptor.setTagsToDelete(new HashSet\u003c\u003e());","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"yucongkoo"},"content":"        expectedCommand \u003d new TagCommand(targetIndex, updatePersonTagsDescriptor);","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"yucongkoo"},"content":"        userInput \u003d String.format(\"%d %s %s\",","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"yucongkoo"},"content":"                targetIndex.getOneBased(),","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"yucongkoo"},"content":"                PREFIX_ADD_TAG + VALID_TAG_FRIEND,","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"yucongkoo"},"content":"                PREFIX_ADD_TAG + VALID_TAG_HUSBAND);","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"yucongkoo"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"yucongkoo"},"content":"    public void parse_onlyDeleteTag_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"yucongkoo"},"content":"        // only add one tag","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"yucongkoo"},"content":"        updatePersonTagsDescriptor.setTagsToAdd(new HashSet\u003c\u003e());","lastModifiedDate":"2023-10-20"},{"lineNumber":73,"author":{"gitId":"yucongkoo"},"content":"        updatePersonTagsDescriptor.setTagsToDelete(Set.of(friendTag));","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"yucongkoo"},"content":"        Command expectedCommand \u003d new TagCommand(targetIndex, updatePersonTagsDescriptor);","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"yucongkoo"},"content":"        String userInput \u003d String.format(\"%d %s\",","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"yucongkoo"},"content":"                targetIndex.getOneBased(),","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"yucongkoo"},"content":"                PREFIX_DELETE_TAG + VALID_TAG_FRIEND);","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"yucongkoo"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"yucongkoo"},"content":"        // add multiple tags","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"yucongkoo"},"content":"        updatePersonTagsDescriptor.setTagsToAdd(new HashSet\u003c\u003e());","lastModifiedDate":"2023-10-20"},{"lineNumber":82,"author":{"gitId":"yucongkoo"},"content":"        updatePersonTagsDescriptor.setTagsToDelete(Set.of(friendTag, husbandTag));","lastModifiedDate":"2023-10-20"},{"lineNumber":83,"author":{"gitId":"yucongkoo"},"content":"        expectedCommand \u003d new TagCommand(targetIndex, updatePersonTagsDescriptor);","lastModifiedDate":"2023-10-20"},{"lineNumber":84,"author":{"gitId":"yucongkoo"},"content":"        userInput \u003d String.format(\"%d %s %s\",","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"yucongkoo"},"content":"                targetIndex.getOneBased(),","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"yucongkoo"},"content":"                PREFIX_DELETE_TAG + VALID_TAG_FRIEND,","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"yucongkoo"},"content":"                PREFIX_DELETE_TAG + VALID_TAG_HUSBAND);","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"yucongkoo"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":92,"author":{"gitId":"yucongkoo"},"content":"    public void parse_bothAddAndDeleteTags_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"yucongkoo"},"content":"        updatePersonTagsDescriptor.setTagsToAdd(Set.of(friendTag));","lastModifiedDate":"2023-10-20"},{"lineNumber":94,"author":{"gitId":"yucongkoo"},"content":"        updatePersonTagsDescriptor.setTagsToDelete(Set.of(husbandTag));","lastModifiedDate":"2023-10-20"},{"lineNumber":95,"author":{"gitId":"yucongkoo"},"content":"        Command expectedCommand \u003d new TagCommand(targetIndex, updatePersonTagsDescriptor);","lastModifiedDate":"2023-10-20"},{"lineNumber":96,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"yucongkoo"},"content":"        // add tag first before delete tag","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"yucongkoo"},"content":"        String userInput \u003d String.format(\"%d %s %s\",","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"yucongkoo"},"content":"                targetIndex.getOneBased(),","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"yucongkoo"},"content":"                PREFIX_ADD_TAG + VALID_TAG_FRIEND,","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"yucongkoo"},"content":"                PREFIX_DELETE_TAG + VALID_TAG_HUSBAND);","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"yucongkoo"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"yucongkoo"},"content":"        // delete tag first before add tag","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"yucongkoo"},"content":"        userInput \u003d String.format(\"%d %s %s\",","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"yucongkoo"},"content":"                targetIndex.getOneBased(),","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"yucongkoo"},"content":"                PREFIX_DELETE_TAG + VALID_TAG_HUSBAND,","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"yucongkoo"},"content":"                PREFIX_ADD_TAG + VALID_TAG_FRIEND);","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"yucongkoo"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"yucongkoo"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"yucongkoo"},"content":"        // no index specified","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"yucongkoo"},"content":"        assertParseFailure(parser, ADD_TAG_DESC_FRIEND, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"yucongkoo"},"content":"        // no field specified","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"yucongkoo"},"content":"        assertParseFailure(parser, \"1\", TagCommand.MESSAGE_NOT_UPDATED);","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"yucongkoo"},"content":"        // no index and field specified","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"yucongkoo"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"yucongkoo"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"yucongkoo"},"content":"        // negative index","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"yucongkoo"},"content":"        assertParseFailure(parser, \"-5\" + ADD_TAG_DESC_FRIEND, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"yucongkoo"},"content":"        // zero index","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"yucongkoo"},"content":"        assertParseFailure(parser, \"0\" + ADD_TAG_DESC_FRIEND, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"yucongkoo"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"yucongkoo"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"yucongkoo"},"content":"        assertParseFailure(parser, \"random string 1\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"yucongkoo"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"yucongkoo"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"yucongkoo"},"content":"    public void parse_invalidValues_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"yucongkoo"},"content":"        // invalid tag in add tag","lastModifiedDate":"2023-10-17"},{"lineNumber":143,"author":{"gitId":"yucongkoo"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADD_TAG_DESC, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":144,"author":{"gitId":"yucongkoo"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"yucongkoo"},"content":"                \"1\" + INVALID_ADD_TAG_DESC + DELETE_TAG_DESC_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":147,"author":{"gitId":"yucongkoo"},"content":"        // invalid tag in delete tag","lastModifiedDate":"2023-10-17"},{"lineNumber":148,"author":{"gitId":"yucongkoo"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DELETE_TAG_DESC, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":149,"author":{"gitId":"yucongkoo"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-17"},{"lineNumber":150,"author":{"gitId":"yucongkoo"},"content":"                \"1\" + ADD_TAG_DESC_FRIEND + INVALID_DELETE_TAG_DESC, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":151,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":152,"author":{"gitId":"yucongkoo"},"content":"        // both invalid values","lastModifiedDate":"2023-10-17"},{"lineNumber":153,"author":{"gitId":"yucongkoo"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-17"},{"lineNumber":154,"author":{"gitId":"yucongkoo"},"content":"                \"1\" + INVALID_ADD_TAG_DESC + INVALID_DELETE_TAG_DESC, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":155,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":156,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"yucongkoo":156}},{"path":"src/test/java/seedu/address/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"    public void isEmptyAddress() {","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"        // empty address","lastModifiedDate":"2023-10-08"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"        assertTrue(EmptyAddress.getEmptyAddress().isEmptyAddress());","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"        // non-empty address","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"        assertFalse(new NonEmptyAddress(\"Some address\").isEmptyAddress());","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"        // address with default non-empty value","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"        assertFalse(new NonEmptyAddress(EmptyAddress.DUMMY_VALUE_FOR_EMPTY_ADDRESS).isEmptyAddress());","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"    public void getValue() {","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"        // empty address","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"        Address emptyAddress \u003d EmptyAddress.getEmptyAddress();","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(EmptyAddress.DUMMY_VALUE_FOR_EMPTY_ADDRESS, emptyAddress.getValue());","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"        // non-empty address","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"        Address nonEmptyAddress \u003d new NonEmptyAddress(\"Some address\");","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(\"Some address\", nonEmptyAddress.getValue());","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"yucongkoo":16,"-":16}},{"path":"src/test/java/seedu/address/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exa..mple.com\")); // domain part has two consecutive periods","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than 2 chars","lastModifiedDate":"2023-10-11"},{"lineNumber":52,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.computer\")); // top level domain has more than 7 chars","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.123\")); // top level domain has numbers","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.*-/+\")); // top level domain has special characters","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(Email.isValidEmail(\"test@localhost\")); // alphabets only, no top level domain","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(Email.isValidEmail(\"123@145\")); // numeric local part and domain name with no top level domain","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"TehOPanas"},"content":"        assertTrue(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2023-10-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":68,"author":{"gitId":"TehOPanas"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack\u00261190@example.com\")); // \u0027\u0026\u0027 symbol in local part","lastModifiedDate":"2023-10-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":70,"author":{"gitId":"TehOPanas"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack1190@exam-ple.com\")); // hyphen in domain part","lastModifiedDate":"2023-10-11"},{"lineNumber":71,"author":{"gitId":"TehOPanas"},"content":"        assertTrue(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2023-10-11"},{"lineNumber":72,"author":{"gitId":"TehOPanas"},"content":"        assertTrue(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2023-10-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"TehOPanas"},"content":"        Email email \u003d new Email(\"valid@email.com\");","lastModifiedDate":"2023-10-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"TehOPanas"},"content":"        assertTrue(email.equals(new Email(\"valid@email.com\")));","lastModifiedDate":"2023-10-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(email));","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(email.equals(new Email(\"other.valid@email.com\")));","lastModifiedDate":"2023-10-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"TehOPanas":20,"-":78}},{"path":"src/test/java/seedu/address/model/person/EmptyAddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"public class EmptyAddressTest {","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"    public void equals() {","lastModifiedDate":"2023-10-08"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"        Address emptyAddress \u003d EmptyAddress.getEmptyAddress();","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"        // empty address -\u003e returns true","lastModifiedDate":"2023-10-08"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"        assertTrue(emptyAddress.equals(EmptyAddress.getEmptyAddress()));","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"        assertTrue(emptyAddress.equals(emptyAddress));","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-08"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"        assertFalse(emptyAddress.equals(null));","lastModifiedDate":"2023-10-08"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-08"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"        assertFalse(emptyAddress.equals(5.0f));","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"        // non-empty address with different value -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"        assertFalse(emptyAddress.equals(new NonEmptyAddress(\"Other Valid Address\")));","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"        // non-empty address with same value -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"        assertFalse(emptyAddress.equals(new NonEmptyAddress(EmptyAddress.DUMMY_VALUE_FOR_EMPTY_ADDRESS)));","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"yucongkoo":31}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"songfangyl"},"content":"        // Keywords match but there are some words between the keywords","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Carol\"));","lastModifiedDate":"2023-10-11"},{"lineNumber":62,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob Carol\").build()));","lastModifiedDate":"2023-10-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"songfangyl"},"content":"    public void test_nameContainsKeywordsAsPrefix_returnsTrue() {","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"songfangyl"},"content":"        // One Keyword","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"songfangyl"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Al\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob Carol\").build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"songfangyl"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"a\", \"b\", \"ca\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob Carol\").build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"songfangyl"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Ca\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"songfangyl"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aL\", \"bO\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"songfangyl"},"content":"        // Keywords match but there are some words between the keywords","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"al\", \"c\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob Carol\").build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":99,"author":{"gitId":"TehOPanas"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345678\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2023-10-11"},{"lineNumber":100,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345678\")","lastModifiedDate":"2023-10-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"songfangyl"},"content":"    public void test_nameDoesNotContainKeywordsAsPrefix_returnsFalse() {","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"songfangyl"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"songfangyl"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"lice\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":110,"author":{"gitId":"songfangyl"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"ob\", \"lice\", \"rol\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":112,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob Carol\").build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":114,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"TehOPanas":2,"songfangyl":37,"-":84}},{"path":"src/test/java/seedu/address/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters and shorter than 64 characters","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(Name.isValidName(\"Haliphibourous Maximilian Hippopotolosoto; \"","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"TehOPanas"},"content":"                + \"Eater of The Five Golden Suns, \"","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"TehOPanas"},"content":"                + \"Son of the Great Sultan Kolosomonomia\")); //name longer than 64 characters and special characters","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(Name.isValidName(\"Haliphibourous Maximilian Hippopotolosoto \"","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"TehOPanas"},"content":"                + \"Eater of The Five Golden Suns \"","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"TehOPanas"},"content":"                + \"Son of the Great Sultan Kolosomonomia\")); //name longer than 64 characters and no special characters","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":44,"author":{"gitId":"TehOPanas"},"content":"        assertTrue(Name.isValidName(\"SPONGEBOB\")); // only capital letters","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"TehOPanas"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names shorter than 64 characters","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Name name \u003d new Name(\"Valid Name\");","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(new Name(\"Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(new Name(\"Other Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"TehOPanas":9,"-":58}},{"path":"src/test/java/seedu/address/model/person/NonEmptyAddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"public class NonEmptyAddressTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"        assertThrows(NullPointerException.class, () -\u003e new NonEmptyAddress(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new NonEmptyAddress(invalidAddress));","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"    public void isValidAddress() {","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"        // null address","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"        assertThrows(NullPointerException.class, () -\u003e NonEmptyAddress.isValidAddress(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"        // invalid addresses","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"        assertFalse(NonEmptyAddress.isValidAddress(\"\")); // empty string","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"        assertFalse(NonEmptyAddress.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"        // valid addresses","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"        assertTrue(NonEmptyAddress.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"        assertTrue(NonEmptyAddress.isValidAddress(\"-\")); // one character","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"        // long address","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"        assertTrue(NonEmptyAddress.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\"));","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"    public void equals() {","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"        Address address \u003d new NonEmptyAddress(\"Valid Address\");","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"        Address addressWithValueOfEmptyAddress \u003d new NonEmptyAddress(EmptyAddress.DUMMY_VALUE_FOR_EMPTY_ADDRESS);","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"        assertTrue(address.equals(new NonEmptyAddress(\"Valid Address\")));","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"yucongkoo"},"content":"        assertTrue(address.equals(address));","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"yucongkoo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"yucongkoo"},"content":"        assertFalse(address.equals(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"yucongkoo"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"yucongkoo"},"content":"        assertFalse(address.equals(5.0f));","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"yucongkoo"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"yucongkoo"},"content":"        assertFalse(address.equals(new NonEmptyAddress(\"Other Valid Address\")));","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"yucongkoo"},"content":"        // empty address -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"yucongkoo"},"content":"        assertFalse(address.equals(EmptyAddress.getEmptyAddress()));","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"yucongkoo"},"content":"        // valid address with same value as empty address should not be equal to empty address","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"yucongkoo"},"content":"        assertFalse(addressWithValueOfEmptyAddress.equals(EmptyAddress.getEmptyAddress()));","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"yucongkoo":64}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_DERRICK;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRIORITY_HIGH;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRIORITY_LOW;","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRIORITY_NONE;","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.model.person.Person.createPersonWithUpdatedPriority;","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.model.person.Person.createPersonWithUpdatedTags;","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.testutil.TypicalPersons.DERRICK;","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":28,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.priority.Priority;","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"LamJiuFong"},"content":"    public void constructor_oneNullField_throwsNullPointerException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"LamJiuFong"},"content":"        Name validName \u003d new Name(VALID_NAME_BOB);","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"LamJiuFong"},"content":"        Phone validPhone \u003d new Phone(VALID_PHONE_BOB);","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"LamJiuFong"},"content":"        Email validEmail \u003d new Email(VALID_EMAIL_BOB);","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"LamJiuFong"},"content":"        Address validAddress \u003d new NonEmptyAddress(VALID_ADDRESS_BOB);","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"LamJiuFong"},"content":"        Set\u003cTag\u003e validTags \u003d new HashSet\u003c\u003e() {{","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"LamJiuFong"},"content":"                add(new Tag(VALID_TAG_FRIEND));","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"LamJiuFong"},"content":"            }};","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"LamJiuFong"},"content":"        Priority validPriority \u003d new Priority(VALID_PRIORITY_HIGH);","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"LamJiuFong"},"content":"        // with priority field","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"LamJiuFong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Person(null, validPhone, validEmail, validAddress,","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"LamJiuFong"},"content":"                validTags, validPriority));","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"LamJiuFong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Person(validName, null, validEmail, validAddress,","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"LamJiuFong"},"content":"                validTags, validPriority));","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"LamJiuFong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Person(validName, validPhone, null, validAddress,","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"LamJiuFong"},"content":"                validTags, validPriority));","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"LamJiuFong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Person(validName, validPhone, validEmail, null,","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"LamJiuFong"},"content":"                validTags, validPriority));","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"LamJiuFong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Person(validName, validPhone, validEmail, validAddress,","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"LamJiuFong"},"content":"                null, validPriority));","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"LamJiuFong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Person(validName, validPhone, validEmail, validAddress,","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"LamJiuFong"},"content":"                validTags, null));","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"LamJiuFong"},"content":"        // without priority field","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"LamJiuFong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Person(null, validPhone, validEmail, validAddress,","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"LamJiuFong"},"content":"                validTags));","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"LamJiuFong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Person(validName, null, validEmail, validAddress,","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"LamJiuFong"},"content":"                validTags));","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"LamJiuFong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Person(validName, validPhone, null, validAddress,","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"LamJiuFong"},"content":"                validTags));","lastModifiedDate":"2023-10-23"},{"lineNumber":72,"author":{"gitId":"LamJiuFong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Person(validName, validPhone, validEmail, null,","lastModifiedDate":"2023-10-23"},{"lineNumber":73,"author":{"gitId":"LamJiuFong"},"content":"                validTags));","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"LamJiuFong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Person(validName, validPhone, validEmail, validAddress,","lastModifiedDate":"2023-10-23"},{"lineNumber":75,"author":{"gitId":"LamJiuFong"},"content":"                null));","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":78,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"LamJiuFong"},"content":"    public void constructor_allFieldsValid_success() {","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"LamJiuFong"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withPriority(\"-\").build();","lastModifiedDate":"2023-10-23"},{"lineNumber":81,"author":{"gitId":"LamJiuFong"},"content":"        Name validName \u003d new Name(VALID_NAME_BOB);","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"LamJiuFong"},"content":"        Phone validPhone \u003d new Phone(VALID_PHONE_BOB);","lastModifiedDate":"2023-10-23"},{"lineNumber":83,"author":{"gitId":"LamJiuFong"},"content":"        Email validEmail \u003d new Email(VALID_EMAIL_BOB);","lastModifiedDate":"2023-10-23"},{"lineNumber":84,"author":{"gitId":"LamJiuFong"},"content":"        Address validAddress \u003d new NonEmptyAddress(VALID_ADDRESS_BOB);","lastModifiedDate":"2023-10-23"},{"lineNumber":85,"author":{"gitId":"LamJiuFong"},"content":"        Set\u003cTag\u003e validTags \u003d new HashSet\u003c\u003e() {{","lastModifiedDate":"2023-10-23"},{"lineNumber":86,"author":{"gitId":"LamJiuFong"},"content":"                add(new Tag(VALID_TAG_FRIEND));","lastModifiedDate":"2023-10-23"},{"lineNumber":87,"author":{"gitId":"LamJiuFong"},"content":"                add(new Tag(VALID_TAG_HUSBAND));","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"LamJiuFong"},"content":"            }};","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"LamJiuFong"},"content":"        Priority validPriority \u003d new Priority(VALID_PRIORITY_NONE);","lastModifiedDate":"2023-10-23"},{"lineNumber":90,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":91,"author":{"gitId":"LamJiuFong"},"content":"        // with priority field","lastModifiedDate":"2023-10-23"},{"lineNumber":92,"author":{"gitId":"LamJiuFong"},"content":"        Person testPerson \u003d new Person(validName, validPhone, validEmail, validAddress, validTags, validPriority);","lastModifiedDate":"2023-10-23"},{"lineNumber":93,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(expectedPerson, testPerson);","lastModifiedDate":"2023-10-23"},{"lineNumber":94,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":95,"author":{"gitId":"LamJiuFong"},"content":"        // without priority field","lastModifiedDate":"2023-10-23"},{"lineNumber":96,"author":{"gitId":"LamJiuFong"},"content":"        testPerson \u003d new Person(validName, validPhone, validEmail, validAddress, validTags);","lastModifiedDate":"2023-10-23"},{"lineNumber":97,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(expectedPerson, testPerson);","lastModifiedDate":"2023-10-23"},{"lineNumber":98,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":99,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":100,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":111,"author":{"gitId":"LamJiuFong"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).withPriority(VALID_PRIORITY_HIGH)","lastModifiedDate":"2023-10-23"},{"lineNumber":112,"author":{"gitId":"LamJiuFong"},"content":"                .build();","lastModifiedDate":"2023-10-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"LamJiuFong"},"content":"        Person editedDerrick \u003d new PersonBuilder(DERRICK).withName(VALID_NAME_DERRICK.toLowerCase()).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":124,"author":{"gitId":"LamJiuFong"},"content":"        assertFalse(DERRICK.isSamePerson(editedDerrick));","lastModifiedDate":"2023-10-23"},{"lineNumber":125,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":130,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":131,"author":{"gitId":"LamJiuFong"},"content":"        nameWithTrailingSpaces \u003d VALID_NAME_DERRICK + \" \";","lastModifiedDate":"2023-10-23"},{"lineNumber":132,"author":{"gitId":"LamJiuFong"},"content":"        editedDerrick \u003d new PersonBuilder(DERRICK).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":133,"author":{"gitId":"LamJiuFong"},"content":"        assertFalse(DERRICK.isSamePerson(editedDerrick));","lastModifiedDate":"2023-10-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"yucongkoo"},"content":"    public void createPersonWithUpdatedTagsTest() {","lastModifiedDate":"2023-10-20"},{"lineNumber":138,"author":{"gitId":"yucongkoo"},"content":"        Person bobWithoutTags \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"yucongkoo"},"content":"                .withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":140,"author":{"gitId":"yucongkoo"},"content":"        Person bobWithHusbandTag \u003d new PersonBuilder(bobWithoutTags).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":141,"author":{"gitId":"yucongkoo"},"content":"        Person bobWithFriendTag \u003d new PersonBuilder(bobWithoutTags).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"yucongkoo"},"content":"        Person bobWithHusbandAndFriendTag \u003d new PersonBuilder(bobWithoutTags)","lastModifiedDate":"2023-10-16"},{"lineNumber":143,"author":{"gitId":"yucongkoo"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":145,"author":{"gitId":"yucongkoo"},"content":"        Tag friendTag \u003d new Tag(VALID_TAG_FRIEND);","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"yucongkoo"},"content":"        Tag husbandTag \u003d new Tag(VALID_TAG_HUSBAND);","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"yucongkoo"},"content":"        Set\u003cTag\u003e emptyTagsSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-16"},{"lineNumber":148,"author":{"gitId":"yucongkoo"},"content":"        Set\u003cTag\u003e friendTagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-16"},{"lineNumber":149,"author":{"gitId":"yucongkoo"},"content":"        Set\u003cTag\u003e husbandTagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-16"},{"lineNumber":150,"author":{"gitId":"yucongkoo"},"content":"        Set\u003cTag\u003e husbandAndFriendTagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-16"},{"lineNumber":151,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":152,"author":{"gitId":"yucongkoo"},"content":"        friendTagSet.add(friendTag);","lastModifiedDate":"2023-10-16"},{"lineNumber":153,"author":{"gitId":"yucongkoo"},"content":"        husbandTagSet.add(husbandTag);","lastModifiedDate":"2023-10-16"},{"lineNumber":154,"author":{"gitId":"yucongkoo"},"content":"        husbandAndFriendTagSet.add(friendTag);","lastModifiedDate":"2023-10-16"},{"lineNumber":155,"author":{"gitId":"yucongkoo"},"content":"        husbandAndFriendTagSet.add(husbandTag);","lastModifiedDate":"2023-10-16"},{"lineNumber":156,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":157,"author":{"gitId":"yucongkoo"},"content":"        // do not update tag of person","lastModifiedDate":"2023-10-16"},{"lineNumber":158,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(bobWithoutTags, createPersonWithUpdatedTags(bobWithoutTags, emptyTagsSet, emptyTagsSet));","lastModifiedDate":"2023-10-20"},{"lineNumber":159,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(bobWithFriendTag, createPersonWithUpdatedTags(bobWithFriendTag, emptyTagsSet, emptyTagsSet));","lastModifiedDate":"2023-10-20"},{"lineNumber":160,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(bobWithHusbandAndFriendTag,","lastModifiedDate":"2023-10-16"},{"lineNumber":161,"author":{"gitId":"yucongkoo"},"content":"                createPersonWithUpdatedTags(bobWithHusbandAndFriendTag, emptyTagsSet, emptyTagsSet));","lastModifiedDate":"2023-10-20"},{"lineNumber":162,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":163,"author":{"gitId":"yucongkoo"},"content":"        // adding one tag to person that does not have that tag","lastModifiedDate":"2023-10-16"},{"lineNumber":164,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(bobWithFriendTag, createPersonWithUpdatedTags(bobWithoutTags, friendTagSet, emptyTagsSet));","lastModifiedDate":"2023-10-20"},{"lineNumber":165,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(bobWithHusbandAndFriendTag,","lastModifiedDate":"2023-10-16"},{"lineNumber":166,"author":{"gitId":"yucongkoo"},"content":"                createPersonWithUpdatedTags(bobWithFriendTag, husbandTagSet, emptyTagsSet));","lastModifiedDate":"2023-10-20"},{"lineNumber":167,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":168,"author":{"gitId":"yucongkoo"},"content":"        // adding one tag to person that has that tag","lastModifiedDate":"2023-10-16"},{"lineNumber":169,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(bobWithFriendTag, createPersonWithUpdatedTags(bobWithFriendTag, friendTagSet, emptyTagsSet));","lastModifiedDate":"2023-10-20"},{"lineNumber":170,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":171,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":172,"author":{"gitId":"yucongkoo"},"content":"        // adding mutiple tags to person that does not have all tag","lastModifiedDate":"2023-10-16"},{"lineNumber":173,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(bobWithHusbandAndFriendTag,","lastModifiedDate":"2023-10-16"},{"lineNumber":174,"author":{"gitId":"yucongkoo"},"content":"                createPersonWithUpdatedTags(bobWithoutTags, husbandAndFriendTagSet, emptyTagsSet));","lastModifiedDate":"2023-10-20"},{"lineNumber":175,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":176,"author":{"gitId":"yucongkoo"},"content":"        // adding multiple tags to person that have some of the tags","lastModifiedDate":"2023-10-16"},{"lineNumber":177,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(bobWithHusbandAndFriendTag,","lastModifiedDate":"2023-10-16"},{"lineNumber":178,"author":{"gitId":"yucongkoo"},"content":"                createPersonWithUpdatedTags(bobWithFriendTag, husbandAndFriendTagSet, emptyTagsSet));","lastModifiedDate":"2023-10-20"},{"lineNumber":179,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":180,"author":{"gitId":"yucongkoo"},"content":"        // adding multiple tags to person that have all of the tags","lastModifiedDate":"2023-10-16"},{"lineNumber":181,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(bobWithHusbandAndFriendTag,","lastModifiedDate":"2023-10-16"},{"lineNumber":182,"author":{"gitId":"yucongkoo"},"content":"                createPersonWithUpdatedTags(bobWithHusbandAndFriendTag, husbandAndFriendTagSet, emptyTagsSet));","lastModifiedDate":"2023-10-20"},{"lineNumber":183,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":184,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":185,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":186,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":187,"author":{"gitId":"yucongkoo"},"content":"        // deleting one tag from person that does not have that tag","lastModifiedDate":"2023-10-16"},{"lineNumber":188,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(bobWithoutTags, createPersonWithUpdatedTags(bobWithoutTags, emptyTagsSet, friendTagSet));","lastModifiedDate":"2023-10-20"},{"lineNumber":189,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(bobWithFriendTag, createPersonWithUpdatedTags(bobWithFriendTag, emptyTagsSet, husbandTagSet));","lastModifiedDate":"2023-10-20"},{"lineNumber":190,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":191,"author":{"gitId":"yucongkoo"},"content":"        // deleting one tag from person that has that tag","lastModifiedDate":"2023-10-16"},{"lineNumber":192,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(bobWithoutTags, createPersonWithUpdatedTags(bobWithFriendTag, emptyTagsSet, friendTagSet));","lastModifiedDate":"2023-10-20"},{"lineNumber":193,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(bobWithHusbandTag,","lastModifiedDate":"2023-10-16"},{"lineNumber":194,"author":{"gitId":"yucongkoo"},"content":"                createPersonWithUpdatedTags(bobWithHusbandAndFriendTag, emptyTagsSet, friendTagSet));","lastModifiedDate":"2023-10-20"},{"lineNumber":195,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":196,"author":{"gitId":"yucongkoo"},"content":"        // deleting multiple tags from person that does not have that tag","lastModifiedDate":"2023-10-16"},{"lineNumber":197,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(bobWithoutTags, createPersonWithUpdatedTags(bobWithoutTags, emptyTagsSet, husbandAndFriendTagSet));","lastModifiedDate":"2023-10-20"},{"lineNumber":198,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":199,"author":{"gitId":"yucongkoo"},"content":"        // deleting mutiple tags from person that has partial or all of the tags","lastModifiedDate":"2023-10-16"},{"lineNumber":200,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(bobWithoutTags,","lastModifiedDate":"2023-10-16"},{"lineNumber":201,"author":{"gitId":"yucongkoo"},"content":"                createPersonWithUpdatedTags(bobWithFriendTag, emptyTagsSet, husbandAndFriendTagSet));","lastModifiedDate":"2023-10-20"},{"lineNumber":202,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(bobWithoutTags,","lastModifiedDate":"2023-10-16"},{"lineNumber":203,"author":{"gitId":"yucongkoo"},"content":"                createPersonWithUpdatedTags(bobWithHusbandAndFriendTag, emptyTagsSet, husbandAndFriendTagSet));","lastModifiedDate":"2023-10-20"},{"lineNumber":204,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":205,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":206,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":207,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":208,"author":{"gitId":"yucongkoo"},"content":"        // adding new tag and deleting existing tag of a person","lastModifiedDate":"2023-10-16"},{"lineNumber":209,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(bobWithFriendTag, createPersonWithUpdatedTags(bobWithHusbandTag, friendTagSet, husbandTagSet));","lastModifiedDate":"2023-10-20"},{"lineNumber":210,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":211,"author":{"gitId":"yucongkoo"},"content":"        // adding existing tag and deleting existing tag of a person","lastModifiedDate":"2023-10-16"},{"lineNumber":212,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(bobWithFriendTag,","lastModifiedDate":"2023-10-16"},{"lineNumber":213,"author":{"gitId":"yucongkoo"},"content":"                createPersonWithUpdatedTags(bobWithHusbandAndFriendTag, friendTagSet, husbandTagSet));","lastModifiedDate":"2023-10-20"},{"lineNumber":214,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":215,"author":{"gitId":"yucongkoo"},"content":"        // adding new tag and deleting non-existing tag of a person","lastModifiedDate":"2023-10-16"},{"lineNumber":216,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(bobWithFriendTag, createPersonWithUpdatedTags(bobWithoutTags, friendTagSet, husbandTagSet));","lastModifiedDate":"2023-10-20"},{"lineNumber":217,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":218,"author":{"gitId":"yucongkoo"},"content":"        // adding existing tag and deleting non-existing tag of a person","lastModifiedDate":"2023-10-16"},{"lineNumber":219,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(bobWithFriendTag, createPersonWithUpdatedTags(bobWithFriendTag, friendTagSet, husbandTagSet));","lastModifiedDate":"2023-10-20"},{"lineNumber":220,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":221,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":222,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":224,"author":{"gitId":"LamJiuFong"},"content":"    public void createPersonWithUpdatedPriorityMethod() {","lastModifiedDate":"2023-10-23"},{"lineNumber":225,"author":{"gitId":"LamJiuFong"},"content":"        Person derrickWithHighPriority \u003d new PersonBuilder(DERRICK).withPriority(VALID_PRIORITY_HIGH).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":226,"author":{"gitId":"LamJiuFong"},"content":"        Person derrickWithNoPriority \u003d new PersonBuilder(DERRICK).withPriority(VALID_PRIORITY_NONE).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":227,"author":{"gitId":"LamJiuFong"},"content":"        Person derrickWithLowPriority \u003d new PersonBuilder(DERRICK).withPriority(VALID_PRIORITY_LOW).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":228,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":229,"author":{"gitId":"LamJiuFong"},"content":"        Priority highPriority \u003d new Priority(VALID_PRIORITY_HIGH);","lastModifiedDate":"2023-10-23"},{"lineNumber":230,"author":{"gitId":"LamJiuFong"},"content":"        Priority noPriority \u003d new Priority(VALID_PRIORITY_NONE);","lastModifiedDate":"2023-10-23"},{"lineNumber":231,"author":{"gitId":"LamJiuFong"},"content":"        Priority lowPriority \u003d new Priority(VALID_PRIORITY_LOW);","lastModifiedDate":"2023-10-23"},{"lineNumber":232,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":233,"author":{"gitId":"LamJiuFong"},"content":"        // assigning priority from none to high","lastModifiedDate":"2023-10-23"},{"lineNumber":234,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(derrickWithHighPriority, createPersonWithUpdatedPriority(derrickWithNoPriority, highPriority));","lastModifiedDate":"2023-10-23"},{"lineNumber":235,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":236,"author":{"gitId":"LamJiuFong"},"content":"        // assigning priority from low to none","lastModifiedDate":"2023-10-23"},{"lineNumber":237,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(derrickWithNoPriority, createPersonWithUpdatedPriority(derrickWithLowPriority, noPriority));","lastModifiedDate":"2023-10-23"},{"lineNumber":238,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":239,"author":{"gitId":"LamJiuFong"},"content":"        // assigning priority from high to low","lastModifiedDate":"2023-10-23"},{"lineNumber":240,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(derrickWithLowPriority, createPersonWithUpdatedPriority(derrickWithHighPriority, lowPriority));","lastModifiedDate":"2023-10-23"},{"lineNumber":241,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":242,"author":{"gitId":"LamJiuFong"},"content":"        // assigning same level of priority","lastModifiedDate":"2023-10-23"},{"lineNumber":243,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(derrickWithHighPriority, createPersonWithUpdatedPriority(derrickWithHighPriority, highPriority));","lastModifiedDate":"2023-10-23"},{"lineNumber":244,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":245,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":246,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":247,"author":{"gitId":"LamJiuFong"},"content":"    public void equalsMethod() {","lastModifiedDate":"2023-10-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":283,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":284,"author":{"gitId":"LamJiuFong"},"content":"        // different priority -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":285,"author":{"gitId":"LamJiuFong"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPriority(VALID_PRIORITY_LOW).build(); // default priority is high","lastModifiedDate":"2023-10-23"},{"lineNumber":286,"author":{"gitId":"LamJiuFong"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23"},{"lineNumber":292,"author":{"gitId":"LamJiuFong"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress() + \", tags\u003d\" + ALICE.getTags()","lastModifiedDate":"2023-10-23"},{"lineNumber":293,"author":{"gitId":"LamJiuFong"},"content":"                + \", priority\u003d\" + ALICE.getPriority() + \"}\";","lastModifiedDate":"2023-10-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"yucongkoo":91,"LamJiuFong":107,"-":98}},{"path":"src/test/java/seedu/address/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(Phone.isValidPhone(\"911\")); // short phone numbers","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(Phone.isValidPhone(\"/*-/-++\")); // special characters","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(Phone.isValidPhone(\"+6589562314\")); // with country code","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(Phone.isValidPhone(\"+60123931189\")); // non-Singapore phone number","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"TehOPanas"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\")); // exactly 8 numbers","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"TehOPanas"},"content":"        Phone phone \u003d new Phone(\"12345678\");","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"TehOPanas"},"content":"        // same values","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"TehOPanas"},"content":"        assertTrue(phone.equals(new Phone(\"12345678\")));","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"TehOPanas"},"content":"        // same object","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(phone));","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"TehOPanas"},"content":"        // null","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"TehOPanas"},"content":"        // primitive and Phone type","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(phone.equals(50.f));","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"TehOPanas"},"content":"        // different type","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(phone.equals(new Name(\"apple\")));","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"TehOPanas"},"content":"        // different values","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(phone.equals(new Phone(\"87654321\")));","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"TehOPanas":18,"-":49}},{"path":"src/test/java/seedu/address/model/priority/PriorityTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LamJiuFong"},"content":"package seedu.address.model.priority;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"LamJiuFong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"LamJiuFong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.model.priority.Priority.HIGH_PRIORITY_KEYWORD;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.model.priority.Priority.LOW_PRIORITY_KEYWORD;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.model.priority.Priority.isValidPriority;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"LamJiuFong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"LamJiuFong"},"content":"public class PriorityTest {","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"LamJiuFong"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"LamJiuFong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Priority(null));","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"LamJiuFong"},"content":"    public void constructor_invalidPriority_throwsParseException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"LamJiuFong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Priority(\"blah\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"LamJiuFong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Priority(\"high low\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"LamJiuFong"},"content":"    public void assignPriorityLevel_validPriority_assignsCorrectPriorityLevel() {","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(Priority.Level.LOW, new Priority(\"low\").getPriorityLevel());","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(Priority.Level.MEDIUM, new Priority(\"medium\").getPriorityLevel());","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(Priority.Level.HIGH, new Priority(\"high\").getPriorityLevel());","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(Priority.Level.NONE, new Priority(\"-\").getPriorityLevel());","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"LamJiuFong"},"content":"    public void isValidPriority_invalidPriority_returnsFalse() {","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"LamJiuFong"},"content":"        assertFalse(isValidPriority(null));","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"LamJiuFong"},"content":"        assertFalse(isValidPriority(\"high low\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"LamJiuFong"},"content":"        assertFalse(isValidPriority(\"top\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"LamJiuFong"},"content":"        assertFalse(isValidPriority(\"\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"LamJiuFong"},"content":"        assertFalse(isValidPriority(\" \"));","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"LamJiuFong"},"content":"    public void isValidPriority_validPriority_returnsTrue() {","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"LamJiuFong"},"content":"        assertTrue(isValidPriority(\"high\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"LamJiuFong"},"content":"        assertTrue(isValidPriority(\"medium\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"LamJiuFong"},"content":"        assertTrue(isValidPriority(\"low\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"LamJiuFong"},"content":"        assertTrue(isValidPriority(\"-\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"LamJiuFong"},"content":"    public void equalsMethod() {","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"LamJiuFong"},"content":"        Priority priority \u003d new Priority(LOW_PRIORITY_KEYWORD);","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"LamJiuFong"},"content":"        // same object -\u003e return true","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"LamJiuFong"},"content":"        assertTrue(priority.equals(priority));","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"LamJiuFong"},"content":"        // different type -\u003e false","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"LamJiuFong"},"content":"        assertFalse(priority.equals(new Object()));","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"LamJiuFong"},"content":"        assertFalse(priority.equals(null));","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"LamJiuFong"},"content":"        assertFalse(priority.equals(new Tag(HIGH_PRIORITY_KEYWORD)));","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"LamJiuFong"},"content":"        // different value -\u003e false","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"LamJiuFong"},"content":"        assertFalse(priority.equals(new Priority(HIGH_PRIORITY_KEYWORD)));","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"LamJiuFong"},"content":"        // same value -\u003e true","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"LamJiuFong"},"content":"        assertTrue(priority.equals(new Priority(LOW_PRIORITY_KEYWORD)));","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"LamJiuFong"},"content":"    public void hashCodeMethod() {","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"LamJiuFong"},"content":"        Priority priority \u003d new Priority(LOW_PRIORITY_KEYWORD);","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(priority.hashCode(), Priority.Level.LOW.hashCode());","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"LamJiuFong"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"LamJiuFong":76}},{"path":"src/test/java/seedu/address/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2017-12-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"    public void isValidTagName_nullTagName_throwsNullPointerException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"    public void isValidTagName_validTagName_returnsTrue() {","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"        assertTrue(Tag.isValidTagName(\"valid\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"        assertTrue(Tag.isValidTagName(\"valid1\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"        assertTrue(Tag.isValidTagName(\"valid1 tag2 name\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"        assertTrue(Tag.isValidTagName(\"12345678901234567890\")); // maximum length","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"    public void isValidTagName_invalidTagName_returnsFalse() {","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"        assertFalse(Tag.isValidTagName(\"#\")); // non-alphanumeric","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"        assertFalse(Tag.isValidTagName(\"\")); // empty string","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"        assertFalse(Tag.isValidTagName(\" \"));","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"        assertFalse(Tag.isValidTagName(\"123456789012345678901\")); // too long","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"    public void equals() {","lastModifiedDate":"2023-10-21"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"        Tag tag \u003d new Tag(\"valid tag\");","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"yucongkoo"},"content":"        // same object -\u003e return true","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"        assertTrue(tag.equals(tag));","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"yucongkoo"},"content":"        // different type -\u003e false","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"yucongkoo"},"content":"        assertFalse(tag.equals(new Object()));","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"yucongkoo"},"content":"        assertFalse(tag.equals(null));","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"yucongkoo"},"content":"        // different value -\u003e false","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"yucongkoo"},"content":"        assertFalse(tag.equals(new Tag(\"other valid tag\")));","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"yucongkoo"},"content":"        // same value -\u003e true","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"yucongkoo"},"content":"        assertTrue(tag.equals(new Tag(\"valid tag\")));","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"yucongkoo":36,"-":24}},{"path":"src/test/java/seedu/address/storage/jsonadaptedperson/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package seedu.address.storage.jsonadaptedperson;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.storage.jsonadaptedperson.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.testutil.TypicalPersons.CALMEN;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.testutil.TypicalPersons.DERRICK;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.person.NonEmptyAddress;","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.priority.Priority;","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"    private static final JsonAdaptedName INVALID_NAME \u003d new JsonAdaptedName(\"R@chel\");","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"    private static final JsonAdaptedPhone INVALID_PHONE \u003d new JsonAdaptedPhone(\"+651234\");","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"    private static final JsonAdaptedAddress INVALID_ADDRESS \u003d new JsonAdaptedAddress(\" \", false);","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"    private static final JsonAdaptedEmail INVALID_EMAIL \u003d new JsonAdaptedEmail(\"example.com\");","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"LamJiuFong"},"content":"    private static final JsonAdaptedPriority INVALID_PRIORITY \u003d new JsonAdaptedPriority(\"top\");","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"    private static final JsonAdaptedName VALID_NAME \u003d new JsonAdaptedName(BENSON.getName().toString());","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"    private static final JsonAdaptedPhone VALID_PHONE \u003d new JsonAdaptedPhone(BENSON.getPhone().toString());","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"    private static final JsonAdaptedEmail VALID_EMAIL \u003d new JsonAdaptedEmail(BENSON.getEmail().toString());","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"    private static final JsonAdaptedAddress VALID_ADDRESS \u003d new JsonAdaptedAddress(BENSON.getAddress());","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"LamJiuFong"},"content":"    private static final JsonAdaptedPriority VALID_PRIORITY \u003d new JsonAdaptedPriority(DERRICK.getPriority());","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"    public void toModelType_validPersonDetailsWithoutAddress_returnsPerson() throws Exception {","lastModifiedDate":"2023-10-11"},{"lineNumber":49,"author":{"gitId":"yucongkoo"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(CALMEN);","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(CALMEN, person.toModelType());","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":52,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"LamJiuFong"},"content":"    public void toModelType_validPersonDetailsWithPriority_returnsPerson() throws Exception {","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"LamJiuFong"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(DERRICK);","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(DERRICK, person.toModelType());","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"LamJiuFong"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"LamJiuFong"},"content":"                        VALID_PRIORITY);","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"LamJiuFong"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"LamJiuFong"},"content":"                VALID_PRIORITY);","lastModifiedDate":"2023-10-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"LamJiuFong"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"LamJiuFong"},"content":"                        VALID_PRIORITY);","lastModifiedDate":"2023-10-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"LamJiuFong"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"LamJiuFong"},"content":"                VALID_PRIORITY);","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"LamJiuFong"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-10-23"},{"lineNumber":97,"author":{"gitId":"LamJiuFong"},"content":"                        VALID_PRIORITY);","lastModifiedDate":"2023-10-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"LamJiuFong"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-10-23"},{"lineNumber":105,"author":{"gitId":"LamJiuFong"},"content":"                VALID_PRIORITY);","lastModifiedDate":"2023-10-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"LamJiuFong"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-10-23"},{"lineNumber":114,"author":{"gitId":"LamJiuFong"},"content":"                        VALID_PRIORITY);","lastModifiedDate":"2023-10-23"},{"lineNumber":115,"author":{"gitId":"yucongkoo"},"content":"        String expectedMessage \u003d NonEmptyAddress.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"LamJiuFong"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS,","lastModifiedDate":"2023-10-23"},{"lineNumber":122,"author":{"gitId":"LamJiuFong"},"content":"                VALID_PRIORITY);","lastModifiedDate":"2023-10-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"LamJiuFong"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags,","lastModifiedDate":"2023-10-23"},{"lineNumber":133,"author":{"gitId":"LamJiuFong"},"content":"                        VALID_PRIORITY);","lastModifiedDate":"2023-10-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":137,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":138,"author":{"gitId":"LamJiuFong"},"content":"    public void toModelType_invalidPriority_throwsIllegalValueException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":139,"author":{"gitId":"LamJiuFong"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":140,"author":{"gitId":"LamJiuFong"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-10-23"},{"lineNumber":141,"author":{"gitId":"LamJiuFong"},"content":"                        INVALID_PRIORITY);","lastModifiedDate":"2023-10-23"},{"lineNumber":142,"author":{"gitId":"LamJiuFong"},"content":"        String expectedMessage \u003d Priority.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-23"},{"lineNumber":143,"author":{"gitId":"LamJiuFong"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-23"},{"lineNumber":144,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":145,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":146,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":147,"author":{"gitId":"LamJiuFong"},"content":"    public void toModelType_nullPriority_throwsIllegalValueException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":148,"author":{"gitId":"LamJiuFong"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-23"},{"lineNumber":149,"author":{"gitId":"LamJiuFong"},"content":"                VALID_TAGS, null);","lastModifiedDate":"2023-10-23"},{"lineNumber":150,"author":{"gitId":"LamJiuFong"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Priority.class.getSimpleName());","lastModifiedDate":"2023-10-23"},{"lineNumber":151,"author":{"gitId":"LamJiuFong"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-23"},{"lineNumber":152,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"yucongkoo":19,"LamJiuFong":44,"-":90}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.person.NonEmptyAddress;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"yucongkoo"},"content":"        descriptor.setAddress(new NonEmptyAddress(address));","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"yucongkoo":2,"-":69}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.person.EmptyAddress;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.person.NonEmptyAddress;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.priority.Priority;","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"    public static final String DEFAULT_PRIORITY \u003d \"high\";","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"    private Priority priority;","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"        address \u003d new NonEmptyAddress(DEFAULT_ADDRESS);","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"        priority \u003d new Priority(DEFAULT_PRIORITY);","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"yucongkoo"},"content":"        priority \u003d personToCopy.getPriority();","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"LamJiuFong"},"content":"     * Set the tags from {@code tags} to the [@code Person} that we are building.","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"LamJiuFong"},"content":"     * @param tags Set of tags.","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"LamJiuFong"},"content":"    public PersonBuilder withTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"LamJiuFong"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"LamJiuFong"},"content":"        return this;","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"yucongkoo"},"content":"        this.address \u003d new NonEmptyAddress(address);","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":94,"author":{"gitId":"yucongkoo"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building to","lastModifiedDate":"2023-10-08"},{"lineNumber":95,"author":{"gitId":"yucongkoo"},"content":"     * be an empty address.","lastModifiedDate":"2023-10-08"},{"lineNumber":96,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":97,"author":{"gitId":"yucongkoo"},"content":"    public PersonBuilder withoutAddress() {","lastModifiedDate":"2023-10-08"},{"lineNumber":98,"author":{"gitId":"yucongkoo"},"content":"        this.address \u003d EmptyAddress.getEmptyAddress();","lastModifiedDate":"2023-10-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2023-10-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":118,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":119,"author":{"gitId":"yucongkoo"},"content":"     * Sets the {@code Priority} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-24"},{"lineNumber":120,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":121,"author":{"gitId":"yucongkoo"},"content":"    public PersonBuilder withPriority(String priority) {","lastModifiedDate":"2023-10-24"},{"lineNumber":122,"author":{"gitId":"yucongkoo"},"content":"        this.priority \u003d new Priority(priority);","lastModifiedDate":"2023-10-24"},{"lineNumber":123,"author":{"gitId":"yucongkoo"},"content":"        return this;","lastModifiedDate":"2023-10-24"},{"lineNumber":124,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":125,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":127,"author":{"gitId":"yucongkoo"},"content":"        return new Person(name, phone, email, address, tags, priority);","lastModifiedDate":"2023-10-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"yucongkoo":24,"LamJiuFong":10,"-":96}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_TAG;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DELETE_TAG;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.logic.commands.PriorityCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.logic.commands.TagCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.priority.Priority;","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().getValue() + \" \");","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.getTagName() + \" \")","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"LamJiuFong"},"content":"        sb.append(PREFIX_PRIORITY + person.getPriority().toString() + \" \");","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"yucongkoo"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.getValue()).append(\" \"));","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"yucongkoo"},"content":"    public static String getTagCommand(Index index, TagCommand.UpdatePersonTagsDescriptor updatePersonTagsDescriptor) {","lastModifiedDate":"2023-10-20"},{"lineNumber":63,"author":{"gitId":"yucongkoo"},"content":"        String tagsToAddString \u003d updatePersonTagsDescriptor.getTagsToAdd().stream()","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"yucongkoo"},"content":"                .map(t -\u003e \" \" + PREFIX_ADD_TAG + t.getTagName())","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"yucongkoo"},"content":"                .collect(Collectors.joining());","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"yucongkoo"},"content":"        String tagsToDeleteString \u003d updatePersonTagsDescriptor.getTagsToDelete().stream()","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"yucongkoo"},"content":"                .map(t -\u003e \" \" + PREFIX_DELETE_TAG + t.getTagName())","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"yucongkoo"},"content":"                .collect(Collectors.joining());","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"yucongkoo"},"content":"        return TagCommand.COMMAND_WORD + \" \" + index.getOneBased() + tagsToAddString + tagsToDeleteString;","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":73,"author":{"gitId":"LamJiuFong"},"content":"    public static String getPriorityCommand(Index index, Priority priority) {","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"LamJiuFong"},"content":"        return PriorityCommand.COMMAND_WORD + \" \" + index.getOneBased() + \" \" + priority;","lastModifiedDate":"2023-10-23"},{"lineNumber":75,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"yucongkoo":19,"LamJiuFong":8,"-":49}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_DERRICK;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_CALMEN;","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_DERRICK;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_CALMEN;","lastModifiedDate":"2023-10-08"},{"lineNumber":13,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_DERRICK;","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_CALMEN;","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_DERRICK;","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRIORITY_HIGH;","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"TehOPanas"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"94822224\")","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"TehOPanas"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"94821427\")","lastModifiedDate":"2023-10-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"TehOPanas"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"94828442\")","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":54,"author":{"gitId":"TehOPanas"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"84829424\")","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":56,"author":{"gitId":"TehOPanas"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"84824131\")","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":59,"author":{"gitId":"songfangyl"},"content":"    public static final Person JOJO \u003d new PersonBuilder().withName(\"Jojo Best\").withPhone(\"14445656\")","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"songfangyl"},"content":"            .withEmail(\"jojo@example.com\").withAddress(\"100th street\").build();","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":62,"author":{"gitId":"songfangyl"},"content":"    public static final Person KAKA \u003d new PersonBuilder().withName(\"Kaka Der Many\").withPhone(\"78756232\")","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"songfangyl"},"content":"            .withEmail(\"kaka@example.com\").withAddress(\"kaka street\").build();","lastModifiedDate":"2023-10-11"},{"lineNumber":64,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":72,"author":{"gitId":"yucongkoo"},"content":"    // Person without address","lastModifiedDate":"2023-10-11"},{"lineNumber":73,"author":{"gitId":"yucongkoo"},"content":"    public static final Person CALMEN \u003d new PersonBuilder().withName(VALID_NAME_CALMEN).withPhone(VALID_PHONE_CALMEN)","lastModifiedDate":"2023-10-08"},{"lineNumber":74,"author":{"gitId":"yucongkoo"},"content":"            .withEmail(VALID_EMAIL_CALMEN).withoutAddress().build();","lastModifiedDate":"2023-10-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":76,"author":{"gitId":"LamJiuFong"},"content":"    // Person with priority","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"LamJiuFong"},"content":"    public static final Person DERRICK \u003d new PersonBuilder().withName(VALID_NAME_DERRICK).withPhone(VALID_PHONE_DERRICK)","lastModifiedDate":"2023-10-23"},{"lineNumber":78,"author":{"gitId":"LamJiuFong"},"content":"            .withEmail(VALID_EMAIL_DERRICK).withAddress(VALID_ADDRESS_DERRICK).withPriority(VALID_PRIORITY_HIGH)","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"LamJiuFong"},"content":"            .build();","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"songfangyl"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE, CALMEN, JOJO, KAKA));","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"TehOPanas":5,"yucongkoo":6,"songfangyl":7,"LamJiuFong":10,"-":71}}]

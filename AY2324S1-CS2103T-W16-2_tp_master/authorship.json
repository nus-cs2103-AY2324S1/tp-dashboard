[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LamJiuFong"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-W16-2/tp/actions)","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"## EzContact","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"This is a contact book that is designed for salespersons to keep track of their past, current and potential customer.","lastModifiedDate":"2023-09-30"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"This is a CLI application and is supposed to be beneficial for users that are able to type **FAST**.","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"### Features","lastModifiedDate":"2023-09-30"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"* Add customer to contact book, where name, phone number and email address are required details","lastModifiedDate":"2023-09-30"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"* Edit an existing entry of contact book, i.e. updating a new phone number of a customer","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"* Remove entries from the contact book","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"* Searching of customers using whole or partial information","lastModifiedDate":"2023-09-30"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"* Adding priorities to customers in contact book, i.e. customers with ongoing sales deal can be given higher priority","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"* Tagging appearances to customers to help visualise the appearance of the customers","lastModifiedDate":"2023-09-30"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"Click [here](https://ay2324s1-cs2103t-w16-2.github.io/tp) to learn more!","lastModifiedDate":"2023-09-30"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-09-30"}],"authorContributionMap":{"yucongkoo":16,"LamJiuFong":1,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"yucongkoo"},"content":"    archiveFileName \u003d \u0027EzContact.jar\u0027","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"yucongkoo"},"content":"run {","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"yucongkoo"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-10-20"},{"lineNumber":76,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"yucongkoo":5,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"LamJiuFong"},"content":"You can reach us at the email `ezcontact@gmail.com`","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"### Koo Yu Cong","lastModifiedDate":"2023-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"\u003cimg src\u003d\"images/yucongkoo.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"[[github](https://github.com/yucongkoo)]","lastModifiedDate":"2023-09-30"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"[[portfolio](team/yucongkoo.md)]","lastModifiedDate":"2023-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"* Role: Developer","lastModifiedDate":"2023-09-30"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"* Responsibilities: Ensuring deliverables and deadlines are met","lastModifiedDate":"2023-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"### Joshua Wee","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"Jweewee"},"content":"\u003cimg src\u003d\"images/jweewee.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"Jweewee"},"content":"[[github](http://github.com/jweewee)]","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"Jweewee"},"content":"[[portfolio](team/jweewee.md)]","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"Jweewee"},"content":"* Role: Integration","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"Jweewee"},"content":"* Responsibilities: In charge of versioning of the code, maintaining the code repository, integrating various parts of the software to create a whole.","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"### Song Fang Yi","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"songfangyl"},"content":"\u003cimg src\u003d\"images/songfangyl.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"songfangyl"},"content":"[[github](http://github.com/songfangyl)]","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"songfangyl"},"content":"[[portfolio](team/songfangyl.md)]","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"songfangyl"},"content":"* Role: Code quality","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"songfangyl"},"content":"* Responsibilities: Looks after code quality, ensures adherence to coding standards.","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"TehOPanas"},"content":"### Lian Zhi Xuan","lastModifiedDate":"2023-10-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"TehOPanas"},"content":"\u003cimg src\u003d\"images/tehopanas.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"TehOPanas"},"content":"[[github](https://github.com/TehOPanas)] [[portfolio](team/tehopanas.md)]","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"TehOPanas"},"content":"* Role: Developer, Documentation","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"TehOPanas"},"content":"* Responsibilities: Responsible for the quality of various project documents","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"LamJiuFong"},"content":"### Lam Jiu Fong","lastModifiedDate":"2023-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"LamJiuFong"},"content":"\u003cimg src\u003d\"images/lamjiufong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"LamJiuFong"},"content":"[[github](http://github.com/LamJiuFong)]","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"LamJiuFong"},"content":"[[portfolio](team/lamjiufong.md)]","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"LamJiuFong"},"content":"* Role: Developer, Code Testing","lastModifiedDate":"2023-10-05"},{"lineNumber":61,"author":{"gitId":"LamJiuFong"},"content":"* Responsibilities: Ensures the testing of the project is done properly and on time","lastModifiedDate":"2023-10-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"TehOPanas":5,"yucongkoo":6,"songfangyl":6,"LamJiuFong":7,"-":32,"Jweewee":6}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"LamJiuFong"},"content":"# EzContact Developer Guide","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"TehOPanas"},"content":"# **Acknowledgements**","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"LamJiuFong"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"TehOPanas"},"content":"#### feature / implementation involved","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"TehOPanas"},"content":"**Sources used** :","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"TehOPanas"},"content":"1. (sources with hyperlink)","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"TehOPanas"},"content":"1. ...","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"TehOPanas"},"content":"(describe how it is used in the mentioned part...)","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"TehOPanas"},"content":"# **Setting up, getting started**","lastModifiedDate":"2023-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"TehOPanas"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"TehOPanas"},"content":"# **Design**","lastModifiedDate":"2023-10-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"TehOPanas"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"TehOPanas"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"600\" /\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":69,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":70,"author":{"gitId":"TehOPanas"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"TehOPanas"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":82,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"TehOPanas"},"content":"## UI component","lastModifiedDate":"2023-10-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"TehOPanas"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":103,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":104,"author":{"gitId":"yucongkoo"},"content":"## Logic component \u003ca id\u003d\"logic-component\"/\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"TehOPanas"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":113,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-11-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"yucongkoo"},"content":"**Note:**\u003cbr/\u003eThe lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-11-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":127,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-09-03"},{"lineNumber":128,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":130,"author":{"gitId":"TehOPanas"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":131,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"TehOPanas"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":141,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":142,"author":{"gitId":"TehOPanas"},"content":"## Model component","lastModifiedDate":"2023-10-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"TehOPanas"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"700\" /\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":146,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":156,"author":{"gitId":"TehOPanas"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":158,"author":{"gitId":"TehOPanas"},"content":"## Storage component","lastModifiedDate":"2023-10-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"TehOPanas"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"600\" /\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":166,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"TehOPanas"},"content":"## Common classes","lastModifiedDate":"2023-10-05"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"TehOPanas"},"content":"# **Implementation**","lastModifiedDate":"2023-10-05"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"yucongkoo"},"content":"## Tag feature","lastModifiedDate":"2023-10-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":181,"author":{"gitId":"yucongkoo"},"content":"This feature allows users to assign tags to / remove tags from customers in EzContact, increasing the recognizability ","lastModifiedDate":"2023-11-06"},{"lineNumber":182,"author":{"gitId":"yucongkoo"},"content":"of customers to users.","lastModifiedDate":"2023-11-01"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":184,"author":{"gitId":"yucongkoo"},"content":"The activity diagram below shows the action sequence of updating the tags of a customer.","lastModifiedDate":"2023-11-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":186,"author":{"gitId":"yucongkoo"},"content":"\u003cpuml src\u003d\"diagrams/tag-feature/ExecuteActivityDiagram.puml\"/\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":188,"author":{"gitId":"yucongkoo"},"content":"### Implementation","lastModifiedDate":"2023-10-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":190,"author":{"gitId":"yucongkoo"},"content":"###### **Implementing `Tag`**","lastModifiedDate":"2023-11-01"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":192,"author":{"gitId":"yucongkoo"},"content":"Before implementing the actual command execution of tag,","lastModifiedDate":"2023-10-23"},{"lineNumber":193,"author":{"gitId":"yucongkoo"},"content":"tags first needs to be stored in a `Person` object accordingly.","lastModifiedDate":"2023-10-23"},{"lineNumber":194,"author":{"gitId":"yucongkoo"},"content":"Hence, a `Person` will now also be associated to any number of `Tag`s.","lastModifiedDate":"2023-11-01"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":196,"author":{"gitId":"yucongkoo"},"content":"\u003cpuml src\u003d\"diagrams/tag-feature/PersonClassDiagram.puml\"/\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":198,"author":{"gitId":"yucongkoo"},"content":"###### **Integrating a command for handling tag features into the execution logic**","lastModifiedDate":"2023-11-01"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":200,"author":{"gitId":"yucongkoo"},"content":"In order to integrate the command for handling tag features into the execution logic as described in [LogicComponent](#logic-component),","lastModifiedDate":"2023-11-01"},{"lineNumber":201,"author":{"gitId":"yucongkoo"},"content":"we first update the `AddressBookParser` to recognise the `tag` _command word_ and will create a `TagCommandParser` subsequently.","lastModifiedDate":"2023-11-06"},{"lineNumber":202,"author":{"gitId":"yucongkoo"},"content":"The `TagCommandParser` will then parse the _command arguments_ to create a `TagCommand` that can be executed. ","lastModifiedDate":"2023-11-06"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":204,"author":{"gitId":"TehOPanas"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":206,"author":{"gitId":"yucongkoo"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component when executing a tag command,","lastModifiedDate":"2023-11-01"},{"lineNumber":207,"author":{"gitId":"yucongkoo"},"content":"taking `execute(\"tag 1 at/tall dt/short at/handsome\")` API call to `LogicManager` as an example.","lastModifiedDate":"2023-11-01"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":209,"author":{"gitId":"yucongkoo"},"content":"\u003cpuml src\u003d\"diagrams/tag-feature/TagSequenceDiagram.puml\" /\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":210,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-11-06"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":212,"author":{"gitId":"yucongkoo"},"content":"**Note:**\u003cbr/\u003eThe lifeline for `TagCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-11-06"},{"lineNumber":213,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-06"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":215,"author":{"gitId":"TehOPanas"},"content":"###### **Implementing `TagCommandParser`**","lastModifiedDate":"2023-11-01"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":217,"author":{"gitId":"yucongkoo"},"content":"`TagCommandParser` plays the role of parsing _command arguments_ into two information:\u003cbr/\u003e","lastModifiedDate":"2023-11-06"},{"lineNumber":218,"author":{"gitId":"yucongkoo"},"content":"* `index` indicating the index of the targeted customer in the displayed customer list, and\u003cbr/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":219,"author":{"gitId":"yucongkoo"},"content":"* `descriptor` encapsulating tags to add to/delete from the targeted customer.\u003cbr/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":221,"author":{"gitId":"yucongkoo"},"content":"Both `index` and `updatePersonTagsDescriptor` will be used to create the `TagCommand` to be executed.\u003cbr/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":222,"author":{"gitId":"yucongkoo"},"content":"The parsing steps are as follows:","lastModifiedDate":"2023-11-01"},{"lineNumber":223,"author":{"gitId":"yucongkoo"},"content":"1. Parse the command arguments into `index`, `tagsToAdd` and `tagsToDelete`(throws ParseException if there are format errors).","lastModifiedDate":"2023-11-06"},{"lineNumber":224,"author":{"gitId":"yucongkoo"},"content":"1. Create the `UpdatePersonTagsDescriptor` using `tagsToAdd` and `tagsToDelete`.","lastModifiedDate":"2023-11-01"},{"lineNumber":225,"author":{"gitId":"yucongkoo"},"content":"1. Verify that there is at least one tag to add/delete(throws ParseException if no tag to update is provided).","lastModifiedDate":"2023-11-06"},{"lineNumber":226,"author":{"gitId":"yucongkoo"},"content":"1. Construct and return the `TagCommand`.","lastModifiedDate":"2023-11-01"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":228,"author":{"gitId":"yucongkoo"},"content":"Note that **duplicate tags will be ignored** (see [Design Considerations](#design-considerations) for more information).","lastModifiedDate":"2023-11-01"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":230,"author":{"gitId":"yucongkoo"},"content":"The sequence diagram below illustrates the interactions of `TagCommandParser#parse(String arguments)`,","lastModifiedDate":"2023-10-23"},{"lineNumber":231,"author":{"gitId":"yucongkoo"},"content":"taking `parse(1 at/tall dt/short at/handsome)` call to the `TagCommandParser` as an example. Note that the ","lastModifiedDate":"2023-11-01"},{"lineNumber":232,"author":{"gitId":"yucongkoo"},"content":"**reference frames have been omitted** as the operations performed are trivial.","lastModifiedDate":"2023-11-01"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":234,"author":{"gitId":"yucongkoo"},"content":"\u003cpuml src\u003d\"diagrams/tag-feature/ParseSequenceDiagram.puml\"/\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":237,"author":{"gitId":"TehOPanas"},"content":"###### **Implementing `TagCommand`**","lastModifiedDate":"2023-11-01"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":239,"author":{"gitId":"yucongkoo"},"content":"The following class diagram illustrates how a `TagCommand` hold information required for its execution.","lastModifiedDate":"2023-11-09"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":241,"author":{"gitId":"yucongkoo"},"content":"\u003cpuml src\u003d \"diagrams/tag-feature/TagCommandClassDiagram.puml\" /\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":243,"author":{"gitId":"yucongkoo"},"content":"`TagCommand` plays the role of executing the tag command on a `Model`, it will update the `Model` accordingly to","lastModifiedDate":"2023-10-23"},{"lineNumber":244,"author":{"gitId":"yucongkoo"},"content":"reflect the changes after the tag command completes its execution. Note that if there are conflicting tags(i.e. there ","lastModifiedDate":"2023-11-01"},{"lineNumber":245,"author":{"gitId":"yucongkoo"},"content":"is a common tag to add and delete), the command execution will fail.\u003cbr/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":246,"author":{"gitId":"yucongkoo"},"content":"The execution steps are as follows:\u003cbr/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":247,"author":{"gitId":"yucongkoo"},"content":"1. Verify that the `TagCommand` is executable(i.e. there is no conflicting tag in the `updatePersonDescriptor`).","lastModifiedDate":"2023-11-01"},{"lineNumber":248,"author":{"gitId":"yucongkoo"},"content":"1. Retrieve `personToUpdate` from the model using `index`.","lastModifiedDate":"2023-11-01"},{"lineNumber":249,"author":{"gitId":"yucongkoo"},"content":"1. Retrieve `tagsToAdd` and `tagsToDelete` from `updatePersonTagsDescriptor`.","lastModifiedDate":"2023-11-01"},{"lineNumber":250,"author":{"gitId":"yucongkoo"},"content":"1. Create the `updatedPerson` from the above information.","lastModifiedDate":"2023-11-01"},{"lineNumber":251,"author":{"gitId":"yucongkoo"},"content":"1. Verify that the `updatedPerson` has a different tag set from `personToUpdate` (i.e. the command execution will change the person).","lastModifiedDate":"2023-11-01"},{"lineNumber":252,"author":{"gitId":"yucongkoo"},"content":"1. Verify that the `updatedPerson` has a valid number of tags (i.e. not exceeding the maximum allowed tag count).","lastModifiedDate":"2023-11-01"},{"lineNumber":253,"author":{"gitId":"yucongkoo"},"content":"1. Set the `personToUpdate` to `updatedPerson` in the `Model`.","lastModifiedDate":"2023-11-01"},{"lineNumber":254,"author":{"gitId":"yucongkoo"},"content":"1. Returns the `CommandResult` of the execution.","lastModifiedDate":"2023-11-01"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":256,"author":{"gitId":"yucongkoo"},"content":"The sequence diagram below illustrates the interations of `TagCommand#execute(Model model)`,","lastModifiedDate":"2023-10-23"},{"lineNumber":257,"author":{"gitId":"yucongkoo"},"content":"taking `execute(m)` call to the `TagCommand` as an example. Note that the **reference frames have been omitted**","lastModifiedDate":"2023-11-01"},{"lineNumber":258,"author":{"gitId":"yucongkoo"},"content":"as the operations performed are trivial.","lastModifiedDate":"2023-11-01"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":260,"author":{"gitId":"yucongkoo"},"content":"\u003cpuml src\u003d\"diagrams/tag-feature/ExecuteSequenceDiagram.puml\" /\u003e","lastModifiedDate":"2023-10-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":262,"author":{"gitId":"yucongkoo"},"content":"###### **Wrapping up the tag feature**","lastModifiedDate":"2023-11-01"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":264,"author":{"gitId":"yucongkoo"},"content":"As reaching this point, we have completed the implementation of the tag feature, where users are allowed to add and delete","lastModifiedDate":"2023-11-01"},{"lineNumber":265,"author":{"gitId":"yucongkoo"},"content":"tags of a person in the same command. The following section will discuss certain design considerations when implementing ","lastModifiedDate":"2023-11-01"},{"lineNumber":266,"author":{"gitId":"yucongkoo"},"content":"this feature.","lastModifiedDate":"2023-11-01"},{"lineNumber":267,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":268,"author":{"gitId":"yucongkoo"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":269,"author":{"gitId":"yucongkoo"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":270,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":271,"author":{"gitId":"TehOPanas"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":272,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":273,"author":{"gitId":"yucongkoo"},"content":"### Design considerations:","lastModifiedDate":"2023-10-23"},{"lineNumber":274,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":275,"author":{"gitId":"TehOPanas"},"content":"###### **Aspect: Data structure to store tags in a Person object:**","lastModifiedDate":"2023-11-01"},{"lineNumber":276,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":277,"author":{"gitId":"TehOPanas"},"content":"* **Alternative 1 (Current choice)** : Using `Set\u003cTag\u003e`.","lastModifiedDate":"2023-11-01"},{"lineNumber":278,"author":{"gitId":"yucongkoo"},"content":"  * Pros: Easy to implement, enforces implicit uniqueness of each `Tag` in the `Set\u003cTag\u003e`.","lastModifiedDate":"2023-10-23"},{"lineNumber":279,"author":{"gitId":"yucongkoo"},"content":"  * Cons: Tags are not ordered according to the time it is added.","lastModifiedDate":"2023-10-23"},{"lineNumber":280,"author":{"gitId":"TehOPanas"},"content":"* **Alternative 2** : Using `List\u003cTag\u003e`.","lastModifiedDate":"2023-11-01"},{"lineNumber":281,"author":{"gitId":"yucongkoo"},"content":"  * Pros: Tags are ordered according to the time it is added.","lastModifiedDate":"2023-10-23"},{"lineNumber":282,"author":{"gitId":"yucongkoo"},"content":"  * Cons: Hard to implement, handling of duplicate `Tag` is more complicated.","lastModifiedDate":"2023-10-23"},{"lineNumber":283,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":284,"author":{"gitId":"yucongkoo"},"content":"**Reasoning :**\u003cbr/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":285,"author":{"gitId":"yucongkoo"},"content":"Alternative 1 was chosen over alternative 2 as the ordering of tags is considered not that important in the case of","lastModifiedDate":"2023-10-23"},{"lineNumber":286,"author":{"gitId":"yucongkoo"},"content":"storing tags.","lastModifiedDate":"2023-10-23"},{"lineNumber":287,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":288,"author":{"gitId":"TehOPanas"},"content":"###### **Aspect: Duplicate tags handling:**","lastModifiedDate":"2023-11-01"},{"lineNumber":289,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":290,"author":{"gitId":"TehOPanas"},"content":"* **Alternative 1 (Current choice)** : Allow users to add/delete duplicate tags as long as not conflicting(i.e. not adding and deleting the same tag).","lastModifiedDate":"2023-11-01"},{"lineNumber":291,"author":{"gitId":"yucongkoo"},"content":"  * Pros: Users will not be blocked from their action if they accidentally entered a duplicate tag.","lastModifiedDate":"2023-10-23"},{"lineNumber":292,"author":{"gitId":"yucongkoo"},"content":"  * Cons: Users might not be warned that they have entered a duplicate tag.","lastModifiedDate":"2023-10-23"},{"lineNumber":293,"author":{"gitId":"TehOPanas"},"content":"* **Alternative 2** : Block users from adding/deleting duplicate tags","lastModifiedDate":"2023-11-01"},{"lineNumber":294,"author":{"gitId":"yucongkoo"},"content":"  * Pros: Easy to implement","lastModifiedDate":"2023-10-23"},{"lineNumber":295,"author":{"gitId":"yucongkoo"},"content":"  * Cons: Users might be blocked from their action because they forgot that they already entered such a tag.","lastModifiedDate":"2023-10-23"},{"lineNumber":296,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":297,"author":{"gitId":"yucongkoo"},"content":"**Reasoning :**\u003cbr/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":298,"author":{"gitId":"yucongkoo"},"content":"Alternative 1 was chosen over alternative 2 based on the following reasons:","lastModifiedDate":"2023-10-23"},{"lineNumber":299,"author":{"gitId":"TehOPanas"},"content":"* Repeated action signals the users\u0027 strong intention of performing that action(e.g. wanting to add the same tag twice shows the importance of that tag).","lastModifiedDate":"2023-11-01"},{"lineNumber":300,"author":{"gitId":"yucongkoo"},"content":"* The target audience is forgetful and careless, it is common for the users to enter duplicate tags without realising it, blocking such actions brings no value to the product.","lastModifiedDate":"2023-10-23"},{"lineNumber":301,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":302,"author":{"gitId":"TehOPanas"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":303,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":304,"author":{"gitId":"TehOPanas"},"content":"###### **Aspect: Deletion of non-existing tags:**","lastModifiedDate":"2023-11-01"},{"lineNumber":305,"author":{"gitId":"yucongkoo"},"content":"* **Alternative 1(current choice):** Simply ignore such deletions.","lastModifiedDate":"2023-10-23"},{"lineNumber":306,"author":{"gitId":"yucongkoo"},"content":"  * Pros: Users will not be blocked from their action(other tags will still be added/deleted) even though the command consists of such deletions.","lastModifiedDate":"2023-10-23"},{"lineNumber":307,"author":{"gitId":"yucongkoo"},"content":"  * Cons: Users will not be aware that the tag they are deleting from the customer does not exist, this may lead to certain misconceptions.","lastModifiedDate":"2023-10-23"},{"lineNumber":308,"author":{"gitId":"TehOPanas"},"content":"* **Alternative 2** : Block users from such deletions.","lastModifiedDate":"2023-11-01"},{"lineNumber":309,"author":{"gitId":"yucongkoo"},"content":"  * Pros: Easy to implement, users will be aware that the customer does not have the tag they are trying to delete.","lastModifiedDate":"2023-10-23"},{"lineNumber":310,"author":{"gitId":"yucongkoo"},"content":"  * Cons: User might be blocked from their action because they thought that the targeted customer does have the tag.","lastModifiedDate":"2023-10-23"},{"lineNumber":311,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":312,"author":{"gitId":"yucongkoo"},"content":"**Reasoning:**\u003cbr/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":313,"author":{"gitId":"yucongkoo"},"content":"Alternative 1 was selected over alternative 2 because the primary reason for users deleting a specific tag is that","lastModifiedDate":"2023-10-23"},{"lineNumber":314,"author":{"gitId":"TehOPanas"},"content":"they wish to prevent the tagged customer from having that tag. Therefore, whether the targeted customer","lastModifiedDate":"2023-10-27"},{"lineNumber":315,"author":{"gitId":"yucongkoo"},"content":"initially possesses the tag is of lesser importance in this context.","lastModifiedDate":"2023-10-23"},{"lineNumber":316,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":317,"author":{"gitId":"yucongkoo"},"content":"###### **Aspect: Addition of existing tags:**","lastModifiedDate":"2023-11-01"},{"lineNumber":318,"author":{"gitId":"yucongkoo"},"content":"This aspect is similar to the above aspect regarding **Deletion of non-existing tags**, the current choice is to simply","lastModifiedDate":"2023-11-01"},{"lineNumber":319,"author":{"gitId":"yucongkoo"},"content":"ignore such additions due to the same reason stated above.","lastModifiedDate":"2023-11-01"},{"lineNumber":320,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":321,"author":{"gitId":"yucongkoo"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":322,"author":{"gitId":"yucongkoo"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":323,"author":{"gitId":"yucongkoo"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":324,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":325,"author":{"gitId":"TehOPanas"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":326,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":327,"author":{"gitId":"songfangyl"},"content":"## Find feature","lastModifiedDate":"2023-10-27"},{"lineNumber":328,"author":{"gitId":"TehOPanas"},"content":"This find feature is designed to do partial search or prefix search on the customer list.","lastModifiedDate":"2023-11-01"},{"lineNumber":329,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":330,"author":{"gitId":"songfangyl"},"content":"### Implementation","lastModifiedDate":"2023-10-27"},{"lineNumber":331,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":332,"author":{"gitId":"songfangyl"},"content":"Sequence diagram below shows the interactions between `Logic` components when executing `execute(\"find n/Song r/vegetarian\")`","lastModifiedDate":"2023-11-02"},{"lineNumber":333,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":334,"author":{"gitId":"songfangyl"},"content":"\u003cpuml src\u003d\"diagrams/find-feature/FindSequence.puml\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":335,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":336,"author":{"gitId":"TehOPanas"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":337,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":338,"author":{"gitId":"songfangyl"},"content":"###### **Implementing `XYZContainsKeywordsPredicate`**","lastModifiedDate":"2023-11-02"},{"lineNumber":339,"author":{"gitId":"songfangyl"},"content":"`XYZContainsKeywordsPredicate` \u003d `AddressContainsKeywordsPredicate`, `NameContainsKeywordsPredicate` etc","lastModifiedDate":"2023-11-02"},{"lineNumber":340,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":341,"author":{"gitId":"songfangyl"},"content":"\u003cpuml src\u003d\"diagrams/find-feature/PredicateClassDiagram.puml\"/\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":342,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":343,"author":{"gitId":"songfangyl"},"content":"This class inherits from Predicate interface and determine how the `find` feature searches for the right customers.","lastModifiedDate":"2023-11-02"},{"lineNumber":344,"author":{"gitId":"TehOPanas"},"content":"It tests each customer in the list with given `keywords`(search prompt given by users) in the following way:","lastModifiedDate":"2023-11-01"},{"lineNumber":345,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":346,"author":{"gitId":"songfangyl"},"content":"1. The `attribute(name/address/...)` will be tested over each `keyword` in the search prompt (e.g. \"james bond\" is broken down into \"james\" \u0026 \"bond\")","lastModifiedDate":"2023-11-02"},{"lineNumber":347,"author":{"gitId":"songfangyl"},"content":"1. The `attribute(name/address/...)` will also be tested **word by word** for every `keyword` in the prompt on these criteria:","lastModifiedDate":"2023-11-02"},{"lineNumber":348,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":349,"author":{"gitId":"songfangyl"},"content":"   - If `attribute` **fully matches** all the `keywords` _(e.g. \"james bond\" \u003d \"james bond\")_, it returns true","lastModifiedDate":"2023-11-02"},{"lineNumber":350,"author":{"gitId":"songfangyl"},"content":"   - If `attribute` **contains all** the `keywords` _(e.g. searches \"james\" in \"james bond\")_, it returns true","lastModifiedDate":"2023-11-02"},{"lineNumber":351,"author":{"gitId":"songfangyl"},"content":"   - If the `keyword` is **prefix** of the `attribute` _(e.g. searches \"ja\" in \"james bond)_, it returns true","lastModifiedDate":"2023-11-02"},{"lineNumber":352,"author":{"gitId":"TehOPanas"},"content":"   - else returns false","lastModifiedDate":"2023-11-01"},{"lineNumber":353,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":354,"author":{"gitId":"songfangyl"},"content":"###### **Implementing `PersonContainsKeywordsPredicate`**","lastModifiedDate":"2023-11-02"},{"lineNumber":355,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":356,"author":{"gitId":"songfangyl"},"content":"This class serves as the primary predicate for testing multiple conditions. It houses various predicates such as","lastModifiedDate":"2023-11-02"},{"lineNumber":357,"author":{"gitId":"songfangyl"},"content":"\u0027NameContainsKeywordsPredicate\u0027 to check if specific criteria are met.","lastModifiedDate":"2023-11-02"},{"lineNumber":358,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":359,"author":{"gitId":"TehOPanas"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":360,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":361,"author":{"gitId":"songfangyl"},"content":"###### **Implementing `FindCommandParser`**","lastModifiedDate":"2023-11-02"},{"lineNumber":362,"author":{"gitId":"songfangyl"},"content":"`FindCommandParser` processes the input following the \u0027find\u0027 command, parsing it into distinct predicates based on the provided prefixes.","lastModifiedDate":"2023-11-02"},{"lineNumber":363,"author":{"gitId":"songfangyl"},"content":"These predicates are then combined to create a `PersonContainsKeywordsPredicate` which is used by `FincCommand`","lastModifiedDate":"2023-11-02"},{"lineNumber":364,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":365,"author":{"gitId":"songfangyl"},"content":"\u003cpuml src\u003d\"diagrams/find-feature/ParseFindCommandSequenceDiagram.puml\"/\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":366,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":367,"author":{"gitId":"TehOPanas"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":368,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":369,"author":{"gitId":"TehOPanas"},"content":"###### **Implementing `FindCommand`**","lastModifiedDate":"2023-11-01"},{"lineNumber":370,"author":{"gitId":"TehOPanas"},"content":"`FindCommand` is executed on the `Model`, it will update the `Model` accordingly to","lastModifiedDate":"2023-11-01"},{"lineNumber":371,"author":{"gitId":"TehOPanas"},"content":"reflect the changes after the `FindCommand` completes its execution.","lastModifiedDate":"2023-11-01"},{"lineNumber":372,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":373,"author":{"gitId":"songfangyl"},"content":"\u003cpuml src\u003d\"diagrams/find-feature/ExecuteFindCommandSequenceDiagram.puml\"/\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":374,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":375,"author":{"gitId":"TehOPanas"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":376,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":377,"author":{"gitId":"songfangyl"},"content":"### Design considerations:","lastModifiedDate":"2023-10-27"},{"lineNumber":378,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":379,"author":{"gitId":"songfangyl"},"content":"###### **Aspect: Overall design of predicate:**","lastModifiedDate":"2023-11-02"},{"lineNumber":380,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":381,"author":{"gitId":"songfangyl"},"content":"* **Alternative 1 (Current choice)** : Each attribute has their corresponding `Predicate`, `PersonContainsKeywordsPredicate` is responsible for testing them.\"","lastModifiedDate":"2023-11-02"},{"lineNumber":382,"author":{"gitId":"songfangyl"},"content":"  * Pros: Code base be more modular.","lastModifiedDate":"2023-11-02"},{"lineNumber":383,"author":{"gitId":"songfangyl"},"content":"  * Cons: Need to create quite amount of class.","lastModifiedDate":"2023-11-02"},{"lineNumber":384,"author":{"gitId":"songfangyl"},"content":"* **Alternative 2** : Create a single predicate `PersonContainsKeywordsPredicate` which contains different methods to test different attributes against keywords.","lastModifiedDate":"2023-11-02"},{"lineNumber":385,"author":{"gitId":"songfangyl"},"content":"  * Pros: Easier to implement, and the code is more straightforward to understand.","lastModifiedDate":"2023-11-02"},{"lineNumber":386,"author":{"gitId":"songfangyl"},"content":"  * Cons: Harder to maintain the code when extending the search to include new attributes, as modifications to this class are required.","lastModifiedDate":"2023-11-02"},{"lineNumber":387,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":388,"author":{"gitId":"songfangyl"},"content":"**Reasoning :**","lastModifiedDate":"2023-11-02"},{"lineNumber":389,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":390,"author":{"gitId":"songfangyl"},"content":"Due to the Open-Closed Principle, we have opted for Alternative 1 to maintain modularity in our codebase.","lastModifiedDate":"2023-11-02"},{"lineNumber":391,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":392,"author":{"gitId":"songfangyl"},"content":"###### **Aspect: Implementation of `XYZContainsKeywordsPredicate` regarding prefix:**","lastModifiedDate":"2023-11-02"},{"lineNumber":393,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":394,"author":{"gitId":"TehOPanas"},"content":"* **Alternative 1** (Current choice): Return customer when all keywords can be found as prefix in customer\u0027s name in **arbitrary order**.","lastModifiedDate":"2023-11-01"},{"lineNumber":395,"author":{"gitId":"TehOPanas"},"content":"    * Pros: Easy to implement, provides more flexibility to users for finding their customers.","lastModifiedDate":"2023-11-01"},{"lineNumber":396,"author":{"gitId":"TehOPanas"},"content":"    * Cons: Cannot differentiate `Lam Jiu` from `Jiu Lam`, a name can also match with multiple keywords (i.e. name `song` match with keywords `song song`).","lastModifiedDate":"2023-11-01"},{"lineNumber":397,"author":{"gitId":"TehOPanas"},"content":"* **Alternative 2** : Return customer when all keywords can be found as prefix in customer\u0027s name **in order**.","lastModifiedDate":"2023-11-01"},{"lineNumber":398,"author":{"gitId":"songfangyl"},"content":"    * Pros: Can easily and accurately find a specified customer.","lastModifiedDate":"2023-10-27"},{"lineNumber":399,"author":{"gitId":"TehOPanas"},"content":"    * Cons: Harder to implement, less flexibility for the users to find the customer.","lastModifiedDate":"2023-11-01"},{"lineNumber":400,"author":{"gitId":"TehOPanas"},"content":"* **Alternative 3** : Returns customer when all keywords can be found as prefix in customer\u0027s name, where each prefix corresponds to a different word in name, i.e. name `song` cannot match with keywords `song song`.","lastModifiedDate":"2023-11-01"},{"lineNumber":401,"author":{"gitId":"songfangyl"},"content":"    * Pros: More intuitive design.","lastModifiedDate":"2023-10-27"},{"lineNumber":402,"author":{"gitId":"TehOPanas"},"content":"    * Cons: Harder to implement, required a long algorithm to do so.","lastModifiedDate":"2023-11-01"},{"lineNumber":403,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":404,"author":{"gitId":"TehOPanas"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":405,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":406,"author":{"gitId":"TehOPanas"},"content":"**Reasoning :**","lastModifiedDate":"2023-11-01"},{"lineNumber":407,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":408,"author":{"gitId":"TehOPanas"},"content":"In this case, we chose Alternative 1 over Alternative 2 because the find feature becomes less versatile when we enforce the rule that","lastModifiedDate":"2023-11-01"},{"lineNumber":409,"author":{"gitId":"TehOPanas"},"content":"the name must match keywords in order. The consideration about our target users being forgetful affects our decision,","lastModifiedDate":"2023-11-01"},{"lineNumber":410,"author":{"gitId":"TehOPanas"},"content":"where users might forget and input the name in the wrong order.\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":411,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":412,"author":{"gitId":"TehOPanas"},"content":"We also chose Alternative 1 over Alternative 3, although Alternative 3 provides a more accurate result, after doing some","lastModifiedDate":"2023-11-01"},{"lineNumber":413,"author":{"gitId":"TehOPanas"},"content":"research on many contact book-like applications, we found that most applications do not enforce that each word of the name can only match with one keyword.","lastModifiedDate":"2023-11-01"},{"lineNumber":414,"author":{"gitId":"songfangyl"},"content":"In addition, Alternative 3 requires a more complicated algorithm.","lastModifiedDate":"2023-10-27"},{"lineNumber":415,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":416,"author":{"gitId":"TehOPanas"},"content":"###### **Aspect: Implementation of test method:**","lastModifiedDate":"2023-11-01"},{"lineNumber":417,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":418,"author":{"gitId":"TehOPanas"},"content":"* **Alternative 1 (Current choice)** : Convert keywords to `Stream` and use `allMatch`.","lastModifiedDate":"2023-11-01"},{"lineNumber":419,"author":{"gitId":"songfangyl"},"content":"    * Pros: Easy to implement, code is clean.","lastModifiedDate":"2023-10-27"},{"lineNumber":420,"author":{"gitId":"TehOPanas"},"content":"    * Cons: Less flexible, e.g. cannot check the name matches the keywords in order.","lastModifiedDate":"2023-11-01"},{"lineNumber":421,"author":{"gitId":"TehOPanas"},"content":"* **Alternative 2** : Directly using the keywords as `List\u003cString\u003e` and using a for loop.","lastModifiedDate":"2023-11-01"},{"lineNumber":422,"author":{"gitId":"songfangyl"},"content":"    * Pros: More flexible, can add more constraint on the test method.","lastModifiedDate":"2023-10-27"},{"lineNumber":423,"author":{"gitId":"TehOPanas"},"content":"    * Cons: Harder to implement, given many constraint, code becomes untidy.","lastModifiedDate":"2023-11-01"},{"lineNumber":424,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":425,"author":{"gitId":"TehOPanas"},"content":"**Reasoning :**","lastModifiedDate":"2023-11-01"},{"lineNumber":426,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":427,"author":{"gitId":"TehOPanas"},"content":"Alternative 1 is chosen over Alternative 2, because we want a slightly simpler design that does not need as much flexibility.","lastModifiedDate":"2023-11-01"},{"lineNumber":428,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":429,"author":{"gitId":"songfangyl"},"content":"###### **Aspect: Searching for Multiple Insurances or Tags:**","lastModifiedDate":"2023-11-02"},{"lineNumber":430,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":431,"author":{"gitId":"songfangyl"},"content":"* **Alternative 1 (Current choice)** : Use a single prefix for multiple keywords, like `find i/Health Auto`.","lastModifiedDate":"2023-11-02"},{"lineNumber":432,"author":{"gitId":"songfangyl"},"content":"  * Pros: Simplifies user input for convenience.","lastModifiedDate":"2023-11-02"},{"lineNumber":433,"author":{"gitId":"songfangyl"},"content":"  * Cons: Unable to differentiate whether the keywords match with `Health Auto` or `Health Insurance` and `Auto Coverage`, causing potential ambiguity.","lastModifiedDate":"2023-11-02"},{"lineNumber":434,"author":{"gitId":"songfangyl"},"content":"* **Alternative 2** : Implement multiple identical prefixes for individual keywords, such as `find i/Health i/Auto`.","lastModifiedDate":"2023-11-02"},{"lineNumber":435,"author":{"gitId":"songfangyl"},"content":"  * Pros: Provides improved differentiation and flexibility for users.","lastModifiedDate":"2023-11-02"},{"lineNumber":436,"author":{"gitId":"songfangyl"},"content":"  * Cons: Requires users to repeatedly input the prefix, increasing the effort.","lastModifiedDate":"2023-11-02"},{"lineNumber":437,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":438,"author":{"gitId":"songfangyl"},"content":"**Reasoning :**","lastModifiedDate":"2023-11-02"},{"lineNumber":439,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":440,"author":{"gitId":"songfangyl"},"content":"In many practical scenarios, users might be more interested in quickly finding results based on multiple keywords, ","lastModifiedDate":"2023-11-02"},{"lineNumber":441,"author":{"gitId":"songfangyl"},"content":"and the use of a single prefix with multiple keywords serves this purpose effectively. ","lastModifiedDate":"2023-11-02"},{"lineNumber":442,"author":{"gitId":"songfangyl"},"content":"By minimizing the number of prefixes, users can perform searches more efficiently and intuitively.","lastModifiedDate":"2023-11-02"},{"lineNumber":443,"author":{"gitId":"songfangyl"},"content":"Alternative 1 outweigh the potential drawbacks of limited differentiation, because it prioritizes user-friendliness and ease of use.","lastModifiedDate":"2023-11-02"},{"lineNumber":444,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":445,"author":{"gitId":"TehOPanas"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":446,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":447,"author":{"gitId":"TehOPanas"},"content":"## Insurance Feature","lastModifiedDate":"2023-10-27"},{"lineNumber":448,"author":{"gitId":"yucongkoo"},"content":"This feature allows users to assign / remove insurance package(s) to / from customers in EzContact to help users keep track of customers\u0027 insurances.","lastModifiedDate":"2023-11-06"},{"lineNumber":449,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":450,"author":{"gitId":"TehOPanas"},"content":"### Implementation","lastModifiedDate":"2023-10-27"},{"lineNumber":451,"author":{"gitId":"TehOPanas"},"content":"The implementation of the Insurance feature consists of few parts, distributed across different components :","lastModifiedDate":"2023-10-27"},{"lineNumber":452,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":453,"author":{"gitId":"TehOPanas"},"content":"1. `Insurance` : stores the information about the insurance","lastModifiedDate":"2023-10-27"},{"lineNumber":454,"author":{"gitId":"TehOPanas"},"content":"1. `InsuranceCommand` : executes the action to assign/remove insurance","lastModifiedDate":"2023-10-27"},{"lineNumber":455,"author":{"gitId":"TehOPanas"},"content":"1. `InsuranceCommandParser` : parses the command to obtain required information","lastModifiedDate":"2023-10-27"},{"lineNumber":456,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":457,"author":{"gitId":"TehOPanas"},"content":"**Implementing `Insurance`**","lastModifiedDate":"2023-10-27"},{"lineNumber":458,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":459,"author":{"gitId":"TehOPanas"},"content":"`Insurance` plays the role of storing information about an insurance and to be displayed on the product, as a single unit. It holds only one information, `insuranceName`.","lastModifiedDate":"2023-10-31"},{"lineNumber":460,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":461,"author":{"gitId":"TehOPanas"},"content":"\u003cpuml src\u003d\"diagrams/insurance-feature/PersonInsuranceClassDiagram.puml\"/\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":462,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":463,"author":{"gitId":"TehOPanas"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":464,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":465,"author":{"gitId":"TehOPanas"},"content":"**Implementing `InsuranceCommand`**","lastModifiedDate":"2023-11-01"},{"lineNumber":466,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":467,"author":{"gitId":"TehOPanas"},"content":"`InsuranceCommand` executes its command on the `Model`, it will update the `Model` accordingly to reflect the changes made by the command on the `Model`.","lastModifiedDate":"2023-11-01"},{"lineNumber":468,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":469,"author":{"gitId":"TehOPanas"},"content":"Sequence diagram below shows the execution of `InsuranceCommand`.","lastModifiedDate":"2023-11-01"},{"lineNumber":470,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":471,"author":{"gitId":"TehOPanas"},"content":"\u003cpuml src\u003d\"diagrams/insurance-feature/ExecuteInsuranceSequenceDiagram.puml\" /\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":472,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":473,"author":{"gitId":"TehOPanas"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":474,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":475,"author":{"gitId":"TehOPanas"},"content":"**Implementing `InsuranceCommandParser`**","lastModifiedDate":"2023-10-27"},{"lineNumber":476,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":477,"author":{"gitId":"TehOPanas"},"content":"`InsuranceCommandParser` interprets the remaining input after the `insurance` command, and parses it into relevant information needed by `InsuranceCommand`, which are","lastModifiedDate":"2023-10-31"},{"lineNumber":478,"author":{"gitId":"TehOPanas"},"content":"`Index` and `UpdatedPersonInsuranceDescriptor`.","lastModifiedDate":"2023-10-27"},{"lineNumber":479,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":480,"author":{"gitId":"TehOPanas"},"content":"* `Index` indicates the customer on the list to perform action on.","lastModifiedDate":"2023-11-01"},{"lineNumber":481,"author":{"gitId":"TehOPanas"},"content":"* `UpdatedPersonInsruanceDescriptor` holds the sets of insurances to add(`insurancesToAdd`) and delete(`insurancesToDelete`).","lastModifiedDate":"2023-11-01"},{"lineNumber":482,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":483,"author":{"gitId":"TehOPanas"},"content":"Sequence diagram below shows the execution of `InsuranceCommandParser#parse(String arguments)` with input `(1 ai/car insurance\\n di/health insurance)`","lastModifiedDate":"2023-11-01"},{"lineNumber":484,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":485,"author":{"gitId":"TehOPanas"},"content":"\u003cpuml src\u003d\"diagrams/insurance-feature/ParseInsuranceSequenceDiagram.puml\" /\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":486,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":487,"author":{"gitId":"TehOPanas"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":488,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":489,"author":{"gitId":"TehOPanas"},"content":"**Integrating `InsuranceCommand` and `InsuranceCommandParser`**","lastModifiedDate":"2023-10-27"},{"lineNumber":490,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":491,"author":{"gitId":"TehOPanas"},"content":"In order to integrate them into current logic component, `AddressBookParser` has to be updated to recognise the command","lastModifiedDate":"2023-10-27"},{"lineNumber":492,"author":{"gitId":"TehOPanas"},"content":"`insurance` and call `parse(arguments)` from `InsuranceCommandParser`.","lastModifiedDate":"2023-11-01"},{"lineNumber":493,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":494,"author":{"gitId":"TehOPanas"},"content":"From here, `InsuranceCommandParser` will extract out the relevant information and create the corresponding `InsuranceCommand` and the command will be executed by other `Logic` components.","lastModifiedDate":"2023-11-01"},{"lineNumber":495,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":496,"author":{"gitId":"TehOPanas"},"content":"Sequence diagram below shows the interactions between `Logic` components when executing `execute(\"insurance 1 \\nai/AIA di/Great Eastern)`","lastModifiedDate":"2023-11-01"},{"lineNumber":497,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":498,"author":{"gitId":"TehOPanas"},"content":"\u003cpuml src\u003d\"diagrams/insurance-feature/InsuranceSequence.puml\" /\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":499,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":500,"author":{"gitId":"TehOPanas"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":501,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":502,"author":{"gitId":"TehOPanas"},"content":"### Design Considerations:","lastModifiedDate":"2023-10-27"},{"lineNumber":503,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":504,"author":{"gitId":"TehOPanas"},"content":"###### **Aspect: Storing of `Insurance` in `Person`**","lastModifiedDate":"2023-10-31"},{"lineNumber":505,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":506,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":507,"author":{"gitId":"TehOPanas"},"content":"* **Alternative 1 (Current choice)** : use `Set\u003cInsurance\u003e` to hold all `Insurance` instances in `Person` object","lastModifiedDate":"2023-11-01"},{"lineNumber":508,"author":{"gitId":"TehOPanas"},"content":"  * Pros: Able to handle duplicates gracefully and maintain the uniqueness of each insurance with `Set\u003cInsurance\u003e`","lastModifiedDate":"2023-10-31"},{"lineNumber":509,"author":{"gitId":"TehOPanas"},"content":"  * Cons: Chronological order of `Insurance` inserted is not maintained","lastModifiedDate":"2023-10-27"},{"lineNumber":510,"author":{"gitId":"TehOPanas"},"content":"* **Alternative 2**: use `List\u003cInsurance\u003e` to hold all `Insurance` instances in `Person` object","lastModifiedDate":"2023-10-27"},{"lineNumber":511,"author":{"gitId":"TehOPanas"},"content":"  * Pros: Maintain the chronological order of `Insurance` inserted and sorting can be easily done on `Insurance` instances","lastModifiedDate":"2023-10-27"},{"lineNumber":512,"author":{"gitId":"TehOPanas"},"content":"  * Cons: Cannot ensure the uniqueness of each insurance and unable to handle duplicates in an efficient manner","lastModifiedDate":"2023-10-31"},{"lineNumber":513,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":514,"author":{"gitId":"TehOPanas"},"content":"**Reasoning:**","lastModifiedDate":"2023-10-31"},{"lineNumber":515,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":516,"author":{"gitId":"TehOPanas"},"content":"Alternative 1 is chosen over Alternative 2 for its ability to handle the duplicates more efficiently. We believe that this ability is more important","lastModifiedDate":"2023-10-31"},{"lineNumber":517,"author":{"gitId":"TehOPanas"},"content":"than the ability to sort the list in a more effective manner, as there are other workarounds that can be almost as efficient using `Set\u003cInsurances\u003e`.","lastModifiedDate":"2023-10-31"},{"lineNumber":518,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":519,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":520,"author":{"gitId":"TehOPanas"},"content":"###### **Aspect: Handling duplicate `Insurnace` entries**","lastModifiedDate":"2023-10-31"},{"lineNumber":521,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":522,"author":{"gitId":"TehOPanas"},"content":"* **Alternative 1 (Current choice)** : Allows the users to add / delete duplicate `Insurance` as long as no conflict exists (i.e. adding and deleting the same `Insurance`)","lastModifiedDate":"2023-11-01"},{"lineNumber":523,"author":{"gitId":"TehOPanas"},"content":"  * Pros: Ease of use for the users, as the users are not blocked for entering a duplicate","lastModifiedDate":"2023-10-31"},{"lineNumber":524,"author":{"gitId":"TehOPanas"},"content":"  * Cons: Users might not be aware of themselves entering duplicate `Insurance`","lastModifiedDate":"2023-10-31"},{"lineNumber":525,"author":{"gitId":"TehOPanas"},"content":"* **Alternative 2** : Blocks the users from performing the action and warn them about the duplicate `Insurance`","lastModifiedDate":"2023-10-31"},{"lineNumber":526,"author":{"gitId":"TehOPanas"},"content":"  * Pros: Easy to implement","lastModifiedDate":"2023-10-31"},{"lineNumber":527,"author":{"gitId":"TehOPanas"},"content":"  * Cons: Users will be clearly aware of their mistakes in entering duplicate `Insurance`","lastModifiedDate":"2023-10-31"},{"lineNumber":528,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":529,"author":{"gitId":"TehOPanas"},"content":"**Reasoning:**","lastModifiedDate":"2023-10-31"},{"lineNumber":530,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":531,"author":{"gitId":"TehOPanas"},"content":"Alternative 1 is chosen over Alternative 2 because we believe doing so will provide users a smoother experience with our product.","lastModifiedDate":"2023-10-31"},{"lineNumber":532,"author":{"gitId":"TehOPanas"},"content":"The reasoning comes from the users\u0027 intention of inserting the `InsuranceCommand`, that is wanting to assign an `Insurance` to a customer, so with","lastModifiedDate":"2023-10-31"},{"lineNumber":533,"author":{"gitId":"TehOPanas"},"content":"entering duplicate `Insurance`, the users\u0027 goal is still achieved, thus we think that there is no need to purposely block the users","lastModifiedDate":"2023-10-31"},{"lineNumber":534,"author":{"gitId":"TehOPanas"},"content":"for such action. With our handling of duplicate `Insurance`, no duplicate values will be added into the model with duplicate `Insurance` entries, and thus","lastModifiedDate":"2023-10-31"},{"lineNumber":535,"author":{"gitId":"TehOPanas"},"content":"it will not cause any error.","lastModifiedDate":"2023-10-31"},{"lineNumber":536,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":537,"author":{"gitId":"TehOPanas"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":538,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":539,"author":{"gitId":"TehOPanas"},"content":"###### **Aspect: Deleting non-existing `Insurance`**","lastModifiedDate":"2023-10-31"},{"lineNumber":540,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":541,"author":{"gitId":"TehOPanas"},"content":"* **Alternative 1 (Current choice)** : Allows the users to delete non-existing `Insurance` as long as no conflict exists (i.e. adding and deleting the same `Insurance`)","lastModifiedDate":"2023-11-01"},{"lineNumber":542,"author":{"gitId":"TehOPanas"},"content":"    * Pros: Ease of use for the users, as the users are not blocked for deleting non-existing `Insurance`","lastModifiedDate":"2023-10-31"},{"lineNumber":543,"author":{"gitId":"TehOPanas"},"content":"    * Cons: Users might not be aware of their mistakes","lastModifiedDate":"2023-10-31"},{"lineNumber":544,"author":{"gitId":"TehOPanas"},"content":"* **Alternative 2** : Blocks the users from performing the action and warn them about the mistake","lastModifiedDate":"2023-10-31"},{"lineNumber":545,"author":{"gitId":"TehOPanas"},"content":"    * Pros: Easy to implement","lastModifiedDate":"2023-10-31"},{"lineNumber":546,"author":{"gitId":"TehOPanas"},"content":"    * Cons: Users will be clearly aware of their mistakes","lastModifiedDate":"2023-10-31"},{"lineNumber":547,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":548,"author":{"gitId":"TehOPanas"},"content":"**Reasoning:**","lastModifiedDate":"2023-10-31"},{"lineNumber":549,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":550,"author":{"gitId":"TehOPanas"},"content":"Alternative 1 is chosen over Alternative 2 because we believe doing so will provide users a smoother experience with our product.","lastModifiedDate":"2023-10-31"},{"lineNumber":551,"author":{"gitId":"TehOPanas"},"content":"The reasoning comes from the users\u0027 intention of deleting an `Insurance`, that is wanting to remove that `Insurance` from the customer, so removing","lastModifiedDate":"2023-10-31"},{"lineNumber":552,"author":{"gitId":"TehOPanas"},"content":"a non-existing `Insurance` does not defeat the purpose, thus we think that there is no need to purposely block the users","lastModifiedDate":"2023-10-31"},{"lineNumber":553,"author":{"gitId":"TehOPanas"},"content":"for such action.","lastModifiedDate":"2023-10-31"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":555,"author":{"gitId":"TehOPanas"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":557,"author":{"gitId":"LamJiuFong"},"content":"## \\[Proposed\\] Appointment feature","lastModifiedDate":"2023-10-27"},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":559,"author":{"gitId":"LamJiuFong"},"content":"### Implementation","lastModifiedDate":"2023-10-27"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":561,"author":{"gitId":"LamJiuFong"},"content":"The appointment feature supports 5 different type of command:","lastModifiedDate":"2023-10-27"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":563,"author":{"gitId":"LamJiuFong"},"content":"1. `add appointment`","lastModifiedDate":"2023-10-27"},{"lineNumber":564,"author":{"gitId":"LamJiuFong"},"content":"2. `edit appointment`","lastModifiedDate":"2023-10-27"},{"lineNumber":565,"author":{"gitId":"LamJiuFong"},"content":"3. `delete appointment`","lastModifiedDate":"2023-10-27"},{"lineNumber":566,"author":{"gitId":"LamJiuFong"},"content":"4. `mark appointment`","lastModifiedDate":"2023-10-27"},{"lineNumber":567,"author":{"gitId":"LamJiuFong"},"content":"5. `unmark appointment`","lastModifiedDate":"2023-10-27"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":569,"author":{"gitId":"TehOPanas"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":571,"author":{"gitId":"LamJiuFong"},"content":"## Priority feature","lastModifiedDate":"2023-10-27"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":573,"author":{"gitId":"LamJiuFong"},"content":"### Implementation","lastModifiedDate":"2023-10-27"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":575,"author":{"gitId":"LamJiuFong"},"content":"The action of assigning a priority is mainly facilitated by three classes: `Priority`, `PriorityCommandParser` and `PriorityCommand`.","lastModifiedDate":"2023-10-27"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":577,"author":{"gitId":"LamJiuFong"},"content":"**The `Priority` class**","lastModifiedDate":"2023-10-27"},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":579,"author":{"gitId":"LamJiuFong"},"content":"The class is used to represent different priority levels for each `Person`.","lastModifiedDate":"2023-10-27"},{"lineNumber":580,"author":{"gitId":"LamJiuFong"},"content":"By default, each `Person` has a priority `Level` of `-` unless the user explicitly assign the `Priority` of another `Level`.","lastModifiedDate":"2023-10-27"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":582,"author":{"gitId":"LamJiuFong"},"content":"\u003cpuml src\u003d\"diagrams/priority-feature/PriorityClassDiagram.puml\"/\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":584,"author":{"gitId":"TehOPanas"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":586,"author":{"gitId":"LamJiuFong"},"content":"**The `PriorityCommandParser` class**","lastModifiedDate":"2023-10-27"},{"lineNumber":587,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":588,"author":{"gitId":"LamJiuFong"},"content":"The class is used to parse the arguments into two information: `index` and `priority`.","lastModifiedDate":"2023-10-27"},{"lineNumber":589,"author":{"gitId":"LamJiuFong"},"content":"It will then return a `PriorityCommand` should the arguments are valid.","lastModifiedDate":"2023-10-27"},{"lineNumber":590,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":591,"author":{"gitId":"LamJiuFong"},"content":"The sequence diagram below illustrates the interaction between `PriorityCommandParser` and `PriorityCommand` when `PriorityCommandParser#parse(String)` is invoked.","lastModifiedDate":"2023-10-27"},{"lineNumber":592,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":593,"author":{"gitId":"LamJiuFong"},"content":"Taking `parse(1 high)`as an example.","lastModifiedDate":"2023-10-27"},{"lineNumber":594,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":595,"author":{"gitId":"LamJiuFong"},"content":"\u003cpuml src\u003d\"diagrams/priority-feature/PriorityCommandParserSequenceDiagram.puml\"/\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":596,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":597,"author":{"gitId":"LamJiuFong"},"content":"**The `PriorityCommand` class**","lastModifiedDate":"2023-10-27"},{"lineNumber":598,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":599,"author":{"gitId":"LamJiuFong"},"content":"The class is responsible in executing the task parsed by the `PriorityCommandParser`.","lastModifiedDate":"2023-10-27"},{"lineNumber":600,"author":{"gitId":"LamJiuFong"},"content":"It will update the `Priority` of a `Person`.","lastModifiedDate":"2023-10-27"},{"lineNumber":601,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":602,"author":{"gitId":"LamJiuFong"},"content":"### Design Consideration:","lastModifiedDate":"2023-10-27"},{"lineNumber":603,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":604,"author":{"gitId":"LamJiuFong"},"content":"The `Level` enum class is chosen because our system only allows four priority level: `HIGH`, `MEDIUM`, `LOW` and `-`.","lastModifiedDate":"2023-10-27"},{"lineNumber":605,"author":{"gitId":"LamJiuFong"},"content":"The reason of choosing `-` as the default priority level is to ease the process of distinguishing having priority and not having priority.","lastModifiedDate":"2023-10-27"},{"lineNumber":606,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":607,"author":{"gitId":"TehOPanas"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":608,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":609,"author":{"gitId":"songfangyl"},"content":"## Remark feature","lastModifiedDate":"2023-11-02"},{"lineNumber":610,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":611,"author":{"gitId":"songfangyl"},"content":"### Implementation","lastModifiedDate":"2023-11-02"},{"lineNumber":612,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":613,"author":{"gitId":"songfangyl"},"content":"The action of assigning a remark is mainly facilitated by three classes: `Remark`, `RemarkCommandParser` and `RemarkCommand`.","lastModifiedDate":"2023-11-03"},{"lineNumber":614,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":615,"author":{"gitId":"songfangyl"},"content":"**The `Remark` class**","lastModifiedDate":"2023-11-02"},{"lineNumber":616,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":617,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":618,"author":{"gitId":"songfangyl"},"content":"This class represents a person\u0027s attribute, including a remark string with a maximum length of 150 characters. ","lastModifiedDate":"2023-11-03"},{"lineNumber":619,"author":{"gitId":"songfangyl"},"content":"Every person created has this attribute, with the default value being an empty string, signifying no remark.","lastModifiedDate":"2023-11-03"},{"lineNumber":620,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":621,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":622,"author":{"gitId":"songfangyl"},"content":"**The `RemarkCommandParser` class**","lastModifiedDate":"2023-11-02"},{"lineNumber":623,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":624,"author":{"gitId":"songfangyl"},"content":"The class is used to parse the arguments into two information: `index` and `remark` and","lastModifiedDate":"2023-11-03"},{"lineNumber":625,"author":{"gitId":"songfangyl"},"content":"returns a `RemarkCommand` if the arguments are valid.","lastModifiedDate":"2023-11-03"},{"lineNumber":626,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":627,"author":{"gitId":"songfangyl"},"content":"The sequence diagram below illustrates the interaction between `RemarkCommandParser`, `RemarkCommand` and `Remark`.","lastModifiedDate":"2023-11-03"},{"lineNumber":628,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":629,"author":{"gitId":"songfangyl"},"content":"Taking `parse(\"2 he likes pizza\")`as an example.","lastModifiedDate":"2023-11-03"},{"lineNumber":630,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":631,"author":{"gitId":"songfangyl"},"content":"\u003cpuml src\u003d\"diagrams/remark-feature/RemarkCommandParserSequenceDiagram.puml\"/\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":632,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":633,"author":{"gitId":"songfangyl"},"content":"**The `RemarkCommand` class**","lastModifiedDate":"2023-11-02"},{"lineNumber":634,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":635,"author":{"gitId":"songfangyl"},"content":"The class is responsible in executing the task parsed by the `RemarkCommandParser`.","lastModifiedDate":"2023-11-03"},{"lineNumber":636,"author":{"gitId":"songfangyl"},"content":"It will update the `Remark` of a `Person` and generate a `CommandResult` for the output.","lastModifiedDate":"2023-11-03"},{"lineNumber":637,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":638,"author":{"gitId":"songfangyl"},"content":"### Design Consideration:","lastModifiedDate":"2023-11-02"},{"lineNumber":639,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":640,"author":{"gitId":"songfangyl"},"content":"###### **Aspect: Delete `Remark`**","lastModifiedDate":"2023-11-03"},{"lineNumber":641,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":642,"author":{"gitId":"songfangyl"},"content":"* **Alternative 1 (Current choice)** : Using `remark \u003cindex\u003e` without argument.","lastModifiedDate":"2023-11-03"},{"lineNumber":643,"author":{"gitId":"songfangyl"},"content":"  * Pros: User-friendly, no need to remember an extra command.","lastModifiedDate":"2023-11-03"},{"lineNumber":644,"author":{"gitId":"songfangyl"},"content":"  * Cons: User cannot store empty string as a remark","lastModifiedDate":"2023-11-03"},{"lineNumber":645,"author":{"gitId":"songfangyl"},"content":"* **Alternative 2** : Implement a separate delete remark command.","lastModifiedDate":"2023-11-03"},{"lineNumber":646,"author":{"gitId":"songfangyl"},"content":"  * Pros: Distinguishes between adding and deleting remarks.","lastModifiedDate":"2023-11-03"},{"lineNumber":647,"author":{"gitId":"songfangyl"},"content":"  * Cons: Requires users to remember an additional command.","lastModifiedDate":"2023-11-03"},{"lineNumber":648,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":649,"author":{"gitId":"songfangyl"},"content":"**Reasoning:**","lastModifiedDate":"2023-11-03"},{"lineNumber":650,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":651,"author":{"gitId":"songfangyl"},"content":"In real-life scenarios, storing empty strings as remark is unlikely, hence","lastModifiedDate":"2023-11-03"},{"lineNumber":652,"author":{"gitId":"songfangyl"},"content":"alternative 1 is preferred due to its user-friendliness.","lastModifiedDate":"2023-11-03"},{"lineNumber":653,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":654,"author":{"gitId":"TehOPanas"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":655,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":656,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":657,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":658,"author":{"gitId":"TehOPanas"},"content":"# **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2023-10-05"},{"lineNumber":659,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":660,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":661,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":662,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":663,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":664,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":666,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":667,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":668,"author":{"gitId":"TehOPanas"},"content":"# **Appendix: Requirements**","lastModifiedDate":"2023-10-05"},{"lineNumber":669,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":670,"author":{"gitId":"TehOPanas"},"content":"## Product scope","lastModifiedDate":"2023-10-05"},{"lineNumber":671,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":672,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":673,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":674,"author":{"gitId":"TehOPanas"},"content":"Target user : Insurance agent","lastModifiedDate":"2023-10-16"},{"lineNumber":675,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":676,"author":{"gitId":"TehOPanas"},"content":"* needs to provide services / insurance plans to customer","lastModifiedDate":"2023-10-16"},{"lineNumber":677,"author":{"gitId":"TehOPanas"},"content":"* has a need to manage a significant number of customers","lastModifiedDate":"2023-10-16"},{"lineNumber":678,"author":{"gitId":"TehOPanas"},"content":"* needs to remember customer\u0027s information","lastModifiedDate":"2023-11-01"},{"lineNumber":679,"author":{"gitId":"TehOPanas"},"content":"* busy","lastModifiedDate":"2023-11-01"},{"lineNumber":680,"author":{"gitId":"TehOPanas"},"content":"* needs to maintain interactions with his/her customers over a long time span","lastModifiedDate":"2023-10-19"},{"lineNumber":681,"author":{"gitId":"yucongkoo"},"content":"* often forgets details about his/her customers","lastModifiedDate":"2023-11-01"},{"lineNumber":682,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":683,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":684,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":685,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":686,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":687,"author":{"gitId":"yucongkoo"},"content":"**Value proposition**: ","lastModifiedDate":"2023-11-01"},{"lineNumber":688,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":689,"author":{"gitId":"yucongkoo"},"content":"Manage customers\u0027 contact for existing/potential insurance contracts faster than GUI driven apps, ","lastModifiedDate":"2023-11-01"},{"lineNumber":690,"author":{"gitId":"yucongkoo"},"content":"alongside helping users increase the chance of sealing deals with customers.","lastModifiedDate":"2023-11-01"},{"lineNumber":691,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":692,"author":{"gitId":"TehOPanas"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":693,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":694,"author":{"gitId":"TehOPanas"},"content":"## User stories","lastModifiedDate":"2023-10-05"},{"lineNumber":695,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":696,"author":{"gitId":"songfangyl"},"content":"Priorities: High - `* * *`, Medium - `* *`, Low - `*`","lastModifiedDate":"2023-10-05"},{"lineNumber":697,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":698,"author":{"gitId":"-"},"content":"| Priority | As a …​          | I want to …​                                                                       | So that I can…​                                                              |","lastModifiedDate":"2020-05-23"},{"lineNumber":699,"author":{"gitId":"yucongkoo"},"content":"|----------|------------------|------------------------------------------------------------------------------------|------------------------------------------------------------------------------|","lastModifiedDate":"2023-11-06"},{"lineNumber":700,"author":{"gitId":"yucongkoo"},"content":"| `* * *`  | user             | be able to add new contacts to EzContact                                           | keep track of my contacts using EzContact                                    |","lastModifiedDate":"2023-11-06"},{"lineNumber":701,"author":{"gitId":"yucongkoo"},"content":"| `* * *`  | user             | be able to update my contacts\u0027 information easily                                  | easily maintain up-to-date information of my contacts                        |","lastModifiedDate":"2023-11-06"},{"lineNumber":702,"author":{"gitId":"yucongkoo"},"content":"| `* * *`  | user             | be able to search for specific contacts using their names                          | quickly lookup a contact and get their information                           |","lastModifiedDate":"2023-11-06"},{"lineNumber":703,"author":{"gitId":"songfangyl"},"content":"| `* * *`  | user             | be able to delete contacts                                                         |                                                                              |","lastModifiedDate":"2023-10-05"},{"lineNumber":704,"author":{"gitId":"yucongkoo"},"content":"| `* * *`  | user             | be able to list out my contacts in EzContact                                       | see all my saved contacts in one view                                        |","lastModifiedDate":"2023-11-06"},{"lineNumber":705,"author":{"gitId":"yucongkoo"},"content":"| `* * *`  | insurance agent  | be able to add customers\u0027 contacts to EzContact                                    | reach out to existing and potential customers easily                         |","lastModifiedDate":"2023-11-06"},{"lineNumber":706,"author":{"gitId":"yucongkoo"},"content":"| `* * *`  | insurance agent  | be able to assign priorities to each customer                                      | prioritise customers that have a higher chance on sealing a deal             |","lastModifiedDate":"2023-11-06"},{"lineNumber":707,"author":{"gitId":"yucongkoo"},"content":"| `* * *`  | insurance agent  | be able to view the type of insurance my customer currently holds                  | check customers\u0027 insurance profile easily                                    |","lastModifiedDate":"2023-11-06"},{"lineNumber":708,"author":{"gitId":"yucongkoo"},"content":"| `* * *`  | insurance agent  | be able to easily know customers subscribed under a specific insurance plan        | quickly know who to find when there are changes to a specific insurance plan |","lastModifiedDate":"2023-11-06"},{"lineNumber":709,"author":{"gitId":"yucongkoo"},"content":"| `* * *`  | insurance agent  | be able to apply descriptive tags to my customers                                  | easily identify and remember my customers using these tag                    |","lastModifiedDate":"2023-11-06"},{"lineNumber":710,"author":{"gitId":"yucongkoo"},"content":"| `* *`    | user             | be able to search for a contact using its other particulars(not necessarily names) | be more flexible when searching for contacts                                 |","lastModifiedDate":"2023-11-06"},{"lineNumber":711,"author":{"gitId":"yucongkoo"},"content":"| `* *`    | user             | be able to see my total numbers of contact entries in EzContact                    | know how many contacts I have in EzContact                                   |","lastModifiedDate":"2023-11-06"},{"lineNumber":712,"author":{"gitId":"yucongkoo"},"content":"| `* *`    | forgetful person | be able to search for contacts using partial names                                 | find a contact without having to remember their full name                    |","lastModifiedDate":"2023-11-06"},{"lineNumber":713,"author":{"gitId":"yucongkoo"},"content":"| `* *`    | forgetful person | have EzContact remind me of important task associated with certain contacts        | prevent myself from forgetting important tasks                               |","lastModifiedDate":"2023-11-06"},{"lineNumber":714,"author":{"gitId":"yucongkoo"},"content":"| `* *`    | forgetful person | be able to add remarks to a certain contact                                        | be reminded of things to take note of when contacting a person               |","lastModifiedDate":"2023-11-06"},{"lineNumber":715,"author":{"gitId":"songfangyl"},"content":"| `* *`    | careless person  | be able to undo previous command                                                   | recover from unintentional commands                                          |","lastModifiedDate":"2023-10-05"},{"lineNumber":716,"author":{"gitId":"yucongkoo"},"content":"| `* *`    | careless person  | be stopped from adding duplicate entries                                           | avoid myself from adding redundant data                                      |","lastModifiedDate":"2023-11-06"},{"lineNumber":717,"author":{"gitId":"yucongkoo"},"content":"| `* *`    | careless person  | be suggested by EzContact for similar names when I\u0027m searching for a person        | avoid myself from typographical errors                                       |","lastModifiedDate":"2023-11-06"},{"lineNumber":718,"author":{"gitId":"yucongkoo"},"content":"| `* *`    | first time user  | be able to know commands in EzContact                                              | play around with the features and get used to the application                |","lastModifiedDate":"2023-11-06"},{"lineNumber":719,"author":{"gitId":"yucongkoo"},"content":"| `* *`    | fast typist      | have short commands                                                                | execute commands faster                                                      |","lastModifiedDate":"2023-11-06"},{"lineNumber":720,"author":{"gitId":"yucongkoo"},"content":"| `*`      | user             | be able to import my data from external sources into EzContact                     | avoid myself from having to copy my data manually                            |","lastModifiedDate":"2023-11-06"},{"lineNumber":721,"author":{"gitId":"yucongkoo"},"content":"| `*`      | user             | be able to export my data                                                          | have a backup of data in case of data loss                                   |","lastModifiedDate":"2023-11-06"},{"lineNumber":722,"author":{"gitId":"TehOPanas"},"content":"| `*`      | advanced user    | have multiple contact books                                                        | neatly organize my contacts based on contexts                                |","lastModifiedDate":"2023-10-19"},{"lineNumber":723,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":724,"author":{"gitId":"TehOPanas"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":725,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":726,"author":{"gitId":"TehOPanas"},"content":"## Use cases","lastModifiedDate":"2023-10-05"},{"lineNumber":727,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":728,"author":{"gitId":"yucongkoo"},"content":"(For all use cases below, the **System** is the `EzContact` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-11-06"},{"lineNumber":729,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":730,"author":{"gitId":"TehOPanas"},"content":"#### Adding a customer","lastModifiedDate":"2023-10-19"},{"lineNumber":731,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":732,"author":{"gitId":"TehOPanas"},"content":"**Use Case: UC01 - add a customer**","lastModifiedDate":"2023-10-16"},{"lineNumber":733,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":734,"author":{"gitId":"yucongkoo"},"content":"**MSS:**\u003cbr/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":735,"author":{"gitId":"yucongkoo"},"content":"\u0026emsp;1. User enters the details of a customer to be added.\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":736,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;2. System adds the customer.\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":737,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;3. System displays the details of customer added by user.\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":738,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;Use case ends.","lastModifiedDate":"2023-11-01"},{"lineNumber":739,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":740,"author":{"gitId":"yucongkoo"},"content":"**Extensions:**\u003c/br\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":741,"author":{"gitId":"yucongkoo"},"content":"\u0026emsp;1a.  Details provided by user is incomplete or invalid.\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":742,"author":{"gitId":"yucongkoo"},"content":"\u0026emsp;\u0026emsp;1a1. System displays an error message to alert User.\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":743,"author":{"gitId":"yucongkoo"},"content":"\u0026emsp;\u0026emsp;Use case ends.\u003cbr/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":744,"author":{"gitId":"yucongkoo"},"content":"\u0026emsp;1b.  Customer to be added is already in the System.\u003cbr/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":745,"author":{"gitId":"yucongkoo"},"content":"\u0026emsp;\u0026emsp;1b1. System displays an error message to alert User.\u003cbr/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":746,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;\u0026emsp;Use case ends.","lastModifiedDate":"2023-11-01"},{"lineNumber":747,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":748,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":749,"author":{"gitId":"TehOPanas"},"content":"#### Filtering customers","lastModifiedDate":"2023-10-19"},{"lineNumber":750,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":751,"author":{"gitId":"TehOPanas"},"content":"**Use case: UC02 - filter customers**","lastModifiedDate":"2023-10-16"},{"lineNumber":752,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":753,"author":{"gitId":"TehOPanas"},"content":"**MSS:**\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":754,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;1. User chooses to filter customers.\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":755,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;2. User enters filter command and selectively adds one/multiple category parameters to filter the customers for.\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":756,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;3. System filters the customers list.\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":757,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;4. System displays the list of customers that meet the criteria.\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":758,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;Use case ends.","lastModifiedDate":"2023-11-01"},{"lineNumber":759,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":760,"author":{"gitId":"Jweewee"},"content":"**Extensions:**\u003c/br\u003e","lastModifiedDate":"2023-10-06"},{"lineNumber":761,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;2b.  User doesn\u0027t select any categories to filter for.\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":762,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;\u0026emsp;2b1. System shows an error message to alert User about the invalid command.\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":763,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;\u0026emsp;Use case ends.","lastModifiedDate":"2023-11-01"},{"lineNumber":764,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":765,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;3a.  None of the contacts meet the filter criteria.\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":766,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;\u0026emsp;3a1. System shows an empty list with a warning message.\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":767,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;\u0026emsp;Use case ends.","lastModifiedDate":"2023-11-01"},{"lineNumber":768,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-06"},{"lineNumber":769,"author":{"gitId":"TehOPanas"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":770,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":771,"author":{"gitId":"TehOPanas"},"content":"#### Deleting a customer","lastModifiedDate":"2023-10-19"},{"lineNumber":772,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":773,"author":{"gitId":"TehOPanas"},"content":"**Use Case: UC03 - delete a customer**","lastModifiedDate":"2023-10-16"},{"lineNumber":774,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":775,"author":{"gitId":"TehOPanas"},"content":"**MSS:**\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":776,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;1. User lists out the customers.\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":777,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;2. System shows the list of customers to user.\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":778,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;3. User deletes the customer with the index number shown in the displayed list.\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":779,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;4. System displays the details of the removed customer.\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":780,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;Use case ends.","lastModifiedDate":"2023-11-01"},{"lineNumber":781,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":782,"author":{"gitId":"songfangyl"},"content":"**Extensions:**\u003c/br\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":783,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;4a. Invalid delete command or invalid index.\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":784,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;\u0026emsp;4a1. System shows an error message to alert User about the invalid command.\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":785,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;\u0026emsp;Use case ends.","lastModifiedDate":"2023-11-01"},{"lineNumber":786,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":787,"author":{"gitId":"TehOPanas"},"content":"#### Editing a customer","lastModifiedDate":"2023-10-19"},{"lineNumber":788,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":789,"author":{"gitId":"TehOPanas"},"content":"**Use Case: UC04 - edit a customer\u0027s details**","lastModifiedDate":"2023-10-16"},{"lineNumber":790,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":791,"author":{"gitId":"TehOPanas"},"content":"**MSS:**\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":792,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;1. User requests to list out the customers.\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":793,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;2. System shows the list of customers.\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":794,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;3. User edits the details of customer with its respective index.\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":795,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;4. System displays the details of the edited customer.\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":796,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;Use case ends.","lastModifiedDate":"2023-11-01"},{"lineNumber":797,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":798,"author":{"gitId":"LamJiuFong"},"content":"**Extensions:**\u003c/br\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":799,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;3a. User provides invalid index or information.\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":800,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;\u0026emsp;3a1. System shows an error message to alert User about the invalid command.\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":801,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;\u0026emsp;Use case ends.","lastModifiedDate":"2023-11-01"},{"lineNumber":802,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":803,"author":{"gitId":"TehOPanas"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":804,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":805,"author":{"gitId":"TehOPanas"},"content":"#### Searching for a customer","lastModifiedDate":"2023-10-19"},{"lineNumber":806,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":807,"author":{"gitId":"TehOPanas"},"content":"**Use Case: UC05 - search for a customer**","lastModifiedDate":"2023-10-19"},{"lineNumber":808,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":809,"author":{"gitId":"TehOPanas"},"content":"**MSS:**\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":810,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-01"},{"lineNumber":811,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;1.  User searches with a prompt.\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":812,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;2.  System shows a list of customers matching the prompt.\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":813,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;3.  User views the customers\u0027 information.\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":814,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;Use case ends.","lastModifiedDate":"2023-11-01"},{"lineNumber":815,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":816,"author":{"gitId":"Jweewee"},"content":"**Extensions:**\u003c/br\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":817,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;1a. User searches with an invalid prompt format\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":818,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;\u0026emsp;1a1. System shows an error message to User.\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":819,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;\u0026emsp;Use case ends.","lastModifiedDate":"2023-11-01"},{"lineNumber":820,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":821,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;2a. There is no customer that match the prompt.\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":822,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;\u0026emsp;2a1. System shows an empty list.\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":823,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;\u0026emsp;Use case ends.","lastModifiedDate":"2023-11-01"},{"lineNumber":824,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":825,"author":{"gitId":"LamJiuFong"},"content":"#### Assigning priority to customer","lastModifiedDate":"2023-10-27"},{"lineNumber":826,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":827,"author":{"gitId":"LamJiuFong"},"content":"**Use Case: UC06 - assign priority to a customer**","lastModifiedDate":"2023-10-27"},{"lineNumber":828,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":829,"author":{"gitId":"TehOPanas"},"content":"**MSS:**\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":830,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":831,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;1.  User requests to list out the customers.\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":832,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;2.  System lists out the customers.\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":833,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;3.  User assigns priority to the customer with its respective index.\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":834,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;4.  System displays the new priority of customer.\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":835,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;Use case ends.","lastModifiedDate":"2023-11-01"},{"lineNumber":836,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":837,"author":{"gitId":"LamJiuFong"},"content":"**Extensions:**\u003c/br\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":838,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;3a. User provides invalid index or information.\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":839,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;\u0026emsp;3a1. System shows an error message to alert User about the invalid command.\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":840,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;\u0026emsp;Use case ends.","lastModifiedDate":"2023-11-01"},{"lineNumber":841,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":842,"author":{"gitId":"TehOPanas"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":843,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":844,"author":{"gitId":"TehOPanas"},"content":"#### Assigning insurance to customer","lastModifiedDate":"2023-11-01"},{"lineNumber":845,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":846,"author":{"gitId":"TehOPanas"},"content":"**Use Case: UC07 - assign insurance to a customer**","lastModifiedDate":"2023-11-01"},{"lineNumber":847,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":848,"author":{"gitId":"TehOPanas"},"content":"**MSS:**\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":849,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":850,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;1.  User requests to list out the customers.\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":851,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;2.  System lists out the customers.\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":852,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;3.  User assigns insurance to the customer with its respective index.\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":853,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;4.  System displays the new insurance of customer.\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":854,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;Use case ends.","lastModifiedDate":"2023-11-01"},{"lineNumber":855,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":856,"author":{"gitId":"TehOPanas"},"content":"**Extensions:**\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":857,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;3a. User provides invalid index or information.\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":858,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;\u0026emsp;3a1. System shows an error message to alert User about the invalid command.\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":859,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;\u0026emsp;Use case ends.","lastModifiedDate":"2023-11-01"},{"lineNumber":860,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":861,"author":{"gitId":"TehOPanas"},"content":"#### Removing insurance from customer","lastModifiedDate":"2023-11-01"},{"lineNumber":862,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":863,"author":{"gitId":"TehOPanas"},"content":"**Use Case: UC08 - remove insurance from a customer**","lastModifiedDate":"2023-11-01"},{"lineNumber":864,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":865,"author":{"gitId":"TehOPanas"},"content":"**MSS:**\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":866,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":867,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;1.  User requests to list out the customers.\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":868,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;2.  System lists out the customers.\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":869,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;3.  User removes insurance from the customer with its respective index.\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":870,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;4.  System displays the new insurance of customer.\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":871,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;Use case ends.","lastModifiedDate":"2023-11-01"},{"lineNumber":872,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":873,"author":{"gitId":"TehOPanas"},"content":"**Extensions:**\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":874,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;3a. User provides invalid index or information.\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":875,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;\u0026emsp;3a1. System shows an error message to alert User about the invalid command.\u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":876,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;\u0026emsp;Use case ends.","lastModifiedDate":"2023-11-01"},{"lineNumber":877,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":878,"author":{"gitId":"TehOPanas"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":879,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":880,"author":{"gitId":"yucongkoo"},"content":"#### Updating tags of a customer","lastModifiedDate":"2023-11-01"},{"lineNumber":881,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":882,"author":{"gitId":"yucongkoo"},"content":"**Use Case: UC09 - update tags of a customer**","lastModifiedDate":"2023-11-01"},{"lineNumber":883,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":884,"author":{"gitId":"yucongkoo"},"content":"**Mss:**\u003cbr/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":885,"author":{"gitId":"yucongkoo"},"content":"\u0026emsp;1. User requests to list out the customers.\u003cbr/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":886,"author":{"gitId":"yucongkoo"},"content":"\u0026emsp;2. System displays the requested list of customers to the user.\u003cbr/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":887,"author":{"gitId":"yucongkoo"},"content":"\u0026emsp;3. User enters index of targeted customer and information of tags to add or delete.\u003cbr/\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":888,"author":{"gitId":"yucongkoo"},"content":"\u0026emsp;4. System updates the tags of the specified customer accordingly.\u003cbr/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":889,"author":{"gitId":"yucongkoo"},"content":"\u0026emsp;5. System displays the details of the updated customer.\u003cbr/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":890,"author":{"gitId":"yucongkoo"},"content":"\u0026emsp;Use case ends.\u003cbr/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":891,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":892,"author":{"gitId":"yucongkoo"},"content":"**Extensions:**\u003cbr/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":893,"author":{"gitId":"yucongkoo"},"content":"\u0026emsp;3a. User provided invalid index or information.\u003cbr/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":894,"author":{"gitId":"yucongkoo"},"content":"\u0026emsp;\u0026emsp;3a1. System displays an error message to alert the User.\u003cbr/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":895,"author":{"gitId":"yucongkoo"},"content":"\u0026emsp;\u0026emsp;Use case ends.\u003cbr/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":896,"author":{"gitId":"yucongkoo"},"content":"\u0026emsp;3b. User provided information that will not update the specified customer.\u003cbr/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":897,"author":{"gitId":"songfangyl"},"content":"\u0026emsp;\u0026emsp;3b1. Systems displays an error message to alert the User.\u003cbr/\u003e","lastModifiedDate":"2023-11-06"},{"lineNumber":898,"author":{"gitId":"songfangyl"},"content":"\u0026emsp;\u0026emsp;Use case ends.\u003cbr/\u003e","lastModifiedDate":"2023-11-06"},{"lineNumber":899,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":900,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":901,"author":{"gitId":"songfangyl"},"content":"#### Updating remark of a customer","lastModifiedDate":"2023-11-07"},{"lineNumber":902,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":903,"author":{"gitId":"songfangyl"},"content":"**Use Case: UC10 - update remark of a customer**","lastModifiedDate":"2023-11-07"},{"lineNumber":904,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":905,"author":{"gitId":"songfangyl"},"content":"**Mss:**\u003cbr/\u003e","lastModifiedDate":"2023-11-06"},{"lineNumber":906,"author":{"gitId":"songfangyl"},"content":"\u0026emsp;1. User requests to list out the customers.\u003cbr/\u003e","lastModifiedDate":"2023-11-06"},{"lineNumber":907,"author":{"gitId":"songfangyl"},"content":"\u0026emsp;2. System displays the requested list of customers to the user.\u003cbr/\u003e","lastModifiedDate":"2023-11-06"},{"lineNumber":908,"author":{"gitId":"songfangyl"},"content":"\u0026emsp;3. User enters index and remark of the target customer.\u003cbr/\u003e","lastModifiedDate":"2023-11-06"},{"lineNumber":909,"author":{"gitId":"songfangyl"},"content":"\u0026emsp;4. System updates the remark of specified customer accordingly.\u003cbr/\u003e","lastModifiedDate":"2023-11-06"},{"lineNumber":910,"author":{"gitId":"songfangyl"},"content":"\u0026emsp;5. System displays the details of the updated customer.\u003cbr/\u003e","lastModifiedDate":"2023-11-06"},{"lineNumber":911,"author":{"gitId":"songfangyl"},"content":"\u0026emsp;Use case ends.\u003cbr/\u003e","lastModifiedDate":"2023-11-06"},{"lineNumber":912,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":913,"author":{"gitId":"songfangyl"},"content":"**Extensions:**\u003cbr/\u003e","lastModifiedDate":"2023-11-06"},{"lineNumber":914,"author":{"gitId":"songfangyl"},"content":"\u0026emsp;3a. User provided invalid index or information.\u003cbr/\u003e","lastModifiedDate":"2023-11-06"},{"lineNumber":915,"author":{"gitId":"songfangyl"},"content":"\u0026emsp;\u0026emsp;3a1. System displays an error message to alert the User.\u003cbr/\u003e","lastModifiedDate":"2023-11-06"},{"lineNumber":916,"author":{"gitId":"songfangyl"},"content":"\u0026emsp;\u0026emsp;Use case ends.\u003cbr/\u003e","lastModifiedDate":"2023-11-06"},{"lineNumber":917,"author":{"gitId":"songfangyl"},"content":"\u0026emsp;3b. User provided remark that will not update the specified customer.\u003cbr/\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":918,"author":{"gitId":"yucongkoo"},"content":"\u0026emsp;\u0026emsp;3b1. Systems displays an error message to alert the User.\u003cbr/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":919,"author":{"gitId":"yucongkoo"},"content":"\u0026emsp;\u0026emsp;Use case ends.\u003cbr/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":920,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":921,"author":{"gitId":"TehOPanas"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":922,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":923,"author":{"gitId":"TehOPanas"},"content":"## Non-Functional Requirements","lastModifiedDate":"2023-11-01"},{"lineNumber":924,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":925,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":926,"author":{"gitId":"TehOPanas"},"content":"2.  Should be able to hold up to 1000 customer without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-10-16"},{"lineNumber":927,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":928,"author":{"gitId":"Jweewee"},"content":"4.  The user interface should be intuitive, easy to navigate and understand (i.e. concise and simple)","lastModifiedDate":"2023-10-05"},{"lineNumber":929,"author":{"gitId":"Jweewee"},"content":"5.  The application should gracefully handle errors to prevent system crashes and data corruption.","lastModifiedDate":"2023-10-05"},{"lineNumber":930,"author":{"gitId":"yucongkoo"},"content":"6. The application should be offered as a free service to the public.","lastModifiedDate":"2023-11-06"},{"lineNumber":931,"author":{"gitId":"yucongkoo"},"content":"7. The application should be able to respond within one second.","lastModifiedDate":"2023-11-06"},{"lineNumber":932,"author":{"gitId":"yucongkoo"},"content":"8. The application should be able to handle and support manual edits to the data file.","lastModifiedDate":"2023-11-06"},{"lineNumber":933,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":934,"author":{"gitId":"TehOPanas"},"content":"## Glossary","lastModifiedDate":"2023-10-05"},{"lineNumber":935,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":936,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":937,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":938,"author":{"gitId":"yucongkoo"},"content":"* **Command word:** The first word of a user command(e.g. `tag` is the command word of the command `tag 1 at/tall dt/short`)","lastModifiedDate":"2023-11-01"},{"lineNumber":939,"author":{"gitId":"yucongkoo"},"content":"* **Command arguments:** The remaining input of a user command(e.g. `1 at/tall dt/short` is the command arguments of the command `tag 1 at/tall dt/short`)","lastModifiedDate":"2023-11-01"},{"lineNumber":940,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":941,"author":{"gitId":"TehOPanas"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":942,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":943,"author":{"gitId":"TehOPanas"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-01"},{"lineNumber":944,"author":{"gitId":"TehOPanas"},"content":"# **Appendix: Planned Enhancements**","lastModifiedDate":"2023-11-01"},{"lineNumber":945,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":946,"author":{"gitId":"TehOPanas"},"content":"This section covers the enhancements we plan to implement in the future.","lastModifiedDate":"2023-11-01"},{"lineNumber":947,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":948,"author":{"gitId":"yucongkoo"},"content":"#### Enhancement 1 : Deletion of all tags(and insurances) in a single command","lastModifiedDate":"2023-11-09"},{"lineNumber":949,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":950,"author":{"gitId":"yucongkoo"},"content":"**Feature flaw:** \u003cbr/\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":951,"author":{"gitId":"yucongkoo"},"content":"As a customer might have many tags, and they could potentially want to remove all the ","lastModifiedDate":"2023-11-09"},{"lineNumber":952,"author":{"gitId":"yucongkoo"},"content":"tags in one command, they would have to type out all the tags separately in order to achieve that.","lastModifiedDate":"2023-11-09"},{"lineNumber":953,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":954,"author":{"gitId":"yucongkoo"},"content":"**Proposed enhancement:**\u003cbr/\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":955,"author":{"gitId":"yucongkoo"},"content":"We provide a convenient way for users to delete all the tags in one command by adding an optional parameter","lastModifiedDate":"2023-11-09"},{"lineNumber":956,"author":{"gitId":"yucongkoo"},"content":"to the command. The updated command format would be as follows: \u003cbr/\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":957,"author":{"gitId":"yucongkoo"},"content":"`tag \u003cindex\u003e [at/\u003ctags to add\u003e]... [dt/\u003ctags to add\u003e]... [dat/deleteall]`.","lastModifiedDate":"2023-11-09"},{"lineNumber":958,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":959,"author":{"gitId":"yucongkoo"},"content":"Justifications:","lastModifiedDate":"2023-11-09"},{"lineNumber":960,"author":{"gitId":"yucongkoo"},"content":"* As deleting all the tags is a destructive action, we require users to specify the `dat/` prefix to indicate","lastModifiedDate":"2023-11-09"},{"lineNumber":961,"author":{"gitId":"yucongkoo"},"content":"their interest in deleting all tags, and `deleteall` value to the prefix to serve as a confirmation of this ","lastModifiedDate":"2023-11-09"},{"lineNumber":962,"author":{"gitId":"yucongkoo"},"content":"destructive command.","lastModifiedDate":"2023-11-09"},{"lineNumber":963,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":964,"author":{"gitId":"yucongkoo"},"content":"Updated behaviours (original behaviours of tag still hold):","lastModifiedDate":"2023-11-09"},{"lineNumber":965,"author":{"gitId":"yucongkoo"},"content":"* When a `dat/` prefix is supplied, there should not be any `at/` or `dt/` prefix supplied in the same command, if there","lastModifiedDate":"2023-11-09"},{"lineNumber":966,"author":{"gitId":"yucongkoo"},"content":"is, a format error message will be shown to the user.","lastModifiedDate":"2023-11-09"},{"lineNumber":967,"author":{"gitId":"yucongkoo"},"content":"* If the value provided to parameter `dat/` is not `deleteall`, show an error message to users, indicating that","lastModifiedDate":"2023-11-09"},{"lineNumber":968,"author":{"gitId":"yucongkoo"},"content":"they should supply the `deleteall` value to `dat/` in order to confirm the deletion.","lastModifiedDate":"2023-11-09"},{"lineNumber":969,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":970,"author":{"gitId":"yucongkoo"},"content":"**Examples:**\u003cbr/\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":971,"author":{"gitId":"yucongkoo"},"content":"* `tag 1 dat/deleteall`\u003cbr/\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":972,"author":{"gitId":"yucongkoo"},"content":"Expected: All the tags of customer at index 1 is deleted, a `successfully deleted all tags` message is shown to user.","lastModifiedDate":"2023-11-09"},{"lineNumber":973,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":974,"author":{"gitId":"yucongkoo"},"content":"* `tag 1 at/tall dat/deleteall`\u003cbr/\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":975,"author":{"gitId":"yucongkoo"},"content":"Expected: Error, an error message showing the usage of tag command is shown to the user.","lastModifiedDate":"2023-11-09"},{"lineNumber":976,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":977,"author":{"gitId":"yucongkoo"},"content":"* `tag 1 dat/delete`\u003cbr/\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":978,"author":{"gitId":"yucongkoo"},"content":"Expected: Error, an error message informing the user that they should input `deleteall` to confirm the deletion of all tags","lastModifiedDate":"2023-11-09"},{"lineNumber":979,"author":{"gitId":"yucongkoo"},"content":"is shown to the user.","lastModifiedDate":"2023-11-09"},{"lineNumber":980,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":981,"author":{"gitId":"yucongkoo"},"content":"**Additional notes:**\u003cbr/\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":982,"author":{"gitId":"yucongkoo"},"content":"As the behaviour of the `insurance` command is nearly identical to `tag` command, this planned enhancement applies to","lastModifiedDate":"2023-11-09"},{"lineNumber":983,"author":{"gitId":"yucongkoo"},"content":"the `insurance` command too, the proposed enhancements and behaviours will be identical. The following is the updated","lastModifiedDate":"2023-11-09"},{"lineNumber":984,"author":{"gitId":"yucongkoo"},"content":"command format for `insurance` command:\u003cbr/\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":985,"author":{"gitId":"yucongkoo"},"content":"`insurance \u003cindex\u003e [ai/\u003cinsurance to add\u003e]... [di/\u003cinsurance to delete\u003e]... [dai/deleteall]`","lastModifiedDate":"2023-11-09"},{"lineNumber":986,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":987,"author":{"gitId":"TehOPanas"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-01"},{"lineNumber":988,"author":{"gitId":"TehOPanas"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":989,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":990,"author":{"gitId":"TehOPanas"},"content":"# **Appendix: Effort**","lastModifiedDate":"2023-11-01"},{"lineNumber":991,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":992,"author":{"gitId":"TehOPanas"},"content":"This section gives an overview of the challenges, we as a team faced and the effort we have put in to make this project work.","lastModifiedDate":"2023-11-01"},{"lineNumber":993,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":994,"author":{"gitId":"TehOPanas"},"content":"####  Challenges faced / Achievement accomplished `* * *` \u003c- indicates the significance","lastModifiedDate":"2023-11-01"},{"lineNumber":995,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":996,"author":{"gitId":"TehOPanas"},"content":"(details... )","lastModifiedDate":"2023-11-01"},{"lineNumber":997,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":998,"author":{"gitId":"TehOPanas"},"content":"**Effort:**","lastModifiedDate":"2023-11-01"},{"lineNumber":999,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":1000,"author":{"gitId":"TehOPanas"},"content":"(effort put in for this to be done... )","lastModifiedDate":"2023-11-01"},{"lineNumber":1001,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":1002,"author":{"gitId":"TehOPanas"},"content":"**Result :**","lastModifiedDate":"2023-11-01"},{"lineNumber":1003,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":1004,"author":{"gitId":"TehOPanas"},"content":"(results achieved with this implementation... )","lastModifiedDate":"2023-11-01"},{"lineNumber":1005,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":1006,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":1007,"author":{"gitId":"TehOPanas"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":1008,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1009,"author":{"gitId":"TehOPanas"},"content":"# **Appendix: Instructions for manual testing**","lastModifiedDate":"2023-10-05"},{"lineNumber":1010,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1011,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":1012,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1013,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":1014,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":1015,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":1016,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":1017,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1018,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":1019,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1020,"author":{"gitId":"TehOPanas"},"content":"## Launch and shutdown","lastModifiedDate":"2023-10-05"},{"lineNumber":1021,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1022,"author":{"gitId":"TehOPanas"},"content":"**Initial launch**","lastModifiedDate":"2023-11-01"},{"lineNumber":1023,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1024,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":1025,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1026,"author":{"gitId":"TehOPanas"},"content":"   1. Double-click the jar file  \u003cbr/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":1027,"author":{"gitId":"TehOPanas"},"content":"      Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2023-11-01"},{"lineNumber":1028,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1029,"author":{"gitId":"TehOPanas"},"content":"**Saving window preferences**","lastModifiedDate":"2023-11-01"},{"lineNumber":1030,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1031,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":1032,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1033,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1034,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":1035,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1036,"author":{"gitId":"TehOPanas"},"content":"_{ more test cases …​ }_","lastModifiedDate":"2023-11-01"},{"lineNumber":1037,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1038,"author":{"gitId":"TehOPanas"},"content":"## Deleting a person","lastModifiedDate":"2023-10-05"},{"lineNumber":1039,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1040,"author":{"gitId":"TehOPanas"},"content":"**Deleting a person while all persons are being shown**","lastModifiedDate":"2023-11-01"},{"lineNumber":1041,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1042,"author":{"gitId":"TehOPanas"},"content":"Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2023-11-01"},{"lineNumber":1043,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1044,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1045,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":1046,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1047,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1048,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":1049,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1050,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1051,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":1052,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1053,"author":{"gitId":"TehOPanas"},"content":"_{ more test cases …​ }_","lastModifiedDate":"2023-11-01"},{"lineNumber":1054,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1055,"author":{"gitId":"TehOPanas"},"content":"## Saving data","lastModifiedDate":"2023-10-05"},{"lineNumber":1056,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1057,"author":{"gitId":"TehOPanas"},"content":"**Dealing with missing/corrupted data files**","lastModifiedDate":"2023-11-01"},{"lineNumber":1058,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1059,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":1060,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1061,"author":{"gitId":"yucongkoo"},"content":"## Updating tags of a customer","lastModifiedDate":"2023-11-06"},{"lineNumber":1062,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":1063,"author":{"gitId":"yucongkoo"},"content":"**Updating the tags of a specific customer**","lastModifiedDate":"2023-11-06"},{"lineNumber":1064,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":1065,"author":{"gitId":"yucongkoo"},"content":"Prerequisite : -","lastModifiedDate":"2023-11-06"},{"lineNumber":1066,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":1067,"author":{"gitId":"yucongkoo"},"content":"1. Test case : `tag 1 at/tall at/fat dt/short dt/skinny` \u003cbr/\u003e","lastModifiedDate":"2023-11-06"},{"lineNumber":1068,"author":{"gitId":"TehOPanas"},"content":"   Expected : The tags assigned to the customer at index 1 will be updated accordingly(adds `tall` and `fat` tag, deletes `short` and `skinny` tag).","lastModifiedDate":"2023-11-09"},{"lineNumber":1069,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":1070,"author":{"gitId":"TehOPanas"},"content":"1. Test case : `tag 0 at/tall`\u003cbr/\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":1071,"author":{"gitId":"yucongkoo"},"content":"   Expected : Error, details shown in the status message(format error since the index is not a positive integer).","lastModifiedDate":"2023-11-09"},{"lineNumber":1072,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":1073,"author":{"gitId":"TehOPanas"},"content":"1. Test case : `tag 1`\u003cbr/\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":1074,"author":{"gitId":"yucongkoo"},"content":"   Expected : Error, details shown in the status message(format error since no tag to update is provided).","lastModifiedDate":"2023-11-09"},{"lineNumber":1075,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":1076,"author":{"gitId":"TehOPanas"},"content":"1. Test case: `tag 1 at/tall dt/tall`\u003cbr/\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":1077,"author":{"gitId":"yucongkoo"},"content":"   Expected : Error, details shown in the status message(conflicting tags).","lastModifiedDate":"2023-11-09"},{"lineNumber":1078,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":1079,"author":{"gitId":"yucongkoo"},"content":"1. Test case: `tag 1 dt/dsajdkl`, the tag to delete does not exist in cutomer 1\u003cbr/\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":1080,"author":{"gitId":"yucongkoo"},"content":"   Expected: Error, details shown in the status message(customer not updated).","lastModifiedDate":"2023-11-09"},{"lineNumber":1081,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":1082,"author":{"gitId":"TehOPanas"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":1083,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":1084,"author":{"gitId":"TehOPanas"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":1085,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":1086,"author":{"gitId":"TehOPanas"},"content":"## Update insurance of a customer","lastModifiedDate":"2023-11-09"},{"lineNumber":1087,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":1088,"author":{"gitId":"TehOPanas"},"content":"**Updating the insurances of a customer**","lastModifiedDate":"2023-11-09"},{"lineNumber":1089,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":1090,"author":{"gitId":"TehOPanas"},"content":"Prerequisite : -","lastModifiedDate":"2023-11-09"},{"lineNumber":1091,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":1092,"author":{"gitId":"TehOPanas"},"content":"1. Test case : `insurance 2 ai/AIA ai/cars di/health di/ABC` \u003cbr/\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":1093,"author":{"gitId":"TehOPanas"},"content":"   Expected : Customer is updated, `health` and `ABC` insurance are removed and `AIA` and `cars` insurance are added","lastModifiedDate":"2023-11-09"},{"lineNumber":1094,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":1095,"author":{"gitId":"TehOPanas"},"content":"1. Test case : `insurance 0 ai/AIA ai/cars di/health di/ABC` `` \u003cbr/\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":1096,"author":{"gitId":"TehOPanas"},"content":"   Expected : Customer is not updated. Error details shown in the status message (format error since the index is not a positive integer).","lastModifiedDate":"2023-11-09"},{"lineNumber":1097,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":1098,"author":{"gitId":"TehOPanas"},"content":"1. Test case : `insur 3 ai/EFG ai/JFK` \u003cbr/\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":1099,"author":{"gitId":"TehOPanas"},"content":"   Expected : Customer is not updated. Error details shown in the status message (Incorrect command word).","lastModifiedDate":"2023-11-09"},{"lineNumber":1100,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":1101,"author":{"gitId":"TehOPanas"},"content":"1. Test case : `insurance 4 ai/ABC di/ABC` \u003cbr/\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":1102,"author":{"gitId":"TehOPanas"},"content":"   Expected : Customer is not updated. Error details shown in the status message (conflicting changes).","lastModifiedDate":"2023-11-09"},{"lineNumber":1103,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":1104,"author":{"gitId":"TehOPanas"},"content":"1. Test case : `insurance 1 ` \u003cbr/\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":1105,"author":{"gitId":"TehOPanas"},"content":"   Expected : No customer is updated. Error details shown in the status message(format error since no insurances to update is provided).","lastModifiedDate":"2023-11-09"},{"lineNumber":1106,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":1107,"author":{"gitId":"TehOPanas"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":1108,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":1109,"author":{"gitId":"TehOPanas"},"content":"## Feature to show","lastModifiedDate":"2023-11-01"},{"lineNumber":1110,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":1111,"author":{"gitId":"TehOPanas"},"content":"**Scenario**","lastModifiedDate":"2023-11-01"},{"lineNumber":1112,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":1113,"author":{"gitId":"TehOPanas"},"content":"Prerequisite : [condition needed to be fulfilled to perform the action if applicable]","lastModifiedDate":"2023-11-01"},{"lineNumber":1114,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":1115,"author":{"gitId":"TehOPanas"},"content":"1. Test case : `value` \u003cbr/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":1116,"author":{"gitId":"TehOPanas"},"content":"    Expected : `result`","lastModifiedDate":"2023-11-01"},{"lineNumber":1117,"author":{"gitId":"TehOPanas"},"content":"1. ...","lastModifiedDate":"2023-11-01"},{"lineNumber":1118,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":1119,"author":{"gitId":"TehOPanas"},"content":"_{ more test cases …​ }_","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"TehOPanas":410,"yucongkoo":213,"songfangyl":156,"LamJiuFong":45,"-":286,"Jweewee":9}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"User Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"TehOPanas"},"content":"# EzContact","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"TehOPanas"},"content":"## Introduction","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"TehOPanas"},"content":"Welcome to the User Guide (UG) of **EZContact**","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;\u0026emsp;In the dynamic and ever-evolving world of insurance, staying connected and organized is paramount.","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"TehOPanas"},"content":"Meet EzContact, your go-to solution designed exclusively for insurance agents. Navigating the complex network of clients,","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"TehOPanas"},"content":"policies, and leads has never been easier. EzContact empowers you to manage your contacts, streamline communication,","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"TehOPanas"},"content":"and boost your productivity, all from the tips of your fingers.","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"Jweewee"},"content":"\u0026emsp;\u0026emsp;EzContact is a desktop application that can help you organize your customers\u0027 information and reduce the","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"TehOPanas"},"content":"hassle of having to remember everything. It is optimized for use via Command Line Interface (CLI), meaning that users would","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"TehOPanas"},"content":"have to enter text command to execute them, while still having the benefits of Graphical User Interface (GUI) where users","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"TehOPanas"},"content":"can view the information easily through the application.","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"TehOPanas"},"content":"With EZContact, our users are able to :","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"Jweewee"},"content":"*  Seamlessly organize their clients\u0027 details, policy information, and communication history.","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"TehOPanas"},"content":"*  Stay on top of their leads, and convert potential clients into loyal customers.","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"TehOPanas"},"content":"*  Schedule appointments and follow-ups without missing a beat.","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;\u0026emsp;If you are a fast typist, EzContact is the perfect tool for you to keep track of all your customer","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"TehOPanas"},"content":", it is faster than any other traditional GUI-based application available in the market! Remember, Time is Money ! The","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"Jweewee"},"content":"faster you approach your customer, the more deals you seal.","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"TehOPanas"},"content":"\u0026emsp;\u0026emsp;If you are interested in EzContact, hop on over to our [Quick Start](#quick-start) to get started and","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"TehOPanas"},"content":"embark on your journey of using EzContact.","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"TehOPanas"},"content":"2. Download the latest `EzContact.jar` from [here](https://github.com/AY2324S1-CS2103T-W16-2/tp/releases).","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"TehOPanas"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your EzContact.","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"yucongkoo"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"yucongkoo"},"content":"5. After reaching the folder, execute the command `java -jar EzContact.jar`. The GUI similar to the below should appear in a few seconds.","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"TehOPanas"},"content":"Note how the app contains some sample data.\u003cbr\u003e\u003cbr\u003e![Ui](images/Ui.png)","lastModifiedDate":"2023-11-03"},{"lineNumber":53,"author":{"gitId":"yucongkoo"},"content":"5. Type the command in the [Command Box](#ui-layout-description) and press Enter to execute it.","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"TehOPanas"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"yucongkoo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"yucongkoo"},"content":"## UI Layout Description","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"yucongkoo"},"content":"Consider the following UI split into three parts:","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":62,"author":{"gitId":"yucongkoo"},"content":"![UiWithDescription](images/UiWithDescription.png)","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":64,"author":{"gitId":"yucongkoo"},"content":"As illustrated above, the UI will be split into three sections, we will be providing a name for each section and","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"yucongkoo"},"content":"will be using these names to refer to the section specified in the following User Guide.","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"TehOPanas"},"content":"1. **Command Box:** Box for users to input the command to be executed by EzContact.\u003cbr/\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"TehOPanas"},"content":"1. **Result Display Box:** Box that displays the result of executing the entered command.\u003cbr/\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"TehOPanas"},"content":"1. **Customer List Panel:** Panel that displays the list of Customer Cards.\u003cbr/\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"TehOPanas"},"content":"   - **Customer Card:** Card that displays information about each customer.\u003cbr/\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":71,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"yucongkoo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"yucongkoo"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"LamJiuFong"},"content":"* Words in `\u003c\u003e` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"LamJiuFong"},"content":"  e.g. in `add n/\u003cname\u003e`, `name` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"LamJiuFong"},"content":"* Items in `[]` are optional.\u003cbr\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"LamJiuFong"},"content":"  e.g `n/\u003cname\u003e [a/\u003caddress\u003e]` can be used as `n/John Doe a/Kent Ridge` or as `n/John Doe`.","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"LamJiuFong"},"content":"  e.g. `[t/\u003ctag\u003e]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"LamJiuFong"},"content":"  e.g. if the command specifies `n/\u003cname\u003e p/\u003cphone number\u003e`, `p/12341234 n/John` is also acceptable.","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"TehOPanas"},"content":"* Prefixes (e.g. `n/`, `p/`, `e/`) are designed to be short, however, we do still provide the functionality to detect ","lastModifiedDate":"2023-11-03"},{"lineNumber":93,"author":{"gitId":"TehOPanas"},"content":"full-name prefixes ,and they can be used interchangeably(e.g. `n/` and `name/` are interchangeable),","lastModifiedDate":"2023-11-03"},{"lineNumber":94,"author":{"gitId":"yucongkoo"},"content":"click [here](#prefix-to-full-name-prefix-translation-table) to see a full table of prefix to full-name prefix relation.","lastModifiedDate":"2023-11-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":97,"author":{"gitId":"LamJiuFong"},"content":"  e.g. if the command is `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":99,"author":{"gitId":"yucongkoo"},"content":"* Unless otherwise stated, when specifying restrictions on number of characters, spaces in between words ","lastModifiedDate":"2023-11-09"},{"lineNumber":100,"author":{"gitId":"yucongkoo"},"content":"are included in the count, while leading and trailing spaces are excluded.","lastModifiedDate":"2023-11-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":103,"author":{"gitId":"yucongkoo"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"yucongkoo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"TehOPanas"},"content":"### Adding a customer: `add`","lastModifiedDate":"2023-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"yucongkoo"},"content":"**Format:**","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"yucongkoo"},"content":"`add n/\u003cname\u003e p/\u003cphone number\u003e e/\u003cemail\u003e [a/\u003caddress\u003e] [pr/\u003cpriority\u003e] [t/\u003ctag\u003e]... [i/\u003cinsurance\u003e]... [r/\u003cremark\u003e]`","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":113,"author":{"gitId":"yucongkoo"},"content":"**Description:**","lastModifiedDate":"2023-10-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"TehOPanas"},"content":"Adds a new customer with the respective details to EzContact.","lastModifiedDate":"2023-11-02"},{"lineNumber":116,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"yucongkoo"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":118,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"yucongkoo"},"content":"**Caution:**","lastModifiedDate":"2023-10-22"},{"lineNumber":120,"author":{"gitId":"yucongkoo"},"content":"* `\u003cname\u003e` should be **alphanumeric**, **non-empty** and **not longer than 64 characters**.","lastModifiedDate":"2023-10-31"},{"lineNumber":121,"author":{"gitId":"yucongkoo"},"content":"* `\u003cphone number\u003e` should be an **8-digit number**(i.e. a Singapore number).","lastModifiedDate":"2023-10-31"},{"lineNumber":122,"author":{"gitId":"yucongkoo"},"content":"* `\u003cemail\u003e` should be a **valid email address**(i.e. `local-part@domain`).","lastModifiedDate":"2023-10-31"},{"lineNumber":123,"author":{"gitId":"yucongkoo"},"content":"* `\u003caddress\u003e` should **not be longer than 100 characters**.","lastModifiedDate":"2023-10-31"},{"lineNumber":124,"author":{"gitId":"LamJiuFong"},"content":"* `\u003cpriority\u003e` should **only be one of**: `high`, `medium`, `low`, `-` (all case-insensitive).","lastModifiedDate":"2023-11-03"},{"lineNumber":125,"author":{"gitId":"yucongkoo"},"content":"* `\u003ctag\u003e` should be **alphanumeric**, **non-empty** and **not longer than 20 characters(excluding spaces)**.","lastModifiedDate":"2023-11-02"},{"lineNumber":126,"author":{"gitId":"yucongkoo"},"content":"* `\u003cinsurance\u003e` should be **alphanumeric**, **non-empty** and **not longer than 32 characters**.","lastModifiedDate":"2023-10-31"},{"lineNumber":127,"author":{"gitId":"yucongkoo"},"content":"* `\u003cremark\u003e` should **not be longer than 150 characters**.","lastModifiedDate":"2023-10-31"},{"lineNumber":128,"author":{"gitId":"yucongkoo"},"content":"* A customer **must not have more than 10 tags** assigned to it.","lastModifiedDate":"2023-10-22"},{"lineNumber":129,"author":{"gitId":"yucongkoo"},"content":"* A customer **must not have more than 5 insurances** assigned to it.","lastModifiedDate":"2023-10-31"},{"lineNumber":130,"author":{"gitId":"yucongkoo"},"content":"* Adding a customer with a `\u003cphone number\u003e` or `\u003cemail\u003e` that **already exists** in EzContact is **not allowed**.","lastModifiedDate":"2023-10-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"yucongkoo"},"content":"**Examples:**","lastModifiedDate":"2023-10-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":135,"author":{"gitId":"TehOPanas"},"content":"* `add n/Ryan Ong p/64238876 e/ryanong@gmail.com t/tall t/skinny t/wears spectacles pr/medium i/car insurance`\u003c/br\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":136,"author":{"gitId":"yucongkoo"},"content":"Adds the following [Customer Card](#ui-layout-description) to the [Customer List Panel](#ui-layout-description). Note how omission of optional parameters","lastModifiedDate":"2023-11-09"},{"lineNumber":137,"author":{"gitId":"yucongkoo"},"content":"are allowed.","lastModifiedDate":"2023-11-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":139,"author":{"gitId":"yucongkoo"},"content":"![AddEg2](images/add-command-examples/example2.png)","lastModifiedDate":"2023-10-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"yucongkoo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":143,"author":{"gitId":"TehOPanas"},"content":"### Deleting a customer : `delete`","lastModifiedDate":"2023-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":145,"author":{"gitId":"LamJiuFong"},"content":"**Format:**","lastModifiedDate":"2023-10-31"},{"lineNumber":146,"author":{"gitId":"LamJiuFong"},"content":"`delete \u003cindex\u003e`","lastModifiedDate":"2023-10-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":148,"author":{"gitId":"LamJiuFong"},"content":"**Description:**","lastModifiedDate":"2023-10-31"},{"lineNumber":149,"author":{"gitId":"LamJiuFong"},"content":"* Deletes the customer at the specified `\u003cindex\u003e`.","lastModifiedDate":"2023-10-31"},{"lineNumber":150,"author":{"gitId":"LamJiuFong"},"content":"* `\u003cindex\u003e` refers to the index number shown in the displayed customer list.","lastModifiedDate":"2023-10-31"},{"lineNumber":151,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":152,"author":{"gitId":"songfangyl"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":153,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":154,"author":{"gitId":"LamJiuFong"},"content":"**Caution:**","lastModifiedDate":"2023-10-31"},{"lineNumber":155,"author":{"gitId":"yucongkoo"},"content":"* `\u003cindex\u003e` should **only be one of** the indices shown in the displayed list.","lastModifiedDate":"2023-11-08"},{"lineNumber":156,"author":{"gitId":"songfangyl"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":158,"author":{"gitId":"LamJiuFong"},"content":"**Examples:**","lastModifiedDate":"2023-10-31"},{"lineNumber":159,"author":{"gitId":"LamJiuFong"},"content":"* `delete 2` deletes the 2nd customer in the displayed list.","lastModifiedDate":"2023-11-02"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":162,"author":{"gitId":"LamJiuFong"},"content":"Before:","lastModifiedDate":"2023-11-02"},{"lineNumber":163,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":164,"author":{"gitId":"LamJiuFong"},"content":"![deleteBefore](images/delete-command-example/delete-before.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":165,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":166,"author":{"gitId":"LamJiuFong"},"content":"After:","lastModifiedDate":"2023-11-02"},{"lineNumber":167,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":168,"author":{"gitId":"LamJiuFong"},"content":"![deleteAfter](images/delete-command-example/delete-after.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":169,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":170,"author":{"gitId":"yucongkoo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":171,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":172,"author":{"gitId":"TehOPanas"},"content":"### Editing a customer : `edit`","lastModifiedDate":"2023-10-16"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"yucongkoo"},"content":"**Format:** `edit \u003cindex\u003e [n/\u003cname\u003e] [p/\u003cphone number\u003e] [e/\u003cemail\u003e] [a/\u003caddress\u003e]`","lastModifiedDate":"2023-11-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"LamJiuFong"},"content":"**Description:**","lastModifiedDate":"2023-10-31"},{"lineNumber":177,"author":{"gitId":"LamJiuFong"},"content":"* Edits the customer at the specified `\u003cindex\u003e`.","lastModifiedDate":"2023-10-31"},{"lineNumber":178,"author":{"gitId":"LamJiuFong"},"content":"* `\u003cindex\u003e` refers to the index number shown in the displayed customer list.","lastModifiedDate":"2023-10-31"},{"lineNumber":179,"author":{"gitId":"LamJiuFong"},"content":"* If values are provided for certain fields, existing values of their respective fields will be edited to the provided values.","lastModifiedDate":"2023-10-31"},{"lineNumber":180,"author":{"gitId":"LamJiuFong"},"content":"* If no value is provided, the values of the fields remain unchanged.","lastModifiedDate":"2023-10-31"},{"lineNumber":181,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":182,"author":{"gitId":"LamJiuFong"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":183,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":184,"author":{"gitId":"LamJiuFong"},"content":"**Caution:**","lastModifiedDate":"2023-10-24"},{"lineNumber":185,"author":{"gitId":"LamJiuFong"},"content":"* **At least one** of the optional fields must be provided.","lastModifiedDate":"2023-10-31"},{"lineNumber":186,"author":{"gitId":"LamJiuFong"},"content":"* `\u003cindex\u003e` should **only be one of** the indices shown in the displayed list.","lastModifiedDate":"2023-10-31"},{"lineNumber":187,"author":{"gitId":"LamJiuFong"},"content":"* `\u003cname\u003e` should be **alphanumeric**, **non-empty** and **not longer than 64 characters**.","lastModifiedDate":"2023-10-31"},{"lineNumber":188,"author":{"gitId":"LamJiuFong"},"content":"* `\u003cphone number\u003e` should be an **8-digit number**(i.e. a Singapore number).","lastModifiedDate":"2023-10-31"},{"lineNumber":189,"author":{"gitId":"LamJiuFong"},"content":"* `\u003cemail\u003e` should be a **valid email address**(i.e. `local-part@domain`).","lastModifiedDate":"2023-10-31"},{"lineNumber":190,"author":{"gitId":"LamJiuFong"},"content":"* `\u003caddress\u003e` should **not be longer than 100 characters**.","lastModifiedDate":"2023-10-31"},{"lineNumber":191,"author":{"gitId":"yucongkoo"},"content":"* Tags, Priorities, and Remarks are not editable.","lastModifiedDate":"2023-11-08"},{"lineNumber":192,"author":{"gitId":"LamJiuFong"},"content":"* Editing a customer to have the same `\u003cphone number\u003e` or `\u003cemail\u003e` to other existing customers in EzContact is **not allowed.**","lastModifiedDate":"2023-11-02"},{"lineNumber":193,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"LamJiuFong"},"content":"**Examples:**","lastModifiedDate":"2023-10-31"},{"lineNumber":197,"author":{"gitId":"LamJiuFong"},"content":"*  `edit 3 n/Betsy Crower p/91234567 e/fong@example.com` edits the name, phone number and email address of the 3rd customer to be `Betsy Crower`, `91234567` and `fong@example.com` respectively.","lastModifiedDate":"2023-11-02"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":199,"author":{"gitId":"LamJiuFong"},"content":"Before:","lastModifiedDate":"2023-11-02"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":201,"author":{"gitId":"LamJiuFong"},"content":"![editBefore](images/edit-command-example/edit-before.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":203,"author":{"gitId":"LamJiuFong"},"content":"After:","lastModifiedDate":"2023-11-02"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":205,"author":{"gitId":"LamJiuFong"},"content":"![editAfter](images/edit-command-example/edit-after.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"yucongkoo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":209,"author":{"gitId":"songfangyl"},"content":"### Finding customers : `find`","lastModifiedDate":"2023-10-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":211,"author":{"gitId":"songfangyl"},"content":"**Format:**","lastModifiedDate":"2023-11-01"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":213,"author":{"gitId":"songfangyl"},"content":"`find [n/[keywords]] [p/[keywords]] [e/[keywords]] [a/[keywords]] [t/[keywords]] [i/[keywords]] [pr/[keywords]] [r/[keywords]]`","lastModifiedDate":"2023-11-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":215,"author":{"gitId":"songfangyl"},"content":"**Description:**","lastModifiedDate":"2023-11-01"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":217,"author":{"gitId":"TehOPanas"},"content":"Search for customers with specified keywords of different attributes (except `appointment`).","lastModifiedDate":"2023-11-03"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":219,"author":{"gitId":"TehOPanas"},"content":"* Attribute matches with the keywords when:","lastModifiedDate":"2023-11-03"},{"lineNumber":220,"author":{"gitId":"TehOPanas"},"content":"  - Any word in the attribute contains the single keyword as a prefix.","lastModifiedDate":"2023-11-03"},{"lineNumber":221,"author":{"gitId":"TehOPanas"},"content":"  - If there are multiple keywords, all keywords must be present in the attribute as prefix.","lastModifiedDate":"2023-11-03"},{"lineNumber":222,"author":{"gitId":"TehOPanas"},"content":"* Keywords are not case-sensitive and can be in any order.","lastModifiedDate":"2023-11-03"},{"lineNumber":223,"author":{"gitId":"TehOPanas"},"content":"* For `tag` and `insurance`, only one of the customer\u0027s `tags` / `insurances` has to contain the keywords as a prefix. \u003c/br\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":224,"author":{"gitId":"songfangyl"},"content":"These keywords can be spread across different `tag` / `insurance` entries.","lastModifiedDate":"2023-11-01"},{"lineNumber":225,"author":{"gitId":"TehOPanas"},"content":"* When searching with multiple attributes, the customer\u0027s attributes must match all the corresponding ones in `find`.","lastModifiedDate":"2023-11-03"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":227,"author":{"gitId":"songfangyl"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":229,"author":{"gitId":"songfangyl"},"content":"**Caution:**","lastModifiedDate":"2023-11-01"},{"lineNumber":230,"author":{"gitId":"songfangyl"},"content":"* **At least one** prefix should be provided.","lastModifiedDate":"2023-11-01"},{"lineNumber":231,"author":{"gitId":"songfangyl"},"content":"* Available prefix:","lastModifiedDate":"2023-11-01"},{"lineNumber":232,"author":{"gitId":"TehOPanas"},"content":"  - `address`: `a/`","lastModifiedDate":"2023-11-03"},{"lineNumber":233,"author":{"gitId":"TehOPanas"},"content":"  - `email`: `e/`","lastModifiedDate":"2023-11-03"},{"lineNumber":234,"author":{"gitId":"TehOPanas"},"content":"  - `insurance`: `i/`","lastModifiedDate":"2023-11-03"},{"lineNumber":235,"author":{"gitId":"TehOPanas"},"content":"  - `name`: `n/`","lastModifiedDate":"2023-11-03"},{"lineNumber":236,"author":{"gitId":"TehOPanas"},"content":"  - `phone`: `p/`","lastModifiedDate":"2023-11-03"},{"lineNumber":237,"author":{"gitId":"TehOPanas"},"content":"  - `priority`: `pr/`","lastModifiedDate":"2023-11-03"},{"lineNumber":238,"author":{"gitId":"TehOPanas"},"content":"  - `remark`: `r/`","lastModifiedDate":"2023-11-03"},{"lineNumber":239,"author":{"gitId":"TehOPanas"},"content":"  - `tag`: `t/`","lastModifiedDate":"2023-11-03"},{"lineNumber":240,"author":{"gitId":"TehOPanas"},"content":"* Keyword is **NOT** mandatory.","lastModifiedDate":"2023-11-03"},{"lineNumber":241,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":242,"author":{"gitId":"songfangyl"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":243,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":244,"author":{"gitId":"songfangyl"},"content":"**Examples:**","lastModifiedDate":"2023-11-01"},{"lineNumber":245,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":246,"author":{"gitId":"TehOPanas"},"content":"* `find t/tall pr/h` finds all the customers whose tag matches keyword `tall`  and whose priority matches keyword `h` from the [Customer List](#ui-layout-description).","lastModifiedDate":"2023-11-03"},{"lineNumber":247,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":248,"author":{"gitId":"TehOPanas"},"content":"![findExample](images/find-command-examples/find%20example.png)","lastModifiedDate":"2023-11-03"},{"lineNumber":249,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":250,"author":{"gitId":"TehOPanas"},"content":"* `find i/car insurance pr/` finds all the customers whose insurance matches keyword `car insurance` and have priority from the [Customer List](#ui-layout-description).","lastModifiedDate":"2023-11-03"},{"lineNumber":251,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":252,"author":{"gitId":"TehOPanas"},"content":"![findExamplew](images/find-command-examples/find%20example%202.png)","lastModifiedDate":"2023-11-03"},{"lineNumber":253,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":254,"author":{"gitId":"songfangyl"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":255,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":256,"author":{"gitId":"songfangyl"},"content":"**Note**:","lastModifiedDate":"2023-11-02"},{"lineNumber":257,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":258,"author":{"gitId":"songfangyl"},"content":"Note that if you search using `find n/Song Song`, \u003c/br\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":259,"author":{"gitId":"songfangyl"},"content":"it will match a customer named `Song Guo Xuan` because all the specified keywords are present in the customer\u0027s name.","lastModifiedDate":"2023-11-01"},{"lineNumber":260,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":261,"author":{"gitId":"songfangyl"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":262,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":263,"author":{"gitId":"yucongkoo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":264,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":265,"author":{"gitId":"yucongkoo"},"content":"### Tagging a customer: `tag`","lastModifiedDate":"2023-10-22"},{"lineNumber":266,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":267,"author":{"gitId":"yucongkoo"},"content":"**Format:** `tag \u003cindex\u003e [at/\u003ctag to add\u003e]... [dt/\u003ctag to delete\u003e]...`","lastModifiedDate":"2023-11-08"},{"lineNumber":268,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":269,"author":{"gitId":"yucongkoo"},"content":"**Description:**","lastModifiedDate":"2023-10-31"},{"lineNumber":270,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":271,"author":{"gitId":"yucongkoo"},"content":"* Updates the tags assigned to the customer at `\u003cindex\u003e` in the displayed customer list.","lastModifiedDate":"2023-10-31"},{"lineNumber":272,"author":{"gitId":"yucongkoo"},"content":"* Tags are not case-sensitive (i.e. `friends` is equivalent to `FriEnds`), the GUI will display tags in lower case.","lastModifiedDate":"2023-11-09"},{"lineNumber":273,"author":{"gitId":"yucongkoo"},"content":"* Contiguous spaces in between words will be treated as 1 single space.","lastModifiedDate":"2023-11-09"},{"lineNumber":274,"author":{"gitId":"yucongkoo"},"content":"* **Duplicate tags** to add/delete will be **ignored** by EzContact.","lastModifiedDate":"2023-11-09"},{"lineNumber":275,"author":{"gitId":"yucongkoo"},"content":"* **Adding an existing tag** or **deleting a non-existing tag** will be **ignored** by EzContact.","lastModifiedDate":"2023-11-06"},{"lineNumber":276,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":277,"author":{"gitId":"yucongkoo"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":278,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":279,"author":{"gitId":"yucongkoo"},"content":"**Caution:**","lastModifiedDate":"2023-10-22"},{"lineNumber":280,"author":{"gitId":"yucongkoo"},"content":"* **At least one** `\u003ctag to add\u003e` or `\u003ctag to delete\u003e` should be provided.","lastModifiedDate":"2023-10-31"},{"lineNumber":281,"author":{"gitId":"yucongkoo"},"content":"* Adding and deleting the same tag is **not allowed**.","lastModifiedDate":"2023-10-22"},{"lineNumber":282,"author":{"gitId":"yucongkoo"},"content":"* `\u003cindex\u003e` should **only be one of** the indices shown in the displayed list.","lastModifiedDate":"2023-11-08"},{"lineNumber":283,"author":{"gitId":"yucongkoo"},"content":"* `\u003ctag to add\u003e` and `\u003ctag to delete\u003e` should be **alphanumeric**, **non-empty** and **not longer than 20 characters(excluding spaces)**.","lastModifiedDate":"2023-11-02"},{"lineNumber":284,"author":{"gitId":"yucongkoo"},"content":"* The number of tags assigned to the customer after the update should **not exceed 10 tags**.","lastModifiedDate":"2023-10-31"},{"lineNumber":285,"author":{"gitId":"yucongkoo"},"content":"* The targeted customer\u0027s tags should **not remain unchanged** after the update command.","lastModifiedDate":"2023-10-31"},{"lineNumber":286,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":287,"author":{"gitId":"yucongkoo"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-10-22"},{"lineNumber":288,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":289,"author":{"gitId":"yucongkoo"},"content":"**Examples:**","lastModifiedDate":"2023-10-31"},{"lineNumber":290,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":291,"author":{"gitId":"TehOPanas"},"content":"* `tag 3 at/tall at/male dt/short dt/skinny`\u003c/br\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":292,"author":{"gitId":"yucongkoo"},"content":"Adds `tall`(existing tag) and `male` tags, delete `short`(non-existing tag) and `skinny` tags from the third customer in the displayed customer list.","lastModifiedDate":"2023-11-06"},{"lineNumber":293,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":294,"author":{"gitId":"yucongkoo"},"content":"Before:","lastModifiedDate":"2023-10-31"},{"lineNumber":295,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":296,"author":{"gitId":"yucongkoo"},"content":"![TagEgBefore](images/tag-command-examples/before.png)","lastModifiedDate":"2023-10-31"},{"lineNumber":297,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":298,"author":{"gitId":"yucongkoo"},"content":"After:","lastModifiedDate":"2023-10-31"},{"lineNumber":299,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":300,"author":{"gitId":"yucongkoo"},"content":"![TagEgAfter](images/tag-command-examples/after.png)","lastModifiedDate":"2023-10-31"},{"lineNumber":301,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"TehOPanas"},"content":"### Updating insurance of a customer: `insurance`","lastModifiedDate":"2023-11-02"},{"lineNumber":304,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":305,"author":{"gitId":"TehOPanas"},"content":"**Format:**","lastModifiedDate":"2023-11-02"},{"lineNumber":306,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":307,"author":{"gitId":"TehOPanas"},"content":"`insurance \u003cindex\u003e [ai/\u003cinsurance to add\u003e]... [di/\u003cinsurance to delete\u003e]...`","lastModifiedDate":"2023-11-07"},{"lineNumber":308,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":309,"author":{"gitId":"TehOPanas"},"content":"**Description:**","lastModifiedDate":"2023-11-02"},{"lineNumber":310,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":311,"author":{"gitId":"TehOPanas"},"content":"* Updated the insurance of the customer at `\u003cindex\u003e` in the customer list","lastModifiedDate":"2023-11-02"},{"lineNumber":312,"author":{"gitId":"TehOPanas"},"content":"* Duplicate insurances to add/delete is ignored","lastModifiedDate":"2023-11-02"},{"lineNumber":313,"author":{"gitId":"TehOPanas"},"content":"* Adding existing insurance and deleting non-existing insurance from customer has no effect","lastModifiedDate":"2023-11-02"},{"lineNumber":314,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":315,"author":{"gitId":"TehOPanas"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":316,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":317,"author":{"gitId":"TehOPanas"},"content":"**Caution:**","lastModifiedDate":"2023-11-02"},{"lineNumber":318,"author":{"gitId":"TehOPanas"},"content":"* **At least one** `\u003cinsurance to add\u003e` or `\u003cinsurance to delete\u003e` should be present in the command","lastModifiedDate":"2023-11-02"},{"lineNumber":319,"author":{"gitId":"TehOPanas"},"content":"* Adding and deleting the same tag in a single command is **not allowed**.","lastModifiedDate":"2023-11-02"},{"lineNumber":320,"author":{"gitId":"yucongkoo"},"content":"* `\u003cindex\u003e` should **only be one of** the indices shown in the displayed list.","lastModifiedDate":"2023-11-08"},{"lineNumber":321,"author":{"gitId":"TehOPanas"},"content":"* `\u003cinsurance to add\u003e` and `\u003cinsurance to delete\u003e` should be **alphanumeric**, **non-empty** and **not longer than 32 characters**.","lastModifiedDate":"2023-11-02"},{"lineNumber":322,"author":{"gitId":"TehOPanas"},"content":"* The number of insurance of the customer after the update should **not exceed 8 insurances**.","lastModifiedDate":"2023-11-02"},{"lineNumber":323,"author":{"gitId":"TehOPanas"},"content":"* The targeted customer\u0027s insurance should **not remain unchanged** after the update command.","lastModifiedDate":"2023-11-02"},{"lineNumber":324,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":325,"author":{"gitId":"TehOPanas"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":326,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":327,"author":{"gitId":"TehOPanas"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":328,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":329,"author":{"gitId":"TehOPanas"},"content":"**Example:**","lastModifiedDate":"2023-11-02"},{"lineNumber":330,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":331,"author":{"gitId":"yucongkoo"},"content":"* `insurance 2 ai/AIA Insurance di/Great Eastern Insurance`\u003c/br\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":332,"author":{"gitId":"yucongkoo"},"content":"Assign `AIA Insurance` to and remove `Great Eastern Insurance` from the second customer in the displayed customer list","lastModifiedDate":"2023-11-08"},{"lineNumber":333,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":334,"author":{"gitId":"TehOPanas"},"content":"Before:","lastModifiedDate":"2023-11-02"},{"lineNumber":335,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":336,"author":{"gitId":"TehOPanas"},"content":"![insuranceBefore](images/InsuranceCommandExample/InsuranceBefore.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":337,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":338,"author":{"gitId":"TehOPanas"},"content":"After:","lastModifiedDate":"2023-11-02"},{"lineNumber":339,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":340,"author":{"gitId":"TehOPanas"},"content":"![insuranceAfter](images/InsuranceCommandExample/InsuranceAfter.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":341,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":342,"author":{"gitId":"yucongkoo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":343,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":344,"author":{"gitId":"LamJiuFong"},"content":"### Updating priority of a customer: `priority`","lastModifiedDate":"2023-10-31"},{"lineNumber":345,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":346,"author":{"gitId":"LamJiuFong"},"content":"**Format:**","lastModifiedDate":"2023-10-31"},{"lineNumber":347,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":348,"author":{"gitId":"LamJiuFong"},"content":"`priority \u003cindex\u003e \u003cpriority\u003e`","lastModifiedDate":"2023-10-31"},{"lineNumber":349,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":350,"author":{"gitId":"LamJiuFong"},"content":"**Description:**","lastModifiedDate":"2023-10-31"},{"lineNumber":351,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":352,"author":{"gitId":"LamJiuFong"},"content":"* Updates the priority of the customer at the specified `\u003cindex\u003e` in the displayed customer list to `\u003cpriority\u003e`.","lastModifiedDate":"2023-10-31"},{"lineNumber":353,"author":{"gitId":"LamJiuFong"},"content":"* If the customer has not been assigned any priority previously, `\u003cpriority\u003e` is assigned directly to the customer.","lastModifiedDate":"2023-10-31"},{"lineNumber":354,"author":{"gitId":"LamJiuFong"},"content":"* If `\u003cpriority\u003e` is  `-` , the priority previously assigned the customer will be **removed**.","lastModifiedDate":"2023-10-31"},{"lineNumber":355,"author":{"gitId":"LamJiuFong"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":356,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":357,"author":{"gitId":"LamJiuFong"},"content":"**Caution:**","lastModifiedDate":"2023-10-24"},{"lineNumber":358,"author":{"gitId":"LamJiuFong"},"content":"* `\u003cindex\u003e` should **only be one of** the indices shown in the displayed list.","lastModifiedDate":"2023-10-31"},{"lineNumber":359,"author":{"gitId":"LamJiuFong"},"content":"* `\u003cpriority\u003e` should **only be one of：** `high`, `medium`, `low`, `-` (all case-insensitive).","lastModifiedDate":"2023-11-03"},{"lineNumber":360,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":361,"author":{"gitId":"LamJiuFong"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":362,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":363,"author":{"gitId":"LamJiuFong"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":364,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":365,"author":{"gitId":"LamJiuFong"},"content":"**Note:**","lastModifiedDate":"2023-11-02"},{"lineNumber":366,"author":{"gitId":"LamJiuFong"},"content":"* The customer list is sorted by priority according to this order: `high` -\u003e `medium` -\u003e `low` \u003c/br\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":367,"author":{"gitId":"LamJiuFong"},"content":"* Customers with no priority assigned to them will be displayed at the bottom of the list. \u003c/br\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":368,"author":{"gitId":"TehOPanas"},"content":"* Changing a customer\u0027s priority **may** change its position in the list because of the sorted property.","lastModifiedDate":"2023-11-03"},{"lineNumber":369,"author":{"gitId":"LamJiuFong"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":370,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":371,"author":{"gitId":"LamJiuFong"},"content":"**Examples:**","lastModifiedDate":"2023-10-31"},{"lineNumber":372,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":373,"author":{"gitId":"LamJiuFong"},"content":"* `priority 3 high` updates the priority of the third customer to be `high`. Note that the position of the customer is changed.","lastModifiedDate":"2023-11-02"},{"lineNumber":374,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":375,"author":{"gitId":"LamJiuFong"},"content":"Before:","lastModifiedDate":"2023-11-02"},{"lineNumber":376,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":377,"author":{"gitId":"LamJiuFong"},"content":"![priorityBefore](images/priority-command-example/priority-before.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":378,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":379,"author":{"gitId":"TehOPanas"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":380,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":381,"author":{"gitId":"LamJiuFong"},"content":"After:","lastModifiedDate":"2023-11-02"},{"lineNumber":382,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":383,"author":{"gitId":"LamJiuFong"},"content":"![priorityAfter](images/priority-command-example/priority-after.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":385,"author":{"gitId":"LamJiuFong"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":387,"author":{"gitId":"LamJiuFong"},"content":"* `priority 3 -` removes the priority assigned to the third customer. Note that the customer remains at the bottom of the list.","lastModifiedDate":"2023-11-02"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":389,"author":{"gitId":"LamJiuFong"},"content":"Before:","lastModifiedDate":"2023-11-02"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":391,"author":{"gitId":"LamJiuFong"},"content":"![removePriorityBefore](images/priority-command-example/remove-priority-before.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":392,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":393,"author":{"gitId":"LamJiuFong"},"content":"After:","lastModifiedDate":"2023-11-02"},{"lineNumber":394,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":395,"author":{"gitId":"LamJiuFong"},"content":"![removePriorityAfter](images/priority-command-example/remove-priority-after.png)","lastModifiedDate":"2023-11-02"},{"lineNumber":396,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":397,"author":{"gitId":"yucongkoo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":398,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":399,"author":{"gitId":"songfangyl"},"content":"### Adding a remark to a customer: `remark`","lastModifiedDate":"2023-10-27"},{"lineNumber":400,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":401,"author":{"gitId":"songfangyl"},"content":"Format: `remark \u003cindex\u003e [remark]`","lastModifiedDate":"2023-11-02"},{"lineNumber":402,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":403,"author":{"gitId":"TehOPanas"},"content":"**Description:**","lastModifiedDate":"2023-11-02"},{"lineNumber":404,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":405,"author":{"gitId":"TehOPanas"},"content":"* Add/updates the remark of the customer at `\u003cindex\u003e` in the displayed customer list.","lastModifiedDate":"2023-11-02"},{"lineNumber":406,"author":{"gitId":"TehOPanas"},"content":"* If you wish to delete the remark, update the remark without text after the command, i.e. `remark \u003cindex\u003e`.","lastModifiedDate":"2023-11-02"},{"lineNumber":407,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":408,"author":{"gitId":"songfangyl"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":409,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":410,"author":{"gitId":"songfangyl"},"content":"**Caution:**","lastModifiedDate":"2023-10-26"},{"lineNumber":411,"author":{"gitId":"yucongkoo"},"content":"* `\u003cindex\u003e`should **only be one of** the indices shown in the displayed list.","lastModifiedDate":"2023-11-08"},{"lineNumber":412,"author":{"gitId":"songfangyl"},"content":"* `Remark` cannot be longer than 150 characters.","lastModifiedDate":"2023-10-26"},{"lineNumber":413,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":414,"author":{"gitId":"songfangyl"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":416,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-10-26"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":418,"author":{"gitId":"TehOPanas"},"content":"* `remark 4 he likes pizza` Updates the remark of the first customer in the displayed list to `he likes pizza`.","lastModifiedDate":"2023-11-03"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":420,"author":{"gitId":"TehOPanas"},"content":"Before :","lastModifiedDate":"2023-11-03"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":422,"author":{"gitId":"TehOPanas"},"content":"![remarkBefore](images/remark-command-example/remarkBefore.png)","lastModifiedDate":"2023-11-03"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":424,"author":{"gitId":"TehOPanas"},"content":"After:","lastModifiedDate":"2023-11-03"},{"lineNumber":425,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":426,"author":{"gitId":"TehOPanas"},"content":"![remarkAfter](images/remark-command-example/remarkAfter.png)","lastModifiedDate":"2023-11-03"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":428,"author":{"gitId":"TehOPanas"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":430,"author":{"gitId":"TehOPanas"},"content":"* `remark 4` Removes the remark from the second customer in the displayed list.","lastModifiedDate":"2023-11-03"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":432,"author":{"gitId":"TehOPanas"},"content":"Before :","lastModifiedDate":"2023-11-03"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":434,"author":{"gitId":"TehOPanas"},"content":"![remarkAfter](images/remark-command-example/remarkAfter.png)","lastModifiedDate":"2023-11-03"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":436,"author":{"gitId":"TehOPanas"},"content":"After:","lastModifiedDate":"2023-11-03"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":438,"author":{"gitId":"TehOPanas"},"content":"![remarkBefore](images/remark-command-example/remarkBefore.png)","lastModifiedDate":"2023-11-03"},{"lineNumber":439,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":440,"author":{"gitId":"yucongkoo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":441,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":442,"author":{"gitId":"Jweewee"},"content":"### Adding an appointment to a customer: `addappt`","lastModifiedDate":"2023-11-03"},{"lineNumber":443,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":444,"author":{"gitId":"Jweewee"},"content":"**Format:**","lastModifiedDate":"2023-11-03"},{"lineNumber":445,"author":{"gitId":"Jweewee"},"content":"`addappt \u003cindex\u003e d/\u003cdate\u003e [t/\u003ctime\u003e] [v/\u003cvenue\u003e]`","lastModifiedDate":"2023-11-03"},{"lineNumber":446,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":447,"author":{"gitId":"Jweewee"},"content":"**Description:**","lastModifiedDate":"2023-11-03"},{"lineNumber":448,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":449,"author":{"gitId":"Jweewee"},"content":"* Adds an appointment to the customer at `\u003cindex\u003e` in the displayed customer list.","lastModifiedDate":"2023-11-03"},{"lineNumber":450,"author":{"gitId":"Jweewee"},"content":"* An appointment can includes a date, time and venue.","lastModifiedDate":"2023-11-03"},{"lineNumber":451,"author":{"gitId":"Jweewee"},"content":"* This allows you to keep track of all your customers\u0027 appointment dates all within the same app","lastModifiedDate":"2023-11-03"},{"lineNumber":452,"author":{"gitId":"Jweewee"},"content":"* If you wish to delete the customer\u0027s appointment, use the command `deleteappt`","lastModifiedDate":"2023-11-03"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":454,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":456,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-11-03"},{"lineNumber":457,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":458,"author":{"gitId":"Jweewee"},"content":"* The customer must not have a current appointment","lastModifiedDate":"2023-11-03"},{"lineNumber":459,"author":{"gitId":"Jweewee"},"content":"* `\u003cindex\u003e` should **only be one of** the indices shown in the displayed list","lastModifiedDate":"2023-11-03"},{"lineNumber":460,"author":{"gitId":"Jweewee"},"content":"* `\u003cdate\u003e` must be specified","lastModifiedDate":"2023-11-03"},{"lineNumber":461,"author":{"gitId":"Jweewee"},"content":"* `\u003cdate\u003e` must be in YYYY-MM-DD format and not a past date","lastModifiedDate":"2023-11-03"},{"lineNumber":462,"author":{"gitId":"Jweewee"},"content":"* `\u003ctime\u003e` format must be in 24h HH:MM format","lastModifiedDate":"2023-11-03"},{"lineNumber":463,"author":{"gitId":"Jweewee"},"content":"* `\u003cvenue\u003e` cannot be longer than 30 characters","lastModifiedDate":"2023-11-03"},{"lineNumber":464,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":465,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":466,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":468,"author":{"gitId":"Jweewee"},"content":"**Examples:**","lastModifiedDate":"2023-11-03"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":470,"author":{"gitId":"Jweewee"},"content":"* `addappt 1 d/2025-12-12` adds an appointment on 12 Dec 2025 for the first customer in the displayed list","lastModifiedDate":"2023-11-03"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":472,"author":{"gitId":"Jweewee"},"content":"* `addappt 1 d/2025-12-12 t/12:55` adds an appointment on 12 Dec 2025, 1255hrs for the first customer in the displayed list","lastModifiedDate":"2023-11-03"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":474,"author":{"gitId":"Jweewee"},"content":"* `addappt 1 d/2025-12-12 t/12:55 v/Clementi Mall` adds an appointment on 12 Dec 2025, 1255hrs, Clementi Mall for the first customer in the displayed list","lastModifiedDate":"2023-11-03"},{"lineNumber":475,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":476,"author":{"gitId":"Jweewee"},"content":"Before:","lastModifiedDate":"2023-11-03"},{"lineNumber":477,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":478,"author":{"gitId":"Jweewee"},"content":"![addApptBefore](images/appointment-command-examples/DeleteApptAfter.png)","lastModifiedDate":"2023-11-03"},{"lineNumber":479,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":480,"author":{"gitId":"Jweewee"},"content":"After:","lastModifiedDate":"2023-11-03"},{"lineNumber":481,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":482,"author":{"gitId":"Jweewee"},"content":"![addApptAfter](images/appointment-command-examples/AddApptAfter.png)","lastModifiedDate":"2023-11-03"},{"lineNumber":483,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":484,"author":{"gitId":"yucongkoo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":485,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":486,"author":{"gitId":"Jweewee"},"content":"### Deleting a customer\u0027s appointment: `deleteappt`","lastModifiedDate":"2023-11-03"},{"lineNumber":487,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":488,"author":{"gitId":"Jweewee"},"content":"**Format:**","lastModifiedDate":"2023-11-03"},{"lineNumber":489,"author":{"gitId":"Jweewee"},"content":"`deleteappt \u003cindex\u003e`","lastModifiedDate":"2023-11-03"},{"lineNumber":490,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":491,"author":{"gitId":"Jweewee"},"content":"**Description:**","lastModifiedDate":"2023-11-03"},{"lineNumber":492,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":493,"author":{"gitId":"Jweewee"},"content":"* Deletes a customer\u0027s appointment at `\u003cindex\u003e` in the displayed customer list.\\","lastModifiedDate":"2023-11-03"},{"lineNumber":494,"author":{"gitId":"Jweewee"},"content":"* Used when the appointment has been cancelled.","lastModifiedDate":"2023-11-03"},{"lineNumber":495,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":496,"author":{"gitId":"yucongkoo"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":497,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":498,"author":{"gitId":"Jweewee"},"content":"**Caution:**","lastModifiedDate":"2023-11-03"},{"lineNumber":499,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":500,"author":{"gitId":"Jweewee"},"content":"* The customer must have a current appointment","lastModifiedDate":"2023-11-03"},{"lineNumber":501,"author":{"gitId":"Jweewee"},"content":"* `\u003cindex\u003e` should **only be one of** the indices shown in the displayed list","lastModifiedDate":"2023-11-03"},{"lineNumber":502,"author":{"gitId":"Jweewee"},"content":"* Cannot be undone","lastModifiedDate":"2023-11-03"},{"lineNumber":503,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":504,"author":{"gitId":"Jweewee"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-03"},{"lineNumber":505,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":506,"author":{"gitId":"Jweewee"},"content":"**Examples:**","lastModifiedDate":"2023-11-03"},{"lineNumber":507,"author":{"gitId":"Jweewee"},"content":"* `deleteappt 1` deletes the appointment of the first customer in the displayed list, if applicable","lastModifiedDate":"2023-11-03"},{"lineNumber":508,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":509,"author":{"gitId":"Jweewee"},"content":"Before:","lastModifiedDate":"2023-11-03"},{"lineNumber":510,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":511,"author":{"gitId":"Jweewee"},"content":"![deleteApptBefore](images/appointment-command-examples/DeleteApptBefore.png)","lastModifiedDate":"2023-11-03"},{"lineNumber":512,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":513,"author":{"gitId":"Jweewee"},"content":"After:","lastModifiedDate":"2023-11-03"},{"lineNumber":514,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":515,"author":{"gitId":"Jweewee"},"content":"![deleteApptAfter](images/appointment-command-examples/DeleteApptAfter.png)","lastModifiedDate":"2023-11-03"},{"lineNumber":516,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":517,"author":{"gitId":"yucongkoo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":518,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":519,"author":{"gitId":"Jweewee"},"content":"### Marking an appointment: `markappt`","lastModifiedDate":"2023-11-03"},{"lineNumber":520,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":521,"author":{"gitId":"Jweewee"},"content":"**Format:**","lastModifiedDate":"2023-11-03"},{"lineNumber":522,"author":{"gitId":"Jweewee"},"content":"`markappt \u003cindex\u003e`","lastModifiedDate":"2023-11-03"},{"lineNumber":523,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":524,"author":{"gitId":"Jweewee"},"content":"**Description:**","lastModifiedDate":"2023-11-03"},{"lineNumber":525,"author":{"gitId":"Jweewee"},"content":"* Marks the appointment of the customer at `\u003cindex\u003e` in the displayed customer list.","lastModifiedDate":"2023-11-03"},{"lineNumber":526,"author":{"gitId":"Jweewee"},"content":"* Increments the customer\u0027s completed appointments count by 1.","lastModifiedDate":"2023-11-03"},{"lineNumber":527,"author":{"gitId":"Jweewee"},"content":"* Deletes the current appointment.","lastModifiedDate":"2023-11-03"},{"lineNumber":528,"author":{"gitId":"Jweewee"},"content":"* Use to keep track of the number of completed appointments with the customer","lastModifiedDate":"2023-11-03"},{"lineNumber":529,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":530,"author":{"gitId":"yucongkoo"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":531,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":532,"author":{"gitId":"Jweewee"},"content":"**Caution:**","lastModifiedDate":"2023-11-03"},{"lineNumber":533,"author":{"gitId":"yucongkoo"},"content":"* `\u003cindex\u003e` should **only be one of** the indices shown in the displayed list","lastModifiedDate":"2023-11-08"},{"lineNumber":534,"author":{"gitId":"Jweewee"},"content":"* The customer at `\u003cindex\u003e` must have a current appointment.","lastModifiedDate":"2023-11-03"},{"lineNumber":535,"author":{"gitId":"Jweewee"},"content":"* This cannot be undone.","lastModifiedDate":"2023-11-03"},{"lineNumber":536,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":537,"author":{"gitId":"yucongkoo"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":538,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":539,"author":{"gitId":"Jweewee"},"content":"**Example:**","lastModifiedDate":"2023-11-03"},{"lineNumber":540,"author":{"gitId":"Jweewee"},"content":"* `markappt 1` increments the appointment counter of the first customer in the displayed list.","lastModifiedDate":"2023-11-03"},{"lineNumber":541,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":542,"author":{"gitId":"Jweewee"},"content":"Before:","lastModifiedDate":"2023-11-03"},{"lineNumber":543,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":544,"author":{"gitId":"Jweewee"},"content":"![markApptBefore](images/appointment-command-examples/AddApptAfter.png)","lastModifiedDate":"2023-11-03"},{"lineNumber":545,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":546,"author":{"gitId":"Jweewee"},"content":"After:","lastModifiedDate":"2023-11-03"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":548,"author":{"gitId":"Jweewee"},"content":"![markApptAfter](images/appointment-command-examples/MarkApptAfter.png)","lastModifiedDate":"2023-11-03"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":550,"author":{"gitId":"yucongkoo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":552,"author":{"gitId":"Jweewee"},"content":"### Unmarking an appointment: `unmarkappt`","lastModifiedDate":"2023-11-03"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":554,"author":{"gitId":"Jweewee"},"content":"**Format:**","lastModifiedDate":"2023-11-03"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":556,"author":{"gitId":"Jweewee"},"content":"`unmarkappt \u003cindex\u003e`","lastModifiedDate":"2023-11-03"},{"lineNumber":557,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":558,"author":{"gitId":"Jweewee"},"content":"**Description:**","lastModifiedDate":"2023-11-03"},{"lineNumber":559,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":560,"author":{"gitId":"Jweewee"},"content":"* Decrements the customer\u0027s completed appointments count at `\u003cindex\u003e` by 1.","lastModifiedDate":"2023-11-03"},{"lineNumber":561,"author":{"gitId":"Jweewee"},"content":"* Use to reduce the appointment count of customers as needed.","lastModifiedDate":"2023-11-03"},{"lineNumber":562,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":563,"author":{"gitId":"yucongkoo"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":564,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":565,"author":{"gitId":"Jweewee"},"content":"**Caution:**","lastModifiedDate":"2023-11-03"},{"lineNumber":566,"author":{"gitId":"yucongkoo"},"content":"* `\u003cindex\u003e` should **only be one of** the indices shown in the displayed list","lastModifiedDate":"2023-11-08"},{"lineNumber":567,"author":{"gitId":"Jweewee"},"content":"* This cannot be undone.","lastModifiedDate":"2023-11-03"},{"lineNumber":568,"author":{"gitId":"Jweewee"},"content":"* The current appointment count must be greater than 0.","lastModifiedDate":"2023-11-03"},{"lineNumber":569,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":570,"author":{"gitId":"yucongkoo"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":571,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":572,"author":{"gitId":"Jweewee"},"content":"*Examples:*","lastModifiedDate":"2023-11-03"},{"lineNumber":573,"author":{"gitId":"Jweewee"},"content":"* `unmarkappt 1` decrements the appointment counter of the first customer in the displayed list by 1.","lastModifiedDate":"2023-11-03"},{"lineNumber":574,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":575,"author":{"gitId":"yucongkoo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":576,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":577,"author":{"gitId":"yucongkoo"},"content":"### Listing all customers : `list`","lastModifiedDate":"2023-11-08"},{"lineNumber":578,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":579,"author":{"gitId":"yucongkoo"},"content":"**Format:**","lastModifiedDate":"2023-11-08"},{"lineNumber":580,"author":{"gitId":"yucongkoo"},"content":"`list`","lastModifiedDate":"2023-11-08"},{"lineNumber":581,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":582,"author":{"gitId":"yucongkoo"},"content":"**Description**","lastModifiedDate":"2023-11-08"},{"lineNumber":583,"author":{"gitId":"yucongkoo"},"content":"* Shows a list of all customers in EZContact and the size of the list.","lastModifiedDate":"2023-11-08"},{"lineNumber":584,"author":{"gitId":"yucongkoo"},"content":"* You can return to viewing your full client list after executing a `find` command.","lastModifiedDate":"2023-11-08"},{"lineNumber":585,"author":{"gitId":"yucongkoo"},"content":"* No parameter is needed for this command, all parameter provided will be ignored.","lastModifiedDate":"2023-11-08"},{"lineNumber":586,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":587,"author":{"gitId":"yucongkoo"},"content":"**Example**:","lastModifiedDate":"2023-11-08"},{"lineNumber":588,"author":{"gitId":"yucongkoo"},"content":"* `list` shows a list of all existing customers and the size of the list.","lastModifiedDate":"2023-11-08"},{"lineNumber":589,"author":{"gitId":"yucongkoo"},"content":"* `list 123` will be interpreted as `list`.","lastModifiedDate":"2023-11-09"},{"lineNumber":590,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":591,"author":{"gitId":"yucongkoo"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":592,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":593,"author":{"gitId":"yucongkoo"},"content":"----------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-08"},{"lineNumber":594,"author":{"gitId":"yucongkoo"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":595,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":596,"author":{"gitId":"LamJiuFong"},"content":"### Clearing the customer list : `clear`","lastModifiedDate":"2023-10-31"},{"lineNumber":597,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":598,"author":{"gitId":"LamJiuFong"},"content":"**Format:**","lastModifiedDate":"2023-10-31"},{"lineNumber":599,"author":{"gitId":"LamJiuFong"},"content":"`clear`","lastModifiedDate":"2023-10-31"},{"lineNumber":600,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":601,"author":{"gitId":"LamJiuFong"},"content":"**Description:**","lastModifiedDate":"2023-10-31"},{"lineNumber":602,"author":{"gitId":"LamJiuFong"},"content":"* Clears the customer list.","lastModifiedDate":"2023-10-31"},{"lineNumber":603,"author":{"gitId":"LamJiuFong"},"content":"* No parameter is needed for this command, all parameter provided will be ignored.","lastModifiedDate":"2023-10-31"},{"lineNumber":604,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":605,"author":{"gitId":"LamJiuFong"},"content":"**Examples:**","lastModifiedDate":"2023-10-31"},{"lineNumber":606,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":607,"author":{"gitId":"LamJiuFong"},"content":"* `clear` clears the customer list in EzContact.","lastModifiedDate":"2023-10-31"},{"lineNumber":608,"author":{"gitId":"LamJiuFong"},"content":"* `clear 123` will be interpreted as `clear`.","lastModifiedDate":"2023-10-31"},{"lineNumber":609,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":610,"author":{"gitId":"yucongkoo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":611,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":612,"author":{"gitId":"LamJiuFong"},"content":"### Requesting for help : `help`","lastModifiedDate":"2023-10-31"},{"lineNumber":613,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":614,"author":{"gitId":"LamJiuFong"},"content":"**Format:**","lastModifiedDate":"2023-10-31"},{"lineNumber":615,"author":{"gitId":"LamJiuFong"},"content":"`help`","lastModifiedDate":"2023-10-31"},{"lineNumber":616,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":617,"author":{"gitId":"LamJiuFong"},"content":"**Description:**","lastModifiedDate":"2023-10-31"},{"lineNumber":618,"author":{"gitId":"LamJiuFong"},"content":"* Opens the help window.","lastModifiedDate":"2023-10-31"},{"lineNumber":619,"author":{"gitId":"LamJiuFong"},"content":"* No parameter is needed for this command, all parameter provided will be ignored.","lastModifiedDate":"2023-10-31"},{"lineNumber":620,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":621,"author":{"gitId":"LamJiuFong"},"content":"**Examples:**","lastModifiedDate":"2023-10-31"},{"lineNumber":622,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":623,"author":{"gitId":"LamJiuFong"},"content":"* `help` opens the help window.","lastModifiedDate":"2023-10-31"},{"lineNumber":624,"author":{"gitId":"LamJiuFong"},"content":"* `help 123` will be interpreted as `help`.","lastModifiedDate":"2023-10-31"},{"lineNumber":625,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":626,"author":{"gitId":"yucongkoo"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":627,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":628,"author":{"gitId":"yucongkoo"},"content":"----------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-08"},{"lineNumber":629,"author":{"gitId":"yucongkoo"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":630,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":631,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":632,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":633,"author":{"gitId":"LamJiuFong"},"content":"**Format:**","lastModifiedDate":"2023-10-31"},{"lineNumber":634,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":635,"author":{"gitId":"LamJiuFong"},"content":"`exit`","lastModifiedDate":"2023-10-31"},{"lineNumber":636,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":637,"author":{"gitId":"LamJiuFong"},"content":"**Description:**","lastModifiedDate":"2023-10-31"},{"lineNumber":638,"author":{"gitId":"LamJiuFong"},"content":"* Exits the program.","lastModifiedDate":"2023-10-31"},{"lineNumber":639,"author":{"gitId":"LamJiuFong"},"content":"* No parameter is needed for this command, all parameter provided will be ignored.","lastModifiedDate":"2023-10-31"},{"lineNumber":640,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":641,"author":{"gitId":"LamJiuFong"},"content":"**Examples:**","lastModifiedDate":"2023-10-31"},{"lineNumber":642,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":643,"author":{"gitId":"LamJiuFong"},"content":"* `exit` exits EzContact.","lastModifiedDate":"2023-10-31"},{"lineNumber":644,"author":{"gitId":"LamJiuFong"},"content":"* `exit 123` will be interpreted as `exit`.","lastModifiedDate":"2023-10-31"},{"lineNumber":645,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":646,"author":{"gitId":"yucongkoo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":647,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":648,"author":{"gitId":"yucongkoo"},"content":"## Advanced Features","lastModifiedDate":"2023-10-31"},{"lineNumber":649,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":650,"author":{"gitId":"yucongkoo"},"content":"### Managing data","lastModifiedDate":"2023-10-31"},{"lineNumber":651,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":652,"author":{"gitId":"yucongkoo"},"content":"EzContact\u0027s data is stored as a json file at : `\u003cJAR file directory\u003e/data/addressbook.json`, where `\u003cJAR file directory\u003e`","lastModifiedDate":"2023-10-31"},{"lineNumber":653,"author":{"gitId":"yucongkoo"},"content":"is the directory you placed our `EzContact.jar` file.","lastModifiedDate":"2023-10-31"},{"lineNumber":654,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":655,"author":{"gitId":"yucongkoo"},"content":"**Saving data:**","lastModifiedDate":"2023-10-31"},{"lineNumber":656,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":657,"author":{"gitId":"yucongkoo"},"content":"EzContact\u0027s data is saved automaticaly whenever a command that changes the data is executed.","lastModifiedDate":"2023-10-31"},{"lineNumber":658,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":659,"author":{"gitId":"yucongkoo"},"content":"**Editing the data file:**","lastModifiedDate":"2023-10-31"},{"lineNumber":660,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":661,"author":{"gitId":"yucongkoo"},"content":"Advanced users are welcomed to update the data stored in EzContact directly by editing the `addressbook.json` file.","lastModifiedDate":"2023-10-31"},{"lineNumber":662,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":663,"author":{"gitId":"yucongkoo"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":664,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":665,"author":{"gitId":"yucongkoo"},"content":"**Caution:**","lastModifiedDate":"2023-10-31"},{"lineNumber":666,"author":{"gitId":"yucongkoo"},"content":"If the format of the file becomes invalid after an edit, EzContact will launch with an empty data file, and will","lastModifiedDate":"2023-10-31"},{"lineNumber":667,"author":{"gitId":"yucongkoo"},"content":"overwrite the whole data file after a command that changes the data file is executed. Hence, users are **strongly","lastModifiedDate":"2023-10-31"},{"lineNumber":668,"author":{"gitId":"yucongkoo"},"content":"recommended to store a backup** of the data file before editing it.","lastModifiedDate":"2023-10-31"},{"lineNumber":669,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":670,"author":{"gitId":"yucongkoo"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":671,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":672,"author":{"gitId":"yucongkoo"},"content":"**Storing/Restoring backup data files:**","lastModifiedDate":"2023-10-31"},{"lineNumber":673,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":674,"author":{"gitId":"yucongkoo"},"content":"Users can store a backup of the current data file by simply creating a copy of the `addressbook.json` file.","lastModifiedDate":"2023-10-31"},{"lineNumber":675,"author":{"gitId":"yucongkoo"},"content":"To restore a previously backed-up file, simply place the json file in the `\u003cJAR file directory\u003e/data` directory","lastModifiedDate":"2023-10-31"},{"lineNumber":676,"author":{"gitId":"yucongkoo"},"content":"and rename the file to `addressbook.json`.","lastModifiedDate":"2023-10-31"},{"lineNumber":677,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":678,"author":{"gitId":"yucongkoo"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":679,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":680,"author":{"gitId":"yucongkoo"},"content":"----------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-08"},{"lineNumber":681,"author":{"gitId":"yucongkoo"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":682,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":683,"author":{"gitId":"LamJiuFong"},"content":"## FAQ","lastModifiedDate":"2023-11-01"},{"lineNumber":684,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":685,"author":{"gitId":"LamJiuFong"},"content":"**Q:** Can I transfer my data to another computer? \u003cbr\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":686,"author":{"gitId":"LamJiuFong"},"content":"**A:** Yes, you can. Install EzContact in the computer and replace the `addressbook.json` file in the `\u003cJAR file directory\u003e/data` directory","lastModifiedDate":"2023-11-01"},{"lineNumber":687,"author":{"gitId":"LamJiuFong"},"content":"with the `addressbook.js` file from your previous computer. \u003cbr\u003e \u003cbr\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":688,"author":{"gitId":"LamJiuFong"},"content":"**Q:** Why are there sample customers when I first launch EzContact and how do I get rid of them? \u003cbr\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":689,"author":{"gitId":"LamJiuFong"},"content":"**A:** The sample customers are for new users to try out various commands in EzContact. To get rid of them, simply type `clear` in the","lastModifiedDate":"2023-11-01"},{"lineNumber":690,"author":{"gitId":"LamJiuFong"},"content":"command box.","lastModifiedDate":"2023-11-01"},{"lineNumber":691,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":692,"author":{"gitId":"yucongkoo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":693,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":694,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":695,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":696,"author":{"gitId":"yucongkoo"},"content":"| Action         | Format and Examples                                                                                                                                                                                                                              |","lastModifiedDate":"2023-10-22"},{"lineNumber":697,"author":{"gitId":"songfangyl"},"content":"|----------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-11-06"},{"lineNumber":698,"author":{"gitId":"yucongkoo"},"content":"| **Add**        | `add n/\u003cname\u003e p/\u003cphone number\u003e e/\u003cemail\u003e [a/\u003caddress\u003e] [pr/\u003cpriority\u003e] [t/\u003ctag\u003e]... [i/\u003cinsurance\u003e]... [r/\u003cremark\u003e]`          \u003chr\u003e           `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/tall r/some remarks` |","lastModifiedDate":"2023-10-31"},{"lineNumber":699,"author":{"gitId":"LamJiuFong"},"content":"| **Delete**     | `delete \u003cindex\u003e`                                            \u003chr\u003e       `delete 3`                                                                                                                                                                |","lastModifiedDate":"2023-10-31"},{"lineNumber":700,"author":{"gitId":"LamJiuFong"},"content":"| **Edit**       | `edit \u003cindex\u003e [n/\u003cname\u003e] [p/\u003cphone number\u003e] [e/\u003cemail\u003e] [a/\u003caddress\u003e] ` \u003chr\u003e `edit 2 n/James Lee e/jameslee@example.com`                                                                                                                         |","lastModifiedDate":"2023-10-31"},{"lineNumber":701,"author":{"gitId":"yucongkoo"},"content":"| **List**       | `list`                                                                      \u003chr\u003e                                                                                                                                                                 |","lastModifiedDate":"2023-10-22"},{"lineNumber":702,"author":{"gitId":"songfangyl"},"content":"| **Find**       | `find [n/[keywords]] [p/[keywords]] [e/[keywords]] [a/[keywords]] [t/[keywords]] [i/[keywords]] [pr/[keywords]] [r/[keywords]]`                      \u003chr\u003e      `find n/song i/abc`                                                               |","lastModifiedDate":"2023-11-08"},{"lineNumber":703,"author":{"gitId":"yucongkoo"},"content":"| **Tag**        | `tag \u003cindex\u003e [at/\u003ctag to add\u003e]... [dt/\u003ctag to delete\u003e]...`     \u003chr\u003e         `tag 1 at/tall dt/short at/male`                                                                                                                                     |","lastModifiedDate":"2023-10-31"},{"lineNumber":704,"author":{"gitId":"TehOPanas"},"content":"| **Insurance**  | `insurance \u003cindex\u003e [ai/\u003cinsurance to add\u003e]... [di/\u003cinsurance to delete\u003e]...`     \u003chr\u003e         `insurance 2 ai/AIA insurance di/Great Eastern Insurance`                                                                                          |","lastModifiedDate":"2023-11-02"},{"lineNumber":705,"author":{"gitId":"TehOPanas"},"content":"| **Remark**     | `remark \u003cindex\u003e [remark]` \u003chr\u003e   `remark 2 some remarks`                                                                                                                                                                                         |","lastModifiedDate":"2023-11-02"},{"lineNumber":706,"author":{"gitId":"TehOPanas"},"content":"| **Priority**   | `priority \u003cindex\u003e \u003cpriority\u003e`  \u003chr\u003e  `priority 1 medium`                                                                                                                                                                                         |","lastModifiedDate":"2023-11-02"},{"lineNumber":707,"author":{"gitId":"Jweewee"},"content":"| **Addappt**    | `addappt \u003cindex\u003e d/\u003cdate\u003e [t/\u003ctime\u003e] [v/\u003cvenue\u003e]` \u003chr\u003e `addappt 3 d/2025-12-12 t/23:59 v/Starbucks`                                                                                                                                              |","lastModifiedDate":"2023-11-03"},{"lineNumber":708,"author":{"gitId":"Jweewee"},"content":"| **Deleteappt** | `deleteappt \u003cindex\u003e` \u003chr\u003e `deleteappt 1`                                                                                                                                                                                                         |","lastModifiedDate":"2023-11-03"},{"lineNumber":709,"author":{"gitId":"Jweewee"},"content":"| **Markappt**   | `markappt \u003cindex\u003e` \u003chr\u003e `markappt 1`                                                                                                                                                                                                             |","lastModifiedDate":"2023-11-03"},{"lineNumber":710,"author":{"gitId":"Jweewee"},"content":"| **Unmarkappt** | `unmarkappt \u003cindex\u003e` \u003chr\u003e `unmarkappt 1`                                                                                                                                                                                                         |","lastModifiedDate":"2023-11-03"},{"lineNumber":711,"author":{"gitId":"LamJiuFong"},"content":"| **Clear**      | `clear`                                                                                                                                                                                                                                          |","lastModifiedDate":"2023-10-31"},{"lineNumber":712,"author":{"gitId":"LamJiuFong"},"content":"| **Help**       | `help`                                                                                                                                                                                                                                           |","lastModifiedDate":"2023-10-31"},{"lineNumber":713,"author":{"gitId":"LamJiuFong"},"content":"| **Exit**       | `exit`                                                                                                                                                                                                                                           |","lastModifiedDate":"2023-10-31"},{"lineNumber":714,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":715,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":716,"author":{"gitId":"yucongkoo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":717,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":718,"author":{"gitId":"yucongkoo"},"content":"#### Prefix to full-name prefix translation table","lastModifiedDate":"2023-11-03"},{"lineNumber":719,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":720,"author":{"gitId":"TehOPanas"},"content":"****Note that prefixes are not case-sensitive**","lastModifiedDate":"2023-11-03"},{"lineNumber":721,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":722,"author":{"gitId":"yucongkoo"},"content":"| Prefix | Full-name prefix | Remarks                                  |","lastModifiedDate":"2023-11-06"},{"lineNumber":723,"author":{"gitId":"yucongkoo"},"content":"|--------|------------------|------------------------------------------|","lastModifiedDate":"2023-11-06"},{"lineNumber":724,"author":{"gitId":"yucongkoo"},"content":"| n/     | name/            |                                          |","lastModifiedDate":"2023-11-06"},{"lineNumber":725,"author":{"gitId":"yucongkoo"},"content":"| p/     | phone/           |                                          |","lastModifiedDate":"2023-11-06"},{"lineNumber":726,"author":{"gitId":"yucongkoo"},"content":"| e/     | email/           |                                          |","lastModifiedDate":"2023-11-06"},{"lineNumber":727,"author":{"gitId":"yucongkoo"},"content":"| a/     | address/         |                                          |","lastModifiedDate":"2023-11-06"},{"lineNumber":728,"author":{"gitId":"yucongkoo"},"content":"| pr/    | priority/        |                                          |","lastModifiedDate":"2023-11-06"},{"lineNumber":729,"author":{"gitId":"yucongkoo"},"content":"| t/     | tag/             | used in `add` command                     |","lastModifiedDate":"2023-11-06"},{"lineNumber":730,"author":{"gitId":"yucongkoo"},"content":"| i/     | insurance/       |                                          |","lastModifiedDate":"2023-11-06"},{"lineNumber":731,"author":{"gitId":"yucongkoo"},"content":"| r/     | remark/          |                                          |","lastModifiedDate":"2023-11-06"},{"lineNumber":732,"author":{"gitId":"yucongkoo"},"content":"| at/    | addtag/          |                                          |","lastModifiedDate":"2023-11-06"},{"lineNumber":733,"author":{"gitId":"yucongkoo"},"content":"| dt/    | deletetag/       |                                          |","lastModifiedDate":"2023-11-06"},{"lineNumber":734,"author":{"gitId":"yucongkoo"},"content":"| ai/    | addinsurance/    |                                          |","lastModifiedDate":"2023-11-06"},{"lineNumber":735,"author":{"gitId":"yucongkoo"},"content":"| di/    | deleteinsurance/ |                                          |","lastModifiedDate":"2023-11-06"},{"lineNumber":736,"author":{"gitId":"yucongkoo"},"content":"| d/     | date/            |                                          |","lastModifiedDate":"2023-11-06"},{"lineNumber":737,"author":{"gitId":"yucongkoo"},"content":"| t/     | time/            | used in **appointment** related commands |","lastModifiedDate":"2023-11-06"},{"lineNumber":738,"author":{"gitId":"yucongkoo"},"content":"| v/     | venue/           |                                          |","lastModifiedDate":"2023-11-06"},{"lineNumber":739,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":740,"author":{"gitId":"yucongkoo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":741,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":742,"author":{"gitId":"yucongkoo"},"content":"## Glossary","lastModifiedDate":"2023-10-31"},{"lineNumber":743,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":744,"author":{"gitId":"yucongkoo"},"content":"| Term                           | Meaning                                                                                                                            |","lastModifiedDate":"2023-10-31"},{"lineNumber":745,"author":{"gitId":"TehOPanas"},"content":"|--------------------------------|------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-11-02"},{"lineNumber":746,"author":{"gitId":"yucongkoo"},"content":"| Alphanumeric                   | Alphanumeric characters include uppercase letters from ‘A’ to ‘Z’, lowercase letters from ‘a’ to ‘z’, and numbers from ‘0` to ‘9’. |","lastModifiedDate":"2023-10-31"},{"lineNumber":747,"author":{"gitId":"yucongkoo"},"content":"| json file                      | Acronym for JavaScript Object Notation file, a file format that stores data in a human-readable form.                              |","lastModifiedDate":"2023-10-31"},{"lineNumber":748,"author":{"gitId":"TehOPanas"},"content":"| Command-line Interface (CLI)   | Text-based user interface that receives text commands to run the program                                                           |","lastModifiedDate":"2023-11-02"},{"lineNumber":749,"author":{"gitId":"TehOPanas"},"content":"| Graphical User Interface (GUI) | Interface where user interact with graphical component, such as icons, buttons and menus to run the program                        |","lastModifiedDate":"2023-11-02"},{"lineNumber":750,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"TehOPanas":126,"yucongkoo":193,"songfangyl":50,"LamJiuFong":148,"-":119,"Jweewee":114}},{"path":"docs/_markbind/layouts/default.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003chead-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/stylesheets/main.css\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/head-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cheader sticky\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cnavbar type\u003d\"dark\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003ca slot\u003d\"brand\" href\u003d\"{{baseUrl}}/index.html\" title\u003d\"Home\" class\u003d\"navbar-brand\"\u003eEzContact\u003c/a\u003e","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/UserGuide.html\" class\u003d\"nav-link\"\u003eUser Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/DeveloperGuide.html\" class\u003d\"nav-link\"\u003eDeveloper Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/AboutUs.html\" class\u003d\"nav-link\"\u003eAbout Us\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"LamJiuFong"},"content":"    \u003cli\u003e\u003ca href\u003d\"https://github.com/AY2324S1-CS2103T-W16-2/tp\" target\u003d\"_blank\" class\u003d\"nav-link\"\u003e\u003cmd\u003e:fab-github:\u003c/md\u003e\u003c/a\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cli slot\u003d\"right\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \u003cform class\u003d\"navbar-form\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        \u003csearchbar :data\u003d\"searchData\" placeholder\u003d\"Search\" :on-hit\u003d\"searchCallback\" menu-align-right\u003e\u003c/searchbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003c/form\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/navbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/header\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"flex-body\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"site-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"site-nav-top\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"fw-bold mb-2\" style\u003d\"font-size: 1.25rem;\"\u003eSite Map\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003csite-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* [Home]({{ baseUrl }}/index.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* [User Guide]({{ baseUrl }}/UserGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * [Quick Start]({{ baseUrl }}/UserGuide.html#quick-start)","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * [Features]({{ baseUrl }}/UserGuide.html#features)","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * [FAQ]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"LamJiuFong"},"content":"  * [Command Summary]({{ baseUrl }}/UserGuide.html#command-summary)","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"LamJiuFong"},"content":"  * [Glossary]({{ baseUrl }}/UserGuide.html#glossary)","lastModifiedDate":"2023-11-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* [Developer Guide]({{ baseUrl }}/DeveloperGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * [Acknowledgements]({{ baseUrl }}/DeveloperGuide.html#acknowledgements)","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * [Setting Up]({{ baseUrl }}/DeveloperGuide.html#setting-up-getting-started)","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * [Design]({{ baseUrl }}/DeveloperGuide.html#design)","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * [Implementation]({{ baseUrl }}/DeveloperGuide.html#implementation)","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * [Documentation, logging, testing, configuration, dev-ops]({{ baseUrl }}/DeveloperGuide.html#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * [Appendix: Requirements]({{ baseUrl }}/DeveloperGuide.html#appendix-requirements)","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  * [Appendix: Instructions for manual testing]({{ baseUrl }}/DeveloperGuide.html#appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* Tutorials","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * [Tracing code]({{ baseUrl }}/tutorials/TracingCode.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * [Adding a command]({{ baseUrl }}/tutorials/AddRemark.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  * [Removing Fields]({{ baseUrl }}/tutorials/RemovingFields.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [About Us]({{ baseUrl }}/AboutUs.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      \u003c/site-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"content-wrapper\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    {{ content }}","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"page-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      \u003cpage-nav /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003cscroll-top-button\u003e\u003c/scroll-top-button\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003cfooter\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003c!-- Support MarkBind by including a link to us on your landing page! --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"text-center\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \u003csmall\u003e[\u003cmd\u003e**Powered by**\u003c/md\u003e \u003cimg src\u003d\"https://markbind.org/favicon.ico\" width\u003d\"30\"\u003e {{MarkBind}}, generated on {{timestamp}}]\u003c/small\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/footer\u003e","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"LamJiuFong":3,"-":64}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"TehOPanas"},"content":"Class Insurance","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"TehOPanas"},"content":"Class Priority","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"TehOPanas"},"content":"Class Insurance","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"TehOPanas"},"content":"Class Remark","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"UniquePersonList -right-\u003e \"~* all\" Person","lastModifiedDate":"2023-11-06"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"Person --\u003e \"1\" Name","lastModifiedDate":"2023-11-06"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"Person --\u003e \"1\" Phone","lastModifiedDate":"2023-11-06"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"Person --\u003e \"1\" Email","lastModifiedDate":"2023-11-06"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"Person --\u003e \"1\" Address","lastModifiedDate":"2023-11-06"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"Person --\u003e \"1\" Priority","lastModifiedDate":"2023-11-06"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"Person --\u003e \"1\" Remark","lastModifiedDate":"2023-11-06"},{"lineNumber":47,"author":{"gitId":"TehOPanas"},"content":"Person --\u003e \"*\" Tag","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"TehOPanas"},"content":"Person --\u003e \"*\" Insurance","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"yucongkoo"},"content":"Email -[hidden]right-\u003e Priority","lastModifiedDate":"2023-11-06"},{"lineNumber":54,"author":{"gitId":"yucongkoo"},"content":"Priority -[hidden]right-\u003e Remark","lastModifiedDate":"2023-11-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"yucongkoo"},"content":"ModelManager ----\u003e \"~* filtered\" Person","lastModifiedDate":"2023-11-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"TehOPanas":6,"yucongkoo":10,"-":41}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage as StoragePackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"TehOPanas"},"content":"Class JsonAdaptedABC","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"TehOPanas"},"content":"note bottom : JsonAdaptedABC \u003d \\nJsonAdaptedName,\\n JsonAdaptedPhone, etc.","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"TehOPanas"},"content":"Class JsonAdaptedXYZ","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"TehOPanas"},"content":"note bottom : JsonAdaptedABC \u003d \\nJsonAdaptedTag,\\n JsonAdaptedInsurance","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"TehOPanas"},"content":"JsonAdaptedPerson --\u003e  JsonAdaptedABC","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"TehOPanas"},"content":"JsonAdaptedPerson --\u003e JsonAdaptedXYZ","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"TehOPanas"},"content":"JsonAdaptedABC -[hidden]-\u003e JsonAdaptedXYZ","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"TehOPanas":8,"-":41}},{"path":"docs/diagrams/find-feature/ExecuteFindCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"@startuml","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"!include ../style.puml","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"participant \": FindCommand\" as command LOGIC_COLOR","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"participant \": CommandResult\" as result LOGIC_COLOR","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"end box","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"participant \"m: Model\" as model MODEL_COLOR","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"end box","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"[-\u003e command : execute(m)","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"|||","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"command -\u003e model : m.updateFilterPersonList(personPredicate)","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"|||","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"command -\u003e model : m.getFilteredPersonList().size()","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"return size","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"|||","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"create result","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"command -\u003e result : new CommandResult(size)","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"activate result","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"return result","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"[\u003c-- command : result","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"@enduml","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"songfangyl":35}},{"path":"docs/diagrams/find-feature/FindSequence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"@startuml","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"!include ../style.puml","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"participant \": LogicManager\" as manager LOGIC_COLOR","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"participant \": AddressBookParser\" as parser LOGIC_COLOR","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"participant \": FindCommandParser\" as findParser LOGIC_COLOR","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"participant \": FindCommand\" as command LOGIC_COLOR","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"participant \": CommandResult\" as result LOGIC_COLOR","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"end box","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"participant \"m: Model\" as model MODEL_COLOR","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"end box","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"[-\u003e manager : execute(\"find n/Song \\nr/vegetarian\")","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"activate manager","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"manager -\u003e parser : parseCommand(\"find n/Song \\nr/vegetarian\")","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"activate parser","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"create findParser","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"parser -\u003e findParser","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"activate findParser","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"return","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"|||","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"parser -\u003e findParser : parse(\"n/Song \\nr/vegetarian\")","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"activate findParser","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"create command","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"findParser -\u003e command","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"activate command","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"return","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"songfangyl"},"content":"return","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"songfangyl"},"content":"findParser -[hidden]-\u003e parser","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"songfangyl"},"content":"destroy findParser","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"songfangyl"},"content":"return","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"songfangyl"},"content":"manager -\u003e command : execute(m)","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"songfangyl"},"content":"activate command","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"songfangyl"},"content":"command -\u003e model : updateFilteredPersonList(Predicate)","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"songfangyl"},"content":"activate model","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"songfangyl"},"content":"return","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"songfangyl"},"content":"|||","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"songfangyl"},"content":"create result","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"songfangyl"},"content":"command -\u003e result","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"songfangyl"},"content":"activate result","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"songfangyl"},"content":"return result","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"songfangyl"},"content":"return result","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"songfangyl"},"content":"return result","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"songfangyl"},"content":"@enduml","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"songfangyl":58}},{"path":"docs/diagrams/find-feature/ParseFindCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"@startuml","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"!include ../style.puml","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"participant \": FindCommandParser\" as parser LOGIC_COLOR","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"participant \": ParserUtil\" as keywordParser LOGIC_COLOR","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"participant \": FindCommand\" as command LOGIC_COLOR","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"end box","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"participant \"n: NameContains\\nKeywordsPredicate\" as namePredicate MODEL_COLOR","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"participant \"r: RemarkContains\\nKeywordsPredicate\" as remarkPredicate MODEL_COLOR","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"participant \"p: PersonContains\\nKeywordsPredicate\" as personPredicate MODEL_COLOR","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"end box","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"[-\u003e parser : parse(\"n/Song \\nr/vegetarian\")","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"|||","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"parser -\u003e keywordParser : parseNameKeyword(\"Song\")","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"activate keywordParser","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"create namePredicate","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"keywordParser -\u003e namePredicate","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"activate namePredicate","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"return n","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"return n","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"|||","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"parser -\u003e keywordParser : parseRemarkKeyword(\"vegetarian\")","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"activate keywordParser","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"create remarkPredicate","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"|||","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"keywordParser -\u003e remarkPredicate","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"activate remarkPredicate","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"return r","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"songfangyl"},"content":"return r","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"songfangyl"},"content":"|||","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"songfangyl"},"content":"create personPredicate","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"songfangyl"},"content":"parser -\u003e personPredicate : new PersonContainsKeywordsPredicate(n, r)","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"songfangyl"},"content":"|||","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"songfangyl"},"content":"activate personPredicate","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"songfangyl"},"content":"return p","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"songfangyl"},"content":"create command","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"songfangyl"},"content":"parser -\u003e command : new FindCommand(p)","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"songfangyl"},"content":"activate command","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"songfangyl"},"content":"|||","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"songfangyl"},"content":"return command","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"songfangyl"},"content":"[\u003c--parser : command","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"songfangyl"},"content":"@enduml","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"songfangyl":51}},{"path":"docs/diagrams/find-feature/PredicateClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"@startuml","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"!include ../style.puml","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"class \"\u003c\u003cinterface\u003e\u003e\\nPredicate\" as Predicate","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"class XYZContainsKeywordsPredicate","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"class PersonContainsKeywordsPredicate","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"class FindComand","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"note left of XYZContainsKeywordsPredicate","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"  XYZContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"  AddressContainsKeywordsPredicate,","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"  NameContainsKeywordsPredicate, etc.","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"end note","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"XYZContainsKeywordsPredicate ..|\u003e Predicate","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"PersonContainsKeywordsPredicate --\u003e \"*\" Predicate : test \u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"FindComand --\u003e \"1\" PersonContainsKeywordsPredicate : contains \u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"@enduml","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"songfangyl":21}},{"path":"docs/diagrams/insurance-feature/ExecuteInsuranceSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TehOPanas"},"content":"@startuml","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"TehOPanas"},"content":"!include ../style.puml","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"TehOPanas"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"TehOPanas"},"content":"participant \": InsuranceCommand\" as command LOGIC_COLOR","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"TehOPanas"},"content":"participant \": CommandResult\" as result LOGIC_COLOR","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"TehOPanas"},"content":"participant \": UpdatePersonInsuranceDescriptor\" as descriptor LOGIC_COLOR","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"TehOPanas"},"content":"end box","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"TehOPanas"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"TehOPanas"},"content":"participant \"m: Model\" as model MODEL_COLOR","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"TehOPanas"},"content":"participant \"Person\" as personClass \u003c\u003cclass\u003e\u003e MODEL_COLOR","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"TehOPanas"},"content":"participant \": Person\" as person MODEL_COLOR","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"TehOPanas"},"content":"end box","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"TehOPanas"},"content":"[-\u003e command : execute(m)","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"TehOPanas"},"content":"|||","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"TehOPanas"},"content":"command -\u003e model : m.getFilteredPersonList()","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"TehOPanas"},"content":"return personList","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"TehOPanas"},"content":"opt not in range of personList","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"TehOPanas"},"content":"[\u003c--command : throw CommandException","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"TehOPanas"},"content":"end","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"TehOPanas"},"content":"|||","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"TehOPanas"},"content":"command -\u003e descriptor : hasCommonInsurance()","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"TehOPanas"},"content":"return hasCommonInsurance","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"TehOPanas"},"content":"opt hasCommonInsurance","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"TehOPanas"},"content":"[\u003c--command : throws CommandException","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"TehOPanas"},"content":"end","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"TehOPanas"},"content":"|||","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"TehOPanas"},"content":"command -\u003e personClass : createPersonWithUpdatedInsurances(personToUpdate, insurancesToAdd, insurancesToDelete)","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"TehOPanas"},"content":"activate personClass","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"TehOPanas"},"content":"create person","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"TehOPanas"},"content":"personClass -\u003e person :","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"TehOPanas"},"content":"activate person","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"TehOPanas"},"content":"return updatedPerson","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"TehOPanas"},"content":"return updatedPerson","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"TehOPanas"},"content":"|||","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"TehOPanas"},"content":"opt updatedPerson\u0027s number of insurance \\nexceeds maximum insurances allowed","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"TehOPanas"},"content":"[\u003c--command : throws CommandException","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"TehOPanas"},"content":"end","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"TehOPanas"},"content":"|||","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"TehOPanas"},"content":"command -\u003e model : setPerson(personToUpdate, updatedPerson)","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"TehOPanas"},"content":"|||","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"TehOPanas"},"content":"create result","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"TehOPanas"},"content":"command -\u003e result","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"TehOPanas"},"content":"activate result","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"TehOPanas"},"content":"return result","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"TehOPanas"},"content":"[\u003c-- command : result","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"TehOPanas"},"content":"@enduml","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"TehOPanas":62}},{"path":"docs/diagrams/insurance-feature/InsuranceSequence.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TehOPanas"},"content":"@startuml","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"TehOPanas"},"content":"!include ../style.puml","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"TehOPanas"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"TehOPanas"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"TehOPanas"},"content":"participant \": LogicManager\" as manager LOGIC_COLOR","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"TehOPanas"},"content":"participant \": AddressBookParser\" as parser LOGIC_COLOR","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"TehOPanas"},"content":"participant \": InsuranceCommandParser\" as insuranceParser LOGIC_COLOR","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"TehOPanas"},"content":"participant \": InsuranceCommand\" as command LOGIC_COLOR","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"TehOPanas"},"content":"participant \": CommandResult\" as result LOGIC_COLOR","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"TehOPanas"},"content":"end box","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"TehOPanas"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"TehOPanas"},"content":"participant \"m: Model\" as model MODEL_COLOR","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"TehOPanas"},"content":"end box","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"TehOPanas"},"content":"[-\u003e manager : execute(\"insurance 1 \\nai/AIA di/Great Eastern)","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"TehOPanas"},"content":"activate manager","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"TehOPanas"},"content":"manager -\u003e parser : parseCommand(\"insurance 1 \\nai/AIA di/Great Eastern)","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"TehOPanas"},"content":"activate parser","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"TehOPanas"},"content":"create insuranceParser","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"TehOPanas"},"content":"parser -\u003e insuranceParser","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"TehOPanas"},"content":"activate insuranceParser","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"TehOPanas"},"content":"return","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"TehOPanas"},"content":"|||","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"TehOPanas"},"content":"parser -\u003e insuranceParser : parse(1 ai/AIA di/Great Eastern)","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"TehOPanas"},"content":"activate insuranceParser","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"TehOPanas"},"content":"create command","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"TehOPanas"},"content":"insuranceParser -\u003e command","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"TehOPanas"},"content":"activate command","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"TehOPanas"},"content":"return i","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"TehOPanas"},"content":"return i","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"TehOPanas"},"content":"insuranceParser -[hidden]-\u003e parser","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"TehOPanas"},"content":"destroy insuranceParser","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"TehOPanas"},"content":"return i","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"TehOPanas"},"content":"manager -\u003e command : execute(m)","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"TehOPanas"},"content":"activate command","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"TehOPanas"},"content":"command -\u003e model : setPerson(toUpdatePerson, UpdatedPerson)","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"TehOPanas"},"content":"activate model","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"TehOPanas"},"content":"return","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"TehOPanas"},"content":"|||","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"TehOPanas"},"content":"create result","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"TehOPanas"},"content":"command -\u003e result","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"TehOPanas"},"content":"activate result","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"TehOPanas"},"content":"return result","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"TehOPanas"},"content":"return result","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"TehOPanas"},"content":"return result","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"TehOPanas"},"content":"@enduml","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"TehOPanas":58}},{"path":"docs/diagrams/insurance-feature/ParseInsuranceSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TehOPanas"},"content":"@startuml","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"TehOPanas"},"content":"!include ../style.puml","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"TehOPanas"},"content":"participant \": InsuranceCommandParser\" as parser LOGIC_COLOR","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"TehOPanas"},"content":"participant \": UpadatePersonInsuranceDescriptor\" as descriptor LOGIC_COLOR","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"TehOPanas"},"content":"participant \": InsuranceCommand\" as command LOGIC_COLOR","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"TehOPanas"},"content":"[-\u003e parser : parse(\"1 ai/car insurance\\n di/health insurance\")","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"TehOPanas"},"content":"|||","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"TehOPanas"},"content":"ref over parser : parse arguments","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"TehOPanas"},"content":"note right : Parsing of index, insurances to update and delete \\nis done here and is omitted","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"TehOPanas"},"content":"|||","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"TehOPanas"},"content":"create descriptor","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"TehOPanas"},"content":"parser -\u003e descriptor","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"TehOPanas"},"content":"note right : contains the insurances \\nto add and delete from customer","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"TehOPanas"},"content":"activate descriptor","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"TehOPanas"},"content":"|||","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"TehOPanas"},"content":"return descriptor","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"TehOPanas"},"content":"|||","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"TehOPanas"},"content":"parser -\u003e descriptor : hasInsuranceToUpdate()","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"TehOPanas"},"content":"return","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"TehOPanas"},"content":"|||","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"TehOPanas"},"content":"opt over parser : no insurance to update","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"TehOPanas"},"content":"[\u003c-- parser : throwParserException","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"TehOPanas"},"content":"end","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"TehOPanas"},"content":"|||","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"TehOPanas"},"content":"create command","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"TehOPanas"},"content":"parser -\u003e command : new InsuranceCommand(1, descriptor)","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"TehOPanas"},"content":"activate command","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"TehOPanas"},"content":"|||","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"TehOPanas"},"content":"return command","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"TehOPanas"},"content":"[\u003c--parser : command","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"TehOPanas"},"content":"@enduml","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"TehOPanas":35}},{"path":"docs/diagrams/insurance-feature/PersonInsuranceClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TehOPanas"},"content":"@startuml","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"TehOPanas"},"content":"!include ../style.puml","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"TehOPanas"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"TehOPanas"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"TehOPanas"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"TehOPanas"},"content":"class Insurance","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"TehOPanas"},"content":"class Person","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"TehOPanas"},"content":"note right of Person","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"TehOPanas"},"content":" Other attribute classes such as","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"TehOPanas"},"content":" \u003cb\u003eName\u003c/b\u003e, \u003cb\u003ePhone\u003c/b\u003e, \u003cb\u003eEmail\u003c/b\u003e...","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"TehOPanas"},"content":" are ommited here as they are irrelevant","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"TehOPanas"},"content":" in the current context.","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"TehOPanas"},"content":"end note","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"TehOPanas"},"content":"Person --\u003e\"*\" Insurance","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"TehOPanas"},"content":"@enduml","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"TehOPanas":18}},{"path":"docs/diagrams/priority-feature/PriorityClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LamJiuFong"},"content":"@startuml","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"LamJiuFong"},"content":"!include ../style.puml","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"LamJiuFong"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"LamJiuFong"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"LamJiuFong"},"content":"class Person","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"LamJiuFong"},"content":"class Priority","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"LamJiuFong"},"content":"enum Level","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"LamJiuFong"},"content":"Person --\u003e\"1\" Priority","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":"Priority --\u003e\"1\" Level","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"LamJiuFong"},"content":"enum Level {","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"LamJiuFong"},"content":"HIGH","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"LamJiuFong"},"content":"MEDIUM","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"LamJiuFong"},"content":"LOW","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"LamJiuFong"},"content":"-","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"LamJiuFong"},"content":"}","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"LamJiuFong"},"content":"@enduml","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"LamJiuFong":20}},{"path":"docs/diagrams/priority-feature/PriorityCommandParserSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LamJiuFong"},"content":"@startuml","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"LamJiuFong"},"content":"!include ../style.puml","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"LamJiuFong"},"content":"participant \":PriorityCommandParser\" as PriorityCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":"participant \":PriorityCommand\" as PriorityCommand LOGIC_COLOR","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"LamJiuFong"},"content":"[-\u003e PriorityCommandParser : parse(\"1 high\")","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"LamJiuFong"},"content":"alt valid index","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"LamJiuFong"},"content":"    ref over PriorityCommandParser: parse index","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"LamJiuFong"},"content":"    |||","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"LamJiuFong"},"content":"    alt valid keyword","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":"        create PriorityCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"LamJiuFong"},"content":"        PriorityCommandParser -\u003e PriorityCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"LamJiuFong"},"content":"        activate PriorityCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"LamJiuFong"},"content":"        return command","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"LamJiuFong"},"content":"        [\u003c--PriorityCommandParser : command","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"LamJiuFong"},"content":"    else invalid keyword","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"LamJiuFong"},"content":"        PriorityCommandParser -\u003e[ : throws ParseException","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"LamJiuFong"},"content":"    end","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"LamJiuFong"},"content":"else invalid index","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"LamJiuFong"},"content":"    PriorityCommandParser -\u003e[ : throws ParseException","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"LamJiuFong"},"content":"end","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"LamJiuFong"},"content":"@enduml","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"LamJiuFong":24}},{"path":"docs/diagrams/remark-feature/RemarkCommandParserSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"@startuml","lastModifiedDate":"2023-11-03"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"!include ../style.puml","lastModifiedDate":"2023-11-03"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"participant \":RemarkCommandParser\" as RemarkCommandParser LOGIC_COLOR","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"participant \"e:Remark\" as emptyRemark MODEL_COLOR","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"participant \"r:Remark\" as remark MODEL_COLOR","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"participant \":RemarkCommand\" as RemarkCommand LOGIC_COLOR","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"[-\u003e RemarkCommandParser : parse(\"2 he likes pizza\")","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"opt Invalid index","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"[\u003c-- RemarkCommandParser : throwParserException","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"end","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"|||","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"alt empty argument","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"    create emptyRemark","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"    RemarkCommandParser --\u003e emptyRemark : new Remark(\"\")","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"    activate emptyRemark","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"    return e","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"|||","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"else","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"    create remark","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"    RemarkCommandParser --\u003e remark : new Remark(argument)","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"    activate remark","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"    return r","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"end","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"|||","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"create RemarkCommand","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"RemarkCommandParser --\u003e RemarkCommand","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"activate RemarkCommand","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"|||","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"return : command","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"[\u003c--RemarkCommandParser : command","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"songfangyl"},"content":"@enduml","lastModifiedDate":"2023-11-03"}],"authorContributionMap":{"songfangyl":36}},{"path":"docs/diagrams/tag-feature/ExecuteActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"@startuml","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"skin rose","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"start","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":":User provides tags to add and delete;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"if () then","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"    :Update tags of targeted customer;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"    if () then","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"    :Save updated customer to Model;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"    else ([updated customer\u0027s tag set unchanged or invalid])","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"        stop","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"    endif","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"    stop","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"else ([has conflicting tags to add and delete])","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"    stop","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"endif","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"@enduml","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"yucongkoo":21}},{"path":"docs/diagrams/tag-feature/ExecuteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"@startuml","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"!include ../style.puml","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"participant \":TagCommand\" as TagCommand LOGIC_COLOR","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"end box","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"participant \"Person\" as PersonClass \u003c\u003cclass\u003e\u003e MODEL_COLOR","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"participant \":Person\" as Person MODEL_COLOR","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"end box","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"[-\u003e TagCommand: execute(m)","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"TagCommand -\u003e TagCommand: verifyCommandExecutable(m)","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"|||","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"ref over TagCommand, Model: retrieve information required","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"|||","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"TagCommand -\u003e PersonClass: createPersonWithUpdatedTags(personToUpdate, tagsToAdd, tagsToDelete)","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"activate PersonClass","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"create Person","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"PersonClass -\u003e Person","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"activate Person","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"return updatedPerson","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"return updatedPerson","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"|||","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"ref over TagCommand: verify updatedPerson is valid","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"|||","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"TagCommand -\u003e Model: setPerson(personToUpdate, updatedPerson)","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"|||","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"|||","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"create CommandResult","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"TagCommand -\u003e CommandResult","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"activate CommandResult","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"return result","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"[\u003c-- TagCommand: result","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"@enduml","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"TehOPanas":1,"yucongkoo":43}},{"path":"docs/diagrams/tag-feature/ParseDetailsSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"@startuml","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"!include ../style.puml","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"mainframe sd parse arguments","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"participant \":TagCommandParser\" as TagCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"participant \":ParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"TagCommandParser -\u003e ParserUtil: \u003c\u003cstatic\u003e\u003e \\nparseIndex(\"1\")","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"alt valid index","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"    ParserUtil --\u003e TagCommandParser: index","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"else","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"    ParserUtil --\u003e TagCommandParser: throws ParseException","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"    deactivate ParserUtil","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"end","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"|||","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"TagCommandParser -\u003e TagCommandParser: parseTags(\"tall\", \"handsome\")","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"alt all tags valid","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"    TagCommandParser --\u003e TagCommandParser: tagsToAdd","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"else","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"    TagCommandParser --\u003e TagCommandParser: throws ParseException","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"end","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"|||","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"TagCommandParser -\u003e TagCommandParser: parseTags(\"short\")","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"alt all tags valid","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"    TagCommandParser --\u003e TagCommandParser: tagsToDelete","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"else","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"    TagCommandParser --\u003e TagCommandParser: throws ParseException","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"end","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"@enduml","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"yucongkoo":32}},{"path":"docs/diagrams/tag-feature/ParseSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"@startuml","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"!include ../style.puml","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"participant \":TagCommandParser\" as TagCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"participant \":UpdatePersonTagsDescriptor\" as UpdatePersonTagsDescriptor LOGIC_COLOR","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"participant \":TagCommand\" as TagCommand LOGIC_COLOR","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"[-\u003e TagCommandParser : parse(\"1 at/tall \\ndt/short at/handsome\")","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"ref over TagCommandParser: parse command arguments","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"|||","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"create UpdatePersonTagsDescriptor","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"TagCommandParser -\u003e UpdatePersonTagsDescriptor","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"activate UpdatePersonTagsDescriptor","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"return descriptor","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"|||","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"ref over TagCommandParser: verify has tag to update","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"|||","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"create TagCommand","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"    TagCommandParser -\u003e TagCommand: new TagCommand(1, descriptor)","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"    activate TagCommand","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"    return command","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"    [\u003c--TagCommandParser : command","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"@enduml","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"yucongkoo":25}},{"path":"docs/diagrams/tag-feature/PersonClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"@startuml","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"!include ../style.puml","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"Class Person","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"note right of Person","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":" A person is associated to other attribute classes such as","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":" \u003cb\u003eName\u003c/b\u003e, \u003cb\u003ePhone\u003c/b\u003e, \u003cb\u003eEmail\u003c/b\u003e...","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":" which are ommited here as they are irrelevant","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":" when discussing the tag feature.","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"end note","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"Class Tag","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"Person --\u003e \"*\" Tag","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"@enduml","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"yucongkoo":17}},{"path":"docs/diagrams/tag-feature/TagCommandClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"@startuml","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"!include ../style.puml","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"skinparam arrowColor LOGIC_COLOR","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"Class TagCommand","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"Class Index","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"Class UpdatePersonTagsDescriptor","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"Class Tag","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"TagCommand --\u003e \"1\" Index","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"TagCommand --\u003e \"1\" UpdatePersonTagsDescriptor","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"UpdatePersonTagsDescriptor --\u003e \"~* tags to add\" Tag","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"UpdatePersonTagsDescriptor --\u003e \"~* tags to delete\" Tag","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"@enduml","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"yucongkoo":17}},{"path":"docs/diagrams/tag-feature/TagSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"@startuml","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"!include ../style.puml","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"participant \":TagCommandParser\" as TagCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"participant \"t:TagCommand\" as TagCommand LOGIC_COLOR","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"participant \"result:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"[-\u003e LogicManager : execute(\"tag 1 at/tall \\ndt/short at/handsome\")","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"activate LogicManager","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"tag 1 at/tall \\ndt/short at/handsome\")","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"create TagCommandParser","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"AddressBookParser -\u003e TagCommandParser","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"activate TagCommandParser","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"TagCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"deactivate TagCommandParser","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"AddressBookParser -\u003e TagCommandParser : parse(\"1 at/tall \\ndt/short at/handsome\")","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"activate TagCommandParser","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"create TagCommand","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"TagCommandParser -\u003e TagCommand","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"activate TagCommand","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"TagCommand --\u003e TagCommandParser : t","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"deactivate TagCommand","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"TagCommandParser --\u003e AddressBookParser : t","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"deactivate TagCommandParser","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"TagCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"destroy TagCommandParser","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"AddressBookParser --\u003e LogicManager : t","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"LogicManager -\u003e TagCommand : execute()","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"activate TagCommand","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"yucongkoo"},"content":"create CommandResult","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"TagCommand -\u003e CommandResult","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"yucongkoo"},"content":"activate CommandResult","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"yucongkoo"},"content":"CommandResult --\u003e TagCommand : result","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"yucongkoo"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"yucongkoo"},"content":"TagCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"yucongkoo"},"content":"deactivate TagCommand","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"yucongkoo"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"yucongkoo"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"yucongkoo"},"content":"@enduml","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"yucongkoo":59}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"LamJiuFong"},"content":"# EzContact","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2020-08-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"LamJiuFong"},"content":"**EzContact is a desktop app made for insurance agents to manage customer details, optimized for usage via Command Line Interface (CLI)","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"LamJiuFong"},"content":"while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"LamJiuFong"},"content":"If you can type fast, EzContact can get your contact management tasks done faster than traditional GUI apps.**","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"LamJiuFong"},"content":"* If you are interested in using EzContact, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"LamJiuFong"},"content":"* If you are interested about developing EzContact, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"LamJiuFong":6,"-":17}},{"path":"docs/team/jweewee.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"layout: default.md","lastModifiedDate":"2023-10-04"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"title: \"Jweewee\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-04"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"---","lastModifiedDate":"2023-10-04"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-10-04"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"`to be added soon`","lastModifiedDate":"2023-10-04"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-04"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"* **New Feature**: `to be added soon`","lastModifiedDate":"2023-10-04"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":"    * What it does: `to be added soon`","lastModifiedDate":"2023-10-04"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":"    * Justification: `to be added soon`","lastModifiedDate":"2023-10-04"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"    * Highlights: `to be added soon`","lastModifiedDate":"2023-10-04"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":"* **New Feature**: `to be added soon`","lastModifiedDate":"2023-10-04"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":19,"author":{"gitId":"Jweewee"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003djweewee\u0026breakdown\u003dfalse\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos)","lastModifiedDate":"2023-10-04"},{"lineNumber":20,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":"* **Project management**:","lastModifiedDate":"2023-10-04"},{"lineNumber":22,"author":{"gitId":"Jweewee"},"content":"    * `to be added soon`","lastModifiedDate":"2023-10-04"},{"lineNumber":23,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-04"},{"lineNumber":25,"author":{"gitId":"Jweewee"},"content":"    * `to be added soon`","lastModifiedDate":"2023-10-04"},{"lineNumber":26,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":27,"author":{"gitId":"Jweewee"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-04"},{"lineNumber":28,"author":{"gitId":"Jweewee"},"content":"    * User Guide: `to be added soon`","lastModifiedDate":"2023-10-04"},{"lineNumber":29,"author":{"gitId":"Jweewee"},"content":"    * Developer Guide: `to be added soon`","lastModifiedDate":"2023-10-04"},{"lineNumber":30,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":31,"author":{"gitId":"Jweewee"},"content":"* **Community**:","lastModifiedDate":"2023-10-04"},{"lineNumber":32,"author":{"gitId":"Jweewee"},"content":"    * `to be added soon`","lastModifiedDate":"2023-10-04"},{"lineNumber":33,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":34,"author":{"gitId":"Jweewee"},"content":"* **Tools**:","lastModifiedDate":"2023-10-04"},{"lineNumber":35,"author":{"gitId":"Jweewee"},"content":"    * `to be added soon`","lastModifiedDate":"2023-10-04"}],"authorContributionMap":{"Jweewee":35}},{"path":"docs/team/lamjiufong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LamJiuFong"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"LamJiuFong"},"content":"layout: default.md","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"LamJiuFong"},"content":"title: \"LamJiuFong\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"LamJiuFong"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"LamJiuFong"},"content":"### Project: EzContact","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"LamJiuFong"},"content":"EzContact is a desktop app made for insurance agents to manage customer details,","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"LamJiuFong"},"content":"optimized for usage via Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"LamJiuFong"},"content":"If you can type fast, EzContact can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"LamJiuFong"},"content":"* **New Feature**: Priority feature.","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"LamJiuFong"},"content":"  * What it does: Allows users to assign, update or remove priorities from customers in EzContact.","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"LamJiuFong"},"content":"  * Justification: This feature is well-suited for our target users as now they can classify customers into different ","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"LamJiuFong"},"content":"  priorities levels, allowing them to know who should they find first for a higher chance of sealing the deal.","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"LamJiuFong"},"content":"  * Highlights: ","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"LamJiuFong"},"content":"    * Users can assign three different priority levels: high, medium and low. They can also choose to update or remove the ","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"LamJiuFong"},"content":"    priorities assigned to users. ","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"LamJiuFong"},"content":"    * The customer list is now sorted according to priority levels, allowing users to have a clear view on who has higher priorities.","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":23,"author":{"gitId":"LamJiuFong"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dLamJiuFong\u0026breakdown\u003dfalse\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos)","lastModifiedDate":"2023-10-05"},{"lineNumber":24,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":25,"author":{"gitId":"LamJiuFong"},"content":"* **Project management**:","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"LamJiuFong"},"content":"  * Have weekly meetings and brainstorm sessions to decide direction of the project.","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"LamJiuFong"},"content":"  * Have some commits and merged some pull requests in every milestone.","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"LamJiuFong"},"content":"  * Have some reviews and comments on teammates\u0027 pull requests.","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"LamJiuFong"},"content":"  * Set up codecov and project website.","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"LamJiuFong"},"content":"  * Changed EzContact\u0027s icon and included some vectors for UI.","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"LamJiuFong"},"content":"  * Maintain and update project websites.","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"LamJiuFong"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"LamJiuFong"},"content":"  * Edit feature is not allowed to edit tags, this is to make way for the `tag` feature where users can now add or delete tags without clearing all existing tags.","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"LamJiuFong"},"content":"  * Users can now add priorities through the `add` feature.","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"LamJiuFong"},"content":"  * Displayed customer list is now in sorted form, ordered by priority levels.","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"LamJiuFong"},"content":"  * Customers\u0027 phone, email and address are now displayed in a better form. ","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":39,"author":{"gitId":"LamJiuFong"},"content":"* **Documentation**:","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"LamJiuFong"},"content":"  * User Guide: `to be added soon`","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"LamJiuFong"},"content":"  * Developer Guide: `to be added soon`","lastModifiedDate":"2023-10-05"},{"lineNumber":42,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":43,"author":{"gitId":"LamJiuFong"},"content":"* **Community**:","lastModifiedDate":"2023-10-05"},{"lineNumber":44,"author":{"gitId":"LamJiuFong"},"content":"  * PR reviews","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"LamJiuFong"},"content":"  * Reported bugs","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"LamJiuFong":46}},{"path":"docs/team/songfangyl.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"  layout: default.md","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"  title: \"songfangyl\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"### Project EzContact","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"EzContact is a desktop app made for insurance agents to manage customer details,","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"optimized for usage via Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"If you can type fast, EzContact can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"###### **New Feature**: Advanced Search Functionality","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"* What it does: Enhances the search feature, allowing users to perform detailed searches by specifying individual attributes, ","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"  while also providing the convenience of partial search functionality","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"* Justification: This feature significantly enhances the product\u0027s suitability for the target user.","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"  Users can effortlessly locate specific customers,","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"* Highlights: This feature represents a substantial extension of the original functionality, ","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"  require a considerable amount of code. As such, the code design places a strong emphasis on extensibility and adherence to SOLID principles","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"###### **New Feature**: Customer Remark Functionality","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"* What it does: Enable users to record brief notes about specific customers.","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"* Justification:  This feature enhances the overall product by providing users with a more comprehensive tool. With the remark feature, ","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"  users gain increased flexibility and utility in their interaction with the application.","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"###### **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dsongfangyl\u0026breakdown\u003dfalse\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos)","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"###### **Project management**:","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"* Set up weekly meeting.","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"###### **Documentation**:","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"songfangyl"},"content":"* User Guide: ","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"songfangyl"},"content":"  * Added a comprehensive user guide for the Remark feature.","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"songfangyl"},"content":"  * Included a user guide for the Find feature.","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"songfangyl"},"content":"  * Provide delete feature user guide.","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"songfangyl"},"content":"* Developer Guide: ","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"songfangyl"},"content":"  * Offers in-depth insights into the implementation details of the Remark feature, ","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"songfangyl"},"content":"    providing developers with a clear understanding of its structure and functionality","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"songfangyl"},"content":"  * Presents comprehensive information on the implementation of the Find feature, ","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"songfangyl"},"content":"    including code and architecture details, ensuring developers can effectively utilize this feature.","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"songfangyl"},"content":"  * Includes a section on design considerations, highlighting the principles and best practices that guided the development of these features. ","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"songfangyl"},"content":"    This section promotes code extensibility, maintainability, and adherence to SOLID principles, enhancing the overall quality of the codebase.","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"songfangyl"},"content":"  * Adds use cases for remark feature and delete feature.","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"songfangyl"},"content":"  * Added the manual testing instructions for the `find` and `remark` feature.","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":50,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"songfangyl":50}},{"path":"docs/team/tehopanas.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TehOPanas"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"TehOPanas"},"content":"layout: default.md","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"TehOPanas"},"content":"title: \"TehOPanas\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"TehOPanas"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"TehOPanas"},"content":"## Project EzContact","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"TehOPanas"},"content":"EzContact is a desktop app made for insurance agents to manage customer details,","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"TehOPanas"},"content":"optimized for usage via Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"TehOPanas"},"content":"If you can type fast, EzContact can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"TehOPanas"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"TehOPanas"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"TehOPanas"},"content":"###### **New Feature**: ","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"TehOPanas"},"content":"* Implemented `Insurance` feature that includes a new `insurance` command and a new attribute to the customers in our EzContact.","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"TehOPanas"},"content":"  * What it does: User can assign or remove insurances associated with a customer on EzContact, by providing the name of the insurance.","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"TehOPanas"},"content":"  * Justification: Given that our users are insurance agents, our users have to constantly keep track of what insurances each customer ","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"TehOPanas"},"content":"currently holds, has interest in or plans to cancel. With this feature, our users can efficiently keep track of these information and make the ","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"TehOPanas"},"content":"correct decisions and moves when interacting with their customers, subsequently increasing their efficiency and chances of securing deals.","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"TehOPanas"},"content":"  * Highlights: Implementation of this feature requires in-depth analysis of the model component, different data structures to handle the information","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"TehOPanas"},"content":"and handling of user behaviours (e.g. duplicate, conflicting insurances). These analysis determine our design choices from all the possible alternatives.","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"TehOPanas"},"content":"###### **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dtehopanas\u0026breakdown\u003dfalse\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos)","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"TehOPanas"},"content":"###### **Enhancements to existing features**:","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"TehOPanas"},"content":"  * Improve validation of input value for customer\u0027s information (e.g. name, phone, email...)","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"TehOPanas"},"content":"  * Change the definition of duplicate entries, allowing same name, but phone and email must be unique","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"TehOPanas"},"content":"  * Make command words and prefixes case-insensitive, giving users more flexibility in using the product","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"TehOPanas"},"content":"###### **Documentation**:","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"TehOPanas"},"content":"* User Guide: ","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"TehOPanas"},"content":"  * Added documentation for `insurance` feature","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"TehOPanas"},"content":"  * Standardise formatting and layout of the entire User Guide","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"TehOPanas"},"content":"  * Added introduction to the User Guide","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"TehOPanas"},"content":"  * Added examples for `find` and `remark` feature","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"TehOPanas"},"content":"  * Improve description for `find` feature\u0027s documentation","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"TehOPanas"},"content":"  * Update the glossary","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"TehOPanas"},"content":"  * Ensure that all parts of the documentation are consistent and correct","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"TehOPanas"},"content":"* Developer Guide: ","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"TehOPanas"},"content":"  * Added documentation for `Insurance` feature (i.e. Implementation, design choices, UML diagrams...)","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"TehOPanas"},"content":"  * Standardise the formatting and layout for Developer Guide","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"TehOPanas"},"content":"  * Standardise the format for Appendix: Effort, Appendix: Planned Enhancement,Appendix: Instruction for Manual Testing and Acknowledgement","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"TehOPanas"},"content":"  * Added uses cases for `Insurance` feature","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"TehOPanas"},"content":"  * Updated product scope to be focused on insurance agents","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"TehOPanas"},"content":"  * Update and improve user stories to become more targeted towards insurance agents","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"TehOPanas"},"content":"###### **Community**:","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"TehOPanas"},"content":"* `to be added soon`","lastModifiedDate":"2023-10-05"},{"lineNumber":51,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"TehOPanas":52}},{"path":"docs/team/yucongkoo.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"---","lastModifiedDate":"2023-09-30"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"  layout: default.md","lastModifiedDate":"2023-09-30"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"  title: \"Yucongkoo\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-09-30"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"---","lastModifiedDate":"2023-09-30"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":6,"author":{"gitId":"TehOPanas"},"content":"## Project: EzContact","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"EzContact is a desktop app made for insurance agents to manage customer details, ","lastModifiedDate":"2023-11-07"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"optimized for usage via Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). ","lastModifiedDate":"2023-11-07"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"If you can type fast, EzContact can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-11-07"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-09-30"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-09-30"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":14,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"* **New Feature**: Added a `tag` command that allows users to update tags of a specific customer in EzContact.","lastModifiedDate":"2023-11-07"},{"lineNumber":16,"author":{"gitId":"TehOPanas"},"content":"    * **What it does:** Users can update tags associated to a specific customer, by providing tags to add and tags to delete","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"  through the tag command.","lastModifiedDate":"2023-11-07"},{"lineNumber":18,"author":{"gitId":"TehOPanas"},"content":"    * **Justification:** This feature significantly improved the product to make it a better fit to our target audience.","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"  Through associating descriptive tags to a customer, our users will be more likely to remember their customers and will also be ","lastModifiedDate":"2023-11-07"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"  helpful in identifying their customers.","lastModifiedDate":"2023-11-07"},{"lineNumber":21,"author":{"gitId":"TehOPanas"},"content":"    * **Highlights:** This enhancement required an in-depth analysis of design alternatives, from choice of data structure to hold the ","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"  tags, to handling of certain user behaviours such as handling of duplicate tags provided, conflicting tags provided and","lastModifiedDate":"2023-11-07"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"  addition(deletion) of existing(non-existing). The decisions made were mainly driven by ensuring the best user experience.","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"TehOPanas"},"content":"    * **Credits:** The association between the `Tag` class and `Person` class was originally implemented in AB-3, ","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"TehOPanas"},"content":"  there was not much modification done to this association","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dyucongkoo\u0026breakdown\u003dfalse\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos)","lastModifiedDate":"2023-09-30"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":31,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"* **Project management**:","lastModifiedDate":"2023-09-30"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"    * Managed releases `v1.2` - `v1.3b` (4 releases) on GitHub","lastModifiedDate":"2023-11-07"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"    * Managed the issue tracker and ensured team members\u0027 timely delivery of deliverables and team tasks","lastModifiedDate":"2023-11-07"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"    * Distributed team tasks on a weekly basis. Hosted the features brainstorming session (Issues [#101](https://github.com/AY2324S1-CS2103T-W16-2/tp/issues/101), [141](https://github.com/AY2324S1-CS2103T-W16-2/tp/issues/141))","lastModifiedDate":"2023-11-07"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"    * Managed bugs reported in PE-D, identified and filtered out duplicate bugs, while assigning each bug to the responsible developer and provided a summary (Issue [#289](https://github.com/AY2324S1-CS2103T-W16-2/tp/issues/289)).","lastModifiedDate":"2023-11-08"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":39,"author":{"gitId":"TehOPanas"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-09-30"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"  * Made the address field of a customer optional (PRs [#68](https://github.com/AY2324S1-CS2103T-W16-2/tp/pull/68), [#83](https://github.com/AY2324S1-CS2103T-W16-2/tp/pull/83),[#102](https://github.com/AY2324S1-CS2103T-W16-2/tp/pull/102), [#197](https://github.com/AY2324S1-CS2103T-W16-2/tp/pull/197))","lastModifiedDate":"2023-11-07"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"  * Refactored the `JsonAdaptedPerson` structure, introduced JsonAdaptedAttributes(`JsonAdaptedName`, `JsonAdaptedPhone` etc.) to facilitate","lastModifiedDate":"2023-11-07"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"  conversion between json format and model type(PR [#103](https://github.com/AY2324S1-CS2103T-W16-2/tp/pull/103)). Throughout the process of refactoring,discovered and solved a bug in original AB-3 conversion[PR [#204](https://github.com/AY2324S1-CS2103T-W16-2/tp/pull/204)]. ","lastModifiedDate":"2023-11-07"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"  * Created UI componenet `FlowPaneLabel` used to display priority, tags and insurances associated to a customer (PRs [#162](https://github.com/AY2324S1-CS2103T-W16-2/tp/pull/162), [#208](https://github.com/AY2324S1-CS2103T-W16-2/tp/pull/208)).","lastModifiedDate":"2023-11-07"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"  * Updated the GUI color scheme and overall design (PR [#189](https://github.com/AY2324S1-CS2103T-W16-2/tp/pull/189))","lastModifiedDate":"2023-11-07"},{"lineNumber":47,"author":{"gitId":"yucongkoo"},"content":"  * Added the functionality of secondary prefix, that is every prefix now has a shorthand representation and a full name representation,","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"  while also making the prefixes not case-sensitive (PR [#238](https://github.com/AY2324S1-CS2103T-W16-2/tp/pull/238))","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"yucongkoo"},"content":"  \u003cbr/\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":50,"author":{"gitId":"yucongkoo"},"content":"  \u003cbr/\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":51,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"yucongkoo"},"content":"* **Documentation**:","lastModifiedDate":"2023-09-30"},{"lineNumber":53,"author":{"gitId":"yucongkoo"},"content":"  * User Guide: ","lastModifiedDate":"2023-11-07"},{"lineNumber":54,"author":{"gitId":"yucongkoo"},"content":"    * Updated the `Quick Start` section and created the `UI Layout Description` section.","lastModifiedDate":"2023-11-07"},{"lineNumber":55,"author":{"gitId":"yucongkoo"},"content":"    * Added documentation for the features `add`, `tag` and also the `Advanced Features` section.","lastModifiedDate":"2023-11-07"},{"lineNumber":56,"author":{"gitId":"yucongkoo"},"content":"    * Drafted the overall structure and formatting for features section to be used across team members.","lastModifiedDate":"2023-11-07"},{"lineNumber":57,"author":{"gitId":"yucongkoo"},"content":"    * Added the `Prefix to full-name prefix translation table` section.","lastModifiedDate":"2023-11-07"},{"lineNumber":58,"author":{"gitId":"yucongkoo"},"content":"    * Checked the degree of standardization between different sections of the UG.","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"yucongkoo"},"content":"    * Tweaked the UG to make it pdf-version friendly.","lastModifiedDate":"2023-11-08"},{"lineNumber":60,"author":{"gitId":"yucongkoo"},"content":"  * Developer Guide: ","lastModifiedDate":"2023-11-07"},{"lineNumber":61,"author":{"gitId":"yucongkoo"},"content":"    * Added the implementation details of the `tag` feature (including all the UML diagrams used in the explanation).","lastModifiedDate":"2023-11-07"},{"lineNumber":62,"author":{"gitId":"yucongkoo"},"content":"    * Added use case for adding a customer(UC01) and updating tags of a customer(UC09).","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"yucongkoo"},"content":"    * Added the manual testing instructions for the `tag` feature.","lastModifiedDate":"2023-11-07"},{"lineNumber":64,"author":{"gitId":"yucongkoo"},"content":"    * Added the Planned Enhancement 1: Deletion of all tags(and insurances) in one command.","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"yucongkoo"},"content":"    * Identified and fixed a bug of UML diagram in the `Design - Model Component` section.","lastModifiedDate":"2023-11-07"},{"lineNumber":66,"author":{"gitId":"yucongkoo"},"content":"  \u003cbr/\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":67,"author":{"gitId":"yucongkoo"},"content":"  \u003cbr/\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":68,"author":{"gitId":"yucongkoo"},"content":"* **Community**:","lastModifiedDate":"2023-09-30"},{"lineNumber":69,"author":{"gitId":"yucongkoo"},"content":"  * PRs reviewed(with non-trivial review comments): [#77](https://github.com/AY2324S1-CS2103T-W16-2/tp/pull/77/files/c7bff1718ed1ad97f10a426a26ddbd38c7f9d88f), ","lastModifiedDate":"2023-11-07"},{"lineNumber":70,"author":{"gitId":"yucongkoo"},"content":"  [#110](https://github.com/AY2324S1-CS2103T-W16-2/tp/pull/110/files/21f6f6890e91e85acba38fe4b4c6924dc4dda5e8),","lastModifiedDate":"2023-11-07"},{"lineNumber":71,"author":{"gitId":"yucongkoo"},"content":"  [#120-1](https://github.com/AY2324S1-CS2103T-W16-2/tp/pull/120/files/14f6a08e3141168016ea041cf8a1c440f69b3d2d), [#120-2](https://github.com/AY2324S1-CS2103T-W16-2/tp/pull/120/files/14f6a08e3141168016ea041cf8a1c440f69b3d2d),","lastModifiedDate":"2023-11-07"},{"lineNumber":72,"author":{"gitId":"yucongkoo"},"content":"  [#119](https://github.com/AY2324S1-CS2103T-W16-2/tp/pull/119/files/737161d463230bae517c56e3e339fc9594c1565e),","lastModifiedDate":"2023-11-07"},{"lineNumber":73,"author":{"gitId":"yucongkoo"},"content":"  [#148](https://github.com/AY2324S1-CS2103T-W16-2/tp/pull/148/files/140747789d7932a9f5f9382bd39d56577f6c1bd7)","lastModifiedDate":"2023-11-07"},{"lineNumber":74,"author":{"gitId":"yucongkoo"},"content":"  * Contributed to forum discussions (examples: [1](https://github.com/nus-cs2103-AY2324S1/forum/issues/368#issuecomment-1801798119))","lastModifiedDate":"2023-11-09"},{"lineNumber":75,"author":{"gitId":"yucongkoo"},"content":"  * Reported bugs and suggestions for other teams in the class (examples can be found [here](https://github.com/yucongkoo/ped/issues))","lastModifiedDate":"2023-11-07"}],"authorContributionMap":{"TehOPanas":10,"yucongkoo":65}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 1, true);","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yucongkoo":1,"-":184}},{"path":"src/main/java/seedu/address/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"LamJiuFong"},"content":"        return new Image(requireNonNull(MainApp.class.getResourceAsStream(imagePath)));","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"LamJiuFong":1,"-":41}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"yucongkoo"},"content":"     * Trims the {@code input} and removes contiguous space between words.","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"yucongkoo"},"content":"    public static String trimContiguousSpaces(String input) {","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"yucongkoo"},"content":"        requireNonNull(input);","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"yucongkoo"},"content":"        String trimmedInput \u003d input.trim();","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"yucongkoo"},"content":"        // Split the input string by spaces into an array of words","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"yucongkoo"},"content":"        String[] words \u003d trimmedInput.split(\"\\\\s+\");","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"yucongkoo"},"content":"        // Join the words back together with single spaces","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"yucongkoo"},"content":"        String trimmed \u003d String.join(\" \", words);","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"yucongkoo"},"content":"        return trimmed;","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"yucongkoo"},"content":"     * Counts the number of characters in {@code input} ignoring spaces.","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"yucongkoo"},"content":"    public static int countCharactersWithoutSpaces(String input) {","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"yucongkoo"},"content":"        // Remove spaces from the input string using regular expression","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"yucongkoo"},"content":"        String stringWithoutSpaces \u003d input.replaceAll(\"\\\\s\", \"\");","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":92,"author":{"gitId":"yucongkoo"},"content":"        // Count the number of characters in the modified string","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"yucongkoo"},"content":"        int charCount \u003d stringWithoutSpaces.length();","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"yucongkoo"},"content":"        return charCount;","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yucongkoo":29,"-":68}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"TehOPanas"},"content":"import static seedu.address.model.insurance.Insurance.MAX_INSURANCE_COUNT;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.model.person.Tag.MAXIMUM_TAGS_PER_PERSON;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"LamJiuFong"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The customer index provided is invalid\";","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"LamJiuFong"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d customers listed!\";","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"LamJiuFong"},"content":"    public static final String MESSAGE_NO_PERSON_FOUND \u003d \"No customer found!\";","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"    public static final String MESSAGE_TAG_COUNT_EXCEED \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"            String.format(\"Command will cause number of tags to exceed the limit of %d.\", MAXIMUM_TAGS_PER_PERSON);","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"TehOPanas"},"content":"    public static final String MESSAGE_INSURANCE_COUNT_EXCEED \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"TehOPanas"},"content":"            String.format(\"Command will cause number of insurance to exceed the limit of %d.\", MAX_INSURANCE_COUNT);","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"    public static final String MESSAGE_PERSON_NOT_CHANGED \u003d","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"LamJiuFong"},"content":"            \"Information provided in the command does not change the targeted customer.\";","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"LamJiuFong"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This customer already exists in the address book\";","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::getDisplayMessage).collect(Collectors.toSet());","lastModifiedDate":"2023-11-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"LamJiuFong"},"content":"        builder.append(\"\\nName: \")","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"LamJiuFong"},"content":"                .append(person.getName())","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"yucongkoo"},"content":"                .append(\"    |    Phone: \")","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"yucongkoo"},"content":"                .append(\"    |    Email: \")","lastModifiedDate":"2023-11-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"LamJiuFong"},"content":"                .append(\"\\nAddress: \")","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"LamJiuFong"},"content":"                .append(\"\\nPriority: \")","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"LamJiuFong"},"content":"                .append(person.getPriority());","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"LamJiuFong"},"content":"        addTagString(builder, person);","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"LamJiuFong"},"content":"        addInsuranceString(builder, person);","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"LamJiuFong"},"content":"        addRemarkString(builder, person);","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"Jweewee"},"content":"        builder.append(\"\\nAppointment: \")","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"Jweewee"},"content":"                .append(person.getAppointment());","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"LamJiuFong"},"content":"    private static void addTagString(StringBuilder builder, Person person) {","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"LamJiuFong"},"content":"        builder.append(\"\\nTags: \");","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"LamJiuFong"},"content":"        if (person.getTagsCount() \u003d\u003d 0) {","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"LamJiuFong"},"content":"            builder.append(\"-\");","lastModifiedDate":"2023-10-30"},{"lineNumber":78,"author":{"gitId":"LamJiuFong"},"content":"        } else {","lastModifiedDate":"2023-10-30"},{"lineNumber":79,"author":{"gitId":"LamJiuFong"},"content":"            person.getTags().forEach(builder::append);","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":81,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":83,"author":{"gitId":"LamJiuFong"},"content":"    private static void addInsuranceString(StringBuilder builder, Person person) {","lastModifiedDate":"2023-10-30"},{"lineNumber":84,"author":{"gitId":"LamJiuFong"},"content":"        builder.append(\"\\nInsurances: \");","lastModifiedDate":"2023-10-30"},{"lineNumber":85,"author":{"gitId":"LamJiuFong"},"content":"        if (person.getInsurancesCount() \u003d\u003d 0) {","lastModifiedDate":"2023-10-30"},{"lineNumber":86,"author":{"gitId":"LamJiuFong"},"content":"            builder.append(\"-\");","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"LamJiuFong"},"content":"        } else {","lastModifiedDate":"2023-10-30"},{"lineNumber":88,"author":{"gitId":"LamJiuFong"},"content":"            person.getInsurances().forEach(builder::append);","lastModifiedDate":"2023-10-30"},{"lineNumber":89,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":90,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":91,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"LamJiuFong"},"content":"    private static void addRemarkString(StringBuilder builder, Person person) {","lastModifiedDate":"2023-10-30"},{"lineNumber":93,"author":{"gitId":"LamJiuFong"},"content":"        builder.append(\"\\nRemarks: \");","lastModifiedDate":"2023-10-30"},{"lineNumber":94,"author":{"gitId":"LamJiuFong"},"content":"        if (person.hasRemark()) {","lastModifiedDate":"2023-10-30"},{"lineNumber":95,"author":{"gitId":"LamJiuFong"},"content":"            builder.append(person.getRemark());","lastModifiedDate":"2023-10-30"},{"lineNumber":96,"author":{"gitId":"LamJiuFong"},"content":"        } else {","lastModifiedDate":"2023-10-30"},{"lineNumber":97,"author":{"gitId":"LamJiuFong"},"content":"            builder.append(\"-\");","lastModifiedDate":"2023-10-30"},{"lineNumber":98,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":99,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"TehOPanas":4,"yucongkoo":10,"LamJiuFong":41,"-":43,"Jweewee":2}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.commands.CommandUtil.verifyPersonInsuranceCountIsValid;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.commands.CommandUtil.verifyPersonNotInModel;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.commands.CommandUtil.verifyPersonTagCountIsValid;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INSURANCE;","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"LamJiuFong"},"content":"    public static final String MESSAGE_USAGE \u003d \"Usage: \\n\" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"TehOPanas"},"content":"            + PREFIX_NAME + \"\u003cname\u003e \"","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"TehOPanas"},"content":"            + PREFIX_PHONE + \"\u003cphone number\u003e \"","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"            + PREFIX_EMAIL + \"\u003cemail\u003e \"","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"            + \"[\" + PREFIX_ADDRESS + \"\u003caddress\u003e] \"","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"LamJiuFong"},"content":"            + \"[\" + PREFIX_PRIORITY + \"\u003cpriority\u003e] \"","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"LamJiuFong"},"content":"            + \"[\" + PREFIX_TAG + \"\u003ctag\u003e]... \"","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"LamJiuFong"},"content":"            + \"[\" + PREFIX_INSURANCE + \"\u003cinsurance\u003e]... \"","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"LamJiuFong"},"content":"            + \"[\" + PREFIX_REMARK + \"\u003cremarks\u003e]\\n\";","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"LamJiuFong"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New customer added: %1$s\";","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"     * Creates an AddCommand to add the specified {@code Person}.","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"yucongkoo"},"content":"        verifyCommandIsExecutable(model);","lastModifiedDate":"2023-10-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2023-10-29"},{"lineNumber":57,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":61,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"yucongkoo"},"content":"     * Throws a {@code CommandException} if {@code toAdd} is not a valid person to add to {@code model}.","lastModifiedDate":"2023-10-29"},{"lineNumber":63,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":64,"author":{"gitId":"yucongkoo"},"content":"    private void verifyCommandIsExecutable(Model model) throws CommandException {","lastModifiedDate":"2023-10-29"},{"lineNumber":65,"author":{"gitId":"yucongkoo"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-29"},{"lineNumber":66,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"yucongkoo"},"content":"        verifyPersonTagCountIsValid(toAdd);","lastModifiedDate":"2023-10-29"},{"lineNumber":68,"author":{"gitId":"yucongkoo"},"content":"        verifyPersonInsuranceCountIsValid(toAdd);","lastModifiedDate":"2023-10-29"},{"lineNumber":69,"author":{"gitId":"yucongkoo"},"content":"        verifyPersonNotInModel(model, toAdd);","lastModifiedDate":"2023-10-29"},{"lineNumber":70,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"TehOPanas":4,"yucongkoo":20,"LamJiuFong":7,"-":64}},{"path":"src/main/java/seedu/address/logic/commands/AppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.logic.commands.CommandUtil.getPersonAtIndex;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.logic.commands.CommandUtil.verifyPersonChanged;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_TIME;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_VENUE;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"import java.util.Optional;","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"Jweewee"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"Jweewee"},"content":" * Adds/Edits the appointment with an existing person in the address book.","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"Jweewee"},"content":"public class AppointmentCommand extends Command {","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"Jweewee"},"content":"    public static final String COMMAND_WORD \u003d \"addappt\";","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"Jweewee"},"content":"    public static final String MESSAGE_USAGE \u003d \"Usage: \\n\" + COMMAND_WORD","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"Jweewee"},"content":"            + \" \u003cindex\u003e \"","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"Jweewee"},"content":"            + PREFIX_APPOINTMENT + \"\u003cdate\u003e\"","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"Jweewee"},"content":"            + \"[\" + PREFIX_APPOINTMENT_TIME + \"\u003ctime\u003e]\"","lastModifiedDate":"2023-11-08"},{"lineNumber":32,"author":{"gitId":"Jweewee"},"content":"            + \"[\" + PREFIX_APPOINTMENT_VENUE + \"\u003cvenue\u003e]\\n\";","lastModifiedDate":"2023-11-08"},{"lineNumber":33,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"Jweewee"},"content":"    public static final String MESSAGE_ADD_APPOINTMENT_SUCCESS \u003d \"Added appointment with customer: %1$s %2$s %3$s %4$s\";","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"Jweewee"},"content":"    public static final String MESSAGE_ADD_APPOINTMENT_FAILURE_APPT_EXIST \u003d \"Appointment already exists!\";","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"Jweewee"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppointmentCommand.class);","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"Jweewee"},"content":"    private final Index index;","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"Jweewee"},"content":"    private final Appointment appointment;","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"Jweewee"},"content":"     * Constructor for an {@code AppointmentCommand}","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"Jweewee"},"content":"     * @param index index of the customer list to add appointment for","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"Jweewee"},"content":"     * @param appointment appointment scheduled with the target","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"Jweewee"},"content":"    public AppointmentCommand(Index index, Appointment appointment) {","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"Jweewee"},"content":"        requireAllNonNull(index, appointment);","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"Jweewee"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"Jweewee"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"Jweewee"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"Jweewee"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"Jweewee"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"Jweewee"},"content":"        Person personToEdit \u003d getPersonAtIndex(model, index);","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"Jweewee"},"content":"        logger.fine(\"AppointmentCommand executing...\");","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"Jweewee"},"content":"        if (!Appointment.isAppointmentEmpty(personToEdit.getAppointment())) {","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"Jweewee"},"content":"            logger.warning(\"-----Invalid Add Appointment Command: Appointment Already Exist-----\");","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"Jweewee"},"content":"            throw new CommandException(MESSAGE_ADD_APPOINTMENT_FAILURE_APPT_EXIST);","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"Jweewee"},"content":"        Person editedPerson \u003d Person.createPersonWithEditedAppointment(personToEdit, appointment);","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"yucongkoo"},"content":"        verifyPersonChanged(personToEdit, editedPerson, Optional.empty());","lastModifiedDate":"2023-11-08"},{"lineNumber":67,"author":{"gitId":"Jweewee"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"Jweewee"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"Jweewee"},"content":"        logger.info(\"-----Add Appointment Command: Appointment added successfully-----\");","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"Jweewee"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"Jweewee"},"content":"     * Generates a command execution success message when appointment has been added successfully.","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"Jweewee"},"content":"     * {@code editedPerson}.","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"Jweewee"},"content":"    private String generateSuccessMessage(Person editedPerson) {","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"Jweewee"},"content":"        return String.format(MESSAGE_ADD_APPOINTMENT_SUCCESS, editedPerson.getName().fullName,","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"Jweewee"},"content":"                editedPerson.getAppointment().getDate(),","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"Jweewee"},"content":"                editedPerson.getAppointment().getTimeFormatted(),","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"Jweewee"},"content":"                editedPerson.getAppointment().getVenue());","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"Jweewee"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"Jweewee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"Jweewee"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"Jweewee"},"content":"            return true;","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"Jweewee"},"content":"        if (!(other instanceof AppointmentCommand)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"Jweewee"},"content":"            return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"Jweewee"},"content":"        AppointmentCommand a \u003d (AppointmentCommand) other;","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"Jweewee"},"content":"        return index.equals(a.index)","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"Jweewee"},"content":"                \u0026\u0026 appointment.equals(a.appointment);","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"yucongkoo":2,"Jweewee":97}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"LamJiuFong"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"List has been cleared!\";","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LamJiuFong":1,"-":21}},{"path":"src/main/java/seedu/address/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"     * @return feedback message of the operation result for display.","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yucongkoo":1,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/CommandUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LamJiuFong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.Messages.MESSAGE_DUPLICATE_PERSON;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.Messages.MESSAGE_INSURANCE_COUNT_EXCEED;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSON_NOT_CHANGED;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.Messages.MESSAGE_TAG_COUNT_EXCEED;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.model.insurance.Insurance.MAX_INSURANCE_COUNT;","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.model.person.Tag.MAXIMUM_TAGS_PER_PERSON;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":"import java.util.List;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"import java.util.Optional;","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"LamJiuFong"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"LamJiuFong"},"content":"/** Contains utility methods for commands. **/","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"LamJiuFong"},"content":"public class CommandUtil {","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"LamJiuFong"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(CommandUtil.class);","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"LamJiuFong"},"content":"     * Returns the person from the model at a specific index.","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"LamJiuFong"},"content":"    public static Person getPersonAtIndex(Model model, Index index) throws CommandException {","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"LamJiuFong"},"content":"        requireAllNonNull(model, index);","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"LamJiuFong"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"LamJiuFong"},"content":"        assert lastShownList.size() \u003e\u003d 0 : \"Size of list should not be a negative number\";","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"LamJiuFong"},"content":"        assert index.getZeroBased() \u003e\u003d 0 : \"index.getZeroBased() should not be a negative number\";","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"LamJiuFong"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"LamJiuFong"},"content":"            logger.finer(String.format(\"Execution failed due to index %d out of bound\", index.getOneBased()));","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"LamJiuFong"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"LamJiuFong"},"content":"        Person personToUpdate \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"LamJiuFong"},"content":"        assert personToUpdate !\u003d null : \"null instance in filtered person list\";","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"LamJiuFong"},"content":"        return personToUpdate;","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"yucongkoo"},"content":"     * Throws a {@code CommandException} if {@code updatedPerson} is equal to {@code personToUpdate}.","lastModifiedDate":"2023-10-29"},{"lineNumber":50,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":51,"author":{"gitId":"yucongkoo"},"content":"    public static void verifyPersonChanged(Person personToUpdate, Person updatedPerson,","lastModifiedDate":"2023-11-08"},{"lineNumber":52,"author":{"gitId":"yucongkoo"},"content":"                                           Optional\u003cString\u003e potentialReasons) throws CommandException {","lastModifiedDate":"2023-11-08"},{"lineNumber":53,"author":{"gitId":"yucongkoo"},"content":"        requireAllNonNull(personToUpdate, updatedPerson, potentialReasons);","lastModifiedDate":"2023-11-08"},{"lineNumber":54,"author":{"gitId":"yucongkoo"},"content":"        if (personToUpdate.equals(updatedPerson)) {","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"yucongkoo"},"content":"            String reasons \u003d potentialReasons.isPresent() ? \"\\n\" + potentialReasons.get() : \"\";","lastModifiedDate":"2023-11-08"},{"lineNumber":56,"author":{"gitId":"yucongkoo"},"content":"            logger.finer(\"Command execution failed due to no changes in person.\" + reasons);","lastModifiedDate":"2023-11-08"},{"lineNumber":57,"author":{"gitId":"yucongkoo"},"content":"            throw new CommandException(MESSAGE_PERSON_NOT_CHANGED + reasons);","lastModifiedDate":"2023-11-08"},{"lineNumber":58,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":60,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":61,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"yucongkoo"},"content":"     * Throws a {@code CommandException} if the {@code person}\u0027s tag count exceeds the allowed count.","lastModifiedDate":"2023-10-29"},{"lineNumber":63,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":64,"author":{"gitId":"yucongkoo"},"content":"    public static void verifyPersonTagCountIsValid(Person person) throws CommandException {","lastModifiedDate":"2023-10-29"},{"lineNumber":65,"author":{"gitId":"yucongkoo"},"content":"        requireNonNull(person);","lastModifiedDate":"2023-10-29"},{"lineNumber":66,"author":{"gitId":"yucongkoo"},"content":"        if (person.getTagsCount() \u003e MAXIMUM_TAGS_PER_PERSON) {","lastModifiedDate":"2023-10-29"},{"lineNumber":67,"author":{"gitId":"yucongkoo"},"content":"            logger.finer(\"Command execution failed due to exceeding maximum tag counts allowed.\");","lastModifiedDate":"2023-10-29"},{"lineNumber":68,"author":{"gitId":"yucongkoo"},"content":"            throw new CommandException(MESSAGE_TAG_COUNT_EXCEED);","lastModifiedDate":"2023-10-29"},{"lineNumber":69,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":70,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":71,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":72,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":73,"author":{"gitId":"yucongkoo"},"content":"     * Throws a {@code CommandException} if the {@code person}\u0027s insurance count exceeds the allowed count.","lastModifiedDate":"2023-10-29"},{"lineNumber":74,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":75,"author":{"gitId":"yucongkoo"},"content":"    public static void verifyPersonInsuranceCountIsValid(Person person) throws CommandException {","lastModifiedDate":"2023-10-29"},{"lineNumber":76,"author":{"gitId":"yucongkoo"},"content":"        requireNonNull(person);","lastModifiedDate":"2023-10-29"},{"lineNumber":77,"author":{"gitId":"yucongkoo"},"content":"        if (person.getInsurancesCount() \u003e MAX_INSURANCE_COUNT) {","lastModifiedDate":"2023-10-29"},{"lineNumber":78,"author":{"gitId":"yucongkoo"},"content":"            logger.finer(\"Command execution failed due to exceeding maximum insurance counts allowed.\");","lastModifiedDate":"2023-10-29"},{"lineNumber":79,"author":{"gitId":"yucongkoo"},"content":"            throw new CommandException(MESSAGE_INSURANCE_COUNT_EXCEED);","lastModifiedDate":"2023-10-29"},{"lineNumber":80,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":81,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":82,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":83,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":84,"author":{"gitId":"yucongkoo"},"content":"     * Throws a {@code CommandException} if the {@code model} has the {@code person}.","lastModifiedDate":"2023-10-29"},{"lineNumber":85,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":86,"author":{"gitId":"yucongkoo"},"content":"    public static void verifyPersonNotInModel(Model model, Person person) throws CommandException {","lastModifiedDate":"2023-10-29"},{"lineNumber":87,"author":{"gitId":"yucongkoo"},"content":"        requireAllNonNull(model, person);","lastModifiedDate":"2023-10-29"},{"lineNumber":88,"author":{"gitId":"yucongkoo"},"content":"        if (model.hasPerson(person)) {","lastModifiedDate":"2023-10-29"},{"lineNumber":89,"author":{"gitId":"yucongkoo"},"content":"            logger.finer(\"Command execution failed due to person already exist in model.\");","lastModifiedDate":"2023-10-29"},{"lineNumber":90,"author":{"gitId":"yucongkoo"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-10-29"},{"lineNumber":91,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":92,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":93,"author":{"gitId":"LamJiuFong"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"yucongkoo":55,"LamJiuFong":38}},{"path":"src/main/java/seedu/address/logic/commands/DeleteAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"import java.util.List;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":" * Deletes the appointment with an existing person in the address book.","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"Jweewee"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"Jweewee"},"content":"public class DeleteAppointmentCommand extends Command {","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"Jweewee"},"content":"    public static final String COMMAND_WORD \u003d \"deleteappt\";","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"    public static final String MESSAGE_USAGE \u003d \"Usage: \\n\" + COMMAND_WORD","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"Jweewee"},"content":"            + \" \u003cindex\u003e\";","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"Jweewee"},"content":"    public static final String MESSAGE_DELETE_APPOINTMENT_SUCCESS \u003d \"Deleted appointment with %1$s\";","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"Jweewee"},"content":"    public static final String MESSAGE_DELETE_APPOINTMENT_FAILED_EMPTY_APPT \u003d \"No appointment with %1$s yet!\";","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"Jweewee"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"Jweewee"},"content":"    private final Index index;","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"Jweewee"},"content":"    private final Appointment appointment;","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"Jweewee"},"content":"     * Construct for an {@code DeleteAppointmentCommand}","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"Jweewee"},"content":"     * @param index index of the person in the filtered person list to delete the appointment","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"Jweewee"},"content":"     * @param appointment appointment scheduled with the person","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"Jweewee"},"content":"    public DeleteAppointmentCommand(Index index, Appointment appointment) {","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"Jweewee"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"Jweewee"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"Jweewee"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"Jweewee"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"Jweewee"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"Jweewee"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"Jweewee"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"Jweewee"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"Jweewee"},"content":"        Person personToDelete \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"Jweewee"},"content":"        Person updatedPerson \u003d Person.createPersonWithEditedAppointment(personToDelete, appointment);","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"Jweewee"},"content":"        String name \u003d personToDelete.getName().fullName;","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"Jweewee"},"content":"        if (Appointment.isAppointmentEmpty(personToDelete.getAppointment())) {","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"Jweewee"},"content":"            logger.warning(\"-----Invalid Delete Appointment Command: Appointment does not exist-----\");","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"Jweewee"},"content":"            throw new CommandException(String.format(MESSAGE_DELETE_APPOINTMENT_FAILED_EMPTY_APPT, name));","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"Jweewee"},"content":"        model.setPerson(personToDelete, updatedPerson);","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"Jweewee"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"Jweewee"},"content":"        logger.info(\"-----Delete Appointment Command: Appointment deleted successfully-----\");","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"Jweewee"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_APPOINTMENT_SUCCESS, name));","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"Jweewee"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"Jweewee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"Jweewee"},"content":"        // short circuit if same object","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"Jweewee"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"Jweewee"},"content":"            return true;","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"Jweewee"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"Jweewee"},"content":"        if (!(other instanceof DeleteAppointmentCommand)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"Jweewee"},"content":"            return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"Jweewee"},"content":"        // state check","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"Jweewee"},"content":"        DeleteAppointmentCommand e \u003d (DeleteAppointmentCommand) other;","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"Jweewee"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"Jweewee"},"content":"                \u0026\u0026 appointment.equals(e.appointment);","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"Jweewee":89}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"LamJiuFong"},"content":"    public static final String MESSAGE_USAGE \u003d \"Usage: \\n\" + COMMAND_WORD + \" \u003cindex\u003e\\n\";","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"LamJiuFong"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted customer: %1$s\";","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LamJiuFong":2,"-":64}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandUtil.getPersonAtIndex;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandUtil.verifyPersonChanged;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INSURANCE;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.model.person.Person.createPersonWithEditedInformation;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":16,"author":{"gitId":"LamJiuFong"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"LamJiuFong"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"LamJiuFong"},"content":"    public static final String MESSAGE_USAGE \u003d \"Usage: \\n\" + COMMAND_WORD","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"LamJiuFong"},"content":"            + \" \u003cindex\u003e \"","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"LamJiuFong"},"content":"            + \"[\" + PREFIX_NAME + \"\u003cname\u003e] \"","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"LamJiuFong"},"content":"            + \"[\" + PREFIX_PHONE + \"\u003cphone\u003e] \"","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"LamJiuFong"},"content":"            + \"[\" + PREFIX_EMAIL + \"\u003cemail\u003e] \"","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"LamJiuFong"},"content":"            + \"[\" + PREFIX_ADDRESS + \"\u003caddress\u003e]\\n\";","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"LamJiuFong"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited customer: %1$s\";","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"LamJiuFong"},"content":"    public static final String MESSAGE_EDIT_TAG_ERROR \u003d \"Cannot edit tags. \"","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"LamJiuFong"},"content":"            + \"Please use \\\"tag\\\" command to add/delete tags.\";","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"LamJiuFong"},"content":"    public static final String MESSAGE_EDIT_PRIORITY_ERROR \u003d \"Cannot edit priority. \"","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"LamJiuFong"},"content":"            + \"Please use \\\"pr\\\" command to assign new priority.\";","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"songfangyl"},"content":"    public static final String MESSAGE_EDIT_REMARK_ERROR \u003d \"Cannot edit remark. \"","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"songfangyl"},"content":"            + \"Please use \\\"remark\\\" command to modify remark.\";","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"LamJiuFong"},"content":"    public static final String MESSAGE_EDIT_INSURANCE_ERROR \u003d \"Cannot edit insurance. \"","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"LamJiuFong"},"content":"            + \"Please use \\\"insurance\\\" command to add/delete insurances.\";","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"LamJiuFong"},"content":"    /** Stores a prefix and its corresponding edit error message as a key-value pair. **/","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"LamJiuFong"},"content":"    public static final HashMap\u003cPrefix, String\u003e PREFIX_EDIT_ERROR_MESSAGE_MAP \u003d new HashMap\u003c\u003e() {","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"LamJiuFong"},"content":"        {","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"LamJiuFong"},"content":"            put(PREFIX_TAG, MESSAGE_EDIT_TAG_ERROR);","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"LamJiuFong"},"content":"            put(PREFIX_PRIORITY, MESSAGE_EDIT_PRIORITY_ERROR);","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"songfangyl"},"content":"            put(PREFIX_REMARK, MESSAGE_EDIT_REMARK_ERROR);","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"LamJiuFong"},"content":"            put(PREFIX_INSURANCE, MESSAGE_EDIT_INSURANCE_ERROR);","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"LamJiuFong"},"content":"    };","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"LamJiuFong"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(EditCommand.class);","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"LamJiuFong"},"content":"     * Constructs a new EditCommand.","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"LamJiuFong"},"content":"     * @param index of the person in the filtered person list to edit.","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"LamJiuFong"},"content":"     * @param editPersonDescriptor details to edit the person with.","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"LamJiuFong"},"content":"        logger.fine(\"EditCommand executing...\");","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"LamJiuFong"},"content":"        Person personToEdit \u003d getPersonAtIndex(model, index);","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"LamJiuFong"},"content":"        Person editedPerson \u003d createPersonWithEditedInformation(personToEdit, editPersonDescriptor);","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"yucongkoo"},"content":"        verifyPersonChanged(personToEdit, editedPerson, Optional.empty());","lastModifiedDate":"2023-11-08"},{"lineNumber":99,"author":{"gitId":"LamJiuFong"},"content":"        checkIsDuplicatePerson(model, personToEdit, editedPerson);","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"LamJiuFong"},"content":"    private void checkIsDuplicatePerson(Model model, Person personToEdit, Person editedPerson) throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"LamJiuFong"},"content":"        boolean hasDuplicateInModel \u003d !personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson);","lastModifiedDate":"2023-11-01"},{"lineNumber":108,"author":{"gitId":"LamJiuFong"},"content":"        boolean isDuplicateOfOthersInModel \u003d false;","lastModifiedDate":"2023-11-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"LamJiuFong"},"content":"        for (int i \u003d 0; i \u003c model.getFilteredPersonListSize(); i++) {","lastModifiedDate":"2023-10-31"},{"lineNumber":111,"author":{"gitId":"LamJiuFong"},"content":"            Person personAtIndex \u003d getPersonAtIndex(model, Index.fromZeroBased(i));","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"LamJiuFong"},"content":"            if (i !\u003d index.getZeroBased() \u0026\u0026 editedPerson.isSamePerson(personAtIndex)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":113,"author":{"gitId":"LamJiuFong"},"content":"                isDuplicateOfOthersInModel \u003d true;","lastModifiedDate":"2023-11-01"},{"lineNumber":114,"author":{"gitId":"LamJiuFong"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":115,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":117,"author":{"gitId":"LamJiuFong"},"content":"        if (hasDuplicateInModel || isDuplicateOfOthersInModel) {","lastModifiedDate":"2023-11-01"},{"lineNumber":118,"author":{"gitId":"LamJiuFong"},"content":"            logger.finer(\"EditCommand execution failed due to duplicated persons in list\");","lastModifiedDate":"2023-10-31"},{"lineNumber":119,"author":{"gitId":"LamJiuFong"},"content":"            throw new CommandException(Messages.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-10-31"},{"lineNumber":120,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"LamJiuFong"},"content":"            requireNonNull(toCopy);","lastModifiedDate":"2023-10-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"LamJiuFong"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address);","lastModifiedDate":"2023-10-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":224,"author":{"gitId":"LamJiuFong"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address);","lastModifiedDate":"2023-10-18"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":237,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"songfangyl":4,"yucongkoo":1,"LamJiuFong":57,"-":175}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting EzContact as requested ...\";","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"LamJiuFong":1,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.predicate.PersonContainsKeywordsPredicate;","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"            \"Usage: \\n\"","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"            + COMMAND_WORD + \" [n/[keywords]] [p/[keywords]] [e/[keywords]] \"","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"            + \"[a/[keywords]] [t/[keywords]] [i/[keywords]] [pr/[keywords]] [r/[keywords]]\\n\";","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(FindCommand.class);","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"    private final PersonContainsKeywordsPredicate predicate;","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"    public FindCommand(PersonContainsKeywordsPredicate predicate) {","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"        logger.fine(\"FindCommand executing...\");","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"songfangyl"},"content":"        if (model.getFilteredPersonList().size() \u003d\u003d 0) {","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"songfangyl"},"content":"            return new CommandResult(Messages.MESSAGE_NO_PERSON_FOUND);","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"songfangyl":18,"-":49}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":"    public static final String MESSAGE_USAGE \u003d \"Usage:\\n\" + COMMAND_WORD + \" (no parameters)\\n\";","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LamJiuFong":1,"-":19}},{"path":"src/main/java/seedu/address/logic/commands/InsuranceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TehOPanas"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"TehOPanas"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"TehOPanas"},"content":"import static seedu.address.logic.Messages.MESSAGE_INSURANCE_COUNT_EXCEED;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"TehOPanas"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_INSURANCE;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"TehOPanas"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DELETE_INSURANCE;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"TehOPanas"},"content":"import static seedu.address.model.insurance.Insurance.MAX_INSURANCE_COUNT;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"TehOPanas"},"content":"import static seedu.address.model.person.Person.createPersonWithUpdatedInsurances;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"TehOPanas"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"TehOPanas"},"content":"import java.util.List;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"import java.util.Optional;","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"TehOPanas"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"TehOPanas"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"TehOPanas"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"TehOPanas"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"TehOPanas"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"TehOPanas"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"TehOPanas"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"TehOPanas"},"content":"import seedu.address.model.insurance.Insurance;","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"TehOPanas"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"TehOPanas"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"TehOPanas"},"content":" * Parse input argument and create InsuranceCommand Object","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"TehOPanas"},"content":" *","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"TehOPanas"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"TehOPanas"},"content":"public class InsuranceCommand extends Command {","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"TehOPanas"},"content":"    public static final String COMMAND_WORD \u003d \"insurance\";","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"LamJiuFong"},"content":"    public static final String MESSAGE_USAGE \u003d \"Usage: \\n\" + COMMAND_WORD","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"LamJiuFong"},"content":"            + \" \u003cindex\u003e \"","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"LamJiuFong"},"content":"            + \"[\" + PREFIX_ADD_INSURANCE + \"\u003cinsurance_to_add\u003e]... \"","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"LamJiuFong"},"content":"            + \"[\" + PREFIX_DELETE_INSURANCE + \"\u003cinsurance_to_delete\u003e]...\\n\";","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"LamJiuFong"},"content":"    public static final String MESSAGE_INSURANCE_PERSON_SUCCESS \u003d \"Update insurance of customer: %s\";","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"TehOPanas"},"content":"    public static final String MESSAGE_INSURANCE_NO_UPDATE \u003d \"There has to be at least one insurance updated/deleted.\";","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"TehOPanas"},"content":"    public static final String MESSAGE_INSURANCE_CONFLICT \u003d \"Should not assign and remove the same insurance.\";","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"    public static final String MESSAGE_INSURANCE_UNCHANGED_REASONS \u003d","lastModifiedDate":"2023-11-08"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"            \"(Possible reason: only adding insurances that already exist and/or deleting insurances that do not exist)\";","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":46,"author":{"gitId":"TehOPanas"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(InsuranceCommand.class);","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"TehOPanas"},"content":"    private Index index;","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"TehOPanas"},"content":"    private UpdatePersonInsuranceDescriptor updatePersonInsuranceDescriptor;","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"TehOPanas"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"TehOPanas"},"content":"     * Instantiate {@code InsuranceCommmand}","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"TehOPanas"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"TehOPanas"},"content":"    public InsuranceCommand(Index i, UpdatePersonInsuranceDescriptor u) {","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"TehOPanas"},"content":"        requireAllNonNull(i, u);","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"TehOPanas"},"content":"        assert u.hasInsuranceToUpdate() : \"It should have insurance to update\";","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"TehOPanas"},"content":"        this.index \u003d i;","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"TehOPanas"},"content":"        this.updatePersonInsuranceDescriptor \u003d u;","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"TehOPanas"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"TehOPanas"},"content":"     * Assigns an insurance to a customer identified by index","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"TehOPanas"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"TehOPanas"},"content":"     * @param m {@code Model} which the command should operate on.","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"TehOPanas"},"content":"     * @return {@code CommandResult} for Ui component to display","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"TehOPanas"},"content":"     * @throws CommandException when index is out of bound or maximum amount of insurance is exceeded","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"TehOPanas"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"TehOPanas"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"TehOPanas"},"content":"    public CommandResult execute(Model m) throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"TehOPanas"},"content":"        requireAllNonNull(m);","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"TehOPanas"},"content":"        List\u003cPerson\u003e personList \u003d m.getFilteredPersonList();","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"TehOPanas"},"content":"        if (index.getZeroBased() \u003e\u003d personList.size()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"TehOPanas"},"content":"            logger.finer(String.format(\"InsuranceCommand execution failed due to index %d out of bound\",","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"TehOPanas"},"content":"                    index.getOneBased()));","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"TehOPanas"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"TehOPanas"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"TehOPanas"},"content":"        assert index.getZeroBased() \u003c personList.size() : \"index \u003c listSize\";","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":83,"author":{"gitId":"TehOPanas"},"content":"        if (updatePersonInsuranceDescriptor.hasCommonInsurance()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"TehOPanas"},"content":"            throw new CommandException(MESSAGE_INSURANCE_CONFLICT);","lastModifiedDate":"2023-10-30"},{"lineNumber":85,"author":{"gitId":"TehOPanas"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"TehOPanas"},"content":"        Person personToUpdate \u003d personList.get(index.getZeroBased());","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"TehOPanas"},"content":"        Person updatedPerson \u003d createPersonWithUpdatedInsurances(personToUpdate,","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"TehOPanas"},"content":"                updatePersonInsuranceDescriptor.insurancesToAdd,","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"TehOPanas"},"content":"                updatePersonInsuranceDescriptor.insurancesToDelete);","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"TehOPanas"},"content":"        if (updatedPerson.getInsurancesCount() \u003e MAX_INSURANCE_COUNT) {","lastModifiedDate":"2023-10-30"},{"lineNumber":93,"author":{"gitId":"TehOPanas"},"content":"            logger.finer(\"InsuranceCommand execution failed due to exceeding maximum insurance counts allowed\");","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"TehOPanas"},"content":"            throw new CommandException(MESSAGE_INSURANCE_COUNT_EXCEED);","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"TehOPanas"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"TehOPanas"},"content":"        requireAllNonNull(personToUpdate, updatedPerson);","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"yucongkoo"},"content":"        CommandUtil.verifyPersonChanged(personToUpdate, updatedPerson,","lastModifiedDate":"2023-11-08"},{"lineNumber":99,"author":{"gitId":"yucongkoo"},"content":"                Optional.of(MESSAGE_INSURANCE_UNCHANGED_REASONS));","lastModifiedDate":"2023-11-08"},{"lineNumber":100,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"TehOPanas"},"content":"        m.setPerson(personToUpdate, updatedPerson);","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"TehOPanas"},"content":"        return new CommandResult(String.format(MESSAGE_INSURANCE_PERSON_SUCCESS, Messages.format(updatedPerson)));","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"TehOPanas"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"TehOPanas"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"TehOPanas"},"content":"        if (!(other instanceof InsuranceCommand)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"TehOPanas"},"content":"            return false;","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"TehOPanas"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"TehOPanas"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"TehOPanas"},"content":"            return true;","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"TehOPanas"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"TehOPanas"},"content":"        InsuranceCommand temp \u003d (InsuranceCommand) other;","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"TehOPanas"},"content":"        return this.index.equals(temp.index)","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"TehOPanas"},"content":"                \u0026\u0026 this.updatePersonInsuranceDescriptor.equals(temp.updatePersonInsuranceDescriptor);","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":122,"author":{"gitId":"TehOPanas"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":123,"author":{"gitId":"TehOPanas"},"content":"     * Wrapper class to hold the changes to insurance of a customer","lastModifiedDate":"2023-10-27"},{"lineNumber":124,"author":{"gitId":"TehOPanas"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":125,"author":{"gitId":"TehOPanas"},"content":"    public static class UpdatePersonInsuranceDescriptor {","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"TehOPanas"},"content":"        private Set\u003cInsurance\u003e insurancesToAdd;","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"TehOPanas"},"content":"        private Set\u003cInsurance\u003e insurancesToDelete;","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"TehOPanas"},"content":"        /**","lastModifiedDate":"2023-10-27"},{"lineNumber":131,"author":{"gitId":"TehOPanas"},"content":"         * Instantiate {@code UpdatePersonInsuranceDescriptor}","lastModifiedDate":"2023-10-27"},{"lineNumber":132,"author":{"gitId":"TehOPanas"},"content":"         */","lastModifiedDate":"2023-10-27"},{"lineNumber":133,"author":{"gitId":"TehOPanas"},"content":"        public UpdatePersonInsuranceDescriptor(Set\u003cInsurance\u003e toAdd, Set\u003cInsurance\u003e toDelete) {","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"TehOPanas"},"content":"            this.insurancesToAdd \u003d toAdd;","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"TehOPanas"},"content":"            this.insurancesToDelete \u003d toDelete;","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"TehOPanas"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":138,"author":{"gitId":"TehOPanas"},"content":"        public Set\u003cInsurance\u003e getInsurancesToAdd() {","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"TehOPanas"},"content":"            return insurancesToAdd;","lastModifiedDate":"2023-10-26"},{"lineNumber":140,"author":{"gitId":"TehOPanas"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":141,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":142,"author":{"gitId":"TehOPanas"},"content":"        public Set\u003cInsurance\u003e getInsurancesToDelete() {","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"TehOPanas"},"content":"            return insurancesToDelete;","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"TehOPanas"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"TehOPanas"},"content":"        public void setInsurancesToAdd(Insurance i) {","lastModifiedDate":"2023-10-30"},{"lineNumber":147,"author":{"gitId":"TehOPanas"},"content":"            this.insurancesToAdd.add(i);","lastModifiedDate":"2023-10-30"},{"lineNumber":148,"author":{"gitId":"TehOPanas"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":149,"author":{"gitId":"TehOPanas"},"content":"        public void setInsurancesToDelete(Insurance i) {","lastModifiedDate":"2023-10-30"},{"lineNumber":150,"author":{"gitId":"TehOPanas"},"content":"            this.insurancesToDelete.add(i);","lastModifiedDate":"2023-10-30"},{"lineNumber":151,"author":{"gitId":"TehOPanas"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":152,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":153,"author":{"gitId":"TehOPanas"},"content":"        /**","lastModifiedDate":"2023-10-27"},{"lineNumber":154,"author":{"gitId":"TehOPanas"},"content":"         * Checks for common insurance between add and delete sets","lastModifiedDate":"2023-10-27"},{"lineNumber":155,"author":{"gitId":"TehOPanas"},"content":"         *","lastModifiedDate":"2023-10-27"},{"lineNumber":156,"author":{"gitId":"TehOPanas"},"content":"         * @return false if there is no common insurance","lastModifiedDate":"2023-10-27"},{"lineNumber":157,"author":{"gitId":"TehOPanas"},"content":"         */","lastModifiedDate":"2023-10-27"},{"lineNumber":158,"author":{"gitId":"TehOPanas"},"content":"        public boolean hasCommonInsurance() {","lastModifiedDate":"2023-10-26"},{"lineNumber":159,"author":{"gitId":"TehOPanas"},"content":"            Set\u003cInsurance\u003e intersection \u003d new HashSet\u003c\u003e(insurancesToAdd);","lastModifiedDate":"2023-10-26"},{"lineNumber":160,"author":{"gitId":"TehOPanas"},"content":"            intersection.retainAll(insurancesToDelete);","lastModifiedDate":"2023-10-26"},{"lineNumber":161,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":162,"author":{"gitId":"TehOPanas"},"content":"            return !intersection.isEmpty();","lastModifiedDate":"2023-10-26"},{"lineNumber":163,"author":{"gitId":"TehOPanas"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":164,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":165,"author":{"gitId":"TehOPanas"},"content":"        /**","lastModifiedDate":"2023-10-27"},{"lineNumber":166,"author":{"gitId":"TehOPanas"},"content":"         * Checks for available insurance to modify","lastModifiedDate":"2023-10-27"},{"lineNumber":167,"author":{"gitId":"TehOPanas"},"content":"         *","lastModifiedDate":"2023-10-27"},{"lineNumber":168,"author":{"gitId":"TehOPanas"},"content":"         * @return true if there exist insurance to add or delete","lastModifiedDate":"2023-10-27"},{"lineNumber":169,"author":{"gitId":"TehOPanas"},"content":"         */","lastModifiedDate":"2023-10-27"},{"lineNumber":170,"author":{"gitId":"TehOPanas"},"content":"        public boolean hasInsuranceToUpdate() {","lastModifiedDate":"2023-10-26"},{"lineNumber":171,"author":{"gitId":"TehOPanas"},"content":"            return !(insurancesToAdd.isEmpty() \u0026\u0026 insurancesToDelete.isEmpty());","lastModifiedDate":"2023-10-26"},{"lineNumber":172,"author":{"gitId":"TehOPanas"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":173,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":174,"author":{"gitId":"TehOPanas"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":175,"author":{"gitId":"TehOPanas"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-10-26"},{"lineNumber":176,"author":{"gitId":"TehOPanas"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-26"},{"lineNumber":177,"author":{"gitId":"TehOPanas"},"content":"                return true;","lastModifiedDate":"2023-10-26"},{"lineNumber":178,"author":{"gitId":"TehOPanas"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":179,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":180,"author":{"gitId":"TehOPanas"},"content":"            if (!(other instanceof UpdatePersonInsuranceDescriptor)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":181,"author":{"gitId":"TehOPanas"},"content":"                return false;","lastModifiedDate":"2023-10-26"},{"lineNumber":182,"author":{"gitId":"TehOPanas"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":183,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":184,"author":{"gitId":"TehOPanas"},"content":"            UpdatePersonInsuranceDescriptor temp \u003d (UpdatePersonInsuranceDescriptor) other;","lastModifiedDate":"2023-10-26"},{"lineNumber":185,"author":{"gitId":"TehOPanas"},"content":"            return this.insurancesToAdd.equals(temp.insurancesToAdd)","lastModifiedDate":"2023-10-26"},{"lineNumber":186,"author":{"gitId":"TehOPanas"},"content":"                    \u0026\u0026 this.insurancesToDelete.equals(temp.insurancesToDelete);","lastModifiedDate":"2023-10-26"},{"lineNumber":187,"author":{"gitId":"TehOPanas"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":188,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":189,"author":{"gitId":"TehOPanas"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"TehOPanas":178,"yucongkoo":6,"LamJiuFong":5}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all %1$d customer(s)\";","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":"    public static final String MESSAGE_USAGE \u003d \"Usage: \"","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"LamJiuFong"},"content":"            + COMMAND_WORD + \" (no parameters)\\n\";","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, model.getFilteredPersonListSize()));","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LamJiuFong":1,"-":22,"Jweewee":3}},{"path":"src/main/java/seedu/address/logic/commands/MarkAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.logic.commands.CommandUtil.getPersonAtIndex;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.logic.commands.CommandUtil.verifyPersonChanged;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"import java.util.Optional;","lastModifiedDate":"2023-11-08"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"Jweewee"},"content":" * Marks the appointment with an existing person in the address book.","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"Jweewee"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":"public class MarkAppointmentCommand extends Command {","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"Jweewee"},"content":"    public static final String COMMAND_WORD \u003d \"markappt\";","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"    public static final String MESSAGE_USAGE \u003d \"Usage: \\n\" + COMMAND_WORD","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"Jweewee"},"content":"            + \" \u003cindex\u003e\";","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"Jweewee"},"content":"    public static final String MESSAGE_MARK_APPOINTMENT_SUCCESS \u003d \"Marked an appointment with \"","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"Jweewee"},"content":"            + \"%1$s %2$s %3$s %4$s\";","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"Jweewee"},"content":"    public static final String MESSAGE_MARK_APPOINTMENT_FAILURE_EMPTY_APPT \u003d \"No appointment exists!\";","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"Jweewee"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MarkAppointmentCommand.class);","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"Jweewee"},"content":"    private final Index index;","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"Jweewee"},"content":"    private final Appointment appointment;","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"Jweewee"},"content":"     * Construct for an {@code MarkAppointmentCommand}","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"Jweewee"},"content":"     * @param index index of the person in the filtered person list to mark the appointment as completed","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"Jweewee"},"content":"     * @param appointment the existing appointment that has been completed","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"Jweewee"},"content":"    public MarkAppointmentCommand(Index index, Appointment appointment) {","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"Jweewee"},"content":"        requireAllNonNull(index, appointment);","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"Jweewee"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"Jweewee"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"Jweewee"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"Jweewee"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"Jweewee"},"content":"        Person personToEdit \u003d getPersonAtIndex(model, index);","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"Jweewee"},"content":"        if (Appointment.isAppointmentEmpty(personToEdit.getAppointment())) {","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"Jweewee"},"content":"            logger.warning(\"-----Invalid Mark Appointment Command: Appointment does not exist-----\");","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"Jweewee"},"content":"            throw new CommandException(MESSAGE_MARK_APPOINTMENT_FAILURE_EMPTY_APPT);","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"Jweewee"},"content":"        Person editedPerson \u003d Person.createPersonWithIncreasedCount(personToEdit,","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"Jweewee"},"content":"                appointment, personToEdit.getAppointmentCount());","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"yucongkoo"},"content":"        verifyPersonChanged(personToEdit, editedPerson, Optional.empty());","lastModifiedDate":"2023-11-08"},{"lineNumber":61,"author":{"gitId":"Jweewee"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"Jweewee"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"Jweewee"},"content":"        logger.info(\"-----Mark Appointment Command: Appointment marked successfully-----\");","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"Jweewee"},"content":"        return new CommandResult(generateSuccessMessage(personToEdit));","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"Jweewee"},"content":"     * Generates a command execution success message when the appointment is marked as completed successfully.","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"Jweewee"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"Jweewee"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"Jweewee"},"content":"        return String.format(MESSAGE_MARK_APPOINTMENT_SUCCESS, personToEdit.getName().fullName,","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"Jweewee"},"content":"                personToEdit.getAppointment().getDate(),","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"Jweewee"},"content":"                personToEdit.getAppointment().getTimeFormatted(),","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"Jweewee"},"content":"                personToEdit.getAppointment().getVenue());","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"Jweewee"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"Jweewee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"Jweewee"},"content":"        // short circuit if same object","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"Jweewee"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"Jweewee"},"content":"            return true;","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"Jweewee"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"Jweewee"},"content":"        if (!(other instanceof MarkAppointmentCommand)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"Jweewee"},"content":"            return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"Jweewee"},"content":"        // state check","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"Jweewee"},"content":"        MarkAppointmentCommand e \u003d (MarkAppointmentCommand) other;","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"Jweewee"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"Jweewee"},"content":"                \u0026\u0026 appointment.equals(e.appointment);","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"yucongkoo":2,"Jweewee":95}},{"path":"src/main/java/seedu/address/logic/commands/PriorityCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LamJiuFong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"LamJiuFong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSON_NOT_CHANGED;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandUtil.getPersonAtIndex;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.model.person.Person.createPersonWithUpdatedPriority;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"LamJiuFong"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.priority.Priority;","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"LamJiuFong"},"content":"/** Assigns priority to a person. **/","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"LamJiuFong"},"content":"public class PriorityCommand extends Command {","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"LamJiuFong"},"content":"    public static final String COMMAND_WORD \u003d \"priority\";","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"LamJiuFong"},"content":"    public static final String MESSAGE_USAGE \u003d \"Usage: \\n\" + COMMAND_WORD","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"LamJiuFong"},"content":"            + \" \u003cindex\u003e \"","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"LamJiuFong"},"content":"            + \"\u003cpriority\u003e\\n\";","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"LamJiuFong"},"content":"    public static final String MESSAGE_ASSIGN_PRIORITY_SUCCESS \u003d \"Updated priority of customer: %1$s\";","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"LamJiuFong"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(PriorityCommand.class);","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"LamJiuFong"},"content":"    private final Index index;","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"LamJiuFong"},"content":"    private final Priority priority;","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"LamJiuFong"},"content":"     * Constructs a PriorityCommand.","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"LamJiuFong"},"content":"     * @param index of the person in the filtered list to assign priority to.","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"LamJiuFong"},"content":"     * @param priority assigned to the person.","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"LamJiuFong"},"content":"    public PriorityCommand(Index index, Priority priority) {","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"LamJiuFong"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"LamJiuFong"},"content":"        requireNonNull(priority);","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"LamJiuFong"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"LamJiuFong"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"LamJiuFong"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"LamJiuFong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"LamJiuFong"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"LamJiuFong"},"content":"        logger.fine(\"PriorityCommand executing...\");","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"LamJiuFong"},"content":"        Person personToUpdate \u003d getPersonAtIndex(model, index);","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"LamJiuFong"},"content":"        Person updatedPerson \u003d createPersonWithUpdatedPriority(personToUpdate, priority);","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"LamJiuFong"},"content":"        checkIsOldPriority(personToUpdate);","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"LamJiuFong"},"content":"        model.setPerson(personToUpdate, updatedPerson);","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"LamJiuFong"},"content":"        return new CommandResult(String.format(MESSAGE_ASSIGN_PRIORITY_SUCCESS, Messages.format(updatedPerson)));","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"LamJiuFong"},"content":"    private void checkIsOldPriority(Person personToUpdate) throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"LamJiuFong"},"content":"        if (personToUpdate.hasSamePriority(priority)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"LamJiuFong"},"content":"            logger.finer(\"Executing failed due to provided priority is the same as previously assigned priority\");","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"yucongkoo"},"content":"            throw new CommandException(MESSAGE_PERSON_NOT_CHANGED);","lastModifiedDate":"2023-10-29"},{"lineNumber":68,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"LamJiuFong"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":72,"author":{"gitId":"LamJiuFong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-23"},{"lineNumber":73,"author":{"gitId":"LamJiuFong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"LamJiuFong"},"content":"            return true;","lastModifiedDate":"2023-10-23"},{"lineNumber":75,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"LamJiuFong"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-23"},{"lineNumber":78,"author":{"gitId":"LamJiuFong"},"content":"        if (!(other instanceof PriorityCommand)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"LamJiuFong"},"content":"            return false;","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":81,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"LamJiuFong"},"content":"        PriorityCommand otherPriorityCommand \u003d (PriorityCommand) other;","lastModifiedDate":"2023-10-23"},{"lineNumber":83,"author":{"gitId":"LamJiuFong"},"content":"        return priority.equals(otherPriorityCommand.priority) \u0026\u0026 index.equals(otherPriorityCommand.index);","lastModifiedDate":"2023-10-23"},{"lineNumber":84,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":85,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":86,"author":{"gitId":"LamJiuFong"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":87,"author":{"gitId":"LamJiuFong"},"content":"    public String toString() {","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"LamJiuFong"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"LamJiuFong"},"content":"                .add(\"priority\", priority)","lastModifiedDate":"2023-10-23"},{"lineNumber":90,"author":{"gitId":"LamJiuFong"},"content":"                .toString();","lastModifiedDate":"2023-10-23"},{"lineNumber":91,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":92,"author":{"gitId":"LamJiuFong"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"yucongkoo":2,"LamJiuFong":90}},{"path":"src/main/java/seedu/address/logic/commands/RemarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"import java.util.List;","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"import java.util.Optional;","lastModifiedDate":"2023-11-08"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-09-27"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-09-27"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-09-27"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"/**","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":" * Remark a person.","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":" */","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2023-09-27"},{"lineNumber":25,"author":{"gitId":"LamJiuFong"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to customer: %1$s\";","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"LamJiuFong"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from customer: %1$s\";","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"LamJiuFong"},"content":"    public static final String MESSAGE_USAGE \u003d \"Usage: \\n\" + COMMAND_WORD","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"LamJiuFong"},"content":"            + \" \u003cindex\u003e \"","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"            + \"[remarks]\\n\";","lastModifiedDate":"2023-11-08"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(RemarkCommand.class);","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"    private final Index index;","lastModifiedDate":"2023-09-27"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"    private final Remark remark;","lastModifiedDate":"2023-09-27"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":37,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":38,"author":{"gitId":"songfangyl"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2023-09-27"},{"lineNumber":39,"author":{"gitId":"songfangyl"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2023-09-27"},{"lineNumber":40,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":41,"author":{"gitId":"songfangyl"},"content":"    public RemarkCommand(Index index, Remark remark) {","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"songfangyl"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2023-09-27"},{"lineNumber":43,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":44,"author":{"gitId":"songfangyl"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-09-27"},{"lineNumber":45,"author":{"gitId":"songfangyl"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":47,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-09-27"},{"lineNumber":48,"author":{"gitId":"songfangyl"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-09-27"},{"lineNumber":49,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"songfangyl"},"content":"        logger.fine(\"RemarkCommand executing...\");","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"songfangyl"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-09-27"},{"lineNumber":53,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":54,"author":{"gitId":"songfangyl"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-09-27"},{"lineNumber":55,"author":{"gitId":"songfangyl"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-09-27"},{"lineNumber":56,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":57,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":58,"author":{"gitId":"songfangyl"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-09-27"},{"lineNumber":59,"author":{"gitId":"songfangyl"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2023-09-27"},{"lineNumber":60,"author":{"gitId":"songfangyl"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2023-09-27"},{"lineNumber":61,"author":{"gitId":"TehOPanas"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags(), personToEdit.getInsurances(),","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"Jweewee"},"content":"                personToEdit.getAppointment(), personToEdit.getAppointmentCount(), personToEdit.getPriority());","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":64,"author":{"gitId":"yucongkoo"},"content":"        CommandUtil.verifyPersonChanged(personToEdit, editedPerson, Optional.empty());","lastModifiedDate":"2023-11-08"},{"lineNumber":65,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":66,"author":{"gitId":"songfangyl"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2023-09-27"},{"lineNumber":67,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":68,"author":{"gitId":"songfangyl"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2023-09-27"},{"lineNumber":69,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":70,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":71,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":72,"author":{"gitId":"songfangyl"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2023-09-27"},{"lineNumber":73,"author":{"gitId":"songfangyl"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2023-09-27"},{"lineNumber":74,"author":{"gitId":"songfangyl"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2023-09-27"},{"lineNumber":75,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":76,"author":{"gitId":"songfangyl"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2023-09-27"},{"lineNumber":77,"author":{"gitId":"songfangyl"},"content":"        String message \u003d !remark.toString().isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"LamJiuFong"},"content":"        return String.format(message, Messages.format(personToEdit));","lastModifiedDate":"2023-10-30"},{"lineNumber":79,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":80,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":81,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-09-27"},{"lineNumber":82,"author":{"gitId":"songfangyl"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-09-27"},{"lineNumber":83,"author":{"gitId":"songfangyl"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-09-27"},{"lineNumber":84,"author":{"gitId":"songfangyl"},"content":"            return true;","lastModifiedDate":"2023-09-27"},{"lineNumber":85,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":86,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":87,"author":{"gitId":"songfangyl"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-09-27"},{"lineNumber":88,"author":{"gitId":"songfangyl"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2023-09-27"},{"lineNumber":89,"author":{"gitId":"songfangyl"},"content":"            return false;","lastModifiedDate":"2023-09-27"},{"lineNumber":90,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":91,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":92,"author":{"gitId":"songfangyl"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2023-09-27"},{"lineNumber":93,"author":{"gitId":"songfangyl"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-09-27"},{"lineNumber":94,"author":{"gitId":"songfangyl"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2023-09-27"},{"lineNumber":95,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":96,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"TehOPanas":1,"songfangyl":86,"yucongkoo":3,"LamJiuFong":5,"Jweewee":1}},{"path":"src/main/java/seedu/address/logic/commands/TagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandUtil.getPersonAtIndex;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.commands.CommandUtil.verifyPersonChanged;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.commands.CommandUtil.verifyPersonTagCountIsValid;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_TAG;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DELETE_TAG;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.model.person.Person.createPersonWithUpdatedTags;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"import java.util.Optional;","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":" * Adds or deletes tags of a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"public class TagCommand extends Command {","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"    public static final String COMMAND_WORD \u003d \"tag\";","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"LamJiuFong"},"content":"    public static final String MESSAGE_USAGE \u003d \"Usage: \\n\" + COMMAND_WORD","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"LamJiuFong"},"content":"            + \" \u003cindex\u003e \"","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"LamJiuFong"},"content":"            + \"[\" + PREFIX_ADD_TAG + \"\u003ctag_to_add\u003e]... \"","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"LamJiuFong"},"content":"            + \"[\" + PREFIX_DELETE_TAG + \"\u003ctag_to_delete\u003e]...\\n\";","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"LamJiuFong"},"content":"    public static final String MESSAGE_TAG_PERSON_SUCCESS \u003d \"Updated tag of customer: %s\";","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"    public static final String MESSAGE_NOT_UPDATED \u003d \"At least one tag to add or delete must be provided.\";","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"    public static final String MESSAGE_COMMON_TAG_FAILURE \u003d \"Should not add and delete the same tag.\";","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"    public static final String MESSAGE_TAG_UNCHANGED_REASONS \u003d","lastModifiedDate":"2023-11-08"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"            \"(Possible reason: only adding tags that already exist and/or deleting tags that do not exist)\";","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(TagCommand.class);","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"    private final Index index;","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"    private final UpdatePersonTagsDescriptor updatePersonTagsDescriptor;","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"     * Constructs a Tag Command.","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"yucongkoo"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"yucongkoo"},"content":"     * @param index of the person in the filtered person list to tag.","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"yucongkoo"},"content":"     * @param updatePersonTagsDescriptor containing details of tags to update.","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"yucongkoo"},"content":"    public TagCommand(Index index, UpdatePersonTagsDescriptor updatePersonTagsDescriptor) {","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"yucongkoo"},"content":"        requireAllNonNull(index, updatePersonTagsDescriptor);","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"yucongkoo"},"content":"        assert updatePersonTagsDescriptor.hasTagToUpdate()","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"yucongkoo"},"content":"                : \"TagCommand expects an updatePersonTagsDescriptor that has tags to be updated\";","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"yucongkoo"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"yucongkoo"},"content":"        this.updatePersonTagsDescriptor \u003d new UpdatePersonTagsDescriptor(updatePersonTagsDescriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"yucongkoo"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"yucongkoo"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"yucongkoo"},"content":"        logger.fine(\"TagCommand executing...\");","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"yucongkoo"},"content":"        verifyCommandIsExecutable(model);","lastModifiedDate":"2023-10-29"},{"lineNumber":69,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"LamJiuFong"},"content":"        Person personToUpdate \u003d getPersonAtIndex(model, index);","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"yucongkoo"},"content":"        Person updatedPerson \u003d createPersonWithUpdatedTags(personToUpdate,","lastModifiedDate":"2023-10-20"},{"lineNumber":72,"author":{"gitId":"yucongkoo"},"content":"                updatePersonTagsDescriptor.getTagsToAdd(),","lastModifiedDate":"2023-10-20"},{"lineNumber":73,"author":{"gitId":"yucongkoo"},"content":"                updatePersonTagsDescriptor.getTagsToDelete());","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"yucongkoo"},"content":"        requireAllNonNull(personToUpdate, updatedPerson);","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"yucongkoo"},"content":"        verifyPersonChanged(personToUpdate, updatedPerson, Optional.of(MESSAGE_TAG_UNCHANGED_REASONS));","lastModifiedDate":"2023-11-08"},{"lineNumber":77,"author":{"gitId":"yucongkoo"},"content":"        verifyPersonTagCountIsValid(updatedPerson);","lastModifiedDate":"2023-10-29"},{"lineNumber":78,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":79,"author":{"gitId":"yucongkoo"},"content":"        model.setPerson(personToUpdate, updatedPerson);","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":81,"author":{"gitId":"yucongkoo"},"content":"        return new CommandResult(String.format(MESSAGE_TAG_PERSON_SUCCESS, Messages.format(updatedPerson)));","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":85,"author":{"gitId":"yucongkoo"},"content":"     * Throws a {@code CommandException} if the command is not executable.","lastModifiedDate":"2023-10-29"},{"lineNumber":86,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":87,"author":{"gitId":"yucongkoo"},"content":"    private void verifyCommandIsExecutable(Model model) throws CommandException {","lastModifiedDate":"2023-10-29"},{"lineNumber":88,"author":{"gitId":"yucongkoo"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-29"},{"lineNumber":89,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":90,"author":{"gitId":"yucongkoo"},"content":"        if (updatePersonTagsDescriptor.containsCommonTagToAddAndDelete()) {","lastModifiedDate":"2023-10-29"},{"lineNumber":91,"author":{"gitId":"yucongkoo"},"content":"            logger.finer(\"TagCommand execution failed due to common tag in add and delete\");","lastModifiedDate":"2023-10-29"},{"lineNumber":92,"author":{"gitId":"yucongkoo"},"content":"            throw new CommandException(MESSAGE_COMMON_TAG_FAILURE);","lastModifiedDate":"2023-10-29"},{"lineNumber":93,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":94,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":95,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":96,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":97,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"yucongkoo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"yucongkoo"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"yucongkoo"},"content":"            return true;","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"yucongkoo"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"yucongkoo"},"content":"        if (!(other instanceof TagCommand)) {","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"yucongkoo"},"content":"            return false;","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"yucongkoo"},"content":"        TagCommand otherTagCommand \u003d (TagCommand) other;","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"yucongkoo"},"content":"        return index.equals(otherTagCommand.index)","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"yucongkoo"},"content":"                \u0026\u0026 updatePersonTagsDescriptor.equals(otherTagCommand.updatePersonTagsDescriptor);","lastModifiedDate":"2023-10-20"},{"lineNumber":111,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":112,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":113,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":114,"author":{"gitId":"yucongkoo"},"content":"     * Stores the information of tags to add to and tags to delete from a person.","lastModifiedDate":"2023-10-20"},{"lineNumber":115,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":116,"author":{"gitId":"yucongkoo"},"content":"    public static class UpdatePersonTagsDescriptor {","lastModifiedDate":"2023-10-20"},{"lineNumber":117,"author":{"gitId":"yucongkoo"},"content":"        private Set\u003cTag\u003e tagsToAdd;","lastModifiedDate":"2023-10-20"},{"lineNumber":118,"author":{"gitId":"yucongkoo"},"content":"        private Set\u003cTag\u003e tagsToDelete;","lastModifiedDate":"2023-10-20"},{"lineNumber":119,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":120,"author":{"gitId":"yucongkoo"},"content":"        /**","lastModifiedDate":"2023-10-20"},{"lineNumber":121,"author":{"gitId":"yucongkoo"},"content":"         * Constructs a {@code UpdatePersonTagsDescriptor} with {@code tagsToAdd} and {@code tagsToDelete}.","lastModifiedDate":"2023-10-20"},{"lineNumber":122,"author":{"gitId":"yucongkoo"},"content":"         * A defensive copy of {@code tagsToAdd} and {@code tagsToDelete} is used internally.","lastModifiedDate":"2023-10-20"},{"lineNumber":123,"author":{"gitId":"yucongkoo"},"content":"         */","lastModifiedDate":"2023-10-20"},{"lineNumber":124,"author":{"gitId":"yucongkoo"},"content":"        public UpdatePersonTagsDescriptor(Set\u003cTag\u003e tagsToAdd, Set\u003cTag\u003e tagsToDelete) {","lastModifiedDate":"2023-10-20"},{"lineNumber":125,"author":{"gitId":"yucongkoo"},"content":"            requireAllNonNull(tagsToAdd, tagsToDelete);","lastModifiedDate":"2023-10-20"},{"lineNumber":126,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":127,"author":{"gitId":"yucongkoo"},"content":"            this.tagsToAdd \u003d new HashSet\u003c\u003e(tagsToAdd);","lastModifiedDate":"2023-10-20"},{"lineNumber":128,"author":{"gitId":"yucongkoo"},"content":"            this.tagsToDelete \u003d new HashSet\u003c\u003e(tagsToDelete);","lastModifiedDate":"2023-10-20"},{"lineNumber":129,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":130,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":131,"author":{"gitId":"yucongkoo"},"content":"        /**","lastModifiedDate":"2023-10-24"},{"lineNumber":132,"author":{"gitId":"yucongkoo"},"content":"         * Constructs a defensive copy of {@code toCopy}.","lastModifiedDate":"2023-10-24"},{"lineNumber":133,"author":{"gitId":"yucongkoo"},"content":"         */","lastModifiedDate":"2023-10-24"},{"lineNumber":134,"author":{"gitId":"yucongkoo"},"content":"        public UpdatePersonTagsDescriptor(UpdatePersonTagsDescriptor toCopy) {","lastModifiedDate":"2023-10-24"},{"lineNumber":135,"author":{"gitId":"yucongkoo"},"content":"            requireNonNull(toCopy);","lastModifiedDate":"2023-10-24"},{"lineNumber":136,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":137,"author":{"gitId":"yucongkoo"},"content":"            this.tagsToAdd \u003d new HashSet\u003c\u003e(toCopy.tagsToAdd);","lastModifiedDate":"2023-10-24"},{"lineNumber":138,"author":{"gitId":"yucongkoo"},"content":"            this.tagsToDelete \u003d new HashSet\u003c\u003e(toCopy.tagsToDelete);","lastModifiedDate":"2023-10-24"},{"lineNumber":139,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":140,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":141,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":142,"author":{"gitId":"yucongkoo"},"content":"        public void setTagsToAdd(Set\u003cTag\u003e tagsToAdd) {","lastModifiedDate":"2023-10-20"},{"lineNumber":143,"author":{"gitId":"yucongkoo"},"content":"            requireNonNull(tagsToAdd);","lastModifiedDate":"2023-10-20"},{"lineNumber":144,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":145,"author":{"gitId":"yucongkoo"},"content":"            this.tagsToAdd \u003d new HashSet\u003c\u003e(tagsToAdd);","lastModifiedDate":"2023-10-24"},{"lineNumber":146,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":147,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":148,"author":{"gitId":"yucongkoo"},"content":"        public void setTagsToDelete(Set\u003cTag\u003e tagsToDelete) {","lastModifiedDate":"2023-10-20"},{"lineNumber":149,"author":{"gitId":"yucongkoo"},"content":"            requireNonNull(tagsToDelete);","lastModifiedDate":"2023-10-20"},{"lineNumber":150,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":151,"author":{"gitId":"yucongkoo"},"content":"            this.tagsToDelete \u003d new HashSet\u003c\u003e(tagsToDelete);","lastModifiedDate":"2023-10-24"},{"lineNumber":152,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":153,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":154,"author":{"gitId":"yucongkoo"},"content":"        public Set\u003cTag\u003e getTagsToAdd() {","lastModifiedDate":"2023-10-20"},{"lineNumber":155,"author":{"gitId":"yucongkoo"},"content":"            return new HashSet\u003c\u003e(tagsToAdd);","lastModifiedDate":"2023-10-24"},{"lineNumber":156,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":157,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":158,"author":{"gitId":"yucongkoo"},"content":"        public Set\u003cTag\u003e getTagsToDelete() {","lastModifiedDate":"2023-10-20"},{"lineNumber":159,"author":{"gitId":"yucongkoo"},"content":"            return new HashSet\u003c\u003e(tagsToDelete);","lastModifiedDate":"2023-10-24"},{"lineNumber":160,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":161,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":162,"author":{"gitId":"yucongkoo"},"content":"        /**","lastModifiedDate":"2023-10-20"},{"lineNumber":163,"author":{"gitId":"yucongkoo"},"content":"         * Returns true if there is at least one tag to update.","lastModifiedDate":"2023-10-20"},{"lineNumber":164,"author":{"gitId":"yucongkoo"},"content":"         */","lastModifiedDate":"2023-10-20"},{"lineNumber":165,"author":{"gitId":"yucongkoo"},"content":"        public boolean hasTagToUpdate() {","lastModifiedDate":"2023-10-20"},{"lineNumber":166,"author":{"gitId":"yucongkoo"},"content":"            return !(tagsToAdd.isEmpty() \u0026\u0026 tagsToDelete.isEmpty());","lastModifiedDate":"2023-10-20"},{"lineNumber":167,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":168,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":169,"author":{"gitId":"yucongkoo"},"content":"        private boolean containsCommonTagToAddAndDelete() {","lastModifiedDate":"2023-10-20"},{"lineNumber":170,"author":{"gitId":"yucongkoo"},"content":"            Set\u003cTag\u003e intersectionSet \u003d new HashSet\u003c\u003e(tagsToAdd);","lastModifiedDate":"2023-10-20"},{"lineNumber":171,"author":{"gitId":"yucongkoo"},"content":"            intersectionSet.retainAll(tagsToDelete);","lastModifiedDate":"2023-10-20"},{"lineNumber":172,"author":{"gitId":"yucongkoo"},"content":"            return !intersectionSet.isEmpty();","lastModifiedDate":"2023-10-20"},{"lineNumber":173,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":174,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":175,"author":{"gitId":"yucongkoo"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":176,"author":{"gitId":"yucongkoo"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-10-20"},{"lineNumber":177,"author":{"gitId":"yucongkoo"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-20"},{"lineNumber":178,"author":{"gitId":"yucongkoo"},"content":"                return true;","lastModifiedDate":"2023-10-20"},{"lineNumber":179,"author":{"gitId":"yucongkoo"},"content":"            }","lastModifiedDate":"2023-10-20"},{"lineNumber":180,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":181,"author":{"gitId":"yucongkoo"},"content":"            if (!(other instanceof UpdatePersonTagsDescriptor)) {","lastModifiedDate":"2023-10-20"},{"lineNumber":182,"author":{"gitId":"yucongkoo"},"content":"                return false;","lastModifiedDate":"2023-10-20"},{"lineNumber":183,"author":{"gitId":"yucongkoo"},"content":"            }","lastModifiedDate":"2023-10-20"},{"lineNumber":184,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":185,"author":{"gitId":"yucongkoo"},"content":"            UpdatePersonTagsDescriptor otherUpdatePersonTagsDescriptor \u003d (UpdatePersonTagsDescriptor) other;","lastModifiedDate":"2023-10-20"},{"lineNumber":186,"author":{"gitId":"yucongkoo"},"content":"            return tagsToAdd.equals(otherUpdatePersonTagsDescriptor.tagsToAdd)","lastModifiedDate":"2023-10-20"},{"lineNumber":187,"author":{"gitId":"yucongkoo"},"content":"                    \u0026\u0026 tagsToDelete.equals(otherUpdatePersonTagsDescriptor.tagsToDelete);","lastModifiedDate":"2023-10-20"},{"lineNumber":188,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":189,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":190,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"yucongkoo":183,"LamJiuFong":7}},{"path":"src/main/java/seedu/address/logic/commands/UnmarkAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.logic.commands.CommandUtil.getPersonAtIndex;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.person.AppointmentCount;","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":" * Unmarks the appointment with an existing person in the address book.","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"Jweewee"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"Jweewee"},"content":"public class UnmarkAppointmentCommand extends Command {","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":"    public static final String COMMAND_WORD \u003d \"unmarkappt\";","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"Jweewee"},"content":"    public static final String MESSAGE_USAGE \u003d \"Usage: \\n\" + COMMAND_WORD","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"            + \" \u003cindex\u003e\";","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"Jweewee"},"content":"    public static final String MESSAGE_UNMARK_APPOINTMENT_SUCCESS \u003d \"Successfully undo marking of appointment with \"","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"Jweewee"},"content":"            + \"%1$s.\";","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"Jweewee"},"content":"    public static final String MESSAGE_UNMARK_APPOINTMENT_FAILURE_ZERO_COUNT \u003d \"You cannot undo marking of appointment \"","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"Jweewee"},"content":"            + \"if you have not finished any appointment!\";","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"Jweewee"},"content":"    public static final String MESSAGE_UNMARK_APPOINTMENT_FAILURE_APPT_EXIST \u003d \"You cannot undo marking of appointment \"","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"Jweewee"},"content":"            + \"if you have a scheduled appointment with %1$s currently!\";","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"Jweewee"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"Jweewee"},"content":"    private final Index index;","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"Jweewee"},"content":"    private final Appointment appointment;","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"Jweewee"},"content":"     * Construct for an {@code UnmarkAppointmentCommand}","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"Jweewee"},"content":"     * @param index index of the person in the filtered person list to mark the appointment as completed","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"Jweewee"},"content":"     * @param appointment the existing appointment that has been marked completed","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"Jweewee"},"content":"    public UnmarkAppointmentCommand(Index index, Appointment appointment) {","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"Jweewee"},"content":"        requireAllNonNull(index, appointment);","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"Jweewee"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"Jweewee"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"Jweewee"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"Jweewee"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"Jweewee"},"content":"        Person personToEdit \u003d getPersonAtIndex(model, index);","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"Jweewee"},"content":"        // AppointmentCount cannot go below 0.","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"Jweewee"},"content":"        if (!AppointmentCount.isValidDecrementCount(personToEdit.getAppointmentCount())) {","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"Jweewee"},"content":"            logger.warning(\"-----Invalid Unmark Appointment Command: Appointment Count cannot go below 0-----\");","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"Jweewee"},"content":"            throw new CommandException(MESSAGE_UNMARK_APPOINTMENT_FAILURE_ZERO_COUNT);","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"Jweewee"},"content":"        // Has an appointment -\u003e means did not accidentally mark an appointment as completed.","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"Jweewee"},"content":"        if (!(Appointment.isAppointmentEmpty(personToEdit.getAppointment()))) {","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"Jweewee"},"content":"            logger.warning(\"-----Invalid Unmark Appointment Command: Appointment Exist-----\");","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"Jweewee"},"content":"            throw new CommandException(String.format(MESSAGE_UNMARK_APPOINTMENT_FAILURE_APPT_EXIST,","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"Jweewee"},"content":"                    personToEdit.getName()));","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"Jweewee"},"content":"        Person editedPerson \u003d Person.createPersonWithDecreasedCount(personToEdit,","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"Jweewee"},"content":"                appointment, personToEdit.getAppointmentCount());","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"Jweewee"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"Jweewee"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"Jweewee"},"content":"        logger.info(\"-----Unmark Appointment Command: Appointment unmarked successfully-----\");","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"Jweewee"},"content":"        return new CommandResult(generateSuccessMessage(personToEdit));","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"Jweewee"},"content":"     * Generates a command execution success message when the appointment is marked as completed successfully.","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"Jweewee"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"Jweewee"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"Jweewee"},"content":"        return String.format(MESSAGE_UNMARK_APPOINTMENT_SUCCESS, personToEdit.getName().fullName);","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"Jweewee"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"Jweewee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"Jweewee"},"content":"        // short circuit if same object","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"Jweewee"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"Jweewee"},"content":"            return true;","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"Jweewee"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"Jweewee"},"content":"        if (!(other instanceof UnmarkAppointmentCommand)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"Jweewee"},"content":"            return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"Jweewee"},"content":"        // state check","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"Jweewee"},"content":"        UnmarkAppointmentCommand e \u003d (UnmarkAppointmentCommand) other;","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"Jweewee"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"Jweewee"},"content":"                \u0026\u0026 appointment.equals(e.appointment);","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"Jweewee":104}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INSURANCE;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.insurance.Insurance;","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.person.AppointmentCount;","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-09-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-09-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-09-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-09-27"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-09-27"},{"lineNumber":27,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.priority.Priority;","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"Jweewee"},"content":"    private static final Prefix[] validPrefixes \u003d new Prefix[] { PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"Jweewee"},"content":"        PREFIX_ADDRESS, PREFIX_TAG, PREFIX_INSURANCE, PREFIX_REMARK, PREFIX_PRIORITY};","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"Jweewee"},"content":"    private static final Prefix[] compulsoryPrefixes \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"Jweewee"},"content":"            new Prefix[] { PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL };","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"Jweewee"},"content":"    private static final Prefix[] nonRepeatingPrefixes \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"Jweewee"},"content":"            new Prefix[] { PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_REMARK, PREFIX_PRIORITY };","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"Jweewee"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, validPrefixes);","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"Jweewee"},"content":"        verifyIsValidArgumentMultimap(argMultimap);","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"Jweewee"},"content":"        Person personToAdd \u003d createPersonToAdd(argMultimap);","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"Jweewee"},"content":"        return new AddCommand(personToAdd);","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"Jweewee"},"content":"     * Throws a {@code ParseException} if the {@code map} is not a valid {@code ArgumentMultimap}","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"Jweewee"},"content":"     * for {@code AddCommand}.","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"Jweewee"},"content":"    private static void verifyIsValidArgumentMultimap(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"Jweewee"},"content":"        requireNonNull(argMultimap);","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"Jweewee"},"content":"        if (!argMultimap.areAllPrefixesPresent(compulsoryPrefixes)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"Jweewee"},"content":"        if (!argMultimap.isPreambleEmpty()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"Jweewee"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(nonRepeatingPrefixes);","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"Jweewee"},"content":"     * Creates a {@code Person} using the information in {@code argMultimap}.","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"Jweewee"},"content":"     * @param argMultimap contains the information of the attributes of the person.","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"Jweewee"},"content":"     * @throws ParseException if there are certain attributes that could not be parsed.","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"Jweewee"},"content":"    private static Person createPersonToAdd(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"Jweewee"},"content":"        requireNonNull(argMultimap);","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":87,"author":{"gitId":"songfangyl"},"content":"        Remark remark \u003d ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).orElse(\"\"));","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"Jweewee"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).orElse(\"\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":90,"author":{"gitId":"Jweewee"},"content":"        Set\u003cInsurance\u003e insurances \u003d ParserUtil.parseInsurances(argMultimap.getAllValues(PREFIX_INSURANCE));","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"Jweewee"},"content":"        Appointment appointment \u003d Appointment.getDefaultEmptyAppointment();","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"Jweewee"},"content":"        AppointmentCount count \u003d AppointmentCount.getDefaultAppointmentCount();","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"LamJiuFong"},"content":"        Priority priority \u003d ParserUtil.parsePriority(argMultimap.getValue(PREFIX_PRIORITY)","lastModifiedDate":"2023-10-23"},{"lineNumber":95,"author":{"gitId":"LamJiuFong"},"content":"                .orElse(Priority.NONE_PRIORITY_KEYWORD));","lastModifiedDate":"2023-10-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":97,"author":{"gitId":"Jweewee"},"content":"        return new Person(name, phone, email, address, remark, tagList, insurances,","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"Jweewee"},"content":"                appointment, count, priority);","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"yucongkoo":3,"songfangyl":4,"LamJiuFong":3,"-":45,"Jweewee":45}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"import seedu.address.logic.commands.AppointmentCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"import seedu.address.logic.commands.DeleteAppointmentCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":"import seedu.address.logic.commands.InsuranceCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"Jweewee"},"content":"import seedu.address.logic.commands.MarkAppointmentCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"import seedu.address.logic.commands.PriorityCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"Jweewee"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"Jweewee"},"content":"import seedu.address.logic.commands.TagCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"Jweewee"},"content":"import seedu.address.logic.commands.UnmarkAppointmentCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2023-11-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"TehOPanas"},"content":"        // Convert all Uppercase to lowercase","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"TehOPanas"},"content":"        final String processedCommandWord \u003d commandWord.toLowerCase();","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":65,"author":{"gitId":"TehOPanas"},"content":"        switch (processedCommandWord) {","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2023-11-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2023-11-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2023-11-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2023-11-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":91,"author":{"gitId":"songfangyl"},"content":"        case RemarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-09-27"},{"lineNumber":92,"author":{"gitId":"yucongkoo"},"content":"            return new RemarkCommandParser().parse(arguments);","lastModifiedDate":"2023-11-03"},{"lineNumber":93,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":94,"author":{"gitId":"yucongkoo"},"content":"        case TagCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"yucongkoo"},"content":"            return new TagCommandParser().parse(arguments);","lastModifiedDate":"2023-11-03"},{"lineNumber":96,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"LamJiuFong"},"content":"        case PriorityCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-22"},{"lineNumber":98,"author":{"gitId":"yucongkoo"},"content":"            return new PriorityCommandParser().parse(arguments);","lastModifiedDate":"2023-11-03"},{"lineNumber":99,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"Jweewee"},"content":"        case InsuranceCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"yucongkoo"},"content":"            return new InsuranceCommandParser().parse(arguments);","lastModifiedDate":"2023-11-03"},{"lineNumber":102,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":103,"author":{"gitId":"Jweewee"},"content":"        case AppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"yucongkoo"},"content":"            return new AppointmentCommandParser().parse(arguments);","lastModifiedDate":"2023-11-03"},{"lineNumber":105,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":106,"author":{"gitId":"Jweewee"},"content":"        case DeleteAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-31"},{"lineNumber":107,"author":{"gitId":"yucongkoo"},"content":"            return new DeleteAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2023-11-03"},{"lineNumber":108,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"Jweewee"},"content":"        case MarkAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"yucongkoo"},"content":"            return new MarkAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2023-11-03"},{"lineNumber":111,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"Jweewee"},"content":"        case UnmarkAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-31"},{"lineNumber":113,"author":{"gitId":"yucongkoo"},"content":"            return new UnmarkAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2023-11-03"},{"lineNumber":114,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"TehOPanas":3,"songfangyl":2,"yucongkoo":10,"LamJiuFong":2,"-":85,"Jweewee":19}},{"path":"src/main/java/seedu/address/logic/parser/AppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_TIME;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT_VENUE;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.logic.parser.ParserUtil.parseDateString;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.logic.parser.ParserUtil.parseTimeString;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"import seedu.address.logic.commands.AppointmentCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"Jweewee"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"Jweewee"},"content":" * Parses input arguments and creates a new AppointmentCommand object","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"Jweewee"},"content":"public class AppointmentCommandParser implements Parser\u003cAppointmentCommand\u003e {","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"Jweewee"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppointmentCommandParser.class);","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"Jweewee"},"content":"     * Parses the given {@code String} of arguments in the context of the AppointmentCommand","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"Jweewee"},"content":"     * and returns an AppointmentCommand object for execution.","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"Jweewee"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"Jweewee"},"content":"    public AppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"Jweewee"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"Jweewee"},"content":"        logger.fine(\"AppointmentCommandParser parsing: \" + args);","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"Jweewee"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"Jweewee"},"content":"                ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"Jweewee"},"content":"                        PREFIX_APPOINTMENT, PREFIX_APPOINTMENT_TIME, PREFIX_APPOINTMENT_VENUE);","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"Jweewee"},"content":"        Index index;","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"Jweewee"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"Jweewee"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"Jweewee"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"Jweewee"},"content":"            logger.finer(\"AppointmentCommandParser parse failed due to invalid index: \" + argMultimap.getPreamble());","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"Jweewee"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"Jweewee"},"content":"                    AppointmentCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"Jweewee"},"content":"        String parsedDate \u003d getParsedDate(argMultimap);","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"Jweewee"},"content":"        String parsedTime \u003d getParsedTime(argMultimap);","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"Jweewee"},"content":"        String parsedVenue \u003d getParsedVenue(argMultimap);","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"Jweewee"},"content":"        return new AppointmentCommand(index, new Appointment(parsedDate, parsedTime, parsedVenue));","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"Jweewee"},"content":"    private String checkInputDate(String retrievedDate) throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"Jweewee"},"content":"        if (retrievedDate.equalsIgnoreCase(Appointment.NO_APPOINTMENT)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"Jweewee"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"Jweewee"},"content":"                    AppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"Jweewee"},"content":"        return retrievedDate;","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"Jweewee"},"content":"    private String getParsedDate(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"Jweewee"},"content":"        String retrievedDate \u003d checkInputDate(argMultimap.getValue(PREFIX_APPOINTMENT)","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"Jweewee"},"content":"                .orElse(Appointment.NO_APPOINTMENT));","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"Jweewee"},"content":"        String parsedDate \u003d parseDateString(retrievedDate);","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"Jweewee"},"content":"        return parsedDate;","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"Jweewee"},"content":"    private String getParsedTime(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"Jweewee"},"content":"        String retrievedTime \u003d argMultimap.getValue(PREFIX_APPOINTMENT_TIME).orElse(Appointment.NO_TIME);","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"Jweewee"},"content":"        String parsedTime \u003d parseTimeString(retrievedTime);","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"Jweewee"},"content":"        logger.info(parsedTime + \"get to apptcmd parser\");","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"Jweewee"},"content":"        return parsedTime;","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"Jweewee"},"content":"    private String checkVenueLength(String venue) throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"Jweewee"},"content":"        if (!Appointment.isValidVenueFormat(venue)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"Jweewee"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"Jweewee"},"content":"                    Appointment.INVALID_VENUE_INPUT));","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"Jweewee"},"content":"        return venue;","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"Jweewee"},"content":"    private String getParsedVenue(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"Jweewee"},"content":"        String retrievedVenue \u003d argMultimap.getValue(PREFIX_APPOINTMENT_VENUE).orElse(Appointment.NO_VENUE);","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"Jweewee"},"content":"        String parsedVenue \u003d checkVenueLength(retrievedVenue);","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"Jweewee"},"content":"        return parsedVenue;","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"Jweewee":87}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMPTY;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-07-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"yucongkoo"},"content":"        return getValue(PREFIX_EMPTY).orElse(\"\");","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Throws a {@code ParseException} if any of the prefixes given in {@code prefixes} appeared more than","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * once among the arguments.","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void verifyNoDuplicatePrefixesFor(Prefix... prefixes) throws ParseException {","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Prefix[] duplicatedPrefixes \u003d Stream.of(prefixes).distinct()","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .filter(prefix -\u003e argMultimap.containsKey(prefix) \u0026\u0026 argMultimap.get(prefix).size() \u003e 1)","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .toArray(Prefix[]::new);","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (duplicatedPrefixes.length \u003e 0) {","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new ParseException(Messages.getErrorMessageForDuplicatePrefixes(duplicatedPrefixes));","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":81,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":82,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":83,"author":{"gitId":"yucongkoo"},"content":"     * Returns true if all the prefixes given in {@code prefixes} appeared among the arguments.","lastModifiedDate":"2023-10-29"},{"lineNumber":84,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":85,"author":{"gitId":"yucongkoo"},"content":"    public boolean areAllPrefixesPresent(Prefix... prefixes) {","lastModifiedDate":"2023-10-29"},{"lineNumber":86,"author":{"gitId":"yucongkoo"},"content":"        requireAllNonNull((Object) prefixes);","lastModifiedDate":"2023-10-29"},{"lineNumber":87,"author":{"gitId":"yucongkoo"},"content":"        return Stream.of(prefixes).distinct().allMatch(prefix -\u003e getValue(prefix).isPresent());","lastModifiedDate":"2023-10-29"},{"lineNumber":88,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":89,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":90,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":91,"author":{"gitId":"yucongkoo"},"content":"     * Returns true if the preamble is empty.","lastModifiedDate":"2023-10-29"},{"lineNumber":92,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":93,"author":{"gitId":"yucongkoo"},"content":"    public boolean isPreambleEmpty() {","lastModifiedDate":"2023-10-29"},{"lineNumber":94,"author":{"gitId":"yucongkoo"},"content":"        return getPreamble().isEmpty();","lastModifiedDate":"2023-10-29"},{"lineNumber":95,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"yucongkoo":19,"-":77}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMPTY;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"yucongkoo"},"content":"        PrefixPosition prefixPosition \u003d findPrefixPosition(argsString, prefix, 0);","lastModifiedDate":"2023-11-03"},{"lineNumber":53,"author":{"gitId":"yucongkoo"},"content":"        while (prefixPosition !\u003d null) {","lastModifiedDate":"2023-11-03"},{"lineNumber":54,"author":{"gitId":"yucongkoo"},"content":"            positions.add(prefixPosition);","lastModifiedDate":"2023-11-03"},{"lineNumber":55,"author":{"gitId":"yucongkoo"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix, prefixPosition.getEndPosition());","lastModifiedDate":"2023-11-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"yucongkoo"},"content":"     * Returns the {@code PrefixPosition} of the first occurrence of {@code prefix} in","lastModifiedDate":"2023-11-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"yucongkoo"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns null if no","lastModifiedDate":"2023-11-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"yucongkoo"},"content":"     * {@code fromIndex} \u003d 0, this method returns null as there are no valid","lastModifiedDate":"2023-11-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"yucongkoo"},"content":"    private static PrefixPosition findPrefixPosition(String argsString, Prefix prefix, int fromIndex) {","lastModifiedDate":"2023-11-03"},{"lineNumber":74,"author":{"gitId":"yucongkoo"},"content":"        String convertedArgsString \u003d argsString.toLowerCase();","lastModifiedDate":"2023-11-03"},{"lineNumber":75,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":76,"author":{"gitId":"yucongkoo"},"content":"        int prefixIndex \u003d convertedArgsString.indexOf(\" \" + prefix.getPrefix(), fromIndex);","lastModifiedDate":"2023-11-03"},{"lineNumber":77,"author":{"gitId":"yucongkoo"},"content":"        int secondaryPrefixIndex \u003d convertedArgsString.indexOf(\" \" + prefix.getSecondaryPrefix(), fromIndex);","lastModifiedDate":"2023-11-03"},{"lineNumber":78,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":79,"author":{"gitId":"yucongkoo"},"content":"        if (prefixIndex \u003d\u003d -1 \u0026\u0026 secondaryPrefixIndex \u003d\u003d -1) {","lastModifiedDate":"2023-11-03"},{"lineNumber":80,"author":{"gitId":"yucongkoo"},"content":"            return null;","lastModifiedDate":"2023-11-03"},{"lineNumber":81,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":82,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":83,"author":{"gitId":"yucongkoo"},"content":"        if (prefixIndex \u003d\u003d -1) {","lastModifiedDate":"2023-11-03"},{"lineNumber":84,"author":{"gitId":"yucongkoo"},"content":"            return new PrefixPosition(prefix, secondaryPrefixIndex + 1,","lastModifiedDate":"2023-11-03"},{"lineNumber":85,"author":{"gitId":"yucongkoo"},"content":"                    secondaryPrefixIndex + 1 + prefix.getSecondaryPrefixLength());","lastModifiedDate":"2023-11-03"},{"lineNumber":86,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":87,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":88,"author":{"gitId":"yucongkoo"},"content":"        if (secondaryPrefixIndex \u003d\u003d -1) {","lastModifiedDate":"2023-11-03"},{"lineNumber":89,"author":{"gitId":"yucongkoo"},"content":"            return new PrefixPosition(prefix, prefixIndex + 1,","lastModifiedDate":"2023-11-03"},{"lineNumber":90,"author":{"gitId":"yucongkoo"},"content":"                    prefixIndex + 1 + prefix.getPrefixLength());","lastModifiedDate":"2023-11-03"},{"lineNumber":91,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":92,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":93,"author":{"gitId":"yucongkoo"},"content":"        // both indexes are present","lastModifiedDate":"2023-11-03"},{"lineNumber":94,"author":{"gitId":"yucongkoo"},"content":"        if (prefixIndex \u003c secondaryPrefixIndex) {","lastModifiedDate":"2023-11-03"},{"lineNumber":95,"author":{"gitId":"yucongkoo"},"content":"            return new PrefixPosition(prefix, prefixIndex + 1,","lastModifiedDate":"2023-11-03"},{"lineNumber":96,"author":{"gitId":"yucongkoo"},"content":"                    prefixIndex + 1 + prefix.getPrefixLength());","lastModifiedDate":"2023-11-03"},{"lineNumber":97,"author":{"gitId":"yucongkoo"},"content":"        } else {","lastModifiedDate":"2023-11-03"},{"lineNumber":98,"author":{"gitId":"yucongkoo"},"content":"            return new PrefixPosition(prefix, secondaryPrefixIndex + 1,","lastModifiedDate":"2023-11-03"},{"lineNumber":99,"author":{"gitId":"yucongkoo"},"content":"                    secondaryPrefixIndex + 1 + prefix.getSecondaryPrefixLength());","lastModifiedDate":"2023-11-03"},{"lineNumber":100,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"yucongkoo"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(PREFIX_EMPTY, 0, 0);","lastModifiedDate":"2023-11-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"yucongkoo"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(PREFIX_EMPTY, argsString.length(), argsString.length());","lastModifiedDate":"2023-11-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"yucongkoo"},"content":"        int valueStartPos \u003d currentPrefixPosition.getEndPosition(); // value starts at the end of the current prefix","lastModifiedDate":"2023-11-08"},{"lineNumber":145,"author":{"gitId":"yucongkoo"},"content":"        int valueEndPos \u003d nextPrefixPosition.getStartPosition(); // value ends at the start of the next prefix","lastModifiedDate":"2023-11-08"},{"lineNumber":146,"author":{"gitId":"yucongkoo"},"content":"        String value \u003d argsString.substring(valueStartPos, valueEndPos);","lastModifiedDate":"2023-10-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":156,"author":{"gitId":"yucongkoo"},"content":"        private int endPosition;","lastModifiedDate":"2023-11-03"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":159,"author":{"gitId":"yucongkoo"},"content":"        PrefixPosition(Prefix prefix, int startPosition, int endPosition) {","lastModifiedDate":"2023-11-03"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":162,"author":{"gitId":"yucongkoo"},"content":"            this.endPosition \u003d endPosition;","lastModifiedDate":"2023-11-03"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":172,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":173,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":174,"author":{"gitId":"yucongkoo"},"content":"        /**","lastModifiedDate":"2023-10-15"},{"lineNumber":175,"author":{"gitId":"yucongkoo"},"content":"         * Returns the end position of the prefix.","lastModifiedDate":"2023-10-15"},{"lineNumber":176,"author":{"gitId":"yucongkoo"},"content":"         */","lastModifiedDate":"2023-10-15"},{"lineNumber":177,"author":{"gitId":"yucongkoo"},"content":"        int getEndPosition() {","lastModifiedDate":"2023-10-15"},{"lineNumber":178,"author":{"gitId":"yucongkoo"},"content":"            return endPosition;","lastModifiedDate":"2023-11-03"},{"lineNumber":179,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"yucongkoo":53,"-":129}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"    public static final Prefix PREFIX_EMPTY \u003d new Prefix(\"\", \"\");","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\", \"name/\");","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\", \"phone/\");","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\", \"email/\");","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\", \"address/\");","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\", \"tag/\");","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"r/\", \"remark/\");","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"    public static final Prefix PREFIX_ADD_TAG \u003d new Prefix(\"at/\", \"addtag/\");","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"    public static final Prefix PREFIX_DELETE_TAG \u003d new Prefix(\"dt/\", \"deletetag/\");","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"    public static final Prefix PREFIX_INSURANCE \u003d new Prefix(\"i/\", \"insurance/\");","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"    public static final Prefix PREFIX_ADD_INSURANCE \u003d new Prefix(\"ai/\", \"addinsurance/\");","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"    public static final Prefix PREFIX_DELETE_INSURANCE \u003d new Prefix(\"di/\", \"deleteinsurance/\");","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"    public static final Prefix PREFIX_PRIORITY \u003d new Prefix(\"pr/\", \"priority/\");","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"    public static final Prefix PREFIX_APPOINTMENT \u003d new Prefix(\"d/\", \"date/\");","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"    public static final Prefix PREFIX_APPOINTMENT_TIME \u003d new Prefix(\"t/\", \"time/\");","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"    public static final Prefix PREFIX_APPOINTMENT_VENUE \u003d new Prefix(\"v/\", \"venue/\");","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"yucongkoo":16,"-":9}},{"path":"src/main/java/seedu/address/logic/parser/DeleteAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"import seedu.address.logic.commands.DeleteAppointmentCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":" * Parses input arguments and creates a new DeleteAppointment object","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"public class DeleteAppointmentCommandParser implements Parser\u003cDeleteAppointmentCommand\u003e {","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":"    public DeleteAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"Jweewee"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args);","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":"        Index index;","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"Jweewee"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"Jweewee"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"Jweewee"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"Jweewee"},"content":"                    DeleteAppointmentCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"Jweewee"},"content":"        return new DeleteAppointmentCommand(index, Appointment.getDefaultEmptyAppointment());","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"Jweewee":31}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.EditCommand.PREFIX_EDIT_ERROR_MESSAGE_MAP;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"TehOPanas"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INSURANCE;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"TehOPanas"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"LamJiuFong"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"LamJiuFong"},"content":" * Parses input arguments and creates a new EditCommand object.","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"LamJiuFong"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(EditCommandParser.class);","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"LamJiuFong"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"LamJiuFong"},"content":"        logger.fine(\"EditCommandParser parsing...\");","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":45,"author":{"gitId":"LamJiuFong"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG,","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"LamJiuFong"},"content":"                        PREFIX_PRIORITY, PREFIX_INSURANCE, PREFIX_REMARK);","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"LamJiuFong"},"content":"        assert argMultimap !\u003d null : \"ArgumentTokenizer.tokenize returns null\";","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"LamJiuFong"},"content":"            logger.finer(\"Parsing failed due to invalid command format\");","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"TehOPanas"},"content":"        checkPrefixPresent(argMultimap, PREFIX_TAG, PREFIX_PRIORITY, PREFIX_INSURANCE, PREFIX_REMARK);","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-07-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":61,"author":{"gitId":"LamJiuFong"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d getEditPersonDescriptor(argMultimap);","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"LamJiuFong"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"LamJiuFong"},"content":"            logger.finer(\"Parsing failed due to person\u0027s information not edited\");","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"LamJiuFong"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"LamJiuFong"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"LamJiuFong"},"content":"    private EditPersonDescriptor getEditPersonDescriptor(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"LamJiuFong"},"content":"            Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"LamJiuFong"},"content":"            editPersonDescriptor.setName(name);","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"LamJiuFong"},"content":"            Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"LamJiuFong"},"content":"            editPersonDescriptor.setPhone(phone);","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"LamJiuFong"},"content":"            Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"LamJiuFong"},"content":"            editPersonDescriptor.setEmail(email);","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":87,"author":{"gitId":"LamJiuFong"},"content":"            Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"LamJiuFong"},"content":"            editPersonDescriptor.setAddress(address);","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"LamJiuFong"},"content":"        return editPersonDescriptor;","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"LamJiuFong"},"content":"     * Check if {@code prefixes} are present in the {@code argMultimap}.","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"LamJiuFong"},"content":"     * @param argMultimap that we are performing search on.","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"LamJiuFong"},"content":"     * @param prefixes to search for.","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"LamJiuFong"},"content":"     * @throws ParseException when prefixes are found.","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"LamJiuFong"},"content":"    private void checkPrefixPresent(ArgumentMultimap argMultimap, Prefix... prefixes) throws ParseException {","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"LamJiuFong"},"content":"        for (Prefix targetPrefix : prefixes) {","lastModifiedDate":"2023-10-24"},{"lineNumber":103,"author":{"gitId":"LamJiuFong"},"content":"            if (argMultimap.getValue(targetPrefix).isPresent()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":104,"author":{"gitId":"LamJiuFong"},"content":"                logger.finer(\"Parsing failed due to invalid prefixes provided.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"LamJiuFong"},"content":"                throw new ParseException(PREFIX_EDIT_ERROR_MESSAGE_MAP.get(targetPrefix));","lastModifiedDate":"2023-10-31"},{"lineNumber":106,"author":{"gitId":"LamJiuFong"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"TehOPanas":3,"LamJiuFong":51,"-":55}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INSURANCE;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"import java.util.List;","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.predicate.PersonContainsKeywordsPredicate;","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(FindCommandParser.class);","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"    private static final Prefix[] validPrefixes \u003d new Prefix[] {","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"        PREFIX_INSURANCE, PREFIX_NAME, PREFIX_TAG, PREFIX_PRIORITY,","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"        PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_REMARK","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"    };","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"songfangyl"},"content":"        requireAllNonNull(args);","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"songfangyl"},"content":"        logger.fine(\"FindCommandParser parsing...\");","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"songfangyl"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"songfangyl"},"content":"                ArgumentTokenizer.tokenize(\" \" + args, validPrefixes);","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"songfangyl"},"content":"        if (!isPrefixPresent(argMultimap, validPrefixes) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"songfangyl"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"songfangyl"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(validPrefixes);","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"songfangyl"},"content":"        List\u003cPredicate\u003cPerson\u003e\u003e predicateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"songfangyl"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"songfangyl"},"content":"            predicateList.add(ParserUtil.parseNameKeywords(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"songfangyl"},"content":"        if (argMultimap.getValue(PREFIX_INSURANCE).isPresent()) {","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"songfangyl"},"content":"            predicateList.add(ParserUtil.parseInsuranceKeywords(argMultimap.getValue(PREFIX_INSURANCE).get()));","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"songfangyl"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"songfangyl"},"content":"            predicateList.add(ParserUtil.parseAddressKeywords(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"songfangyl"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"songfangyl"},"content":"            predicateList.add(ParserUtil.parseEmailKeywords(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"songfangyl"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"songfangyl"},"content":"            predicateList.add(ParserUtil.parsePhoneKeywords(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"songfangyl"},"content":"        if (argMultimap.getValue(PREFIX_TAG).isPresent()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"songfangyl"},"content":"            predicateList.add(ParserUtil.parseTagKeywords(argMultimap.getValue(PREFIX_TAG).get()));","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"songfangyl"},"content":"        if (argMultimap.getValue(PREFIX_REMARK).isPresent()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"songfangyl"},"content":"            predicateList.add(ParserUtil.parseRemarkKeywords(argMultimap.getValue(PREFIX_REMARK).get()));","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"songfangyl"},"content":"        if (argMultimap.getValue(PREFIX_PRIORITY).isPresent()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"songfangyl"},"content":"            predicateList.add(ParserUtil.parsePriorityKeywords(argMultimap.getValue(PREFIX_PRIORITY).get()));","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":85,"author":{"gitId":"songfangyl"},"content":"        return new FindCommand(new PersonContainsKeywordsPredicate(predicateList));","lastModifiedDate":"2023-10-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"songfangyl"},"content":"    private static boolean isPrefixPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"songfangyl"},"content":"        requireAllNonNull(argumentMultimap, prefixes);","lastModifiedDate":"2023-10-30"},{"lineNumber":90,"author":{"gitId":"songfangyl"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-30"},{"lineNumber":91,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"songfangyl":64,"-":28}},{"path":"src/main/java/seedu/address/logic/parser/InsuranceCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TehOPanas"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"TehOPanas"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"TehOPanas"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"TehOPanas"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_INSURANCE;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"TehOPanas"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DELETE_INSURANCE;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"TehOPanas"},"content":"import java.util.Collection;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"TehOPanas"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"TehOPanas"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"TehOPanas"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"TehOPanas"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"TehOPanas"},"content":"import seedu.address.logic.commands.InsuranceCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"TehOPanas"},"content":"import seedu.address.logic.commands.InsuranceCommand.UpdatePersonInsuranceDescriptor;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"TehOPanas"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"TehOPanas"},"content":"import seedu.address.model.insurance.Insurance;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"TehOPanas"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"TehOPanas"},"content":" * Parse the required details and creates InsuranceCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"TehOPanas"},"content":" *","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"TehOPanas"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"TehOPanas"},"content":"public class InsuranceCommandParser implements Parser\u003cInsuranceCommand\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"TehOPanas"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"TehOPanas"},"content":"     * Parse the given arguments and extract out the useful information for InsuranceCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"TehOPanas"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"TehOPanas"},"content":"     * @param args input arguments","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"TehOPanas"},"content":"     * @return InsuranceCommand object to be executed","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"TehOPanas"},"content":"     * @throws ParseException when there is error in the input","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"TehOPanas"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"TehOPanas"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"TehOPanas"},"content":"    public InsuranceCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"TehOPanas"},"content":"        Index index \u003d null;","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"TehOPanas"},"content":"        requireAllNonNull(args);","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"TehOPanas"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"TehOPanas"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ADD_INSURANCE, PREFIX_DELETE_INSURANCE);","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"TehOPanas"},"content":"        try {","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"TehOPanas"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"TehOPanas"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"TehOPanas"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, InsuranceCommand.MESSAGE_USAGE), e);","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"TehOPanas"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"TehOPanas"},"content":"        requireAllNonNull(index);","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"TehOPanas"},"content":"        Set\u003cInsurance\u003e insurancesToAdd \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"TehOPanas"},"content":"                parseInsurances(argMultimap.getAllValues(PREFIX_ADD_INSURANCE)).orElse(new HashSet\u003c\u003e());","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"TehOPanas"},"content":"        Set\u003cInsurance\u003e insurancesToDelete \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"TehOPanas"},"content":"                parseInsurances(argMultimap.getAllValues(PREFIX_DELETE_INSURANCE)).orElse(new HashSet\u003c\u003e());","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"TehOPanas"},"content":"        requireAllNonNull(insurancesToAdd, insurancesToDelete);","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"TehOPanas"},"content":"        UpdatePersonInsuranceDescriptor changes \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"TehOPanas"},"content":"                new UpdatePersonInsuranceDescriptor(insurancesToAdd, insurancesToDelete);","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"TehOPanas"},"content":"        if (!changes.hasInsuranceToUpdate()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"TehOPanas"},"content":"            throw new ParseException(InsuranceCommand.MESSAGE_INSURANCE_NO_UPDATE);","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"TehOPanas"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"TehOPanas"},"content":"        return new InsuranceCommand(index, changes);","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"TehOPanas"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"TehOPanas"},"content":"     * Parse the all insurance name values","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"TehOPanas"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"TehOPanas"},"content":"     * @param insurances all insurance names","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"TehOPanas"},"content":"     * @return {@code Optional\u003cSet\u003cInsurance\u003e\u003e}","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"TehOPanas"},"content":"     * @throws ParseException if","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"TehOPanas"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"TehOPanas"},"content":"    private Optional\u003cSet\u003cInsurance\u003e\u003e parseInsurances(Collection\u003cString\u003e insurances) throws ParseException {","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"TehOPanas"},"content":"        requireAllNonNull(insurances);","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"TehOPanas"},"content":"        if (insurances.isEmpty()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"TehOPanas"},"content":"            return Optional.empty();","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"TehOPanas"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"TehOPanas"},"content":"        return Optional.of(ParserUtil.parseInsurances(insurances));","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"TehOPanas"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"TehOPanas":84}},{"path":"src/main/java/seedu/address/logic/parser/ListCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":" * Parses input arguments and creates a new ListCommand object","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"public class ListCommandParser implements Parser\u003cListCommand\u003e {","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"     * Parses the given {@code String} of arguments in the context of the ListCommand","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":"     * and returns a ListCommand object for execution.","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"    public ListCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":"        if (!args.isEmpty()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":"            throw new ParseException(ListCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"Jweewee"},"content":"        return new ListCommand();","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"Jweewee":25}},{"path":"src/main/java/seedu/address/logic/parser/MarkAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"import seedu.address.logic.commands.MarkAppointmentCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":" * Parses input arguments and creates a new MarkAppointmentCommand object","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"public class MarkAppointmentCommandParser implements Parser\u003cMarkAppointmentCommand\u003e {","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":"    public MarkAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"Jweewee"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args);","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":"        Index index;","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"Jweewee"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"Jweewee"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"Jweewee"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"Jweewee"},"content":"                    MarkAppointmentCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"Jweewee"},"content":"        return new MarkAppointmentCommand(index, Appointment.getDefaultEmptyAppointment());","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"Jweewee":31}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.model.priority.Priority.isValidPriority;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":19,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.insurance.Insurance;","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.predicate.AddressContainsKeywordsPredicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.predicate.EmailContainsKeywordsPredicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.predicate.InsuranceContainsKeywordsPredicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.predicate.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.predicate.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.predicate.PriorityContainsKeywordsPredicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.predicate.RemarkContainsKeywordsPredicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.predicate.TagContainsKeywordsPredicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.priority.Priority;","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"Jweewee"},"content":"        return Address.createAddress(address.trim());","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":142,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":143,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":144,"author":{"gitId":"Jweewee"},"content":"     * Parse a {@code String insurance} into a {@code Insurance}","lastModifiedDate":"2023-10-31"},{"lineNumber":145,"author":{"gitId":"Jweewee"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-31"},{"lineNumber":146,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":147,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":148,"author":{"gitId":"Jweewee"},"content":"    private static Insurance parseInsurance(String insurance) throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":149,"author":{"gitId":"Jweewee"},"content":"        requireNonNull(insurance);","lastModifiedDate":"2023-10-31"},{"lineNumber":150,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":151,"author":{"gitId":"Jweewee"},"content":"        String trimmed \u003d insurance.trim();","lastModifiedDate":"2023-10-31"},{"lineNumber":152,"author":{"gitId":"TehOPanas"},"content":"        trimmed \u003d trimmed.replaceAll(\"\\\\s+\", \" \");","lastModifiedDate":"2023-11-02"},{"lineNumber":153,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":154,"author":{"gitId":"Jweewee"},"content":"        if (!Insurance.isValidInsuranceName(trimmed)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":155,"author":{"gitId":"Jweewee"},"content":"            throw new ParseException(Insurance.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-31"},{"lineNumber":156,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":157,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":158,"author":{"gitId":"Jweewee"},"content":"        return new Insurance(trimmed);","lastModifiedDate":"2023-10-31"},{"lineNumber":159,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":160,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":161,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":162,"author":{"gitId":"Jweewee"},"content":"     * Parses {@code Collection\u003cString\u003e insurances} into a {@code Set\u003cInsurance\u003e}.","lastModifiedDate":"2023-10-31"},{"lineNumber":163,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":164,"author":{"gitId":"Jweewee"},"content":"    public static Set\u003cInsurance\u003e parseInsurances(Collection\u003cString\u003e insurances) throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":165,"author":{"gitId":"Jweewee"},"content":"        requireNonNull(insurances);","lastModifiedDate":"2023-10-31"},{"lineNumber":166,"author":{"gitId":"Jweewee"},"content":"        Set\u003cInsurance\u003e insuranceSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":167,"author":{"gitId":"Jweewee"},"content":"        for (String i : insurances) {","lastModifiedDate":"2023-10-31"},{"lineNumber":168,"author":{"gitId":"Jweewee"},"content":"            insuranceSet.add(parseInsurance(i));","lastModifiedDate":"2023-10-31"},{"lineNumber":169,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":170,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":171,"author":{"gitId":"Jweewee"},"content":"        return insuranceSet;","lastModifiedDate":"2023-10-31"},{"lineNumber":172,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":173,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":174,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":175,"author":{"gitId":"LamJiuFong"},"content":"     * Parses a {@code String priority} into a {@code Priority}.","lastModifiedDate":"2023-10-22"},{"lineNumber":176,"author":{"gitId":"LamJiuFong"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-22"},{"lineNumber":177,"author":{"gitId":"LamJiuFong"},"content":"     * Input will be formatted to lower case to disable case-sensitivity.","lastModifiedDate":"2023-11-01"},{"lineNumber":178,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":179,"author":{"gitId":"LamJiuFong"},"content":"     * @throws ParseException if the given {@code priority} is invalid.","lastModifiedDate":"2023-10-22"},{"lineNumber":180,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":181,"author":{"gitId":"LamJiuFong"},"content":"    public static Priority parsePriority(String priority) throws ParseException {","lastModifiedDate":"2023-10-22"},{"lineNumber":182,"author":{"gitId":"LamJiuFong"},"content":"        requireNonNull(priority);","lastModifiedDate":"2023-10-22"},{"lineNumber":183,"author":{"gitId":"LamJiuFong"},"content":"        String trimmedPriority \u003d priority.trim();","lastModifiedDate":"2023-10-22"},{"lineNumber":184,"author":{"gitId":"LamJiuFong"},"content":"        String formattedPriority \u003d trimmedPriority.toLowerCase(); // disable case-sensitivity","lastModifiedDate":"2023-11-01"},{"lineNumber":185,"author":{"gitId":"LamJiuFong"},"content":"        if (!isValidPriority(formattedPriority)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":186,"author":{"gitId":"LamJiuFong"},"content":"            throw new ParseException((Priority.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2023-10-22"},{"lineNumber":187,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":188,"author":{"gitId":"LamJiuFong"},"content":"        return new Priority(formattedPriority);","lastModifiedDate":"2023-11-01"},{"lineNumber":189,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":190,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":191,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":192,"author":{"gitId":"songfangyl"},"content":"     * Parses a {@code String remark} into a {@code remark}.","lastModifiedDate":"2023-10-31"},{"lineNumber":193,"author":{"gitId":"songfangyl"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-24"},{"lineNumber":194,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":195,"author":{"gitId":"songfangyl"},"content":"     * @throws ParseException if the given {@code remark} is invalid.","lastModifiedDate":"2023-10-31"},{"lineNumber":196,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":197,"author":{"gitId":"songfangyl"},"content":"    public static Remark parseRemark(String remark) throws ParseException {","lastModifiedDate":"2023-10-24"},{"lineNumber":198,"author":{"gitId":"songfangyl"},"content":"        requireNonNull(remark);","lastModifiedDate":"2023-10-24"},{"lineNumber":199,"author":{"gitId":"songfangyl"},"content":"        String trimmedRemark \u003d remark.trim();","lastModifiedDate":"2023-10-24"},{"lineNumber":200,"author":{"gitId":"songfangyl"},"content":"        if (!Remark.isValidRemark(trimmedRemark)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":201,"author":{"gitId":"songfangyl"},"content":"            throw new ParseException((Remark.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2023-10-24"},{"lineNumber":202,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":203,"author":{"gitId":"songfangyl"},"content":"        return new Remark(trimmedRemark);","lastModifiedDate":"2023-10-24"},{"lineNumber":204,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":205,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":206,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":207,"author":{"gitId":"songfangyl"},"content":"     * Parses a {@code String keyword} into corresponding {@code Predicate\u003cPerson\u003e}.","lastModifiedDate":"2023-10-31"},{"lineNumber":208,"author":{"gitId":"songfangyl"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-31"},{"lineNumber":209,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":210,"author":{"gitId":"songfangyl"},"content":"    public static Predicate\u003cPerson\u003e parseNameKeywords(String keyword) {","lastModifiedDate":"2023-10-30"},{"lineNumber":211,"author":{"gitId":"songfangyl"},"content":"        requireNonNull(keyword);","lastModifiedDate":"2023-10-30"},{"lineNumber":212,"author":{"gitId":"songfangyl"},"content":"        String trimmedKeywords \u003d keyword.trim();","lastModifiedDate":"2023-10-30"},{"lineNumber":213,"author":{"gitId":"songfangyl"},"content":"        String[] keywords \u003d trimmedKeywords.split(\"\\\\s+\");","lastModifiedDate":"2023-10-30"},{"lineNumber":214,"author":{"gitId":"songfangyl"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(keywords));","lastModifiedDate":"2023-10-30"},{"lineNumber":215,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":216,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":217,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":218,"author":{"gitId":"songfangyl"},"content":"     * Parses a {@code String keyword} into corresponding {@code Predicate\u003cPerson\u003e}.","lastModifiedDate":"2023-10-31"},{"lineNumber":219,"author":{"gitId":"songfangyl"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-31"},{"lineNumber":220,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":221,"author":{"gitId":"songfangyl"},"content":"    public static Predicate\u003cPerson\u003e parseAddressKeywords(String keyword) {","lastModifiedDate":"2023-10-31"},{"lineNumber":222,"author":{"gitId":"songfangyl"},"content":"        requireNonNull(keyword);","lastModifiedDate":"2023-10-31"},{"lineNumber":223,"author":{"gitId":"songfangyl"},"content":"        String trimmedKeywords \u003d keyword.trim();","lastModifiedDate":"2023-10-31"},{"lineNumber":224,"author":{"gitId":"songfangyl"},"content":"        String[] keywords \u003d trimmedKeywords.split(\"\\\\s+\");","lastModifiedDate":"2023-10-31"},{"lineNumber":225,"author":{"gitId":"songfangyl"},"content":"        return new AddressContainsKeywordsPredicate(Arrays.asList(keywords));","lastModifiedDate":"2023-10-31"},{"lineNumber":226,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":227,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":228,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":229,"author":{"gitId":"songfangyl"},"content":"     * Parses a {@code String keyword} into corresponding {@code Predicate\u003cPerson\u003e}.","lastModifiedDate":"2023-10-31"},{"lineNumber":230,"author":{"gitId":"songfangyl"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-31"},{"lineNumber":231,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":232,"author":{"gitId":"songfangyl"},"content":"    public static Predicate\u003cPerson\u003e parseEmailKeywords(String keyword) {","lastModifiedDate":"2023-10-31"},{"lineNumber":233,"author":{"gitId":"songfangyl"},"content":"        requireNonNull(keyword);","lastModifiedDate":"2023-10-31"},{"lineNumber":234,"author":{"gitId":"songfangyl"},"content":"        String trimmedKeywords \u003d keyword.trim();","lastModifiedDate":"2023-10-31"},{"lineNumber":235,"author":{"gitId":"songfangyl"},"content":"        String[] keywords \u003d trimmedKeywords.split(\"\\\\s+\");","lastModifiedDate":"2023-10-31"},{"lineNumber":236,"author":{"gitId":"songfangyl"},"content":"        return new EmailContainsKeywordsPredicate(Arrays.asList(keywords));","lastModifiedDate":"2023-10-31"},{"lineNumber":237,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":238,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":239,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":240,"author":{"gitId":"songfangyl"},"content":"     * Parses a {@code String keyword} into corresponding {@code Predicate\u003cPerson\u003e}.","lastModifiedDate":"2023-10-31"},{"lineNumber":241,"author":{"gitId":"songfangyl"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-31"},{"lineNumber":242,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":243,"author":{"gitId":"songfangyl"},"content":"    public static Predicate\u003cPerson\u003e parseInsuranceKeywords(String keyword) {","lastModifiedDate":"2023-10-30"},{"lineNumber":244,"author":{"gitId":"songfangyl"},"content":"        requireNonNull(keyword);","lastModifiedDate":"2023-10-30"},{"lineNumber":245,"author":{"gitId":"songfangyl"},"content":"        String trimmedKeywords \u003d keyword.trim();","lastModifiedDate":"2023-10-30"},{"lineNumber":246,"author":{"gitId":"songfangyl"},"content":"        String[] keywords \u003d trimmedKeywords.split(\"\\\\s+\");","lastModifiedDate":"2023-10-30"},{"lineNumber":247,"author":{"gitId":"songfangyl"},"content":"        return new InsuranceContainsKeywordsPredicate(Arrays.asList(keywords));","lastModifiedDate":"2023-10-30"},{"lineNumber":248,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":249,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":250,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":251,"author":{"gitId":"songfangyl"},"content":"     * Parses a {@code String keyword} into corresponding {@code Predicate\u003cPerson\u003e}.","lastModifiedDate":"2023-10-31"},{"lineNumber":252,"author":{"gitId":"songfangyl"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-31"},{"lineNumber":253,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":254,"author":{"gitId":"songfangyl"},"content":"    public static Predicate\u003cPerson\u003e parsePhoneKeywords(String keyword) {","lastModifiedDate":"2023-10-31"},{"lineNumber":255,"author":{"gitId":"songfangyl"},"content":"        requireNonNull(keyword);","lastModifiedDate":"2023-10-31"},{"lineNumber":256,"author":{"gitId":"songfangyl"},"content":"        String trimmedKeywords \u003d keyword.trim();","lastModifiedDate":"2023-10-31"},{"lineNumber":257,"author":{"gitId":"songfangyl"},"content":"        String[] keywords \u003d trimmedKeywords.split(\"\\\\s+\");","lastModifiedDate":"2023-10-31"},{"lineNumber":258,"author":{"gitId":"songfangyl"},"content":"        return new PhoneContainsKeywordsPredicate(Arrays.asList(keywords));","lastModifiedDate":"2023-10-31"},{"lineNumber":259,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":260,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":261,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":262,"author":{"gitId":"songfangyl"},"content":"     * Parses a {@code String keyword} into corresponding {@code Predicate\u003cPerson\u003e}.","lastModifiedDate":"2023-10-31"},{"lineNumber":263,"author":{"gitId":"songfangyl"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-31"},{"lineNumber":264,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":265,"author":{"gitId":"songfangyl"},"content":"    public static Predicate\u003cPerson\u003e parseTagKeywords(String keyword) {","lastModifiedDate":"2023-10-31"},{"lineNumber":266,"author":{"gitId":"songfangyl"},"content":"        requireNonNull(keyword);","lastModifiedDate":"2023-10-31"},{"lineNumber":267,"author":{"gitId":"songfangyl"},"content":"        String trimmedKeywords \u003d keyword.trim();","lastModifiedDate":"2023-10-31"},{"lineNumber":268,"author":{"gitId":"songfangyl"},"content":"        String[] keywords \u003d trimmedKeywords.split(\"\\\\s+\");","lastModifiedDate":"2023-10-31"},{"lineNumber":269,"author":{"gitId":"songfangyl"},"content":"        return new TagContainsKeywordsPredicate(Arrays.asList(keywords));","lastModifiedDate":"2023-10-31"},{"lineNumber":270,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":271,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":272,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":273,"author":{"gitId":"songfangyl"},"content":"     * Parses a {@code String keyword} into corresponding {@code Predicate\u003cPerson\u003e}.","lastModifiedDate":"2023-10-31"},{"lineNumber":274,"author":{"gitId":"songfangyl"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-31"},{"lineNumber":275,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":276,"author":{"gitId":"songfangyl"},"content":"    public static Predicate\u003cPerson\u003e parseRemarkKeywords(String keyword) {","lastModifiedDate":"2023-10-31"},{"lineNumber":277,"author":{"gitId":"songfangyl"},"content":"        requireNonNull(keyword);","lastModifiedDate":"2023-10-31"},{"lineNumber":278,"author":{"gitId":"songfangyl"},"content":"        String trimmedKeywords \u003d keyword.trim();","lastModifiedDate":"2023-10-31"},{"lineNumber":279,"author":{"gitId":"songfangyl"},"content":"        String[] keywords \u003d trimmedKeywords.split(\"\\\\s+\");","lastModifiedDate":"2023-10-31"},{"lineNumber":280,"author":{"gitId":"songfangyl"},"content":"        return new RemarkContainsKeywordsPredicate(Arrays.asList(keywords));","lastModifiedDate":"2023-10-31"},{"lineNumber":281,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":282,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":283,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":284,"author":{"gitId":"songfangyl"},"content":"     * Parses a {@code String keyword} into corresponding {@code Predicate\u003cPerson\u003e}.","lastModifiedDate":"2023-10-31"},{"lineNumber":285,"author":{"gitId":"songfangyl"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-31"},{"lineNumber":286,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":287,"author":{"gitId":"songfangyl"},"content":"    public static Predicate\u003cPerson\u003e parsePriorityKeywords(String keyword) {","lastModifiedDate":"2023-10-31"},{"lineNumber":288,"author":{"gitId":"songfangyl"},"content":"        requireNonNull(keyword);","lastModifiedDate":"2023-10-31"},{"lineNumber":289,"author":{"gitId":"songfangyl"},"content":"        String trimmedKeywords \u003d keyword.trim();","lastModifiedDate":"2023-10-31"},{"lineNumber":290,"author":{"gitId":"songfangyl"},"content":"        String[] keywords \u003d trimmedKeywords.split(\"\\\\s+\");","lastModifiedDate":"2023-10-31"},{"lineNumber":291,"author":{"gitId":"songfangyl"},"content":"        return new PriorityContainsKeywordsPredicate(Arrays.asList(keywords));","lastModifiedDate":"2023-10-31"},{"lineNumber":292,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":293,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":294,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":295,"author":{"gitId":"Jweewee"},"content":"     * Checks if the retrieved date from user input is valid.","lastModifiedDate":"2023-10-31"},{"lineNumber":296,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":297,"author":{"gitId":"Jweewee"},"content":"     * A valid date input is of the format yyyy-mm-dd.","lastModifiedDate":"2023-10-31"},{"lineNumber":298,"author":{"gitId":"Jweewee"},"content":"     * `mm` is a 2-digit number in the range 01-12, which represents a calendar month.","lastModifiedDate":"2023-10-31"},{"lineNumber":299,"author":{"gitId":"Jweewee"},"content":"     * `dd` is a 2-digit number in the range of 01-31, depending on the number of days in the calendar month.","lastModifiedDate":"2023-10-31"},{"lineNumber":300,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":301,"author":{"gitId":"Jweewee"},"content":"     * If the retrieved date is valid, returns the date in `dd MMM yyyy` format.","lastModifiedDate":"2023-10-31"},{"lineNumber":302,"author":{"gitId":"Jweewee"},"content":"     * Otherwise, it means that the user did not enter the correct input. A ParseException will be thrown.","lastModifiedDate":"2023-10-31"},{"lineNumber":303,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":304,"author":{"gitId":"Jweewee"},"content":"     * @param date Date String retrieved from user input","lastModifiedDate":"2023-10-31"},{"lineNumber":305,"author":{"gitId":"Jweewee"},"content":"     * @return A String representing the date in the specified format if it is valid (for add/update)","lastModifiedDate":"2023-10-31"},{"lineNumber":306,"author":{"gitId":"Jweewee"},"content":"     * @throws ParseException Thrown when the date retrieved is invalid","lastModifiedDate":"2023-10-31"},{"lineNumber":307,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":308,"author":{"gitId":"Jweewee"},"content":"    public static String parseDateString(String date) throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":309,"author":{"gitId":"Jweewee"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":310,"author":{"gitId":"Jweewee"},"content":"            checkDate(date);","lastModifiedDate":"2023-10-31"},{"lineNumber":311,"author":{"gitId":"Jweewee"},"content":"            // converts the date to the specified format","lastModifiedDate":"2023-10-31"},{"lineNumber":312,"author":{"gitId":"Jweewee"},"content":"            date \u003d LocalDate.parse(date).format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":313,"author":{"gitId":"Jweewee"},"content":"        } catch (DateTimeParseException dtpe) {","lastModifiedDate":"2023-10-31"},{"lineNumber":314,"author":{"gitId":"Jweewee"},"content":"            throw new ParseException(Appointment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-31"},{"lineNumber":315,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":316,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":317,"author":{"gitId":"Jweewee"},"content":"        return date.trim();","lastModifiedDate":"2023-10-31"},{"lineNumber":318,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":319,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":320,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":321,"author":{"gitId":"Jweewee"},"content":"     * Checks if the date input has already passed.","lastModifiedDate":"2023-10-31"},{"lineNumber":322,"author":{"gitId":"Jweewee"},"content":"     * If date input is in the past, date is invalid, throws an error.","lastModifiedDate":"2023-10-31"},{"lineNumber":323,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":324,"author":{"gitId":"Jweewee"},"content":"     * @param date Input date string.","lastModifiedDate":"2023-10-31"},{"lineNumber":325,"author":{"gitId":"Jweewee"},"content":"     * @throws ParseException Date input has passed.","lastModifiedDate":"2023-10-31"},{"lineNumber":326,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":327,"author":{"gitId":"Jweewee"},"content":"    private static void checkDate(String date) throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":328,"author":{"gitId":"Jweewee"},"content":"        LocalDate localDate \u003d LocalDate.parse(date);","lastModifiedDate":"2023-10-31"},{"lineNumber":329,"author":{"gitId":"Jweewee"},"content":"        LocalDate now \u003d LocalDate.now();","lastModifiedDate":"2023-10-31"},{"lineNumber":330,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":331,"author":{"gitId":"Jweewee"},"content":"        if (localDate.isBefore(now)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":332,"author":{"gitId":"Jweewee"},"content":"            throw new ParseException(Appointment.PREVIOUS_DATE_INPUT);","lastModifiedDate":"2023-11-01"},{"lineNumber":333,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":334,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":335,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":336,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":337,"author":{"gitId":"Jweewee"},"content":"     * Checks if the retrieved time from user input is valid.","lastModifiedDate":"2023-10-31"},{"lineNumber":338,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":339,"author":{"gitId":"Jweewee"},"content":"     * A valid time input is of the format hh:mm (in 24-hour format).","lastModifiedDate":"2023-10-31"},{"lineNumber":340,"author":{"gitId":"Jweewee"},"content":"     * `hh` is a 2-digit number in the range 00-23, which represents the hour in the 24-hour format.","lastModifiedDate":"2023-10-31"},{"lineNumber":341,"author":{"gitId":"Jweewee"},"content":"     * `mm` is a 2-digit number in the range of 00-59, which represents the minute in the 24-hour format.","lastModifiedDate":"2023-10-31"},{"lineNumber":342,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":343,"author":{"gitId":"Jweewee"},"content":"     * If the retrieved time is valid, returns the time in `HHmm` format.","lastModifiedDate":"2023-10-31"},{"lineNumber":344,"author":{"gitId":"Jweewee"},"content":"     * Otherwise, it means that the user did not enter the correct input. A ParseException will be thrown.","lastModifiedDate":"2023-10-31"},{"lineNumber":345,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":346,"author":{"gitId":"Jweewee"},"content":"     * @param time Time String retrieved from user input","lastModifiedDate":"2023-10-31"},{"lineNumber":347,"author":{"gitId":"Jweewee"},"content":"     * @return A String representing the time in the specified format if it is valid.","lastModifiedDate":"2023-10-31"},{"lineNumber":348,"author":{"gitId":"Jweewee"},"content":"     * @throws ParseException Thrown when the date retrieved is invalid","lastModifiedDate":"2023-10-31"},{"lineNumber":349,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":350,"author":{"gitId":"Jweewee"},"content":"    public static String parseTimeString(String time) throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":351,"author":{"gitId":"Jweewee"},"content":"        String validationPattern \u003d \"^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$\";","lastModifiedDate":"2023-10-31"},{"lineNumber":352,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":353,"author":{"gitId":"Jweewee"},"content":"        if (!time.equals(Appointment.NO_TIME)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":354,"author":{"gitId":"Jweewee"},"content":"            // checks that time only contains HH:mm and nothing else","lastModifiedDate":"2023-10-31"},{"lineNumber":355,"author":{"gitId":"Jweewee"},"content":"            if (!time.matches(validationPattern)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":356,"author":{"gitId":"Jweewee"},"content":"                throw new ParseException(Appointment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-31"},{"lineNumber":357,"author":{"gitId":"Jweewee"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":358,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":359,"author":{"gitId":"Jweewee"},"content":"            // converts the time to the specified format","lastModifiedDate":"2023-10-31"},{"lineNumber":360,"author":{"gitId":"Jweewee"},"content":"            time \u003d LocalTime.parse(time).format(DateTimeFormatter.ofPattern(\"HHmm\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":361,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":362,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":363,"author":{"gitId":"Jweewee"},"content":"        return time.trim();","lastModifiedDate":"2023-10-31"},{"lineNumber":364,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":365,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"TehOPanas":1,"songfangyl":114,"LamJiuFong":19,"-":120,"Jweewee":111}},{"path":"src/main/java/seedu/address/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"    private final String secondaryPrefix;","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"     * Constructs a {@code Prefix} with {@code prefix} and {@code secondaryPrefix}.","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"    public Prefix(String prefix, String secondaryPrefix) {","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"        requireAllNonNull(prefix, secondaryPrefix);","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"        this.prefix \u003d prefix.toLowerCase();","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"        this.secondaryPrefix \u003d secondaryPrefix.toLowerCase();","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"    public String getSecondaryPrefix() {","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"        return secondaryPrefix;","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"     * Returns the length of the prefix.","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"    public int getPrefixLength() {","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"        return prefix.length();","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"     * Returns the length of the secondaryPrefix.","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"    public int getSecondaryPrefixLength() {","lastModifiedDate":"2023-11-03"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"        return secondaryPrefix.length();","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"     * Returns a formatter display message for this {@code Prefix}.","lastModifiedDate":"2023-11-03"},{"lineNumber":47,"author":{"gitId":"yucongkoo"},"content":"     * @return","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":49,"author":{"gitId":"yucongkoo"},"content":"    public String getDisplayMessage() {","lastModifiedDate":"2023-11-03"},{"lineNumber":50,"author":{"gitId":"yucongkoo"},"content":"        return String.format(\"%s (%s)\", prefix, secondaryPrefix);","lastModifiedDate":"2023-11-03"},{"lineNumber":51,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":52,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!(other instanceof Prefix)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return prefix.equals(otherPrefix.prefix);","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"yucongkoo":37,"-":40}},{"path":"src/main/java/seedu/address/logic/parser/PriorityCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LamJiuFong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"LamJiuFong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"LamJiuFong"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.logic.commands.PriorityCommand;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.priority.Priority;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"LamJiuFong"},"content":"/**","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"LamJiuFong"},"content":" * Parses input arguments and creates a new PriorityCommand object.","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"LamJiuFong"},"content":" */","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"LamJiuFong"},"content":"public class PriorityCommandParser implements Parser\u003cPriorityCommand\u003e {","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"LamJiuFong"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(PriorityCommandParser.class);","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"LamJiuFong"},"content":"     * Parses the given {@code String} of arguments in the context of the ParserCommand","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"LamJiuFong"},"content":"     * and returns a ParserCommand object for execution.","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"LamJiuFong"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"LamJiuFong"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"LamJiuFong"},"content":"    public PriorityCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"LamJiuFong"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"LamJiuFong"},"content":"        logger.fine(\"PriorityCommandParser parsing...\");","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"LamJiuFong"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"LamJiuFong"},"content":"        String[] separatedArgs \u003d trimmedArgs.split(\"\\\\s+\", 2);","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"LamJiuFong"},"content":"        assert separatedArgs.length \u003e\u003d 1 : \"separatedArgs length is smaller than 1\";","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"LamJiuFong"},"content":"        Index index;","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"LamJiuFong"},"content":"            index \u003d ParserUtil.parseIndex(separatedArgs[0]);","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"LamJiuFong"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"LamJiuFong"},"content":"            logger.finer(\"Parsing failed due to invalid command format\");","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"LamJiuFong"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"LamJiuFong"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, PriorityCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"LamJiuFong"},"content":"        if (separatedArgs.length !\u003d 2) {","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"LamJiuFong"},"content":"            logger.finer(\"Parsing failed due to invalid command format\");","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"LamJiuFong"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"LamJiuFong"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, PriorityCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"LamJiuFong"},"content":"        Priority priority \u003d ParserUtil.parsePriority(separatedArgs[1]);","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"LamJiuFong"},"content":"        return new PriorityCommand(index, priority);","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"LamJiuFong"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"LamJiuFong":56}},{"path":"src/main/java/seedu/address/logic/parser/RemarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-09-27"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"/**","lastModifiedDate":"2023-09-27"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":" * Parses input arguments and creates a new RemarkCommand object","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":" */","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"public class RemarkCommandParser implements Parser\u003cRemarkCommand\u003e {","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(RemarkCommandParser.class);","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"     * Parses input and return the RemarkCommand object.","lastModifiedDate":"2023-09-27"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"     * @param args Input string.","lastModifiedDate":"2023-09-27"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"     * @return Corresponding RemarkCommand Object.","lastModifiedDate":"2023-09-27"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"     * @throws ParseException When there is an exception.","lastModifiedDate":"2023-09-27"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"    public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-09-27"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-09-27"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"        logger.fine(\"RemarkCommandParser parsing...\");","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"songfangyl"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"songfangyl"},"content":"        String[] separatedArgs \u003d trimmedArgs.split(\"\\\\s+\", 2);","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":39,"author":{"gitId":"songfangyl"},"content":"        assert separatedArgs.length \u003e\u003d 1 : \"separatedArgs length is smaller than 1\";","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"songfangyl"},"content":"        Index index;","lastModifiedDate":"2023-09-27"},{"lineNumber":41,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"songfangyl"},"content":"        try {","lastModifiedDate":"2023-09-27"},{"lineNumber":43,"author":{"gitId":"songfangyl"},"content":"            index \u003d ParserUtil.parseIndex(separatedArgs[0]);","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"songfangyl"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-09-27"},{"lineNumber":45,"author":{"gitId":"songfangyl"},"content":"            logger.finer(\"Parsing failed due to invalid command format\");","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"songfangyl"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-09-27"},{"lineNumber":47,"author":{"gitId":"songfangyl"},"content":"                    RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2023-09-27"},{"lineNumber":48,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-09-27"},{"lineNumber":49,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":50,"author":{"gitId":"songfangyl"},"content":"        Remark remark;","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"songfangyl"},"content":"        if (separatedArgs.length \u003d\u003d 1) {","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"songfangyl"},"content":"            remark \u003d ParserUtil.parseRemark(\"\");","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"songfangyl"},"content":"        } else {","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"songfangyl"},"content":"            remark \u003d ParserUtil.parseRemark(separatedArgs[1]);","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":58,"author":{"gitId":"songfangyl"},"content":"        return new RemarkCommand(index, remark);","lastModifiedDate":"2023-09-27"},{"lineNumber":59,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":60,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":61,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"songfangyl":61}},{"path":"src/main/java/seedu/address/logic/parser/TagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_TAG;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DELETE_TAG;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"import java.util.Collection;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.logic.commands.TagCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.logic.commands.TagCommand.UpdatePersonTagsDescriptor;","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":" * Parses input arguments and creates a new TagCommand object","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"public class TagCommandParser implements Parser\u003cTagCommand\u003e {","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(TagCommandParser.class);","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"    private static final Prefix[] validPrefixes \u003d new Prefix[] { PREFIX_ADD_TAG, PREFIX_DELETE_TAG };","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"     * Parses the given {@code String} of arguments in the context of the TagCommand","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"     * and returns a TagCommand object for execution.","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"    public TagCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"        logger.fine(\"TagCommandParser parsing: \" + args);","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, validPrefixes);","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"        Index index \u003d extractIndex(argMultimap);","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"        UpdatePersonTagsDescriptor updatePersonTagsDescriptor \u003d extractUpdatePersonTagsDescriptor(argMultimap);","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"        verifyHasTagsToUpdate(updatePersonTagsDescriptor);","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"        return new TagCommand(index, updatePersonTagsDescriptor);","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"yucongkoo"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"yucongkoo"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"yucongkoo"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"yucongkoo"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"yucongkoo"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"yucongkoo"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"yucongkoo"},"content":"            return Optional.empty();","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"yucongkoo"},"content":"        return Optional.of(ParserUtil.parseTags(tags));","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":64,"author":{"gitId":"yucongkoo"},"content":"     * Extracts and returns the index from the {@code argMultimap}.","lastModifiedDate":"2023-10-29"},{"lineNumber":65,"author":{"gitId":"yucongkoo"},"content":"     * @throws ParseException if the index is not an unsigned positive integer.","lastModifiedDate":"2023-10-29"},{"lineNumber":66,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":67,"author":{"gitId":"yucongkoo"},"content":"    private Index extractIndex(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-10-29"},{"lineNumber":68,"author":{"gitId":"yucongkoo"},"content":"        requireNonNull(argMultimap);","lastModifiedDate":"2023-10-29"},{"lineNumber":69,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":70,"author":{"gitId":"yucongkoo"},"content":"        try {","lastModifiedDate":"2023-10-29"},{"lineNumber":71,"author":{"gitId":"yucongkoo"},"content":"            return ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-29"},{"lineNumber":72,"author":{"gitId":"yucongkoo"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-29"},{"lineNumber":73,"author":{"gitId":"yucongkoo"},"content":"            logger.finer(\"TagCommandParser parse failed due to invalid index: \" + argMultimap);","lastModifiedDate":"2023-10-29"},{"lineNumber":74,"author":{"gitId":"yucongkoo"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, TagCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-29"},{"lineNumber":75,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":76,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":77,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":78,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":79,"author":{"gitId":"yucongkoo"},"content":"     * Extracts the tags to add and delete from the {@code argMultimap},","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"yucongkoo"},"content":"     * and returns a {@code UpdatePersonTagsDescriptor}.","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"yucongkoo"},"content":"     * @throws ParseException if there are tags that are invalid.","lastModifiedDate":"2023-10-29"},{"lineNumber":82,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":83,"author":{"gitId":"yucongkoo"},"content":"    private UpdatePersonTagsDescriptor extractUpdatePersonTagsDescriptor(ArgumentMultimap argMultimap)","lastModifiedDate":"2023-10-29"},{"lineNumber":84,"author":{"gitId":"yucongkoo"},"content":"            throws ParseException {","lastModifiedDate":"2023-10-29"},{"lineNumber":85,"author":{"gitId":"yucongkoo"},"content":"        requireNonNull(argMultimap);","lastModifiedDate":"2023-10-29"},{"lineNumber":86,"author":{"gitId":"yucongkoo"},"content":"        Set\u003cTag\u003e tagsToAdd \u003d parseTags(argMultimap.getAllValues(PREFIX_ADD_TAG)).orElse(new HashSet\u003c\u003e());","lastModifiedDate":"2023-10-29"},{"lineNumber":87,"author":{"gitId":"yucongkoo"},"content":"        Set\u003cTag\u003e tagsToDelete \u003d parseTags(argMultimap.getAllValues(PREFIX_DELETE_TAG)).orElse(new HashSet\u003c\u003e());","lastModifiedDate":"2023-10-29"},{"lineNumber":88,"author":{"gitId":"yucongkoo"},"content":"        return new UpdatePersonTagsDescriptor(tagsToAdd, tagsToDelete);","lastModifiedDate":"2023-10-29"},{"lineNumber":89,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":90,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":91,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":92,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":93,"author":{"gitId":"yucongkoo"},"content":"     * Throws a {@code ParseException} if the {@code descriptor} does not have any tags to update.","lastModifiedDate":"2023-10-29"},{"lineNumber":94,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":95,"author":{"gitId":"yucongkoo"},"content":"    private void verifyHasTagsToUpdate(UpdatePersonTagsDescriptor descriptor) throws ParseException {","lastModifiedDate":"2023-10-29"},{"lineNumber":96,"author":{"gitId":"yucongkoo"},"content":"        requireNonNull(descriptor);","lastModifiedDate":"2023-10-29"},{"lineNumber":97,"author":{"gitId":"yucongkoo"},"content":"        if (!descriptor.hasTagToUpdate()) {","lastModifiedDate":"2023-10-29"},{"lineNumber":98,"author":{"gitId":"yucongkoo"},"content":"            logger.finer(\"TagCommandParser parse failed due to missing tags to update\");","lastModifiedDate":"2023-10-29"},{"lineNumber":99,"author":{"gitId":"yucongkoo"},"content":"            throw new ParseException(TagCommand.MESSAGE_NOT_UPDATED);","lastModifiedDate":"2023-10-29"},{"lineNumber":100,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":101,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":102,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"yucongkoo":102}},{"path":"src/main/java/seedu/address/logic/parser/UnmarkAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"import seedu.address.logic.commands.UnmarkAppointmentCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":" * Parses input arguments and creates a new UnmarkAppointmentCommand object","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"public class UnmarkAppointmentCommandParser implements Parser\u003cUnmarkAppointmentCommand\u003e {","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":"    public UnmarkAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"Jweewee"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args);","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":"        Index index;","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"Jweewee"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"Jweewee"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"Jweewee"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"Jweewee"},"content":"                    UnmarkAppointmentCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"Jweewee"},"content":"        return new UnmarkAppointmentCommand(index, Appointment.getDefaultEmptyAppointment());","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"Jweewee":31}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"Jweewee"},"content":"     * Returns the size of the current filtered list.","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"Jweewee"},"content":"    int getFilteredPersonListSize();","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":87,"Jweewee":5}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"yucongkoo"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-10-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":132,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"yucongkoo"},"content":"    public int getFilteredPersonListSize() {","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"yucongkoo"},"content":"        return filteredPersons.size();","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yucongkoo":6,"-":148}},{"path":"src/main/java/seedu/address/model/PersonComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LamJiuFong"},"content":"package seedu.address.model;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"LamJiuFong"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"LamJiuFong"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.priority.Priority.Level;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"LamJiuFong"},"content":"/** Compares two Persons according to their priority level. **/","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"LamJiuFong"},"content":"public class PersonComparator implements Comparator\u003cPerson\u003e {","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"LamJiuFong"},"content":"    public static final HashMap\u003cLevel, Integer\u003e LEVEL_TO_INT_MAP \u003d new HashMap\u003c\u003e() {","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":"        {","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"LamJiuFong"},"content":"            put(Level.HIGH, 3);","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"LamJiuFong"},"content":"            put(Level.MEDIUM, 2);","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"LamJiuFong"},"content":"            put(Level.LOW, 1);","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"LamJiuFong"},"content":"            put(Level.NONE, 0);","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"LamJiuFong"},"content":"    };","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"LamJiuFong"},"content":"    @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"LamJiuFong"},"content":"    public int compare(Person p1, Person p2) {","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"LamJiuFong"},"content":"        Level firstPersonLevel \u003d p1.getPriorityLevel();","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"LamJiuFong"},"content":"        Level secondPersonLevel \u003d p2.getPriorityLevel();","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"LamJiuFong"},"content":"        return LEVEL_TO_INT_MAP.get(secondPersonLevel) - LEVEL_TO_INT_MAP.get(firstPersonLevel);","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"LamJiuFong"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"LamJiuFong":27}},{"path":"src/main/java/seedu/address/model/insurance/Insurance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TehOPanas"},"content":"package seedu.address.model.insurance;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"TehOPanas"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"TehOPanas"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"TehOPanas"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"TehOPanas"},"content":" * Represents the insurance plan the customer currently holds or plans to purchase","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"TehOPanas"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidInsuranceName(String)}","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"TehOPanas"},"content":" *","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"TehOPanas"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"TehOPanas"},"content":"public class Insurance {","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"TehOPanas"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+(\\\\s+\\\\p{Alnum}+)*\";","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"TehOPanas"},"content":"    public static final int MAX_INSURANCE_COUNT \u003d 8;","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"TehOPanas"},"content":"    private static final int MAX_LENGTH \u003d 32;","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"TehOPanas"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"            String.format(\"Insurance name should be alphanumeric,\"","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"                    + \"non-empty and not longer than %d characters\", MAX_LENGTH);","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"TehOPanas"},"content":"    private String insuranceName;","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"TehOPanas"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"TehOPanas"},"content":"     * Constructs an {@code Insurance}.","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"TehOPanas"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"TehOPanas"},"content":"     * @param name A valid insurance plan.","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"TehOPanas"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"TehOPanas"},"content":"    public Insurance(String name) {","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"TehOPanas"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"TehOPanas"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"TehOPanas"},"content":"        checkArgument(isValidInsuranceName(trimmedName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"TehOPanas"},"content":"        this.insuranceName \u003d trimmedName;","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"TehOPanas"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"TehOPanas"},"content":"     * Checks validity of insurance name","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"TehOPanas"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"TehOPanas"},"content":"     * @param test insurance name","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"TehOPanas"},"content":"     * @return true if insurance name is valid","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"TehOPanas"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"TehOPanas"},"content":"    public static boolean isValidInsuranceName(String test) {","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"TehOPanas"},"content":"        requireNonNull(test);","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"TehOPanas"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 test.replaceAll(\"\\\\s\", \"\").length() \u003c\u003d MAX_LENGTH;","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"TehOPanas"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"TehOPanas"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"TehOPanas"},"content":"        if (o \u003d\u003d null) {","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"TehOPanas"},"content":"            return false;","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"TehOPanas"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"TehOPanas"},"content":"        if (!(o instanceof Insurance)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"TehOPanas"},"content":"            return false;","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"TehOPanas"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"TehOPanas"},"content":"        Insurance temp \u003d (Insurance) o;","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"TehOPanas"},"content":"        return insuranceName.equals(temp.getInsuranceName());","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"TehOPanas"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"TehOPanas"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"TehOPanas"},"content":"        return insuranceName.hashCode();","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"TehOPanas"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"TehOPanas"},"content":"    public String toString() {","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"TehOPanas"},"content":"        return \u0027[\u0027 + insuranceName + \u0027]\u0027;","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"TehOPanas"},"content":"    public String getInsuranceName() {","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"TehOPanas"},"content":"        return insuranceName;","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"songfangyl"},"content":"     * Checks if the insurance name contains a word that starts with the given prefix, ignoring case.","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"songfangyl"},"content":"     * @param prefix The prefix to search for.","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"songfangyl"},"content":"     * @return True if any word in the insurance name starts with the specified prefix, false otherwise.","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"songfangyl"},"content":"    public static boolean isInsuranceContainsPrefix(Insurance insurance, String prefix) {","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"songfangyl"},"content":"        String lowerInsuranceName \u003d insurance.insuranceName.toLowerCase();","lastModifiedDate":"2023-10-30"},{"lineNumber":79,"author":{"gitId":"songfangyl"},"content":"        String lowerPrefix \u003d prefix.toLowerCase();","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"songfangyl"},"content":"        for (String lowerNamePart: lowerInsuranceName.split(\"\\\\s+\")) {","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"songfangyl"},"content":"            if (lowerNamePart.startsWith(lowerPrefix)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"songfangyl"},"content":"                return true;","lastModifiedDate":"2023-10-30"},{"lineNumber":83,"author":{"gitId":"songfangyl"},"content":"            }","lastModifiedDate":"2023-10-30"},{"lineNumber":84,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":85,"author":{"gitId":"songfangyl"},"content":"        return false;","lastModifiedDate":"2023-10-30"},{"lineNumber":86,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"TehOPanas"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"TehOPanas":68,"yucongkoo":2,"songfangyl":17}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"public abstract class Address {","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"    public static final int MAX_LENGTH \u003d 100;","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"            \"Address should not be longer than 100 characters.\";","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"     * Creates and returns the {@code Address} object with value {@code address}.","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"    public static Address createAddress(String address) {","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"        if (trimmedAddress.isEmpty()) {","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"            return EmptyAddress.getEmptyAddress();","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"        return new NonEmptyAddress(trimmedAddress);","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"     * Returns true if a given string is a valid address.","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"        requireNonNull(test);","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"        int addressLen \u003d test.trim().length();","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"        return addressLen \u003c\u003d MAX_LENGTH;","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"     * Returns true if this instance is an empty address.","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"    public abstract boolean isEmptyAddress();","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"     * Returns the address value.","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"    public abstract String getValue();","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"songfangyl"},"content":"     * Checks if the full address contains a word that starts with the given prefix, ignoring case.","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"songfangyl"},"content":"     * @param prefix The prefix to search for.","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"songfangyl"},"content":"     * @return False if there is an empty address,","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"songfangyl"},"content":"     *     True if any word in the full address starts with the specified prefix,","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"songfangyl"},"content":"     *     false otherwise.","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"songfangyl"},"content":"    public static boolean isAddressContainsPrefix(Address address, String prefix) {","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"songfangyl"},"content":"        if (address.isEmptyAddress()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"songfangyl"},"content":"            return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"songfangyl"},"content":"        String lowerFullAddress \u003d address.getValue().toLowerCase();","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"songfangyl"},"content":"        String lowerPrefix \u003d prefix.toLowerCase();","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"songfangyl"},"content":"        for (String lowerAddress: lowerFullAddress.split(\"\\\\s+\")) {","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"songfangyl"},"content":"            if (lowerAddress.startsWith(lowerPrefix)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"songfangyl"},"content":"                return true;","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"songfangyl"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"songfangyl"},"content":"        return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yucongkoo":23,"songfangyl":20,"-":29}},{"path":"src/main/java/seedu/address/model/person/Appointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"import java.util.Objects;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":" * Represents an appointment with the Person in the address book.","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":" * Guarantees: immutable; is always valid.","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"Jweewee"},"content":"public class Appointment {","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"Jweewee"},"content":"            \"Index must be a positive integer \\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"Jweewee"},"content":"            + \"Date must be in YYYY-MM-DD format, not in the past, and a valid date \\n\"","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"            + \"Time must be in 24h HH:MM format \\n\"","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"Jweewee"},"content":"            + \"Venue should not be longer than 30 characters\";","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"Jweewee"},"content":"    public static final String NO_APPOINTMENT \u003d \"-\";","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"Jweewee"},"content":"    public static final String NO_TIME \u003d \"\";","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"Jweewee"},"content":"    public static final String NO_VENUE \u003d \"\";","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"Jweewee"},"content":"    public static final String INVALID_DATE_INPUT \u003d \"Date parameter must be YYYY-MM-DD, \"","lastModifiedDate":"2023-11-08"},{"lineNumber":30,"author":{"gitId":"Jweewee"},"content":"            + \"with valid calendar year, month and days\";","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"Jweewee"},"content":"    public static final String PREVIOUS_DATE_INPUT \u003d \"Unable to schedule your appointment \"","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"Jweewee"},"content":"            + \"on a date in the past\";","lastModifiedDate":"2023-11-08"},{"lineNumber":33,"author":{"gitId":"Jweewee"},"content":"    public static final String INVALID_TIME_INPUT \u003d \"Time field must be HH:MM\";","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"Jweewee"},"content":"    public static final String INVALID_VENUE_INPUT \u003d \"Venue field must not be greater than 30 characters\";","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"Jweewee"},"content":"    public static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"Jweewee"},"content":"    public static final DateTimeFormatter TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"Jweewee"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(Appointment.class);","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"Jweewee"},"content":"    private String date;","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"Jweewee"},"content":"    private String time;","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"Jweewee"},"content":"    private String venue;","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"Jweewee"},"content":"    private LocalDate localDate;","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"Jweewee"},"content":"     * Constructs an {@code Appointment}.","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"Jweewee"},"content":"     * @param date A valid date (dd MMM yyyy).","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"Jweewee"},"content":"     * @param time A valid time (hhmm).","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"Jweewee"},"content":"     * @param venue A venue (less than 30 characters).","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"Jweewee"},"content":"    public Appointment(String date, String time, String venue) {","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"Jweewee"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"Jweewee"},"content":"        checkArgument(isValidDateFormat(date), INVALID_DATE_INPUT);","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"Jweewee"},"content":"        checkArgument(isValidTimeFormat(time), INVALID_TIME_INPUT);","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"Jweewee"},"content":"        checkArgument(isValidVenueFormat(time), INVALID_VENUE_INPUT);","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"Jweewee"},"content":"        assert(!date.isEmpty());","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"Jweewee"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"Jweewee"},"content":"        this.time \u003d time;","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"Jweewee"},"content":"        this.venue \u003d venue;","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"Jweewee"},"content":"        this.localDate \u003d createDate();","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"Jweewee"},"content":"     * Creates a Date object from the date from a String.","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"Jweewee"},"content":"     * @return LocalDate object from the string.","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"Jweewee"},"content":"    public LocalDate createDate() {","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"Jweewee"},"content":"        if (date.equals(NO_APPOINTMENT)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"Jweewee"},"content":"            return LocalDate.MAX; // no date -\u003e return max localdate","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"Jweewee"},"content":"        return LocalDate.parse(this.date, DATE_FORMATTER);","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"Jweewee"},"content":"     * Returns a string in the format \u0027dd MM yyyy\u0027 of the appointment.","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"Jweewee"},"content":"     * @return A string representing the date of the appointment.","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"Jweewee"},"content":"    public String getDate() {","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"Jweewee"},"content":"        return this.date;","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"Jweewee"},"content":"     * Returns a string in the format \u0027HHmm\u0027hrs of the appointment.","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"Jweewee"},"content":"     * @return A string representing the formatted time of the appointment.","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"Jweewee"},"content":"    public String getTimeFormatted() {","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"Jweewee"},"content":"        if (this.time.equals(NO_TIME)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"Jweewee"},"content":"            return \"\";","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"Jweewee"},"content":"        return this.time + \"hrs\";","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"Jweewee"},"content":"     * Returns a string in the format \u0027HHmm\u0027 of the appointment.","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"Jweewee"},"content":"     * @return A string representing the time of the appointment.","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"Jweewee"},"content":"    public String getTime() {","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"Jweewee"},"content":"        return this.time;","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":106,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":107,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":108,"author":{"gitId":"Jweewee"},"content":"     * Returns a string representing the venue of the appointment.","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"Jweewee"},"content":"     * @return A string representing the venue of the appointment.","lastModifiedDate":"2023-10-31"},{"lineNumber":111,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"Jweewee"},"content":"    public String getVenue() {","lastModifiedDate":"2023-10-31"},{"lineNumber":113,"author":{"gitId":"Jweewee"},"content":"        return this.venue;","lastModifiedDate":"2023-10-31"},{"lineNumber":114,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":115,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":116,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":117,"author":{"gitId":"Jweewee"},"content":"     * Generates an empty {@code Appointment}.","lastModifiedDate":"2023-10-31"},{"lineNumber":118,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":119,"author":{"gitId":"Jweewee"},"content":"     * @return An empty Appointment.","lastModifiedDate":"2023-10-31"},{"lineNumber":120,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":121,"author":{"gitId":"Jweewee"},"content":"    public static Appointment getDefaultEmptyAppointment() {","lastModifiedDate":"2023-10-31"},{"lineNumber":122,"author":{"gitId":"Jweewee"},"content":"        return new Appointment(NO_APPOINTMENT, NO_TIME, NO_VENUE);","lastModifiedDate":"2023-10-31"},{"lineNumber":123,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":124,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":125,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":126,"author":{"gitId":"Jweewee"},"content":"     * Checks if the date input follows the format (dd-MM-yyyy).","lastModifiedDate":"2023-10-31"},{"lineNumber":127,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":128,"author":{"gitId":"Jweewee"},"content":"     * @param test The input date string.","lastModifiedDate":"2023-10-31"},{"lineNumber":129,"author":{"gitId":"Jweewee"},"content":"     * @return A boolean indicating if the date input follows the format.","lastModifiedDate":"2023-10-31"},{"lineNumber":130,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":131,"author":{"gitId":"Jweewee"},"content":"    public static boolean isValidDateFormat(String test) {","lastModifiedDate":"2023-10-31"},{"lineNumber":132,"author":{"gitId":"Jweewee"},"content":"        if (test.equalsIgnoreCase(NO_APPOINTMENT)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":133,"author":{"gitId":"Jweewee"},"content":"            return true;","lastModifiedDate":"2023-10-31"},{"lineNumber":134,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":135,"author":{"gitId":"Jweewee"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":136,"author":{"gitId":"Jweewee"},"content":"            LocalDate.parse(test, DATE_FORMATTER);","lastModifiedDate":"2023-11-01"},{"lineNumber":137,"author":{"gitId":"Jweewee"},"content":"            return true;","lastModifiedDate":"2023-10-31"},{"lineNumber":138,"author":{"gitId":"Jweewee"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":139,"author":{"gitId":"Jweewee"},"content":"            return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":140,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":141,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":142,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":143,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":144,"author":{"gitId":"Jweewee"},"content":"     * Checks if the time input follows the format (HHmm).","lastModifiedDate":"2023-10-31"},{"lineNumber":145,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":146,"author":{"gitId":"Jweewee"},"content":"     * @param test The input time string.","lastModifiedDate":"2023-10-31"},{"lineNumber":147,"author":{"gitId":"Jweewee"},"content":"     * @return A boolean indicating if the time input follows the format.","lastModifiedDate":"2023-10-31"},{"lineNumber":148,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":149,"author":{"gitId":"Jweewee"},"content":"    public static boolean isValidTimeFormat(String test) {","lastModifiedDate":"2023-10-31"},{"lineNumber":150,"author":{"gitId":"Jweewee"},"content":"        if (test.equalsIgnoreCase(NO_TIME)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":151,"author":{"gitId":"Jweewee"},"content":"            return true;","lastModifiedDate":"2023-10-31"},{"lineNumber":152,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":153,"author":{"gitId":"Jweewee"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":154,"author":{"gitId":"Jweewee"},"content":"            LocalTime.parse(test, TIME_FORMATTER);","lastModifiedDate":"2023-11-01"},{"lineNumber":155,"author":{"gitId":"Jweewee"},"content":"            return true;","lastModifiedDate":"2023-10-31"},{"lineNumber":156,"author":{"gitId":"Jweewee"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":157,"author":{"gitId":"Jweewee"},"content":"            return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":158,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":159,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":160,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":161,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":162,"author":{"gitId":"Jweewee"},"content":"     * Checks if the venue input follows the format (max 30 characters).","lastModifiedDate":"2023-10-31"},{"lineNumber":163,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":164,"author":{"gitId":"Jweewee"},"content":"     * @param test The input venue string.","lastModifiedDate":"2023-10-31"},{"lineNumber":165,"author":{"gitId":"Jweewee"},"content":"     * @return A boolean indicating if the time input follows the format.","lastModifiedDate":"2023-10-31"},{"lineNumber":166,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":167,"author":{"gitId":"Jweewee"},"content":"    public static boolean isValidVenueFormat(String test) {","lastModifiedDate":"2023-10-31"},{"lineNumber":168,"author":{"gitId":"Jweewee"},"content":"        if (test.equalsIgnoreCase(NO_VENUE)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":169,"author":{"gitId":"Jweewee"},"content":"            return true;","lastModifiedDate":"2023-10-31"},{"lineNumber":170,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":171,"author":{"gitId":"Jweewee"},"content":"        return test.length() \u003c\u003d 30;","lastModifiedDate":"2023-10-31"},{"lineNumber":172,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":173,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":174,"author":{"gitId":"Jweewee"},"content":"     * Checks whether an appointment has been scheduled.","lastModifiedDate":"2023-10-31"},{"lineNumber":175,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":176,"author":{"gitId":"Jweewee"},"content":"     * @param appointment The appointment to be checked","lastModifiedDate":"2023-10-31"},{"lineNumber":177,"author":{"gitId":"Jweewee"},"content":"     * @return A boolean indicating whether the appointment has been scheduled.","lastModifiedDate":"2023-10-31"},{"lineNumber":178,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":179,"author":{"gitId":"Jweewee"},"content":"    public static boolean isAppointmentEmpty(Appointment appointment) {","lastModifiedDate":"2023-10-31"},{"lineNumber":180,"author":{"gitId":"Jweewee"},"content":"        return appointment.equals(getDefaultEmptyAppointment());","lastModifiedDate":"2023-10-31"},{"lineNumber":181,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":182,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":183,"author":{"gitId":"Jweewee"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":184,"author":{"gitId":"Jweewee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-31"},{"lineNumber":185,"author":{"gitId":"Jweewee"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-31"},{"lineNumber":186,"author":{"gitId":"Jweewee"},"content":"            return true;","lastModifiedDate":"2023-10-31"},{"lineNumber":187,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":188,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":189,"author":{"gitId":"Jweewee"},"content":"        if (!(other instanceof Appointment)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":190,"author":{"gitId":"Jweewee"},"content":"            return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":191,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":192,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":193,"author":{"gitId":"Jweewee"},"content":"        Appointment otherAppt \u003d (Appointment) other;","lastModifiedDate":"2023-10-31"},{"lineNumber":194,"author":{"gitId":"Jweewee"},"content":"        return otherAppt.getDate().equals(getDate())","lastModifiedDate":"2023-10-31"},{"lineNumber":195,"author":{"gitId":"Jweewee"},"content":"                \u0026\u0026 otherAppt.getTimeFormatted().equals(getTimeFormatted())","lastModifiedDate":"2023-10-31"},{"lineNumber":196,"author":{"gitId":"Jweewee"},"content":"                \u0026\u0026 otherAppt.getVenue().equals(getVenue());","lastModifiedDate":"2023-10-31"},{"lineNumber":197,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":198,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":199,"author":{"gitId":"Jweewee"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":200,"author":{"gitId":"Jweewee"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-31"},{"lineNumber":201,"author":{"gitId":"Jweewee"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-10-31"},{"lineNumber":202,"author":{"gitId":"Jweewee"},"content":"        return Objects.hash(date, time, venue);","lastModifiedDate":"2023-10-31"},{"lineNumber":203,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":204,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":205,"author":{"gitId":"Jweewee"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":206,"author":{"gitId":"Jweewee"},"content":"    public String toString() {","lastModifiedDate":"2023-10-31"},{"lineNumber":207,"author":{"gitId":"Jweewee"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-31"},{"lineNumber":208,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":209,"author":{"gitId":"Jweewee"},"content":"        builder.append(this.getDate())","lastModifiedDate":"2023-10-31"},{"lineNumber":210,"author":{"gitId":"Jweewee"},"content":"                .append(\" \")","lastModifiedDate":"2023-10-31"},{"lineNumber":211,"author":{"gitId":"Jweewee"},"content":"                .append(this.getTimeFormatted())","lastModifiedDate":"2023-10-31"},{"lineNumber":212,"author":{"gitId":"Jweewee"},"content":"                .append(\" \")","lastModifiedDate":"2023-10-31"},{"lineNumber":213,"author":{"gitId":"Jweewee"},"content":"                .append(this.getVenue());","lastModifiedDate":"2023-10-31"},{"lineNumber":214,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":215,"author":{"gitId":"Jweewee"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-31"},{"lineNumber":216,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":217,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"Jweewee":217}},{"path":"src/main/java/seedu/address/model/person/AppointmentCount.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":" * Keeps track of the number of appointment the user have with a client.","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"public class AppointmentCount {","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"    public static final String INVALID_COUNT_INPUT \u003d \"Appointment count cannot be negative\";","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"    public static final String INITIAL_COUNT \u003d \"0\";","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"    private int count;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"     * Constructor for {@Code AppointmentCount}","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":"     * @param count A String representing the number of appointment with a contact.","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"Jweewee"},"content":"    public AppointmentCount(String count) {","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"Jweewee"},"content":"        requireNonNull(count);","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":"        checkArgument(isValidCount(count), INVALID_COUNT_INPUT);","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"Jweewee"},"content":"        this.count \u003d Integer.parseInt(count);","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"Jweewee"},"content":"     * Increases the appointment count by 1.","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"Jweewee"},"content":"     * @return The updated AppointmentCount","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"Jweewee"},"content":"    public AppointmentCount incrementAppointmentCount() {","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"Jweewee"},"content":"        count +\u003d 1;","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"Jweewee"},"content":"        return this;","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"Jweewee"},"content":"     * Decreases the appointment count by 1.","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"Jweewee"},"content":"     * @return The updated AppointmentCount","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"Jweewee"},"content":"    public AppointmentCount decrementAppointmentCount() {","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"Jweewee"},"content":"        count--;","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"Jweewee"},"content":"        return this;","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"Jweewee"},"content":"    public int getCount() {","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"Jweewee"},"content":"        return this.count;","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"Jweewee"},"content":"     * Checks if the input count is a non-negative integer.","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"Jweewee"},"content":"     * @param test The input count string.","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"Jweewee"},"content":"     * @return A boolean indicating if the count is valid.","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"Jweewee"},"content":"    public static boolean isValidCount(String test) {","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"Jweewee"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"Jweewee"},"content":"            int n \u003d Integer.parseInt(test);","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"Jweewee"},"content":"            return n \u003e\u003d 0;","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"Jweewee"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"Jweewee"},"content":"            return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"Jweewee"},"content":"     * Checks if the Appointment count is can be decremented.","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"Jweewee"},"content":"     * @param test The current Appointment Count.","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"Jweewee"},"content":"     * @return A boolean indicating if the current Appointment Count can be decremented.","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"Jweewee"},"content":"    public static boolean isValidDecrementCount(AppointmentCount test) {","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"Jweewee"},"content":"        return (test.count \u003e\u003d 1);","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"Jweewee"},"content":"     * Generates the default {@code AppointmentCount}.","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"Jweewee"},"content":"     * @return An {@code AppointmentCount} with zero count.","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"Jweewee"},"content":"    public static AppointmentCount getDefaultAppointmentCount() {","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"Jweewee"},"content":"        return new AppointmentCount(INITIAL_COUNT);","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"Jweewee"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"Jweewee"},"content":"    public String toString() {","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"Jweewee"},"content":"        return String.valueOf(count);","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"Jweewee"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"Jweewee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"Jweewee"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"Jweewee"},"content":"                || (other instanceof AppointmentCount // instanceof handles nulls","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"Jweewee"},"content":"                \u0026\u0026 count \u003d\u003d ((AppointmentCount) other).count); // state check","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"Jweewee"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"Jweewee"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"Jweewee"},"content":"        return count;","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"Jweewee":99}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Email should be a valid email address(i.e. local-part@domain).\";","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"TehOPanas"},"content":"    private static final String OWASP_EMAIL_VALIDATION \u003d \"^[a-zA-Z0-9_+\u0026*-]+(?:\\\\.[a-zA-Z0-9_+\u0026*-]+)*@\"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"TehOPanas"},"content":"            + \"(?:[a-zA-Z0-9-]+\\\\.)+[a-zA-Z]{2,7}\";","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"TehOPanas"},"content":"    public static final String VALIDATION_REGEX \u003d OWASP_EMAIL_VALIDATION;","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":32,"author":{"gitId":"TehOPanas"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"TehOPanas"},"content":"     * The format of email follows the OWASP email validation rule :","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"TehOPanas"},"content":"     * 1. The email address should contain at least one character in the local part,","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"TehOPanas"},"content":"     *    consisting of letters (both uppercase and lowercase), digits, underscores,","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"TehOPanas"},"content":"     *    and certain special characters including +, \u0026, *, and -.","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"TehOPanas"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"TehOPanas"},"content":"     * 2. The \"@\" symbol is required to separate the local part from the domain part.","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"TehOPanas"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"TehOPanas"},"content":"     * 3. The domain part of the email address should consist of at least one domain label,","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"TehOPanas"},"content":"     *    with each label containing letters, digits, and hyphens, and separated by periods.","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"TehOPanas"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"TehOPanas"},"content":"     * 4. The top-level domain (TLD) of the email address should consist of letters (uppercase or lowercase)","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"TehOPanas"},"content":"     *    and have a length of between 2 and 7 characters.","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"TehOPanas"},"content":"        return value.equalsIgnoreCase(otherEmail.value);","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"songfangyl"},"content":"     * Checks if the email starts with the given prefix, ignoring case.","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"songfangyl"},"content":"     * @param prefix The prefix to search for.","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"songfangyl"},"content":"     * @return True if the email starts with the specified prefix, false otherwise.","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"songfangyl"},"content":"    public static boolean isEmailContainsPrefix(Email email, String prefix) {","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"songfangyl"},"content":"        return email.value.startsWith(prefix.toLowerCase());","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"TehOPanas":17,"yucongkoo":1,"songfangyl":10,"-":57}},{"path":"src/main/java/seedu/address/model/person/EmptyAddress.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"/**","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":" * Represents a Person\u0027s empty address in the address book as a singleton.","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":" */","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"public class EmptyAddress extends Address {","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"    public static final String DUMMY_VALUE_FOR_EMPTY_ADDRESS \u003d \" \";","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"    private static final String VALUE_FOR_DISPLAY \u003d \"-\";","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"    private static EmptyAddress emptyAddress;","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"    // make constructor private","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"    private EmptyAddress() {","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"     * Returns the singleton instance of {@code EmptyAddress}.","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"    public static EmptyAddress getEmptyAddress() {","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"        if (emptyAddress \u003d\u003d null) {","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"            emptyAddress \u003d new EmptyAddress();","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"        return emptyAddress;","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-10-08"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"    public boolean isEmptyAddress() {","lastModifiedDate":"2023-10-08"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"        return true;","lastModifiedDate":"2023-10-08"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"    public String getValue() {","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"        return DUMMY_VALUE_FOR_EMPTY_ADDRESS;","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-10-08"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-08"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"        return other \u003d\u003d this;","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"        return VALUE_FOR_DISPLAY;","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"yucongkoo":49}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"            \"Names should be alphanumeric, not empty and not longer than 64 characters.\";","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"TehOPanas"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"TehOPanas"},"content":"     * The name is only valid if the first character is not empty space and","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"TehOPanas"},"content":"     * the total length is not larger than 64 characters.","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"TehOPanas"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 test.length() \u003c\u003d 64;","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return fullName.equals(otherName.fullName);","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"songfangyl"},"content":"     * Checks if the full name contains a word that starts with the given prefix, ignoring case.","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"songfangyl"},"content":"     * @param prefix The prefix to search for.","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"songfangyl"},"content":"     * @return True if any word in the full name starts with the specified prefix, false otherwise.","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"songfangyl"},"content":"    public static boolean isFullNameContainsPrefix(Name name, String prefix) {","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"songfangyl"},"content":"        String lowerFullName \u003d name.fullName.toLowerCase();","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"songfangyl"},"content":"        String lowerPrefix \u003d prefix.toLowerCase();","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"songfangyl"},"content":"        for (String lowerName: lowerFullName.split(\"\\\\s+\")) {","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"songfangyl"},"content":"            if (lowerName.startsWith(lowerPrefix)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"songfangyl"},"content":"                return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"songfangyl"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"songfangyl"},"content":"        return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"TehOPanas":4,"yucongkoo":1,"songfangyl":17,"-":65}},{"path":"src/main/java/seedu/address/model/person/NonEmptyAddress.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":" * Represents a Person\u0027s non-empty address in the address book.","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"public class NonEmptyAddress extends Address {","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"    private final String value;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"     * Constructs an {@code NonEmptyAddress}.","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"     * @param address A valid address.","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"    public NonEmptyAddress(String address) {","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"        requireNonNull(address);","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"        checkArgument(isValidNonEmptyAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"        value \u003d address;","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"    public boolean isEmptyAddress() {","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"        return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"    public String getValue() {","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"        return value;","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"        return value;","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"yucongkoo"},"content":"        if (!(other instanceof NonEmptyAddress)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"yucongkoo"},"content":"        NonEmptyAddress otherAddress \u003d (NonEmptyAddress) other;","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"yucongkoo"},"content":"        return value.equals(otherAddress.value);","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"yucongkoo"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"yucongkoo"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"yucongkoo"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"yucongkoo"},"content":"    private static boolean isValidNonEmptyAddress(String address) {","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"yucongkoo"},"content":"        requireNonNull(address);","lastModifiedDate":"2023-11-08"},{"lineNumber":62,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":63,"author":{"gitId":"yucongkoo"},"content":"        return isValidAddress(address) \u0026\u0026 !address.isEmpty();","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"yucongkoo":65}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"import java.util.Collection;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.insurance.Insurance;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.priority.Priority;","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.priority.Priority.Level;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"    private final Remark remark;","lastModifiedDate":"2023-09-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":32,"author":{"gitId":"LamJiuFong"},"content":"    private final Priority priority;","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"Jweewee"},"content":"    private final Appointment appointment;","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"Jweewee"},"content":"    private AppointmentCount count;","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"Jweewee"},"content":"    private final Set\u003cInsurance\u003e insurances \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"Jweewee"},"content":"    public Person(Name name, Phone phone, Email email,","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"Jweewee"},"content":"                  Address address, Remark remark, Set\u003cTag\u003e tags,","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"Jweewee"},"content":"                  Set\u003cInsurance\u003e insurances, Appointment appointment, AppointmentCount count) {","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"Jweewee"},"content":"        requireAllNonNull(name, phone, email, address, tags, insurances, remark, appointment, count);","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"songfangyl"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-09-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"Jweewee"},"content":"        this.insurances.addAll(insurances);","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"LamJiuFong"},"content":"        this.priority \u003d new Priority(Priority.NONE_PRIORITY_KEYWORD);","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"Jweewee"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"Jweewee"},"content":"        this.count \u003d count;","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"Jweewee"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Remark remark,","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"Jweewee"},"content":"                  Set\u003cTag\u003e tags, Set\u003cInsurance\u003e insurances,","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"Jweewee"},"content":"                  Appointment appointment, AppointmentCount count, Priority priority) {","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"Jweewee"},"content":"        requireAllNonNull(name, phone, email, address, tags, priority, insurances, remark, appointment, count);","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"songfangyl"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"Jweewee"},"content":"        this.insurances.addAll(insurances);","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"Jweewee"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"Jweewee"},"content":"        this.count \u003d count;","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"LamJiuFong"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":98,"author":{"gitId":"songfangyl"},"content":"    public Remark getRemark() {","lastModifiedDate":"2023-09-27"},{"lineNumber":99,"author":{"gitId":"songfangyl"},"content":"        return remark;","lastModifiedDate":"2023-09-27"},{"lineNumber":100,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":101,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":102,"author":{"gitId":"LamJiuFong"},"content":"    public Priority getPriority() {","lastModifiedDate":"2023-10-22"},{"lineNumber":103,"author":{"gitId":"LamJiuFong"},"content":"        return priority;","lastModifiedDate":"2023-10-22"},{"lineNumber":104,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":106,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":107,"author":{"gitId":"Jweewee"},"content":"    public Level getPriorityLevel() {","lastModifiedDate":"2023-10-31"},{"lineNumber":108,"author":{"gitId":"Jweewee"},"content":"        return priority.getPriorityLevel();","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"Jweewee"},"content":"    public Set\u003cInsurance\u003e getInsurances() {","lastModifiedDate":"2023-10-31"},{"lineNumber":120,"author":{"gitId":"Jweewee"},"content":"        return Collections.unmodifiableSet(insurances);","lastModifiedDate":"2023-10-31"},{"lineNumber":121,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":122,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":123,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":124,"author":{"gitId":"yucongkoo"},"content":"     * Returns the number of tags assigned to this person.","lastModifiedDate":"2023-10-20"},{"lineNumber":125,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":126,"author":{"gitId":"yucongkoo"},"content":"    public int getTagsCount() {","lastModifiedDate":"2023-10-20"},{"lineNumber":127,"author":{"gitId":"yucongkoo"},"content":"        return tags.size();","lastModifiedDate":"2023-10-20"},{"lineNumber":128,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":129,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":130,"author":{"gitId":"Jweewee"},"content":"    public int getInsurancesCount() {","lastModifiedDate":"2023-10-31"},{"lineNumber":131,"author":{"gitId":"Jweewee"},"content":"        return insurances.size();","lastModifiedDate":"2023-10-31"},{"lineNumber":132,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":133,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":134,"author":{"gitId":"Jweewee"},"content":"    public Appointment getAppointment() {","lastModifiedDate":"2023-10-31"},{"lineNumber":135,"author":{"gitId":"Jweewee"},"content":"        return appointment;","lastModifiedDate":"2023-10-31"},{"lineNumber":136,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":137,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":138,"author":{"gitId":"Jweewee"},"content":"    public AppointmentCount getAppointmentCount() {","lastModifiedDate":"2023-10-31"},{"lineNumber":139,"author":{"gitId":"Jweewee"},"content":"        return count;","lastModifiedDate":"2023-10-31"},{"lineNumber":140,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":141,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"Jweewee"},"content":"        if (otherPerson \u003d\u003d null) {","lastModifiedDate":"2023-10-31"},{"lineNumber":152,"author":{"gitId":"Jweewee"},"content":"            return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":153,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":154,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":155,"author":{"gitId":"Jweewee"},"content":"        return this.phone.equals(otherPerson.phone) || this.email.equals(otherPerson.email);","lastModifiedDate":"2023-10-31"},{"lineNumber":156,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":157,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":158,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":159,"author":{"gitId":"Jweewee"},"content":"     * Returns true if the Person has a remarks.","lastModifiedDate":"2023-10-31"},{"lineNumber":160,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":161,"author":{"gitId":"Jweewee"},"content":"    public boolean hasRemark() {","lastModifiedDate":"2023-10-31"},{"lineNumber":162,"author":{"gitId":"Jweewee"},"content":"        return !this.remark.isEmptyRemark();","lastModifiedDate":"2023-10-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":165,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-16"},{"lineNumber":166,"author":{"gitId":"yucongkoo"},"content":"     * Creates and returns a {@code Person} with details of {@code source}, adding tags in {@code tagsToAdd} and","lastModifiedDate":"2023-10-20"},{"lineNumber":167,"author":{"gitId":"yucongkoo"},"content":"     * removing tags in {@code tagsToDelete}.","lastModifiedDate":"2023-10-20"},{"lineNumber":168,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-16"},{"lineNumber":169,"author":{"gitId":"yucongkoo"},"content":"    public static Person createPersonWithUpdatedTags(Person source,","lastModifiedDate":"2023-10-20"},{"lineNumber":170,"author":{"gitId":"yucongkoo"},"content":"            Collection\u003cTag\u003e tagsToAdd,","lastModifiedDate":"2023-10-20"},{"lineNumber":171,"author":{"gitId":"yucongkoo"},"content":"            Collection\u003cTag\u003e tagsToDelete) {","lastModifiedDate":"2023-10-20"},{"lineNumber":172,"author":{"gitId":"yucongkoo"},"content":"        requireAllNonNull(source, tagsToAdd, tagsToDelete);","lastModifiedDate":"2023-10-20"},{"lineNumber":173,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":174,"author":{"gitId":"yucongkoo"},"content":"        Set\u003cTag\u003e updatedTags \u003d new HashSet\u003c\u003e(source.tags);","lastModifiedDate":"2023-10-20"},{"lineNumber":175,"author":{"gitId":"yucongkoo"},"content":"        updatedTags.removeAll(tagsToDelete);","lastModifiedDate":"2023-10-16"},{"lineNumber":176,"author":{"gitId":"yucongkoo"},"content":"        updatedTags.addAll(tagsToAdd);","lastModifiedDate":"2023-10-16"},{"lineNumber":177,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":178,"author":{"gitId":"Jweewee"},"content":"        return new Person(source.name, source.phone, source.email, source.address, source.remark,","lastModifiedDate":"2023-10-31"},{"lineNumber":179,"author":{"gitId":"Jweewee"},"content":"                updatedTags, source.insurances, source.appointment, source.count, source.priority);","lastModifiedDate":"2023-10-31"},{"lineNumber":180,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":181,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":182,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":183,"author":{"gitId":"Jweewee"},"content":"     * Create a new copy of {@code Person} with update information of {@code Insurance}","lastModifiedDate":"2023-10-31"},{"lineNumber":184,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":185,"author":{"gitId":"Jweewee"},"content":"    public static Person createPersonWithUpdatedInsurances(Person source, Collection\u003cInsurance\u003e insurancesToAdd,","lastModifiedDate":"2023-10-31"},{"lineNumber":186,"author":{"gitId":"Jweewee"},"content":"                                                           Collection\u003cInsurance\u003e insurancesToDelete) {","lastModifiedDate":"2023-10-31"},{"lineNumber":187,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":188,"author":{"gitId":"Jweewee"},"content":"        requireAllNonNull(source, insurancesToAdd, insurancesToDelete);","lastModifiedDate":"2023-10-31"},{"lineNumber":189,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":190,"author":{"gitId":"Jweewee"},"content":"        Set\u003cInsurance\u003e updatedInsurances \u003d new HashSet\u003c\u003e(source.insurances);","lastModifiedDate":"2023-10-31"},{"lineNumber":191,"author":{"gitId":"Jweewee"},"content":"        updatedInsurances.removeAll(insurancesToDelete);","lastModifiedDate":"2023-10-31"},{"lineNumber":192,"author":{"gitId":"Jweewee"},"content":"        updatedInsurances.addAll(insurancesToAdd);","lastModifiedDate":"2023-10-31"},{"lineNumber":193,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":194,"author":{"gitId":"Jweewee"},"content":"        return new Person(source.name, source.phone, source.email, source.address, source.remark,","lastModifiedDate":"2023-10-31"},{"lineNumber":195,"author":{"gitId":"Jweewee"},"content":"                source.tags, updatedInsurances, source.appointment, source.count, source.priority);","lastModifiedDate":"2023-10-31"},{"lineNumber":196,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":197,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":198,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":199,"author":{"gitId":"LamJiuFong"},"content":"     * Creates and returns a {@code Person} with details of {@code source}, assigning priority of","lastModifiedDate":"2023-10-22"},{"lineNumber":200,"author":{"gitId":"LamJiuFong"},"content":"     * {@code newPriority}.","lastModifiedDate":"2023-10-22"},{"lineNumber":201,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":202,"author":{"gitId":"Jweewee"},"content":"    public static Person createPersonWithUpdatedPriority(Person personToUpdate, Priority newPriority) {","lastModifiedDate":"2023-10-31"},{"lineNumber":203,"author":{"gitId":"Jweewee"},"content":"        requireAllNonNull(personToUpdate, newPriority);","lastModifiedDate":"2023-10-31"},{"lineNumber":204,"author":{"gitId":"Jweewee"},"content":"        return new Person(personToUpdate.name, personToUpdate.phone, personToUpdate.email, personToUpdate.address,","lastModifiedDate":"2023-10-31"},{"lineNumber":205,"author":{"gitId":"Jweewee"},"content":"                personToUpdate.remark, personToUpdate.tags, personToUpdate.insurances,","lastModifiedDate":"2023-10-31"},{"lineNumber":206,"author":{"gitId":"Jweewee"},"content":"                personToUpdate.appointment, personToUpdate.count, newPriority);","lastModifiedDate":"2023-10-31"},{"lineNumber":207,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":208,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":209,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":210,"author":{"gitId":"Jweewee"},"content":"     * Creates and returns a {@code Person} with details of {@code personToEdit} edited with","lastModifiedDate":"2023-10-31"},{"lineNumber":211,"author":{"gitId":"Jweewee"},"content":"     * {@code editPersonDescriptor}.","lastModifiedDate":"2023-10-31"},{"lineNumber":212,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":213,"author":{"gitId":"Jweewee"},"content":"    public static Person createPersonWithEditedInformation(Person personToEdit,","lastModifiedDate":"2023-10-31"},{"lineNumber":214,"author":{"gitId":"Jweewee"},"content":"                                                            EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2023-10-31"},{"lineNumber":215,"author":{"gitId":"Jweewee"},"content":"        requireAllNonNull(personToEdit, editPersonDescriptor);","lastModifiedDate":"2023-10-31"},{"lineNumber":216,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":217,"author":{"gitId":"Jweewee"},"content":"        Name newName \u003d editPersonDescriptor.getName().orElse(personToEdit.name);","lastModifiedDate":"2023-10-31"},{"lineNumber":218,"author":{"gitId":"Jweewee"},"content":"        Phone newPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.phone);","lastModifiedDate":"2023-10-31"},{"lineNumber":219,"author":{"gitId":"Jweewee"},"content":"        Email newEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.email);","lastModifiedDate":"2023-10-31"},{"lineNumber":220,"author":{"gitId":"Jweewee"},"content":"        Address newAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.address);","lastModifiedDate":"2023-10-31"},{"lineNumber":221,"author":{"gitId":"Jweewee"},"content":"        Remark remark \u003d personToEdit.remark;","lastModifiedDate":"2023-10-31"},{"lineNumber":222,"author":{"gitId":"Jweewee"},"content":"        Set\u003cTag\u003e tags \u003d personToEdit.tags;","lastModifiedDate":"2023-10-31"},{"lineNumber":223,"author":{"gitId":"Jweewee"},"content":"        Appointment appointment \u003d personToEdit.appointment;","lastModifiedDate":"2023-10-31"},{"lineNumber":224,"author":{"gitId":"Jweewee"},"content":"        AppointmentCount appointmentCount \u003d personToEdit.count;","lastModifiedDate":"2023-10-31"},{"lineNumber":225,"author":{"gitId":"Jweewee"},"content":"        Priority priority \u003d personToEdit.priority;","lastModifiedDate":"2023-10-31"},{"lineNumber":226,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":227,"author":{"gitId":"Jweewee"},"content":"        return new Person(newName, newPhone, newEmail, newAddress, remark, tags, personToEdit.insurances,","lastModifiedDate":"2023-10-31"},{"lineNumber":228,"author":{"gitId":"Jweewee"},"content":"                appointment, appointmentCount, priority);","lastModifiedDate":"2023-10-31"},{"lineNumber":229,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":230,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":231,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":232,"author":{"gitId":"Jweewee"},"content":"     * Creates and returns a {@code Person} with details of {@code personToUpdate} edited with","lastModifiedDate":"2023-10-31"},{"lineNumber":233,"author":{"gitId":"Jweewee"},"content":"     * {@code newAppointment}.","lastModifiedDate":"2023-10-31"},{"lineNumber":234,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":235,"author":{"gitId":"Jweewee"},"content":"    public static Person createPersonWithEditedAppointment(Person personToUpdate, Appointment newAppointment) {","lastModifiedDate":"2023-10-31"},{"lineNumber":236,"author":{"gitId":"Jweewee"},"content":"        requireAllNonNull(personToUpdate, newAppointment);","lastModifiedDate":"2023-10-31"},{"lineNumber":237,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":238,"author":{"gitId":"Jweewee"},"content":"        return new Person(personToUpdate.name, personToUpdate.phone, personToUpdate.email, personToUpdate.address,","lastModifiedDate":"2023-10-31"},{"lineNumber":239,"author":{"gitId":"Jweewee"},"content":"                personToUpdate.remark, personToUpdate.tags, personToUpdate.insurances,","lastModifiedDate":"2023-10-31"},{"lineNumber":240,"author":{"gitId":"Jweewee"},"content":"                newAppointment, personToUpdate.count, personToUpdate.priority);","lastModifiedDate":"2023-10-31"},{"lineNumber":241,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":242,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":243,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":244,"author":{"gitId":"Jweewee"},"content":"     * Creates and returns a {@code Person} with details of {@code personToUpdate}, {@code appointment}","lastModifiedDate":"2023-10-31"},{"lineNumber":245,"author":{"gitId":"Jweewee"},"content":"     * incremented appointment count with","lastModifiedDate":"2023-10-31"},{"lineNumber":246,"author":{"gitId":"Jweewee"},"content":"     * {@code count}.","lastModifiedDate":"2023-10-31"},{"lineNumber":247,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":248,"author":{"gitId":"Jweewee"},"content":"    public static Person createPersonWithIncreasedCount(Person personToUpdate,","lastModifiedDate":"2023-10-31"},{"lineNumber":249,"author":{"gitId":"Jweewee"},"content":"                                                        Appointment appointment, AppointmentCount count) {","lastModifiedDate":"2023-10-31"},{"lineNumber":250,"author":{"gitId":"Jweewee"},"content":"        requireAllNonNull(personToUpdate, appointment, count);","lastModifiedDate":"2023-10-31"},{"lineNumber":251,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":252,"author":{"gitId":"Jweewee"},"content":"        return new Person(personToUpdate.name, personToUpdate.phone, personToUpdate.email, personToUpdate.address,","lastModifiedDate":"2023-10-31"},{"lineNumber":253,"author":{"gitId":"Jweewee"},"content":"                personToUpdate.remark, personToUpdate.tags, personToUpdate.insurances,","lastModifiedDate":"2023-10-31"},{"lineNumber":254,"author":{"gitId":"Jweewee"},"content":"                appointment, count.incrementAppointmentCount(), personToUpdate.priority);","lastModifiedDate":"2023-10-31"},{"lineNumber":255,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":256,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":257,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":258,"author":{"gitId":"Jweewee"},"content":"     * Creates and returns a {@code Person} with details of {@code personToUpdate}, {@code appointment}","lastModifiedDate":"2023-10-31"},{"lineNumber":259,"author":{"gitId":"Jweewee"},"content":"     * decremented appointment count with","lastModifiedDate":"2023-10-31"},{"lineNumber":260,"author":{"gitId":"Jweewee"},"content":"     * {@code count}.","lastModifiedDate":"2023-10-31"},{"lineNumber":261,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":262,"author":{"gitId":"Jweewee"},"content":"    public static Person createPersonWithDecreasedCount(Person personToUpdate,","lastModifiedDate":"2023-10-31"},{"lineNumber":263,"author":{"gitId":"Jweewee"},"content":"                                                        Appointment appointment, AppointmentCount count) {","lastModifiedDate":"2023-10-31"},{"lineNumber":264,"author":{"gitId":"Jweewee"},"content":"        requireAllNonNull(personToUpdate, appointment, count);","lastModifiedDate":"2023-10-31"},{"lineNumber":265,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":266,"author":{"gitId":"Jweewee"},"content":"        return new Person(personToUpdate.name, personToUpdate.phone, personToUpdate.email, personToUpdate.address,","lastModifiedDate":"2023-10-31"},{"lineNumber":267,"author":{"gitId":"Jweewee"},"content":"                personToUpdate.remark, personToUpdate.tags, personToUpdate.insurances,","lastModifiedDate":"2023-10-31"},{"lineNumber":268,"author":{"gitId":"Jweewee"},"content":"                appointment, count.decrementAppointmentCount(), personToUpdate.priority);","lastModifiedDate":"2023-10-31"},{"lineNumber":269,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":270,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":271,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":272,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":273,"author":{"gitId":"LamJiuFong"},"content":"     * Returns true is the Person has the same priority as {@code priority}.","lastModifiedDate":"2023-10-24"},{"lineNumber":274,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":275,"author":{"gitId":"LamJiuFong"},"content":"    public boolean hasSamePriority(Priority priority) {","lastModifiedDate":"2023-10-24"},{"lineNumber":276,"author":{"gitId":"LamJiuFong"},"content":"        return this.priority.equals(priority);","lastModifiedDate":"2023-10-24"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":280,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":281,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":282,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":291,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":296,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":297,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":298,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":299,"author":{"gitId":"songfangyl"},"content":"                \u0026\u0026 remark.equals(otherPerson.remark)","lastModifiedDate":"2023-09-27"},{"lineNumber":300,"author":{"gitId":"LamJiuFong"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags)","lastModifiedDate":"2023-10-22"},{"lineNumber":301,"author":{"gitId":"Jweewee"},"content":"                \u0026\u0026 insurances.equals(otherPerson.insurances)","lastModifiedDate":"2023-10-31"},{"lineNumber":302,"author":{"gitId":"Jweewee"},"content":"                \u0026\u0026 appointment.equals(otherPerson.appointment)","lastModifiedDate":"2023-10-31"},{"lineNumber":303,"author":{"gitId":"Jweewee"},"content":"                \u0026\u0026 count.equals(otherPerson.count)","lastModifiedDate":"2023-10-31"},{"lineNumber":304,"author":{"gitId":"LamJiuFong"},"content":"                \u0026\u0026 priority.equals(otherPerson.priority);","lastModifiedDate":"2023-10-22"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":310,"author":{"gitId":"Jweewee"},"content":"        return Objects.hash(name, phone, email, address, tags, insurances, priority, remark, appointment);","lastModifiedDate":"2023-10-31"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":315,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":320,"author":{"gitId":"LamJiuFong"},"content":"                .add(\"priority\", priority)","lastModifiedDate":"2023-10-22"},{"lineNumber":321,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2023-10-31"},{"lineNumber":322,"author":{"gitId":"Jweewee"},"content":"                .add(\"insurances\", insurances)","lastModifiedDate":"2023-10-31"},{"lineNumber":323,"author":{"gitId":"Jweewee"},"content":"                .add(\"remark\", remark)","lastModifiedDate":"2023-10-31"},{"lineNumber":324,"author":{"gitId":"Jweewee"},"content":"                .add(\"appointment\", appointment)","lastModifiedDate":"2023-10-31"},{"lineNumber":325,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":327,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yucongkoo":23,"songfangyl":9,"LamJiuFong":23,"-":120,"Jweewee":152}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"            \"Phone number should be an 8-digit number(i.e. a Singapore number).\";","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"TehOPanas"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{8}\";","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"TehOPanas"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"TehOPanas"},"content":"     * The phone number has to be 8 digits (Singapore number)","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"songfangyl"},"content":"     * Checks if the phone starts with the given prefix, ignoring case.","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"songfangyl"},"content":"     * @param prefix The prefix to search for.","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"songfangyl"},"content":"     * @return True if the phone starts with the specified prefix, false otherwise.","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"songfangyl"},"content":"    public static boolean isPhoneContainsPrefix(Phone phone, String prefix) {","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"songfangyl"},"content":"        return phone.value.startsWith(prefix.toLowerCase());","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"TehOPanas":3,"yucongkoo":1,"songfangyl":10,"-":59}},{"path":"src/main/java/seedu/address/model/person/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-09-27"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-09-27"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":6,"author":{"gitId":"LamJiuFong"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"/**","lastModifiedDate":"2023-09-27"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":" * Represents a Person\u0027s remark in the address book.","lastModifiedDate":"2023-09-27"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2023-09-27"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":" */","lastModifiedDate":"2023-09-27"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"public class Remark {","lastModifiedDate":"2023-09-27"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Remark should not be longer than 150 characters.\";","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"    private final String value;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"     * Constructs a Remark object.","lastModifiedDate":"2023-09-27"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-09-27"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"     * @param remark String that represent the remark.","lastModifiedDate":"2023-09-27"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"    public Remark(String remark) {","lastModifiedDate":"2023-09-27"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"        requireNonNull(remark);","lastModifiedDate":"2023-09-27"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"        checkArgument(isValidRemark(remark), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"        value \u003d remark;","lastModifiedDate":"2023-09-27"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"    public static boolean isValidRemark(String remark) {","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"        return remark.length() \u003c\u003d 150;","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"LamJiuFong"},"content":"    public boolean isEmptyRemark() {","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"LamJiuFong"},"content":"        return Objects.equals(this.value, \"\");","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-09-27"},{"lineNumber":38,"author":{"gitId":"songfangyl"},"content":"    public String toString() {","lastModifiedDate":"2023-09-27"},{"lineNumber":39,"author":{"gitId":"songfangyl"},"content":"        return value;","lastModifiedDate":"2023-09-27"},{"lineNumber":40,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":41,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":42,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-09-27"},{"lineNumber":43,"author":{"gitId":"songfangyl"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-09-27"},{"lineNumber":44,"author":{"gitId":"songfangyl"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-09-27"},{"lineNumber":45,"author":{"gitId":"songfangyl"},"content":"                || (other instanceof Remark // instanceof handles nulls","lastModifiedDate":"2023-09-27"},{"lineNumber":46,"author":{"gitId":"songfangyl"},"content":"                \u0026\u0026 value.equals(((Remark) other).value)); // state check","lastModifiedDate":"2023-09-27"},{"lineNumber":47,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":48,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":49,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-09-27"},{"lineNumber":50,"author":{"gitId":"songfangyl"},"content":"    public int hashCode() {","lastModifiedDate":"2023-09-27"},{"lineNumber":51,"author":{"gitId":"songfangyl"},"content":"        return value.hashCode();","lastModifiedDate":"2023-09-27"},{"lineNumber":52,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":53,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"songfangyl"},"content":"     * Checks if the full remark contains a word that starts with the given prefix, ignoring case.","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"songfangyl"},"content":"     * @param prefix The prefix to search for.","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"songfangyl"},"content":"     * @return True if any word in the remark starts with the specified prefix, false otherwise.","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"songfangyl"},"content":"    public static boolean isRemarkContainsPrefix(Remark remark, String prefix) {","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"songfangyl"},"content":"        if (remark.isEmptyRemark()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"songfangyl"},"content":"            return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"songfangyl"},"content":"        String lowerRemark \u003d remark.value.toLowerCase();","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"songfangyl"},"content":"        String lowerPrefix \u003d prefix.toLowerCase();","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"songfangyl"},"content":"        for (String lowerRemarkPart: lowerRemark.split(\"\\\\s+\")) {","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"songfangyl"},"content":"            if (lowerRemarkPart.startsWith(lowerPrefix)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"songfangyl"},"content":"                return true;","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"songfangyl"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"songfangyl"},"content":"        return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-09-27"}],"authorContributionMap":{"songfangyl":65,"yucongkoo":1,"LamJiuFong":7}},{"path":"src/main/java/seedu/address/model/person/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-11-02"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+(\\\\s+\\\\p{Alnum}+)*\";","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"    public static final int MAXIMUM_TAG_LENGTH \u003d 20;","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"    public static final int MAXIMUM_TAGS_PER_PERSON \u003d 10;","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"            String.format(\"Tags names should be alphanumeric,\"","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"                    + \"non-empty and not longer than %d characters(excluding spaces).\", MAXIMUM_TAG_LENGTH);","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"    private final String tagName;","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"        String trimmedTagName \u003d StringUtil.trimContiguousSpaces(tagName);","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"        checkArgument(isValidTagName(trimmedTagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"        this.tagName \u003d trimmedTagName;","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"    public String getTagName() {","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"        return tagName;","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"        requireNonNull(test);","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"        String trimmedTest \u003d test.trim();","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"        return StringUtil.countCharactersWithoutSpaces(trimmedTest) \u003c\u003d MAXIMUM_TAG_LENGTH","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"yucongkoo"},"content":"                \u0026\u0026 trimmedTest.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"yucongkoo"},"content":"        return tagName.equalsIgnoreCase(otherTag.tagName);","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"yucongkoo"},"content":"        return tagName.toLowerCase().hashCode();","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"songfangyl"},"content":"     * Checks if the tag name contains a word that starts with the given prefix, ignoring case.","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"songfangyl"},"content":"     * @param prefix The prefix to search for.","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"songfangyl"},"content":"     * @return True if any word in the tag name starts with the specified prefix, false otherwise.","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"songfangyl"},"content":"    public static boolean isTagContainsPrefix(Tag tag, String prefix) {","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"songfangyl"},"content":"        String lowerTagName \u003d tag.tagName.toLowerCase();","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"songfangyl"},"content":"        String lowerPrefix \u003d prefix.toLowerCase();","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"songfangyl"},"content":"        for (String lowerNamePart: lowerTagName.split(\"\\\\s+\")) {","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"songfangyl"},"content":"            if (lowerNamePart.startsWith(lowerPrefix)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"songfangyl"},"content":"                return true;","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"songfangyl"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"songfangyl"},"content":"        return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yucongkoo":25,"songfangyl":16,"-":52}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"LamJiuFong"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.PersonComparator;","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"LamJiuFong"},"content":"        SortedList\u003cPerson\u003e sortedList \u003d internalList.sorted(new PersonComparator());","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"LamJiuFong"},"content":"        internalList.setAll(sortedList);","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":73,"author":{"gitId":"LamJiuFong"},"content":"        SortedList\u003cPerson\u003e sortedList \u003d internalList.sorted(new PersonComparator());","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"LamJiuFong"},"content":"        internalList.setAll(sortedList);","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"LamJiuFong"},"content":"        SortedList\u003cPerson\u003e sortedList \u003d internalList.sorted(new PersonComparator());","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"LamJiuFong"},"content":"        internalList.setAll(sortedList);","lastModifiedDate":"2023-10-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":93,"author":{"gitId":"LamJiuFong"},"content":"        SortedList\u003cPerson\u003e sortedList \u003d internalList.sorted(new PersonComparator());","lastModifiedDate":"2023-10-30"},{"lineNumber":94,"author":{"gitId":"LamJiuFong"},"content":"        internalList.setAll(sortedList);","lastModifiedDate":"2023-10-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":108,"author":{"gitId":"LamJiuFong"},"content":"        SortedList\u003cPerson\u003e sortedList \u003d internalList.sorted(new PersonComparator());","lastModifiedDate":"2023-10-30"},{"lineNumber":109,"author":{"gitId":"LamJiuFong"},"content":"        internalList.setAll(sortedList);","lastModifiedDate":"2023-10-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LamJiuFong":12,"-":150}},{"path":"src/main/java/seedu/address/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"LamJiuFong"},"content":"        super(\"Operation would result in duplicate customers\");","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"LamJiuFong":1,"-":10}},{"path":"src/main/java/seedu/address/model/person/predicate/AddressContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package seedu.address.model.person.predicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"import java.util.List;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":" * Tests that a {@code Person}\u0027s {@code Address} matches all the keywords given.","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"public class AddressContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"    public AddressContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"        if (keywords.isEmpty()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"            return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"                .allMatch(keyword -\u003e Address.isAddressContainsPrefix(person.getAddress(), keyword));","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"            return true;","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"songfangyl"},"content":"        if (!(other instanceof AddressContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"songfangyl"},"content":"            return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"songfangyl"},"content":"        AddressContainsKeywordsPredicate otherAddressContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"songfangyl"},"content":"                (AddressContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"songfangyl"},"content":"        return keywords.equals(otherAddressContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"songfangyl"},"content":"    public String toString() {","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"songfangyl"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"songfangyl":49}},{"path":"src/main/java/seedu/address/model/person/predicate/EmailContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package seedu.address.model.person.predicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"import java.util.List;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":" * Tests that a {@code Person}\u0027s {@code Email} matches all the keywords given.","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"public class EmailContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"    public EmailContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"        if (keywords.isEmpty()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"            return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"                .allMatch(keyword -\u003e Email.isEmailContainsPrefix(person.getEmail(), keyword));","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"            return true;","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"songfangyl"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"songfangyl"},"content":"        if (!(other instanceof EmailContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"songfangyl"},"content":"            return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"songfangyl"},"content":"        EmailContainsKeywordsPredicate otherEmailContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"songfangyl"},"content":"                (EmailContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"songfangyl"},"content":"        return keywords.equals(otherEmailContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"songfangyl"},"content":"    public String toString() {","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"songfangyl"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"songfangyl":51}},{"path":"src/main/java/seedu/address/model/person/predicate/InsuranceContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package seedu.address.model.person.predicate;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"import java.util.List;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.insurance.Insurance;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":" * Tests that any of a {@code Person}\u0027s {@code Insurance} matches all the keywords given.","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"public class InsuranceContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"    public InsuranceContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"        if (keywords.isEmpty()) {","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"            return false;","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"                .allMatch(keyword -\u003e isInsurancesContainPrefix(person.getInsurances(), keyword));","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"    private static boolean isInsurancesContainPrefix(Set\u003cInsurance\u003e insurances, String prefix) {","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"        return insurances.stream()","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"                .anyMatch(insurance -\u003e Insurance.isInsuranceContainsPrefix(insurance, prefix));","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"songfangyl"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"songfangyl"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"songfangyl"},"content":"            return true;","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"songfangyl"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"songfangyl"},"content":"        if (!(other instanceof InsuranceContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"songfangyl"},"content":"            return false;","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"songfangyl"},"content":"        InsuranceContainsKeywordsPredicate otherInsuranceContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"songfangyl"},"content":"                (InsuranceContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"songfangyl"},"content":"        return keywords.equals(otherInsuranceContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"songfangyl"},"content":"    public String toString() {","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"songfangyl"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"songfangyl":56}},{"path":"src/main/java/seedu/address/model/person/predicate/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package seedu.address.model.person.predicate;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches all of the keywords given.","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"        if (keywords.isEmpty()) {","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"            return false;","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"                .allMatch(keyword -\u003e Name.isFullNameContainsPrefix(person.getName(), keyword));","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"songfangyl":8,"-":41}},{"path":"src/main/java/seedu/address/model/person/predicate/PersonContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package seedu.address.model.person.predicate;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"import java.util.List;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":" * Tests that a {@code Person}\u0027s {@code Predicate} all are true.","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"public class PersonContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"    private final List\u003cPredicate\u003cPerson\u003e\u003e predicates;","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"    public PersonContainsKeywordsPredicate(List\u003cPredicate\u003cPerson\u003e\u003e predicates) {","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"        this.predicates \u003d predicates;","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"        if (predicates.isEmpty()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"            return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"        return predicates.stream()","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"                .allMatch(predicate -\u003e predicate.test(person));","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"            return true;","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"        if (!(other instanceof PersonContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"songfangyl"},"content":"            return false;","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"songfangyl"},"content":"        PersonContainsKeywordsPredicate otherPersonContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"songfangyl"},"content":"                (PersonContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"songfangyl"},"content":"        return predicates.equals(otherPersonContainsKeywordsPredicate.predicates);","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"songfangyl":43}},{"path":"src/main/java/seedu/address/model/person/predicate/PhoneContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package seedu.address.model.person.predicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"import java.util.List;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":" * Tests that a {@code Person}\u0027s {@code Phone} matches all the keywords given.","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"public class PhoneContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"    public PhoneContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"        if (keywords.isEmpty()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"            return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"                .allMatch(keyword -\u003e Phone.isPhoneContainsPrefix(person.getPhone(), keyword));","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"            return true;","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"songfangyl"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"songfangyl"},"content":"        if (!(other instanceof PhoneContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"songfangyl"},"content":"            return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"songfangyl"},"content":"        PhoneContainsKeywordsPredicate otherPhoneContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"songfangyl"},"content":"                (PhoneContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"songfangyl"},"content":"        return keywords.equals(otherPhoneContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"songfangyl"},"content":"    public String toString() {","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"songfangyl"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"songfangyl":51}},{"path":"src/main/java/seedu/address/model/person/predicate/PriorityContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package seedu.address.model.person.predicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"import java.util.List;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.priority.Priority;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":" * Tests that a {@code Person}\u0027s {@code Priority} matches all the keywords given.","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"public class PriorityContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"    public PriorityContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"        if (keywords.isEmpty()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"            return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"                .allMatch(keyword -\u003e Priority.isPriorityContainsPrefix(person.getPriority(), keyword));","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"            return true;","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"songfangyl"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"songfangyl"},"content":"        if (!(other instanceof PriorityContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"songfangyl"},"content":"            return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"songfangyl"},"content":"        PriorityContainsKeywordsPredicate otherPriorityContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"songfangyl"},"content":"                (PriorityContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"songfangyl"},"content":"        return keywords.equals(otherPriorityContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"songfangyl"},"content":"    public String toString() {","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"songfangyl"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"songfangyl":51,"LamJiuFong":1}},{"path":"src/main/java/seedu/address/model/person/predicate/RemarkContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package seedu.address.model.person.predicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"import java.util.List;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":" * Tests that a {@code Person}\u0027s {@code Remark} matches all the keywords given.","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"public class RemarkContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"    public RemarkContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"        if (keywords.isEmpty()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"            return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"                .allMatch(keyword -\u003e Remark.isRemarkContainsPrefix(person.getRemark(), keyword));","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"            return true;","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"songfangyl"},"content":"        if (!(other instanceof RemarkContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"songfangyl"},"content":"            return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"songfangyl"},"content":"        RemarkContainsKeywordsPredicate otherRemarkContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"songfangyl"},"content":"                (RemarkContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"songfangyl"},"content":"        return keywords.equals(otherRemarkContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"songfangyl"},"content":"    public String toString() {","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"songfangyl"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"songfangyl":49}},{"path":"src/main/java/seedu/address/model/person/predicate/TagContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package seedu.address.model.person.predicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"import java.util.List;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":" * Tests that any of a {@code Person}\u0027s {@code Tag} matches all the keywords given.","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"public class TagContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"    public TagContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"        if (keywords.isEmpty()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"            return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"                .allMatch(keyword -\u003e isTagsContainPrefix(person.getTags(), keyword));","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"    private static boolean isTagsContainPrefix(Set\u003cTag\u003e tags, String prefix) {","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"        return tags.stream()","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"                .anyMatch(tag -\u003e Tag.isTagContainsPrefix(tag, prefix));","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"songfangyl"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"songfangyl"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"songfangyl"},"content":"            return true;","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"songfangyl"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"songfangyl"},"content":"        if (!(other instanceof TagContainsKeywordsPredicate)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"songfangyl"},"content":"            return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"songfangyl"},"content":"        TagContainsKeywordsPredicate otherTagContainsKeywordsPredicate \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"songfangyl"},"content":"                (TagContainsKeywordsPredicate) other;","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"songfangyl"},"content":"        return keywords.equals(otherTagContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"songfangyl"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"songfangyl"},"content":"    public String toString() {","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"songfangyl"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"songfangyl":56}},{"path":"src/main/java/seedu/address/model/priority/Priority.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LamJiuFong"},"content":"package seedu.address.model.priority;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"LamJiuFong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"LamJiuFong"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"LamJiuFong"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"LamJiuFong"},"content":"/** Represents a Person\u0027s priority level. **/","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"LamJiuFong"},"content":"public class Priority {","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"     * Possible priority levels.","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"     **/","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"LamJiuFong"},"content":"    public enum Level { HIGH, MEDIUM, LOW, NONE };","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"LamJiuFong"},"content":"    public static final String HIGH_PRIORITY_KEYWORD \u003d \"high\";","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"LamJiuFong"},"content":"    public static final String MEDIUM_PRIORITY_KEYWORD \u003d \"medium\";","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"LamJiuFong"},"content":"    public static final String LOW_PRIORITY_KEYWORD \u003d \"low\";","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"LamJiuFong"},"content":"    public static final String NONE_PRIORITY_KEYWORD \u003d \"-\";","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"     * Stores the valid priority keywords.","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"     **/","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"LamJiuFong"},"content":"    public static final HashSet\u003cString\u003e VALID_PRIORITY_KEYWORDS \u003d new HashSet\u003c\u003e() {","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"LamJiuFong"},"content":"        {","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"LamJiuFong"},"content":"            add(HIGH_PRIORITY_KEYWORD);","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"LamJiuFong"},"content":"            add(MEDIUM_PRIORITY_KEYWORD);","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"LamJiuFong"},"content":"            add(LOW_PRIORITY_KEYWORD);","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"LamJiuFong"},"content":"            add(NONE_PRIORITY_KEYWORD);","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"LamJiuFong"},"content":"    };","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"     * Stores the priority levels and their respective keywords as key-value pairs.","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"     **/","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"LamJiuFong"},"content":"    public static final HashMap\u003cLevel, String\u003e LEVEL_STRING_MAP \u003d new HashMap\u003c\u003e() {","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"LamJiuFong"},"content":"        {","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"LamJiuFong"},"content":"            put(Level.HIGH, HIGH_PRIORITY_KEYWORD);","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"LamJiuFong"},"content":"            put(Level.MEDIUM, MEDIUM_PRIORITY_KEYWORD);","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"LamJiuFong"},"content":"            put(Level.LOW, LOW_PRIORITY_KEYWORD);","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"LamJiuFong"},"content":"            put(Level.NONE, NONE_PRIORITY_KEYWORD);","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"LamJiuFong"},"content":"    };","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"LamJiuFong"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Priority levels should only be one of: { \"","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"LamJiuFong"},"content":"            + HIGH_PRIORITY_KEYWORD + \", \" + MEDIUM_PRIORITY_KEYWORD + \", \" + LOW_PRIORITY_KEYWORD + \", \"","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"LamJiuFong"},"content":"            + NONE_PRIORITY_KEYWORD + \" }\";","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"LamJiuFong"},"content":"    private Level level;","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":51,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"LamJiuFong"},"content":"     * Constructs a {@code Priority}.","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"LamJiuFong"},"content":"     * @param priority A valid priority.","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"LamJiuFong"},"content":"    public Priority(String priority) {","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"LamJiuFong"},"content":"        requireNonNull(priority);","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"LamJiuFong"},"content":"        checkArgument(isValidPriority(priority), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"yucongkoo"},"content":"        this.level \u003d parsePriorityLevel(priority);","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"yucongkoo"},"content":"     * Parses the {@code priority} and returns the responding {@code Level}.","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"yucongkoo"},"content":"    public static Level parsePriorityLevel(String priority) {","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"yucongkoo"},"content":"        requireNonNull(priority);","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"yucongkoo"},"content":"        assert isValidPriority(priority);","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"LamJiuFong"},"content":"        switch (priority) {","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"LamJiuFong"},"content":"        case HIGH_PRIORITY_KEYWORD:","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"yucongkoo"},"content":"            return Level.HIGH;","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"LamJiuFong"},"content":"        case MEDIUM_PRIORITY_KEYWORD:","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"yucongkoo"},"content":"            return Level.MEDIUM;","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"LamJiuFong"},"content":"        case LOW_PRIORITY_KEYWORD:","lastModifiedDate":"2023-10-22"},{"lineNumber":75,"author":{"gitId":"yucongkoo"},"content":"            return Level.LOW;","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"LamJiuFong"},"content":"        default:","lastModifiedDate":"2023-10-22"},{"lineNumber":77,"author":{"gitId":"yucongkoo"},"content":"            return Level.NONE;","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":79,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":81,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":82,"author":{"gitId":"LamJiuFong"},"content":"     * Checks if the priority given is valid.","lastModifiedDate":"2023-10-22"},{"lineNumber":83,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":84,"author":{"gitId":"LamJiuFong"},"content":"     * @param priority to check.","lastModifiedDate":"2023-10-22"},{"lineNumber":85,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":86,"author":{"gitId":"LamJiuFong"},"content":"    public static boolean isValidPriority(String priority) {","lastModifiedDate":"2023-10-22"},{"lineNumber":87,"author":{"gitId":"LamJiuFong"},"content":"        return VALID_PRIORITY_KEYWORDS.contains(priority);","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":89,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":90,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":91,"author":{"gitId":"LamJiuFong"},"content":"     * Returns priority level.","lastModifiedDate":"2023-10-22"},{"lineNumber":92,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":93,"author":{"gitId":"LamJiuFong"},"content":"    public Level getPriorityLevel() {","lastModifiedDate":"2023-10-23"},{"lineNumber":94,"author":{"gitId":"LamJiuFong"},"content":"        return this.level;","lastModifiedDate":"2023-10-22"},{"lineNumber":95,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":96,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":97,"author":{"gitId":"LamJiuFong"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":98,"author":{"gitId":"LamJiuFong"},"content":"    public String toString() {","lastModifiedDate":"2023-10-22"},{"lineNumber":99,"author":{"gitId":"LamJiuFong"},"content":"        return LEVEL_STRING_MAP.get(this.level);","lastModifiedDate":"2023-10-23"},{"lineNumber":100,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":101,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":102,"author":{"gitId":"LamJiuFong"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":103,"author":{"gitId":"LamJiuFong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-22"},{"lineNumber":104,"author":{"gitId":"LamJiuFong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-22"},{"lineNumber":105,"author":{"gitId":"LamJiuFong"},"content":"            return true;","lastModifiedDate":"2023-10-22"},{"lineNumber":106,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":107,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":108,"author":{"gitId":"LamJiuFong"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-22"},{"lineNumber":109,"author":{"gitId":"LamJiuFong"},"content":"        if (!(other instanceof Priority)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":110,"author":{"gitId":"LamJiuFong"},"content":"            return false;","lastModifiedDate":"2023-10-22"},{"lineNumber":111,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":112,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":113,"author":{"gitId":"LamJiuFong"},"content":"        Priority otherPriority \u003d (Priority) other;","lastModifiedDate":"2023-10-22"},{"lineNumber":114,"author":{"gitId":"LamJiuFong"},"content":"        return level.equals(otherPriority.level);","lastModifiedDate":"2023-10-22"},{"lineNumber":115,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":116,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":117,"author":{"gitId":"LamJiuFong"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":118,"author":{"gitId":"LamJiuFong"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-22"},{"lineNumber":119,"author":{"gitId":"LamJiuFong"},"content":"        return level.hashCode();","lastModifiedDate":"2023-10-22"},{"lineNumber":120,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":121,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":122,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":123,"author":{"gitId":"songfangyl"},"content":"     * Checks if the priority level starts with the given prefix, ignoring case.","lastModifiedDate":"2023-10-31"},{"lineNumber":124,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":125,"author":{"gitId":"songfangyl"},"content":"     * @param prefix The prefix to search for.","lastModifiedDate":"2023-10-31"},{"lineNumber":126,"author":{"gitId":"songfangyl"},"content":"     * @return True if the priority level starts with the specified prefix, false otherwise.","lastModifiedDate":"2023-10-31"},{"lineNumber":127,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":128,"author":{"gitId":"songfangyl"},"content":"    public static boolean isPriorityContainsPrefix(Priority priority, String prefix) {","lastModifiedDate":"2023-10-31"},{"lineNumber":129,"author":{"gitId":"songfangyl"},"content":"        if (priority.level.equals(Level.NONE)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":130,"author":{"gitId":"songfangyl"},"content":"            return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":131,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":132,"author":{"gitId":"songfangyl"},"content":"        String lowerCasePriority \u003d priority.toString().toLowerCase();","lastModifiedDate":"2023-10-31"},{"lineNumber":133,"author":{"gitId":"songfangyl"},"content":"        return lowerCasePriority.startsWith(prefix.toLowerCase());","lastModifiedDate":"2023-10-31"},{"lineNumber":134,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":135,"author":{"gitId":"LamJiuFong"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"songfangyl":23,"yucongkoo":12,"LamJiuFong":100}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.model.person.Address.createAddress;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.insurance.Insurance;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.person.AppointmentCount;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-09-27"},{"lineNumber":19,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.priority.Priority;","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"Jweewee"},"content":"    public static final Appointment EMPTY_APPOINTMENT \u003d new Appointment(Appointment.NO_APPOINTMENT,","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"Jweewee"},"content":"            Appointment.NO_TIME, Appointment.NO_VENUE);","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"                createAddress(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"                new Remark(\"He is a coffee lover, always choose Starbucks as the location to meetup.\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"                getTagSet(\"friends\", \"tall\", \"wears spectacles\"), getInsuranceSet(\"car insurance\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"                new Appointment(\"11 Nov 2023\", \"1230\", \"Starbucks@Utwon\"), new AppointmentCount(\"3\"),","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"                new Priority(Priority.HIGH_PRIORITY_KEYWORD)),","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"                createAddress(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"                new Remark(\"He does not like to drink coffee, rather he prefers to have discussions in tea houses.\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"Jweewee"},"content":"                getTagSet(\"colleagues\", \"friends\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"Jweewee"},"content":"                getInsuranceSet(\"car insurance\", \"AIA insurance\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"                new Appointment(\"13 Nov 2023\", \"1000\", \"Clementi Mall\"), new AppointmentCount(\"0\"),","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"                new Priority(Priority.MEDIUM_PRIORITY_KEYWORD)),","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"Jweewee"},"content":"                createAddress(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new Remark(\"\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"Jweewee"},"content":"                getTagSet(\"neighbours\"), getInsuranceSet(\"life insurance\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"Jweewee"},"content":"                EMPTY_APPOINTMENT, new AppointmentCount(\"0\"),","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"yucongkoo"},"content":"                new Priority(Priority.LOW_PRIORITY_KEYWORD)),","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"Jweewee"},"content":"                createAddress(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), new Remark(\"\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"Jweewee"},"content":"                getTagSet(\"family\"), getInsuranceSet(\"car insurance\", \"life insurance\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"Jweewee"},"content":"                new Appointment(\"11 Mar 2023\", \"\", \"\"), new AppointmentCount(\"0\")),","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":53,"author":{"gitId":"Jweewee"},"content":"                createAddress(\"Blk 47 Tampines Street 20, #17-35\"), new Remark(\"\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"Jweewee"},"content":"                getTagSet(\"classmates\"), getInsuranceSet(\"health insurance\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"Jweewee"},"content":"                new Appointment(\"15 Mar 2023\", \"2359\", \"\"), new AppointmentCount(\"0\")),","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"Jweewee"},"content":"                createAddress(\"Blk 45 Aljunied Street 85, #11-31\"), new Remark(\"\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"Jweewee"},"content":"                getTagSet(\"colleagues\"), getInsuranceSet(\"ABC insurance\"),","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"Jweewee"},"content":"                new Appointment(\"15 Mar 2023\", \"2359\", \"SK CC\"), new AppointmentCount(\"0\"))","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":81,"author":{"gitId":"Jweewee"},"content":"    public static Set\u003cInsurance\u003e getInsuranceSet(String... strings) {","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"Jweewee"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"Jweewee"},"content":"                .map(s -\u003e new Insurance(s))","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"Jweewee"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"TehOPanas":1,"songfangyl":1,"yucongkoo":11,"-":46,"Jweewee":28}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.storage.jsonadaptedperson.JsonAdaptedPerson;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"yucongkoo"},"content":"            if (jsonAdaptedPerson \u003d\u003d null) {","lastModifiedDate":"2023-11-03"},{"lineNumber":53,"author":{"gitId":"yucongkoo"},"content":"                continue;","lastModifiedDate":"2023-11-03"},{"lineNumber":54,"author":{"gitId":"yucongkoo"},"content":"            }","lastModifiedDate":"2023-11-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"yucongkoo":4,"-":60}},{"path":"src/main/java/seedu/address/storage/jsonadaptedperson/JsonAdaptedAddress.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package seedu.address.storage.jsonadaptedperson;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.storage.jsonadaptedperson.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":" * Jackson-friendly version of {@link Address}.","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"class JsonAdaptedAddress {","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"    private final String value;","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"     * Constructs a {@code JsonAdaptedAddress} with the given {@code value} and {@code isEmptyAddress}.","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"    public JsonAdaptedAddress(@JsonProperty(\"value\") String value) {","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"     * Converts a given {@code Address} into this class for Jackson use.","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"    public JsonAdaptedAddress(Address address) {","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"        requireNonNull(address);","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"        value \u003d address.getValue();","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"     * Converts this Jackson-friendly adapted address object into the model\u0027s {@code Address} object.","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted address.","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"    public Address toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"        if (value \u003d\u003d null) {","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"        if (!Address.isValidAddress(value)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"yucongkoo"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":49,"author":{"gitId":"yucongkoo"},"content":"        return Address.createAddress(value);","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":52,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"yucongkoo":52}},{"path":"src/main/java/seedu/address/storage/jsonadaptedperson/JsonAdaptedAppointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"package seedu.address.storage.jsonadaptedperson;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.storage.jsonadaptedperson.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":" * Jackson-friendly version of {@link Appointment}.","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"Jweewee"},"content":"public class JsonAdaptedAppointment {","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"Jweewee"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAdaptedAppointment.class);","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"Jweewee"},"content":"    private final String date;","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"Jweewee"},"content":"    private final String time;","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"    private final String venue;","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"Jweewee"},"content":"     * Constructs a given {@code Appointment} with the given {@code appointment}.","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"Jweewee"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"Jweewee"},"content":"    public JsonAdaptedAppointment(@JsonProperty(\"value\")String date,","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"Jweewee"},"content":"                    @JsonProperty(\"time\") String time, @JsonProperty(\"venue\") String venue) {","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"Jweewee"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"Jweewee"},"content":"        this.time \u003d time;","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"Jweewee"},"content":"        this.venue \u003d venue;","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"Jweewee"},"content":"        logger.info(date + time + venue);","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"Jweewee"},"content":"     * Constructs a {@code JsonAdaptedAppointment}.","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"Jweewee"},"content":"    public JsonAdaptedAppointment(Appointment appointment) {","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"Jweewee"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"Jweewee"},"content":"        date \u003d appointment.getDate();","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"Jweewee"},"content":"        time \u003d appointment.getTime();","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"Jweewee"},"content":"        venue \u003d appointment.getVenue();","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"Jweewee"},"content":"     * Converts this Jackson-friendly adapted phone object into the model\u0027s {@code Appointment} object.","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"Jweewee"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted appointment.","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"Jweewee"},"content":"    public Appointment toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"Jweewee"},"content":"        if (date \u003d\u003d null || time \u003d\u003d null || venue \u003d\u003d null) {","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"Jweewee"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"Jweewee"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Appointment.class.getSimpleName()));","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"Jweewee"},"content":"        if (!Appointment.isValidDateFormat(date)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"Jweewee"},"content":"            throw new IllegalValueException(Appointment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-01"},{"lineNumber":62,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"Jweewee"},"content":"        if (!Appointment.isValidTimeFormat(time)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"Jweewee"},"content":"            throw new IllegalValueException(Appointment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"Jweewee"},"content":"        if (!Appointment.isValidVenueFormat(venue)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"Jweewee"},"content":"            throw new IllegalValueException(Appointment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"Jweewee"},"content":"        return new Appointment(date, time, venue);","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"Jweewee":74}},{"path":"src/main/java/seedu/address/storage/jsonadaptedperson/JsonAdaptedAppointmentCount.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"package seedu.address.storage.jsonadaptedperson;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.person.AppointmentCount;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":" * Jackson-friendly version of {@link AppointmentCount}.","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"class JsonAdaptedAppointmentCount {","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"    private final String value;","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"Jweewee"},"content":"     * Constructs a given {@code JsonAdaptedAppointmentCount} with the given {@code count}.","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"Jweewee"},"content":"    public JsonAdaptedAppointmentCount(@JsonProperty(\"value\") String value) {","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"Jweewee"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"Jweewee"},"content":"     * Constructs a given {@code JsonAdaptedAppointmentCount} into this class for Jackson use.","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"Jweewee"},"content":"    public JsonAdaptedAppointmentCount(AppointmentCount count) {","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"Jweewee"},"content":"        requireNonNull(count);","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"Jweewee"},"content":"        value \u003d String.valueOf(count.getCount());","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"Jweewee"},"content":"     * Converts this Jackson-friendly adapted phone object into the model\u0027s {@code AppointmentCount} object.","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"Jweewee"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted appointment count.","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"Jweewee"},"content":"    public AppointmentCount toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"Jweewee"},"content":"        if (value \u003d\u003d null) {","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"Jweewee"},"content":"            throw new IllegalValueException(AppointmentCount.INVALID_COUNT_INPUT);","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"Jweewee"},"content":"        if (!AppointmentCount.isValidCount(value)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"Jweewee"},"content":"            throw new IllegalValueException(AppointmentCount.INVALID_COUNT_INPUT);","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"Jweewee"},"content":"        return new AppointmentCount(value);","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"Jweewee":49}},{"path":"src/main/java/seedu/address/storage/jsonadaptedperson/JsonAdaptedEmail.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package seedu.address.storage.jsonadaptedperson;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.storage.jsonadaptedperson.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":" * Jackson-friendly version of {@link Email}.","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"class JsonAdaptedEmail {","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"    private final String value;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"     * Constructs a {@code JsonAdaptedEmail} with the given {@code value}.","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"    public JsonAdaptedEmail(@JsonProperty(\"value\") String value) {","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"     * Converts a given {@code Email} into this class for Jackson use.","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"    public JsonAdaptedEmail(Email email) {","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"        requireNonNull(email);","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"        value \u003d email.value;","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"     * Converts this Jackson-friendly adapted email object into the model\u0027s {@code Email} object.","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted email.","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"    public Email toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"        if (value \u003d\u003d null) {","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"        if (!Email.isValidEmail(value)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"yucongkoo"},"content":"        return new Email(value);","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"yucongkoo":51}},{"path":"src/main/java/seedu/address/storage/jsonadaptedperson/JsonAdaptedInsurance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TehOPanas"},"content":"package seedu.address.storage.jsonadaptedperson;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.storage.jsonadaptedperson.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"TehOPanas"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"TehOPanas"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"TehOPanas"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"TehOPanas"},"content":"import seedu.address.model.insurance.Insurance;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"TehOPanas"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"TehOPanas"},"content":" * Jackson-friendly version of {@code Insurance}","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"TehOPanas"},"content":" *","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"TehOPanas"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"TehOPanas"},"content":"public class JsonAdaptedInsurance {","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"TehOPanas"},"content":"    private final String insuranceName;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"TehOPanas"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"TehOPanas"},"content":"    public JsonAdaptedInsurance(String insuranceName) {","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"TehOPanas"},"content":"        this.insuranceName \u003d insuranceName;","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"TehOPanas"},"content":"    public JsonAdaptedInsurance(Insurance source) {","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"TehOPanas"},"content":"        this.insuranceName \u003d source.getInsuranceName();","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"TehOPanas"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"TehOPanas"},"content":"     * Convert Json version to model version of {@code Insurance}","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"TehOPanas"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"TehOPanas"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"TehOPanas"},"content":"    public Insurance toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"        if (insuranceName \u003d\u003d null) {","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"TehOPanas"},"content":"        if (!Insurance.isValidInsuranceName(insuranceName)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"TehOPanas"},"content":"            throw new IllegalValueException(Insurance.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"TehOPanas"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"TehOPanas"},"content":"        return new Insurance(insuranceName);","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"TehOPanas"},"content":"    @JsonValue","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"TehOPanas"},"content":"    public String getInsuranceName() {","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"TehOPanas"},"content":"        return insuranceName;","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"TehOPanas"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"TehOPanas":39,"yucongkoo":8}},{"path":"src/main/java/seedu/address/storage/jsonadaptedperson/JsonAdaptedName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package seedu.address.storage.jsonadaptedperson;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.storage.jsonadaptedperson.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":" * Jackson-friendly version of {@link Name}.","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"class JsonAdaptedName {","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"    private final String value;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"     * Constructs a {@code JsonAdaptedName} with the given {@code value}.","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"    public JsonAdaptedName(@JsonProperty(\"value\") String value) {","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"     * Converts a given {@code Name} into this class for Jackson use.","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"    public JsonAdaptedName(Name name) {","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"        value \u003d name.fullName;","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"     * Converts this Jackson-friendly adapted name object into the model\u0027s {@code Name} object.","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted name.","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"    public Name toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"        if (value \u003d\u003d null) {","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"        if (!Name.isValidName(value)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"yucongkoo"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"yucongkoo"},"content":"        return new Name(value);","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"yucongkoo":52}},{"path":"src/main/java/seedu/address/storage/jsonadaptedperson/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package seedu.address.storage.jsonadaptedperson;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.insurance.Insurance;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.person.AppointmentCount;","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-09-27"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.priority.Priority;","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"public class JsonAdaptedPerson {","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"    //TODO: UPDATE JsonAdaptedPerson","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"    private final JsonAdaptedName name;","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"    private final JsonAdaptedPhone phone;","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"    private final JsonAdaptedEmail email;","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"    private final JsonAdaptedAddress address;","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"songfangyl"},"content":"    private final JsonAdaptedRemark remark;","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"LamJiuFong"},"content":"    private final JsonAdaptedPriority priority;","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":43,"author":{"gitId":"Jweewee"},"content":"    private final JsonAdaptedAppointment appointment;","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"Jweewee"},"content":"    private final JsonAdaptedAppointmentCount appointmentCount;","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"Jweewee"},"content":"    private final List\u003cJsonAdaptedInsurance\u003e insurances \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"yucongkoo"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") JsonAdaptedName name,","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"yucongkoo"},"content":"                             @JsonProperty(\"phone\") JsonAdaptedPhone phone,","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"yucongkoo"},"content":"                             @JsonProperty(\"email\") JsonAdaptedEmail email,","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"yucongkoo"},"content":"                             @JsonProperty(\"address\") JsonAdaptedAddress address,","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"songfangyl"},"content":"                             @JsonProperty(\"remark\") JsonAdaptedRemark remark,","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"LamJiuFong"},"content":"                             @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags,","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"Jweewee"},"content":"                             @JsonProperty(\"insurance\") List\u003cJsonAdaptedInsurance\u003e insurances,","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"Jweewee"},"content":"                             @JsonProperty(\"appointment\") JsonAdaptedAppointment appointment,","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"Jweewee"},"content":"                             @JsonProperty(\"appointment count\") JsonAdaptedAppointmentCount count,","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"Jweewee"},"content":"                             @JsonProperty(\"priority\") JsonAdaptedPriority priority) {","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"songfangyl"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"Jweewee"},"content":"        if (insurances !\u003d null) {","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"Jweewee"},"content":"            this.insurances.addAll(insurances);","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"LamJiuFong"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"Jweewee"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"Jweewee"},"content":"        this.appointmentCount \u003d count;","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"yucongkoo"},"content":"        requireNonNull(source);","lastModifiedDate":"2023-10-21"},{"lineNumber":83,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":84,"author":{"gitId":"yucongkoo"},"content":"        name \u003d new JsonAdaptedName(source.getName());","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"yucongkoo"},"content":"        phone \u003d new JsonAdaptedPhone(source.getPhone());","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"yucongkoo"},"content":"        email \u003d new JsonAdaptedEmail(source.getEmail());","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"yucongkoo"},"content":"        address \u003d new JsonAdaptedAddress(source.getAddress());","lastModifiedDate":"2023-10-11"},{"lineNumber":88,"author":{"gitId":"songfangyl"},"content":"        remark \u003d new JsonAdaptedRemark(source.getRemark());","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"Jweewee"},"content":"        insurances.addAll(source.getInsurances()","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"Jweewee"},"content":"                .stream()","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"Jweewee"},"content":"                .map(JsonAdaptedInsurance::new)","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"Jweewee"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"LamJiuFong"},"content":"        priority \u003d new JsonAdaptedPriority(source.getPriority());","lastModifiedDate":"2023-10-22"},{"lineNumber":97,"author":{"gitId":"Jweewee"},"content":"        appointment \u003d new JsonAdaptedAppointment(source.getAppointment());","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"Jweewee"},"content":"        appointmentCount \u003d new JsonAdaptedAppointmentCount(source.getAppointmentCount());","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"Jweewee"},"content":"        return new Person(getModelName(), getModelPhone(), getModelEmail(), getModelAddress(), getModelRemark(),","lastModifiedDate":"2023-10-31"},{"lineNumber":108,"author":{"gitId":"Jweewee"},"content":"                getModelTags(), getModelInsurances(), getModelAppointment(),","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"Jweewee"},"content":"                getModelAppointmentCount(), getModelPriority());","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"yucongkoo"},"content":"    private Name getModelName() throws IllegalValueException {","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"yucongkoo"},"content":"        return name.toModelType();","lastModifiedDate":"2023-10-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"yucongkoo"},"content":"    private Phone getModelPhone() throws IllegalValueException {","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"yucongkoo"},"content":"        return phone.toModelType();","lastModifiedDate":"2023-10-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"yucongkoo"},"content":"    private Email getModelEmail() throws IllegalValueException {","lastModifiedDate":"2023-10-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"yucongkoo"},"content":"        return email.toModelType();","lastModifiedDate":"2023-10-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"yucongkoo"},"content":"    private Address getModelAddress() throws IllegalValueException {","lastModifiedDate":"2023-10-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"yucongkoo"},"content":"        return address.toModelType();","lastModifiedDate":"2023-10-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":141,"author":{"gitId":"songfangyl"},"content":"    private Remark getModelRemark() throws IllegalValueException {","lastModifiedDate":"2023-10-25"},{"lineNumber":142,"author":{"gitId":"songfangyl"},"content":"        if (remark \u003d\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":143,"author":{"gitId":"songfangyl"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName()));","lastModifiedDate":"2023-10-25"},{"lineNumber":144,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":145,"author":{"gitId":"songfangyl"},"content":"        return remark.toModelType();","lastModifiedDate":"2023-10-25"},{"lineNumber":146,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":147,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":148,"author":{"gitId":"yucongkoo"},"content":"    private Set\u003cTag\u003e getModelTags() throws IllegalValueException {","lastModifiedDate":"2023-10-15"},{"lineNumber":149,"author":{"gitId":"yucongkoo"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":150,"author":{"gitId":"yucongkoo"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-10-15"},{"lineNumber":151,"author":{"gitId":"yucongkoo"},"content":"            if (tag !\u003d null) {","lastModifiedDate":"2023-10-31"},{"lineNumber":152,"author":{"gitId":"yucongkoo"},"content":"                personTags.add(tag.toModelType());","lastModifiedDate":"2023-10-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":155,"author":{"gitId":"yucongkoo"},"content":"        return new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2023-10-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":158,"author":{"gitId":"Jweewee"},"content":"    private Set\u003cInsurance\u003e getModelInsurances() throws IllegalValueException {","lastModifiedDate":"2023-10-31"},{"lineNumber":159,"author":{"gitId":"Jweewee"},"content":"        List\u003cInsurance\u003e personInsurances \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":160,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":161,"author":{"gitId":"Jweewee"},"content":"        for (JsonAdaptedInsurance i : insurances) {","lastModifiedDate":"2023-10-31"},{"lineNumber":162,"author":{"gitId":"yucongkoo"},"content":"            if (i !\u003d null) {","lastModifiedDate":"2023-10-31"},{"lineNumber":163,"author":{"gitId":"Jweewee"},"content":"                personInsurances.add(i.toModelType());","lastModifiedDate":"2023-10-31"},{"lineNumber":164,"author":{"gitId":"Jweewee"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":165,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":166,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":167,"author":{"gitId":"Jweewee"},"content":"        return new HashSet\u003c\u003e(personInsurances);","lastModifiedDate":"2023-10-31"},{"lineNumber":168,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":169,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":170,"author":{"gitId":"LamJiuFong"},"content":"    private Priority getModelPriority() throws IllegalValueException {","lastModifiedDate":"2023-10-22"},{"lineNumber":171,"author":{"gitId":"LamJiuFong"},"content":"        if (priority \u003d\u003d null) {","lastModifiedDate":"2023-10-22"},{"lineNumber":172,"author":{"gitId":"LamJiuFong"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-23"},{"lineNumber":173,"author":{"gitId":"LamJiuFong"},"content":"                    Priority.class.getSimpleName()));","lastModifiedDate":"2023-10-23"},{"lineNumber":174,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":175,"author":{"gitId":"LamJiuFong"},"content":"        return priority.toModelType();","lastModifiedDate":"2023-10-22"},{"lineNumber":176,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":177,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":178,"author":{"gitId":"Jweewee"},"content":"    private Appointment getModelAppointment() throws IllegalValueException {","lastModifiedDate":"2023-10-31"},{"lineNumber":179,"author":{"gitId":"Jweewee"},"content":"        if (appointment \u003d\u003d null) {","lastModifiedDate":"2023-10-31"},{"lineNumber":180,"author":{"gitId":"Jweewee"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-31"},{"lineNumber":181,"author":{"gitId":"Jweewee"},"content":"                    Appointment.class.getSimpleName()));","lastModifiedDate":"2023-10-31"},{"lineNumber":182,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":183,"author":{"gitId":"Jweewee"},"content":"        return appointment.toModelType();","lastModifiedDate":"2023-10-31"},{"lineNumber":184,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":185,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":186,"author":{"gitId":"Jweewee"},"content":"    private AppointmentCount getModelAppointmentCount() throws IllegalValueException {","lastModifiedDate":"2023-10-31"},{"lineNumber":187,"author":{"gitId":"Jweewee"},"content":"        if (appointmentCount \u003d\u003d null) {","lastModifiedDate":"2023-10-31"},{"lineNumber":188,"author":{"gitId":"Jweewee"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-31"},{"lineNumber":189,"author":{"gitId":"Jweewee"},"content":"                    AppointmentCount.class.getSimpleName()));","lastModifiedDate":"2023-10-31"},{"lineNumber":190,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":191,"author":{"gitId":"Jweewee"},"content":"        return appointmentCount.toModelType();","lastModifiedDate":"2023-10-31"},{"lineNumber":192,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"yucongkoo":35,"songfangyl":14,"LamJiuFong":12,"-":79,"Jweewee":53}},{"path":"src/main/java/seedu/address/storage/jsonadaptedperson/JsonAdaptedPhone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package seedu.address.storage.jsonadaptedperson;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.storage.jsonadaptedperson.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":" * Jackson-friendly version of {@link Phone}.","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"class JsonAdaptedPhone {","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"    private final String value;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"     * Constructs a {@code JsonAdaptedPhone} with the given {@code value}.","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"    public JsonAdaptedPhone(@JsonProperty(\"value\") String value) {","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"     * Converts a given {@code Phone} into this class for Jackson use.","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"    public JsonAdaptedPhone(Phone phone) {","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"        requireNonNull(phone);","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"        value \u003d phone.value;","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"     * Converts this Jackson-friendly adapted phone object into the model\u0027s {@code Phone} object.","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted phone.","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"    public Phone toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"        if (value \u003d\u003d null) {","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"        if (!Phone.isValidPhone(value)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"yucongkoo"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"yucongkoo"},"content":"        return new Phone(value);","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"yucongkoo":52}},{"path":"src/main/java/seedu/address/storage/jsonadaptedperson/JsonAdaptedPriority.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LamJiuFong"},"content":"package seedu.address.storage.jsonadaptedperson;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.storage.jsonadaptedperson.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"LamJiuFong"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.priority.Priority;","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"LamJiuFong"},"content":" * Jackson-friendly version of {@link Priority}.","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"LamJiuFong"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"LamJiuFong"},"content":"public class JsonAdaptedPriority {","lastModifiedDate":"2023-10-22"},{"lineNumber":16,"author":{"gitId":"LamJiuFong"},"content":"    private final String value;","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"LamJiuFong"},"content":"     * Constructs a {@code JsonAdaptedPriority} with the given {@code value}.","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"LamJiuFong"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"LamJiuFong"},"content":"    public JsonAdaptedPriority(@JsonProperty(\"value\") String value) {","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"LamJiuFong"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"LamJiuFong"},"content":"     * Converts a given {@code Priority} into this class for Jackson use.","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"LamJiuFong"},"content":"    public JsonAdaptedPriority(Priority priority) {","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"LamJiuFong"},"content":"        value \u003d priority.toString();","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"LamJiuFong"},"content":"     * Converts this Jackson-friendly adapted priority object into the model\u0027s {@code Priority} object.","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"LamJiuFong"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted priority.","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"LamJiuFong"},"content":"    public Priority toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"        if (value \u003d\u003d null) {","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"LamJiuFong"},"content":"        if (!Priority.isValidPriority(value)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"LamJiuFong"},"content":"            throw new IllegalValueException(Priority.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"LamJiuFong"},"content":"        return new Priority(value);","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"LamJiuFong"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"yucongkoo":7,"LamJiuFong":42}},{"path":"src/main/java/seedu/address/storage/jsonadaptedperson/JsonAdaptedRemark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package seedu.address.storage.jsonadaptedperson;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.storage.jsonadaptedperson.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.priority.Priority;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":" * Jackson-friendly version of {@link Priority}.","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"public class JsonAdaptedRemark {","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"    private final String value;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"     * Constructs a {@code JsonAdaptedRemark} with the given {@code value}.","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"    public JsonAdaptedRemark(@JsonProperty(\"value\") String value) {","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"     * Converts a given {@code Remark} into this class for Jackson use.","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"    public JsonAdaptedRemark(Remark remark) {","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"        value \u003d remark.toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"     * Converts this Jackson-friendly adapted priority object into the model\u0027s {@code Remark} object.","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"songfangyl"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"songfangyl"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted remark.","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"songfangyl"},"content":"    public Remark toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"        if (value \u003d\u003d null) {","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"songfangyl"},"content":"        if (!Remark.isValidRemark(value)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"songfangyl"},"content":"            throw new IllegalValueException(Remark.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"songfangyl"},"content":"        return new Remark(value);","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"songfangyl":43,"yucongkoo":7}},{"path":"src/main/java/seedu/address/storage/jsonadaptedperson/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package seedu.address.storage.jsonadaptedperson;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.storage.jsonadaptedperson.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"        requireNonNull(source);","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"        tagName \u003d source.getTagName();","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"yucongkoo"},"content":"        if (tagName \u003d\u003d null) {","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"yucongkoo":11,"-":46}},{"path":"src/main/java/seedu/address/ui/AppointmentAttribute.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"/** Attributes that an appointment holds and which will be displayed in the Ui. **/","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"public enum AppointmentAttribute {","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"    DATE, TIME, VENUE","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"Jweewee":6}},{"path":"src/main/java/seedu/address/ui/AppointmentAttributeCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.person.AppointmentCount;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"/**","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":" * A UI Component that displays the appointment of a person.","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":" */","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"public class AppointmentAttributeCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"    private static final String FXML \u003d \"AppointmentCard.fxml\";","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":"    @FXML","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":"    private VBox appointmentCard;","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"Jweewee"},"content":"    @FXML","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"Jweewee"},"content":"    private Label date;","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":"    @FXML","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"Jweewee"},"content":"    private Label time;","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"Jweewee"},"content":"    @FXML","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"    private Label venue;","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"Jweewee"},"content":"    @FXML","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"Jweewee"},"content":"    private Label count;","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"Jweewee"},"content":"    @FXML","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"Jweewee"},"content":"    private ImageView dateIcon;","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"Jweewee"},"content":"    private final Image dateImg \u003d new Image(\"images/date.png\");","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"Jweewee"},"content":"    @FXML","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"Jweewee"},"content":"    private ImageView timeIcon;","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"Jweewee"},"content":"    private final Image timeImg \u003d new Image(\"images/time.png\");","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"Jweewee"},"content":"    @FXML","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"Jweewee"},"content":"    private ImageView venueIcon;","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"Jweewee"},"content":"    private final Image venueImg \u003d new Image(\"images/venue.png\");","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"Jweewee"},"content":"     * Creates an appointmentAttribute card for code","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"Jweewee"},"content":"     * {@appointmentAttribute} with the given {@code bodyText}.","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"Jweewee"},"content":"    public AppointmentAttributeCard(Appointment appointment, AppointmentCount appointmentCount) {","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"Jweewee"},"content":"        super(FXML);","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"Jweewee"},"content":"        dateIcon.setImage(dateImg);","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"Jweewee"},"content":"        timeIcon.setImage(timeImg);","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"Jweewee"},"content":"        venueIcon.setImage(venueImg);","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"Jweewee"},"content":"        if (appointment.getDate().equals(\"-\")) {","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"Jweewee"},"content":"            date.setText(\"-\");","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"Jweewee"},"content":"        } else {","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"Jweewee"},"content":"            date.setText(appointment.getDate());","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"Jweewee"},"content":"        if (appointment.getTime().isEmpty()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":57,"author":{"gitId":"Jweewee"},"content":"            time.setText(\"-\");","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"Jweewee"},"content":"        } else {","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"Jweewee"},"content":"            time.setText(appointment.getTime());","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"Jweewee"},"content":"        if (appointment.getVenue().isEmpty()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"Jweewee"},"content":"            venue.setText(\"-\");","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"Jweewee"},"content":"        } else {","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"Jweewee"},"content":"            venue.setText(appointment.getVenue());","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"Jweewee"},"content":"        count.setText(\"Appointments completed: \" + appointmentCount.getCount());","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"Jweewee"},"content":"}","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"Jweewee":69}},{"path":"src/main/java/seedu/address/ui/Attribute.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LamJiuFong"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"LamJiuFong"},"content":"/** Attributes that a customer holds and which will be displayed in the Ui. **/","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"LamJiuFong"},"content":"public enum Attribute {","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":"    NAME, PHONE, EMAIL, ADDRESS","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"LamJiuFong"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"LamJiuFong":6}},{"path":"src/main/java/seedu/address/ui/FlowPaneLabel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-08"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-11-08"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.priority.Priority;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.priority.Priority.Level;","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":" * A UI component that displays the label within the FlowPane.","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"public class FlowPaneLabel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"TehOPanas"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"TehOPanas"},"content":"     * To differentiate the label for {@code Tag}, {@code Insurance}, {@code Priority}","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"TehOPanas"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"TehOPanas"},"content":"    public enum Type { TAG, INSURANCE, PRIORITY }","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"    private static final String FXML \u003d \"FlowPaneLabel.fxml\";","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"    private static final CornerRadii radius \u003d new CornerRadii(3);","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"    private static final Insets padding \u003d new Insets(1);","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"    // background colors","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"    private static final Color tagBackgroundColor \u003d Color.LIGHTBLUE;","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"    private static final Color insuranceBackgroundColor \u003d Color.rgb(233, 190, 255);","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"    private static final Color highPriorityBackgroundColor \u003d Color.GREEN;","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"    private static final Color mediumPriorityBackgroundColor \u003d Color.ORANGE;","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"    private static final Color lowPriorityBackgroundColor \u003d Color.RED;","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"    private static final String tagTextColorInHexadecimal \u003d \"#000000\";","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"    private static final String insuranceTextColorInHexadecimal \u003d \"#000000\";","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"    private static final String priorityTextColorInHexadecimal \u003d \"#FFFFFF\";","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"    @FXML","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"    private HBox flowPaneLabel;","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"    @FXML","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"yucongkoo"},"content":"    private Label value;","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"yucongkoo"},"content":"    private FlowPaneLabel(String text, String textColorInHexadecimal, Color backgroundColor) {","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"yucongkoo"},"content":"        super(FXML);","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"yucongkoo"},"content":"        value.setText(text);","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"yucongkoo"},"content":"        value.setStyle(getTextStylingWithColor(textColorInHexadecimal));","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"yucongkoo"},"content":"        flowPaneLabel.setBackground(getBackgroundWithColor(backgroundColor));","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"yucongkoo"},"content":"     * Creates and returns a {@code FlowPaneLabel} styled according to the {@code Type} and {@code text}.","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"yucongkoo"},"content":"    public static FlowPaneLabel createFlowPaneLabel(Type type, String text) {","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"yucongkoo"},"content":"        requireAllNonNull(type, text);","lastModifiedDate":"2023-11-08"},{"lineNumber":63,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":64,"author":{"gitId":"TehOPanas"},"content":"        switch (type) {","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"TehOPanas"},"content":"        case TAG:","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"yucongkoo"},"content":"            return new FlowPaneLabel(getTextToDisplayForType(text, type),","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"yucongkoo"},"content":"                    tagTextColorInHexadecimal, tagBackgroundColor);","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"TehOPanas"},"content":"        case INSURANCE:","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"yucongkoo"},"content":"            return new FlowPaneLabel(getTextToDisplayForType(text, type),","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"yucongkoo"},"content":"                    insuranceTextColorInHexadecimal, insuranceBackgroundColor);","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"TehOPanas"},"content":"        case PRIORITY:","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"yucongkoo"},"content":"            return new FlowPaneLabel(getTextToDisplayForType(text, type),","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"yucongkoo"},"content":"                    priorityTextColorInHexadecimal, getPriorityBackgroundColor(text));","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"TehOPanas"},"content":"        default:","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"yucongkoo"},"content":"            // should not reach here","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"yucongkoo"},"content":"            throw new IllegalArgumentException(\"Switch case for enum Type reached default branch.\");","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"TehOPanas"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"yucongkoo"},"content":"    private static Background getBackgroundWithColor(Color color) {","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"yucongkoo"},"content":"        requireNonNull(color);","lastModifiedDate":"2023-11-08"},{"lineNumber":82,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":83,"author":{"gitId":"yucongkoo"},"content":"        return new Background(new BackgroundFill(color, radius, padding));","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"yucongkoo"},"content":"    private static String getTextStylingWithColor(String colorInHexadecimal) {","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"yucongkoo"},"content":"        requireNonNull(colorInHexadecimal);","lastModifiedDate":"2023-11-08"},{"lineNumber":88,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":89,"author":{"gitId":"yucongkoo"},"content":"        return String.format(\"-fx-text-fill: %s; -fx-background-color: transparent\", colorInHexadecimal);","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"yucongkoo"},"content":"    private static String getTextToDisplayForType(String text, Type type) {","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"yucongkoo"},"content":"        requireAllNonNull(text, type);","lastModifiedDate":"2023-11-08"},{"lineNumber":94,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":95,"author":{"gitId":"yucongkoo"},"content":"        switch (type) {","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"yucongkoo"},"content":"        case TAG:","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"yucongkoo"},"content":"            return \"[ t ] \" + text;","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"yucongkoo"},"content":"        case INSURANCE:","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"yucongkoo"},"content":"            return \"[ i ] \" + text;","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"yucongkoo"},"content":"        case PRIORITY:","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"yucongkoo"},"content":"            return \"Priority.\" + text;","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"yucongkoo"},"content":"        default:","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"yucongkoo"},"content":"            // should not reach here","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"yucongkoo"},"content":"            throw new IllegalArgumentException(\"Switch case for enum Type reached default branch.\");","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":106,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":107,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":108,"author":{"gitId":"yucongkoo"},"content":"    private static Color getPriorityBackgroundColor(String priority) {","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"yucongkoo"},"content":"        requireNonNull(priority);","lastModifiedDate":"2023-11-08"},{"lineNumber":110,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":111,"author":{"gitId":"yucongkoo"},"content":"        Level priorityLevel \u003d Priority.parsePriorityLevel(priority);","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":113,"author":{"gitId":"yucongkoo"},"content":"        switch (priorityLevel) {","lastModifiedDate":"2023-10-31"},{"lineNumber":114,"author":{"gitId":"yucongkoo"},"content":"        case HIGH:","lastModifiedDate":"2023-10-31"},{"lineNumber":115,"author":{"gitId":"yucongkoo"},"content":"            return highPriorityBackgroundColor;","lastModifiedDate":"2023-10-31"},{"lineNumber":116,"author":{"gitId":"yucongkoo"},"content":"        case MEDIUM:","lastModifiedDate":"2023-10-31"},{"lineNumber":117,"author":{"gitId":"yucongkoo"},"content":"            return mediumPriorityBackgroundColor;","lastModifiedDate":"2023-10-31"},{"lineNumber":118,"author":{"gitId":"yucongkoo"},"content":"        case LOW:","lastModifiedDate":"2023-10-31"},{"lineNumber":119,"author":{"gitId":"yucongkoo"},"content":"            return lowPriorityBackgroundColor;","lastModifiedDate":"2023-10-31"},{"lineNumber":120,"author":{"gitId":"yucongkoo"},"content":"        case NONE:","lastModifiedDate":"2023-11-01"},{"lineNumber":121,"author":{"gitId":"yucongkoo"},"content":"            // should not reach here","lastModifiedDate":"2023-11-01"},{"lineNumber":122,"author":{"gitId":"yucongkoo"},"content":"            throw new IllegalArgumentException(\"Should not have a FlowPaneLabel for PrioritiyLevel.NONE.\");","lastModifiedDate":"2023-11-01"},{"lineNumber":123,"author":{"gitId":"yucongkoo"},"content":"        default:","lastModifiedDate":"2023-10-31"},{"lineNumber":124,"author":{"gitId":"yucongkoo"},"content":"            // should not reach here","lastModifiedDate":"2023-10-31"},{"lineNumber":125,"author":{"gitId":"yucongkoo"},"content":"            throw new IllegalArgumentException(\"Switch case for enum Level reached default branch.\");","lastModifiedDate":"2023-10-31"},{"lineNumber":126,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":127,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":128,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"TehOPanas":13,"yucongkoo":109,"LamJiuFong":6}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"LamJiuFong"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s1-cs2103t-w16-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-11-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"LamJiuFong":1,"-":101}},{"path":"src/main/java/seedu/address/ui/PersonAttributeCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"LamJiuFong"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"LamJiuFong"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"LamJiuFong"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"LamJiuFong"},"content":" * A UI Component that displays the attribute of a person.","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"public class PersonAttributeCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"    private static final String FXML \u003d \"PersonAttributeCard.fxml\";","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"    @FXML","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"LamJiuFong"},"content":"    private HBox attributeCard;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"    @FXML","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"    private Label body;","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"LamJiuFong"},"content":"    @FXML","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"LamJiuFong"},"content":"    private ImageView imageView;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"LamJiuFong"},"content":"    private Image image;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"     * Creates an attribute card for {@code attribute} with the given {@code bodyText}.","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"LamJiuFong"},"content":"    public PersonAttributeCard(Attribute attribute, String bodyText) {","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"        super(FXML);","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"LamJiuFong"},"content":"        switch (attribute) {","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"LamJiuFong"},"content":"        case PHONE:","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"LamJiuFong"},"content":"            image \u003d new Image(\"images/phone.png\");","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"LamJiuFong"},"content":"            imageView.setImage(image);","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"LamJiuFong"},"content":"            break;","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"LamJiuFong"},"content":"        case ADDRESS:","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"LamJiuFong"},"content":"            image \u003d new Image(\"images/address.png\");","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"LamJiuFong"},"content":"            imageView.setImage(image);","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"LamJiuFong"},"content":"            break;","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"LamJiuFong"},"content":"        case EMAIL:","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"LamJiuFong"},"content":"            image \u003d new Image(\"images/email.png\");","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"LamJiuFong"},"content":"            imageView.setImage(image);","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"LamJiuFong"},"content":"            break;","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"LamJiuFong"},"content":"        default:","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"LamJiuFong"},"content":"            //do nothing","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"        body.setText(bodyText);","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"yucongkoo":22,"LamJiuFong":26}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-08"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.ui.FlowPaneLabel.Type;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.ui.FlowPaneLabel.createFlowPaneLabel;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"TehOPanas"},"content":"import seedu.address.model.insurance.Insurance;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.priority.Priority;","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"    private final Person person;","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"    private final int displayedIndex;","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"    // Independent UI Parts residing in this PersonCard","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"    private PersonAttributeCard phoneCard;","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"    private PersonAttributeCard emailCard;","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"    private PersonAttributeCard addressCard;","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"    private RemarkCard remarkCard;","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"Jweewee"},"content":"    private AppointmentAttributeCard appointmentCard;","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"LamJiuFong"},"content":"    private Label priority;","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"LamJiuFong"},"content":"    @FXML","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"yucongkoo"},"content":"    private VBox phoneCardPlaceholder;","lastModifiedDate":"2023-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"yucongkoo"},"content":"    private VBox emailCardPlaceholder;","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"yucongkoo"},"content":"    private VBox addressCardPlaceholder;","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"yucongkoo"},"content":"    private VBox remarkCardPlaceholder;","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"songfangyl"},"content":"    @FXML","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"Jweewee"},"content":"    private VBox appointmentCardPlaceholder;","lastModifiedDate":"2023-11-01"},{"lineNumber":65,"author":{"gitId":"Jweewee"},"content":"    @FXML","lastModifiedDate":"2023-11-01"},{"lineNumber":66,"author":{"gitId":"yucongkoo"},"content":"    private FlowPane flowPaneLabels;","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"LamJiuFong"},"content":"    @FXML","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"LamJiuFong"},"content":"    private HBox informationBox;","lastModifiedDate":"2023-11-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":76,"author":{"gitId":"yucongkoo"},"content":"        requireNonNull(person);","lastModifiedDate":"2023-11-08"},{"lineNumber":77,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":79,"author":{"gitId":"yucongkoo"},"content":"        this.displayedIndex \u003d displayedIndex;","lastModifiedDate":"2023-10-10"},{"lineNumber":80,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":81,"author":{"gitId":"yucongkoo"},"content":"        fillPersonDetails();","lastModifiedDate":"2023-10-10"},{"lineNumber":82,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":83,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":84,"author":{"gitId":"yucongkoo"},"content":"    private void fillPersonDetails() {","lastModifiedDate":"2023-10-10"},{"lineNumber":85,"author":{"gitId":"yucongkoo"},"content":"        loadName();","lastModifiedDate":"2023-10-10"},{"lineNumber":86,"author":{"gitId":"LamJiuFong"},"content":"        loadPriority();","lastModifiedDate":"2023-10-22"},{"lineNumber":87,"author":{"gitId":"yucongkoo"},"content":"        loadPhoneCard();","lastModifiedDate":"2023-10-10"},{"lineNumber":88,"author":{"gitId":"yucongkoo"},"content":"        loadEmailCard();","lastModifiedDate":"2023-10-10"},{"lineNumber":89,"author":{"gitId":"yucongkoo"},"content":"        loadAddressCard();","lastModifiedDate":"2023-10-10"},{"lineNumber":90,"author":{"gitId":"TehOPanas"},"content":"        loadInsurance();","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"yucongkoo"},"content":"        loadTags();","lastModifiedDate":"2023-10-10"},{"lineNumber":92,"author":{"gitId":"songfangyl"},"content":"        loadRemarkCard();","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"Jweewee"},"content":"        loadAppointmentCard();","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"LamJiuFong"},"content":"        setInformationBox();","lastModifiedDate":"2023-11-01"},{"lineNumber":95,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":96,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":97,"author":{"gitId":"LamJiuFong"},"content":"    private void loadPriority() {","lastModifiedDate":"2023-10-22"},{"lineNumber":98,"author":{"gitId":"LamJiuFong"},"content":"        if (person.getPriorityLevel() !\u003d Priority.Level.NONE) {","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"yucongkoo"},"content":"            flowPaneLabels.getChildren().add(0,","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"yucongkoo"},"content":"                    createFlowPaneLabel(Type.PRIORITY, person.getPriority().toString()).getRoot());","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":102,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":103,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":104,"author":{"gitId":"yucongkoo"},"content":"    private void loadName() {","lastModifiedDate":"2023-10-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":107,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":108,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":109,"author":{"gitId":"TehOPanas"},"content":"    private void loadInsurance() {","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"TehOPanas"},"content":"        person.getInsurances().stream()","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"TehOPanas"},"content":"                .sorted(Comparator.comparing(Insurance::getInsuranceName))","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"yucongkoo"},"content":"                .forEach(insurance -\u003e flowPaneLabels.getChildren()","lastModifiedDate":"2023-10-30"},{"lineNumber":113,"author":{"gitId":"yucongkoo"},"content":"                        .add(createFlowPaneLabel(Type.INSURANCE, insurance.getInsuranceName()).getRoot()));","lastModifiedDate":"2023-10-31"},{"lineNumber":114,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"yucongkoo"},"content":"    private void loadTags() {","lastModifiedDate":"2023-10-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":118,"author":{"gitId":"TehOPanas"},"content":"                .sorted(Comparator.comparing(Tag::getTagName))","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"yucongkoo"},"content":"                .forEach(tag -\u003e flowPaneLabels.getChildren()","lastModifiedDate":"2023-10-31"},{"lineNumber":120,"author":{"gitId":"yucongkoo"},"content":"                        .add(createFlowPaneLabel(Type.TAG, tag.getTagName()).getRoot()));","lastModifiedDate":"2023-10-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":123,"author":{"gitId":"yucongkoo"},"content":"    private void loadPhoneCard() {","lastModifiedDate":"2023-10-10"},{"lineNumber":124,"author":{"gitId":"LamJiuFong"},"content":"        phoneCard \u003d new PersonAttributeCard(Attribute.PHONE, person.getPhone().value);","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"yucongkoo"},"content":"        phoneCardPlaceholder.getChildren().add(phoneCard.getRoot());","lastModifiedDate":"2023-10-10"},{"lineNumber":126,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":127,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":128,"author":{"gitId":"yucongkoo"},"content":"    private void loadEmailCard() {","lastModifiedDate":"2023-10-10"},{"lineNumber":129,"author":{"gitId":"LamJiuFong"},"content":"        emailCard \u003d new PersonAttributeCard(Attribute.EMAIL, person.getEmail().value);","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"yucongkoo"},"content":"        emailCardPlaceholder.getChildren().add(emailCard.getRoot());","lastModifiedDate":"2023-10-10"},{"lineNumber":131,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":132,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":133,"author":{"gitId":"yucongkoo"},"content":"    private void loadAddressCard() {","lastModifiedDate":"2023-10-10"},{"lineNumber":134,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":135,"author":{"gitId":"yucongkoo"},"content":"        if (person.getAddress().isEmptyAddress()) {","lastModifiedDate":"2023-10-10"},{"lineNumber":136,"author":{"gitId":"yucongkoo"},"content":"            return;","lastModifiedDate":"2023-10-10"},{"lineNumber":137,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":138,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":139,"author":{"gitId":"LamJiuFong"},"content":"        addressCard \u003d new PersonAttributeCard(Attribute.ADDRESS, person.getAddress().getValue());","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"yucongkoo"},"content":"        addressCardPlaceholder.getChildren().add(addressCard.getRoot());","lastModifiedDate":"2023-10-10"},{"lineNumber":141,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":142,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":143,"author":{"gitId":"songfangyl"},"content":"    private void loadRemarkCard() {","lastModifiedDate":"2023-10-25"},{"lineNumber":144,"author":{"gitId":"songfangyl"},"content":"        String remarkString \u003d person.getRemark().toString();","lastModifiedDate":"2023-10-25"},{"lineNumber":145,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":146,"author":{"gitId":"songfangyl"},"content":"        if (remarkString.isEmpty()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":147,"author":{"gitId":"songfangyl"},"content":"            return;","lastModifiedDate":"2023-10-25"},{"lineNumber":148,"author":{"gitId":"songfangyl"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":149,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":150,"author":{"gitId":"LamJiuFong"},"content":"        remarkCard \u003d new RemarkCard(remarkString);","lastModifiedDate":"2023-10-30"},{"lineNumber":151,"author":{"gitId":"yucongkoo"},"content":"        remarkCardPlaceholder.getChildren().add(remarkCard.getRoot());","lastModifiedDate":"2023-10-30"},{"lineNumber":152,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":153,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":154,"author":{"gitId":"Jweewee"},"content":"    private void loadAppointmentCard() {","lastModifiedDate":"2023-11-01"},{"lineNumber":155,"author":{"gitId":"Jweewee"},"content":"        /*","lastModifiedDate":"2023-11-01"},{"lineNumber":156,"author":{"gitId":"Jweewee"},"content":"        String appointmentDateString \u003d person.getAppointment().getDate();","lastModifiedDate":"2023-11-01"},{"lineNumber":157,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":158,"author":{"gitId":"Jweewee"},"content":"        if (appointmentDateString.equals(\"-\")) {","lastModifiedDate":"2023-11-01"},{"lineNumber":159,"author":{"gitId":"Jweewee"},"content":"            return;","lastModifiedDate":"2023-11-01"},{"lineNumber":160,"author":{"gitId":"Jweewee"},"content":"        } currently thinking of a way to do this, current method is not feasible","lastModifiedDate":"2023-11-01"},{"lineNumber":161,"author":{"gitId":"Jweewee"},"content":"        as it causes appointmentCard to disappear when it is unmarked/decremented.","lastModifiedDate":"2023-11-01"},{"lineNumber":162,"author":{"gitId":"Jweewee"},"content":"         */","lastModifiedDate":"2023-11-01"},{"lineNumber":163,"author":{"gitId":"Jweewee"},"content":"        appointmentCard \u003d new AppointmentAttributeCard(person.getAppointment(), person.getAppointmentCount());","lastModifiedDate":"2023-11-01"},{"lineNumber":164,"author":{"gitId":"Jweewee"},"content":"        appointmentCardPlaceholder.getChildren().add(appointmentCard.getRoot());","lastModifiedDate":"2023-11-01"},{"lineNumber":165,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":166,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":167,"author":{"gitId":"LamJiuFong"},"content":"    private void setInformationBox() {","lastModifiedDate":"2023-11-01"},{"lineNumber":168,"author":{"gitId":"LamJiuFong"},"content":"        String remarkString \u003d person.getRemark().toString();","lastModifiedDate":"2023-11-01"},{"lineNumber":169,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":170,"author":{"gitId":"LamJiuFong"},"content":"        if (remarkString.isEmpty()) {","lastModifiedDate":"2023-11-01"},{"lineNumber":171,"author":{"gitId":"LamJiuFong"},"content":"            informationBox.setSpacing(5);","lastModifiedDate":"2023-11-01"},{"lineNumber":172,"author":{"gitId":"LamJiuFong"},"content":"        } else {","lastModifiedDate":"2023-11-01"},{"lineNumber":173,"author":{"gitId":"LamJiuFong"},"content":"            informationBox.setSpacing(10);","lastModifiedDate":"2023-11-01"},{"lineNumber":174,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"TehOPanas":8,"yucongkoo":65,"songfangyl":9,"LamJiuFong":25,"-":50,"Jweewee":19}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"import javafx.scene.control.MultipleSelectionModel;","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"        personListView.setSelectionModel(new NoSelectionModel\u003c\u003e());","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"yucongkoo"},"content":"     * SelectionModel that disables selection through mouse clicks.","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"yucongkoo"},"content":"    private class NoSelectionModel\u003cT\u003e extends MultipleSelectionModel\u003cT\u003e {","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"yucongkoo"},"content":"        @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"yucongkoo"},"content":"        public ObservableList\u003cInteger\u003e getSelectedIndices() {","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"yucongkoo"},"content":"            return FXCollections.emptyObservableList();","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"yucongkoo"},"content":"        @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"yucongkoo"},"content":"        public ObservableList\u003cT\u003e getSelectedItems() {","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"yucongkoo"},"content":"            return FXCollections.emptyObservableList();","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"yucongkoo"},"content":"        @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"yucongkoo"},"content":"        public void selectIndices(int index, int... indices) {","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"yucongkoo"},"content":"        @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"yucongkoo"},"content":"        public void selectAll() {","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"yucongkoo"},"content":"        @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"yucongkoo"},"content":"        public void selectFirst() {","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":78,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":79,"author":{"gitId":"yucongkoo"},"content":"        @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"yucongkoo"},"content":"        public void selectLast() {","lastModifiedDate":"2023-10-30"},{"lineNumber":81,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":83,"author":{"gitId":"yucongkoo"},"content":"        @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":84,"author":{"gitId":"yucongkoo"},"content":"        public void clearAndSelect(int index) {","lastModifiedDate":"2023-10-30"},{"lineNumber":85,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":86,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"yucongkoo"},"content":"        @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":88,"author":{"gitId":"yucongkoo"},"content":"        public void select(int index) {","lastModifiedDate":"2023-10-30"},{"lineNumber":89,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":90,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":91,"author":{"gitId":"yucongkoo"},"content":"        @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"yucongkoo"},"content":"        public void select(T obj) {","lastModifiedDate":"2023-10-30"},{"lineNumber":93,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":94,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":95,"author":{"gitId":"yucongkoo"},"content":"        @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":96,"author":{"gitId":"yucongkoo"},"content":"        public void clearSelection(int index) {","lastModifiedDate":"2023-10-30"},{"lineNumber":97,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":98,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":99,"author":{"gitId":"yucongkoo"},"content":"        @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":100,"author":{"gitId":"yucongkoo"},"content":"        public void clearSelection() {","lastModifiedDate":"2023-10-30"},{"lineNumber":101,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":102,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":103,"author":{"gitId":"yucongkoo"},"content":"        @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":104,"author":{"gitId":"yucongkoo"},"content":"        public boolean isSelected(int index) {","lastModifiedDate":"2023-10-30"},{"lineNumber":105,"author":{"gitId":"yucongkoo"},"content":"            return false;","lastModifiedDate":"2023-10-30"},{"lineNumber":106,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":107,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":108,"author":{"gitId":"yucongkoo"},"content":"        @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":109,"author":{"gitId":"yucongkoo"},"content":"        public boolean isEmpty() {","lastModifiedDate":"2023-10-30"},{"lineNumber":110,"author":{"gitId":"yucongkoo"},"content":"            return true;","lastModifiedDate":"2023-10-30"},{"lineNumber":111,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":112,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":113,"author":{"gitId":"yucongkoo"},"content":"        @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":114,"author":{"gitId":"yucongkoo"},"content":"        public void selectPrevious() {","lastModifiedDate":"2023-10-30"},{"lineNumber":115,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":116,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":117,"author":{"gitId":"yucongkoo"},"content":"        @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":118,"author":{"gitId":"yucongkoo"},"content":"        public void selectNext() {","lastModifiedDate":"2023-10-30"},{"lineNumber":119,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":120,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":121,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"yucongkoo":73,"-":49}},{"path":"src/main/java/seedu/address/ui/RemarkCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"LamJiuFong"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":" * A UI Component that displays the remark of a person.","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"public class RemarkCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"    private static final String FXML \u003d \"RemarkCard.fxml\";","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"    @FXML","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"    private VBox remarkCard;","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"    @FXML","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"    private Label remark;","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"LamJiuFong"},"content":"    @FXML","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"LamJiuFong"},"content":"    private ImageView imageView;","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"LamJiuFong"},"content":"    private final Image image \u003d new Image(\"images/remarks.png\");","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"LamJiuFong"},"content":"     * Creates a remark card with the given {@code remark}.","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"LamJiuFong"},"content":"    public RemarkCard(String remark) {","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"        super(FXML);","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"        this.remark.setText(remark);","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"LamJiuFong"},"content":"        imageView.setImage(image);","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"yucongkoo":24,"LamJiuFong":8}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"LamJiuFong"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book.png\";","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"LamJiuFong":1,"-":87}},{"path":"src/main/resources/view/AppointmentCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jweewee"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":2,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":5,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"LamJiuFong"},"content":"\u003cVBox fx:id\u003d\"appointmentCard\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"appointment-card-container\" minWidth\u003d\"200\" maxWidth\u003d\"200\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"LamJiuFong"},"content":"        \u003cInsets top\u003d\"6\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"Jweewee"},"content":"    \u003cVBox\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":"        \u003cHBox\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"LamJiuFong"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"LamJiuFong"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\"/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"LamJiuFong"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"LamJiuFong"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"LamJiuFong"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"LamJiuFong"},"content":"                    \u003cInsets right\u003d\"7\"/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"LamJiuFong"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"Jweewee"},"content":"                \u003cImageView fx:id\u003d\"dateIcon\" fitWidth\u003d\"25\" fitHeight\u003d\"25\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"LamJiuFong"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"            \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_small_label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"Jweewee"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"Jweewee"},"content":"        \u003cHBox\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"LamJiuFong"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"LamJiuFong"},"content":"                \u003cInsets top\u003d\"3\" right\u003d\"10\" bottom\u003d\"5\"/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"LamJiuFong"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"LamJiuFong"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"LamJiuFong"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"LamJiuFong"},"content":"                    \u003cInsets right\u003d\"7\"/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":34,"author":{"gitId":"LamJiuFong"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":35,"author":{"gitId":"Jweewee"},"content":"                \u003cImageView fx:id\u003d\"timeIcon\" fitWidth\u003d\"25\" fitHeight\u003d\"25\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"LamJiuFong"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":37,"author":{"gitId":"Jweewee"},"content":"            \u003cLabel fx:id\u003d\"time\" styleClass\u003d\"cell_small_label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":38,"author":{"gitId":"Jweewee"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"Jweewee"},"content":"        \u003cHBox\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"LamJiuFong"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"LamJiuFong"},"content":"                \u003cInsets top\u003d\"3\" right\u003d\"10\" bottom\u003d\"5\"/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"LamJiuFong"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"LamJiuFong"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"LamJiuFong"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":46,"author":{"gitId":"LamJiuFong"},"content":"                    \u003cInsets right\u003d\"7\"/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"LamJiuFong"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"Jweewee"},"content":"                \u003cImageView fx:id\u003d\"venueIcon\" fitWidth\u003d\"25\" fitHeight\u003d\"25\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"LamJiuFong"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"Jweewee"},"content":"            \u003cLabel fx:id\u003d\"venue\" styleClass\u003d\"cell_small_label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"Jweewee"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"Jweewee"},"content":"        \u003cHBox\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":54,"author":{"gitId":"Jweewee"},"content":"            \u003cLabel fx:id\u003d\"count\" styleClass\u003d\"cell_small_label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"Jweewee"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"Jweewee"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"Jweewee"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-01"}],"authorContributionMap":{"LamJiuFong":26,"Jweewee":33}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"/* Menu bar(for the header) */","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":".menu-bar {","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"    -fx-background-color: derive(#F2F4F0, 20%);","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":".menu-bar .label {","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":"    -fx-font-size: 10pt;","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"    -fx-text-fill: #0F120D;","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":".menu .left-container {","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"    -fx-background-color: black;","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"/* Status bar(for the footer) */","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":".status-bar {","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"    -fx-background-color: derive(#F2F4F0, 30%);","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":".status-bar .label {","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"      -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"      -fx-text-fill: #0F120D;","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"      -fx-padding: 4px;","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"      -fx-pref-height: 30px;","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":".status-bar-with-border {","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"    -fx-background-color: derive(#F2F4F0, 30%);","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"    -fx-border-color: derive(#F2F4F0, 25%);","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":".status-bar-with-border .label {","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"    -fx-text-fill: #0F120D;","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"/* Command box */","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":".stack-pane {","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"yucongkoo"},"content":"     -fx-background-color: derive(#D6E1DD, 20%);","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"     -fx-border-radius: 15;","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"yucongkoo"},"content":"     -fx-border-width: 0;","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"yucongkoo"},"content":"     -fx-background-radius: 15;","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"yucongkoo"},"content":".pane-with-border {","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"yucongkoo"},"content":"    -fx-background-color: derive(#F2F4F0, 20%);","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"yucongkoo"},"content":"    -fx-border-color: derive(#F2F4F0, 10%);","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"yucongkoo"},"content":"    -fx-border-top-width: 1px;","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"yucongkoo"},"content":"#commandTextField {","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"yucongkoo"},"content":"    -fx-background-color: transparent #D6E1DD transparent #D6E1DD;","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"yucongkoo"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"yucongkoo"},"content":"    -fx-border-color: #F2F4F0;","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"yucongkoo"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"yucongkoo"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"yucongkoo"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"yucongkoo"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"yucongkoo"},"content":"    -fx-text-fill: #0F120D;","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"yucongkoo"},"content":"/* Result display box */","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"yucongkoo"},"content":".result-display {","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"yucongkoo"},"content":"    -fx-background-color: transparent #D6E1DD transparent #D6E1DD;","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"yucongkoo"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"yucongkoo"},"content":"    -fx-border-color: #F2F4F0;","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"yucongkoo"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"yucongkoo"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2023-10-30"},{"lineNumber":78,"author":{"gitId":"yucongkoo"},"content":"    -fx-border-radius: 15;","lastModifiedDate":"2023-10-30"},{"lineNumber":79,"author":{"gitId":"yucongkoo"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"yucongkoo"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2023-10-30"},{"lineNumber":81,"author":{"gitId":"yucongkoo"},"content":"    -fx-text-fill: #0F120D;","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-30"},{"lineNumber":83,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":84,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":85,"author":{"gitId":"yucongkoo"},"content":".result-display .content {","lastModifiedDate":"2023-10-30"},{"lineNumber":86,"author":{"gitId":"yucongkoo"},"content":"    -fx-background-color: derive(#D6E1DD, 20%);","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-30"},{"lineNumber":88,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":89,"author":{"gitId":"yucongkoo"},"content":"/* List view(for result display) */","lastModifiedDate":"2023-10-30"},{"lineNumber":90,"author":{"gitId":"yucongkoo"},"content":".list-view {","lastModifiedDate":"2023-10-30"},{"lineNumber":91,"author":{"gitId":"yucongkoo"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"yucongkoo"},"content":"    -fx-padding: 0;","lastModifiedDate":"2023-10-30"},{"lineNumber":93,"author":{"gitId":"yucongkoo"},"content":"    -fx-background-color: derive(#F2F4F0, 20%);","lastModifiedDate":"2023-10-30"},{"lineNumber":94,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-30"},{"lineNumber":95,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":96,"author":{"gitId":"yucongkoo"},"content":".list-cell {","lastModifiedDate":"2023-10-30"},{"lineNumber":97,"author":{"gitId":"yucongkoo"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2023-10-30"},{"lineNumber":98,"author":{"gitId":"yucongkoo"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2023-10-30"},{"lineNumber":99,"author":{"gitId":"yucongkoo"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-10-30"},{"lineNumber":100,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-30"},{"lineNumber":101,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":102,"author":{"gitId":"yucongkoo"},"content":".list-cell:filled:even {","lastModifiedDate":"2023-10-30"},{"lineNumber":103,"author":{"gitId":"yucongkoo"},"content":"    -fx-background-color: #D6E1DD;","lastModifiedDate":"2023-10-30"},{"lineNumber":104,"author":{"gitId":"yucongkoo"},"content":"    -fx-border-color: #8DAA91;","lastModifiedDate":"2023-10-30"},{"lineNumber":105,"author":{"gitId":"yucongkoo"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-10-30"},{"lineNumber":106,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-30"},{"lineNumber":107,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":108,"author":{"gitId":"yucongkoo"},"content":".list-cell:filled:odd {","lastModifiedDate":"2023-10-30"},{"lineNumber":109,"author":{"gitId":"yucongkoo"},"content":"    -fx-background-color: #D6E1DD;","lastModifiedDate":"2023-10-30"},{"lineNumber":110,"author":{"gitId":"yucongkoo"},"content":"    -fx-border-color: #8DAA91;","lastModifiedDate":"2023-10-30"},{"lineNumber":111,"author":{"gitId":"yucongkoo"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-10-30"},{"lineNumber":112,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-30"},{"lineNumber":113,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":114,"author":{"gitId":"yucongkoo"},"content":".list-cell:empty {","lastModifiedDate":"2023-10-30"},{"lineNumber":115,"author":{"gitId":"yucongkoo"},"content":"    -fx-background-color: #F2F4F0;","lastModifiedDate":"2023-10-30"},{"lineNumber":116,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-30"},{"lineNumber":117,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":118,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":119,"author":{"gitId":"yucongkoo"},"content":".list-cell .label {","lastModifiedDate":"2023-10-30"},{"lineNumber":120,"author":{"gitId":"yucongkoo"},"content":"    -fx-text-fill: #0F120D;","lastModifiedDate":"2023-10-30"},{"lineNumber":121,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-30"},{"lineNumber":122,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":123,"author":{"gitId":"yucongkoo"},"content":".cell_big_label {","lastModifiedDate":"2023-10-30"},{"lineNumber":124,"author":{"gitId":"yucongkoo"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-10-30"},{"lineNumber":125,"author":{"gitId":"yucongkoo"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-10-31"},{"lineNumber":126,"author":{"gitId":"yucongkoo"},"content":"    -fx-font-size: 20px !important;","lastModifiedDate":"2023-10-31"},{"lineNumber":127,"author":{"gitId":"yucongkoo"},"content":"    -fx-text-fill: #0F120D;","lastModifiedDate":"2023-10-30"},{"lineNumber":128,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-30"},{"lineNumber":129,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":130,"author":{"gitId":"yucongkoo"},"content":".cell_small_label {","lastModifiedDate":"2023-10-30"},{"lineNumber":131,"author":{"gitId":"yucongkoo"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2023-10-30"},{"lineNumber":132,"author":{"gitId":"yucongkoo"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2023-10-31"},{"lineNumber":133,"author":{"gitId":"yucongkoo"},"content":"    -fx-text-fill: #0F120D;","lastModifiedDate":"2023-10-30"},{"lineNumber":134,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-30"},{"lineNumber":135,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":136,"author":{"gitId":"yucongkoo"},"content":"/* Scroll bar */","lastModifiedDate":"2023-10-30"},{"lineNumber":137,"author":{"gitId":"yucongkoo"},"content":".scroll-bar {","lastModifiedDate":"2023-10-30"},{"lineNumber":138,"author":{"gitId":"yucongkoo"},"content":"    -fx-background-color: derive(#D6E1DD, 20%);","lastModifiedDate":"2023-10-30"},{"lineNumber":139,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-30"},{"lineNumber":140,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":141,"author":{"gitId":"yucongkoo"},"content":".scroll-bar .thumb {","lastModifiedDate":"2023-10-30"},{"lineNumber":142,"author":{"gitId":"yucongkoo"},"content":"    -fx-background-color: derive(#D6E1DD, 50%);","lastModifiedDate":"2023-10-30"},{"lineNumber":143,"author":{"gitId":"yucongkoo"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2023-10-30"},{"lineNumber":144,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-30"},{"lineNumber":145,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":146,"author":{"gitId":"yucongkoo"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2023-10-30"},{"lineNumber":147,"author":{"gitId":"yucongkoo"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-10-30"},{"lineNumber":148,"author":{"gitId":"yucongkoo"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-10-30"},{"lineNumber":149,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-30"},{"lineNumber":150,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":151,"author":{"gitId":"yucongkoo"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2023-10-30"},{"lineNumber":152,"author":{"gitId":"yucongkoo"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2023-10-30"},{"lineNumber":153,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-30"},{"lineNumber":154,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":155,"author":{"gitId":"yucongkoo"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2023-10-30"},{"lineNumber":156,"author":{"gitId":"yucongkoo"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2023-10-30"},{"lineNumber":157,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-30"},{"lineNumber":158,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":159,"author":{"gitId":"yucongkoo"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2023-10-30"},{"lineNumber":160,"author":{"gitId":"yucongkoo"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2023-10-30"},{"lineNumber":161,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-30"},{"lineNumber":162,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":163,"author":{"gitId":"yucongkoo"},"content":"/* -----------------------------------------------original---------------------------------------------------- */","lastModifiedDate":"2023-10-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":242,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":246,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":321,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":331,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":348,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":350,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":355,"author":{"gitId":"yucongkoo"},"content":"#flowPaneLabels {","lastModifiedDate":"2023-10-30"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":360,"author":{"gitId":"yucongkoo"},"content":"#flowPaneLabels .label {","lastModifiedDate":"2023-10-30"},{"lineNumber":361,"author":{"gitId":"yucongkoo"},"content":"    -fx-padding: 3 3 3 3;","lastModifiedDate":"2023-10-30"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":364,"author":{"gitId":"yucongkoo"},"content":"    -fx-font-size: 13;","lastModifiedDate":"2023-10-30"},{"lineNumber":365,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":366,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":367,"author":{"gitId":"yucongkoo"},"content":".attribute-card {","lastModifiedDate":"2023-10-11"},{"lineNumber":368,"author":{"gitId":"yucongkoo"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2023-10-11"},{"lineNumber":369,"author":{"gitId":"LamJiuFong"},"content":"    -fx-background-color: #FFFFFF;","lastModifiedDate":"2023-10-17"},{"lineNumber":370,"author":{"gitId":"LamJiuFong"},"content":"    -fx-min-width: 200px;","lastModifiedDate":"2023-10-17"},{"lineNumber":371,"author":{"gitId":"LamJiuFong"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":372,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":373,"author":{"gitId":"LamJiuFong"},"content":".attribute-card-container {","lastModifiedDate":"2023-10-17"},{"lineNumber":374,"author":{"gitId":"LamJiuFong"},"content":"    -fx-background-color: #FFFFFF;","lastModifiedDate":"2023-10-17"},{"lineNumber":375,"author":{"gitId":"LamJiuFong"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2023-10-17"},{"lineNumber":376,"author":{"gitId":"LamJiuFong"},"content":"    -fx-max-width: 200px;","lastModifiedDate":"2023-10-17"},{"lineNumber":377,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-11"},{"lineNumber":378,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":379,"author":{"gitId":"yucongkoo"},"content":".attribute-card-label-container {","lastModifiedDate":"2023-10-11"},{"lineNumber":380,"author":{"gitId":"yucongkoo"},"content":"    -fx-background-radius: 5;","lastModifiedDate":"2023-10-11"},{"lineNumber":381,"author":{"gitId":"LamJiuFong"},"content":"    -fx-background-color: #FFFFFF;","lastModifiedDate":"2023-10-17"},{"lineNumber":382,"author":{"gitId":"LamJiuFong"},"content":"}","lastModifiedDate":"2023-10-17"},{"lineNumber":383,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":384,"author":{"gitId":"LamJiuFong"},"content":".icons-container {","lastModifiedDate":"2023-10-17"},{"lineNumber":385,"author":{"gitId":"LamJiuFong"},"content":"    -fx-max-height: 5;","lastModifiedDate":"2023-10-17"},{"lineNumber":386,"author":{"gitId":"LamJiuFong"},"content":"    -fx-max-width: 5;","lastModifiedDate":"2023-10-17"},{"lineNumber":387,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-11"},{"lineNumber":388,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":389,"author":{"gitId":"LamJiuFong"},"content":".remark-card-container {","lastModifiedDate":"2023-11-01"},{"lineNumber":390,"author":{"gitId":"LamJiuFong"},"content":"    -fx-background-color: rgba(141, 170, 145, 0.5);","lastModifiedDate":"2023-11-01"},{"lineNumber":391,"author":{"gitId":"LamJiuFong"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2023-11-01"},{"lineNumber":392,"author":{"gitId":"LamJiuFong"},"content":"    -fx-max-width: 200px;","lastModifiedDate":"2023-11-01"},{"lineNumber":393,"author":{"gitId":"LamJiuFong"},"content":"}","lastModifiedDate":"2023-10-22"},{"lineNumber":394,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":395,"author":{"gitId":"LamJiuFong"},"content":".appointment-card-container {","lastModifiedDate":"2023-11-01"},{"lineNumber":396,"author":{"gitId":"LamJiuFong"},"content":"    -fx-background-color: rgb(141, 170, 145);","lastModifiedDate":"2023-11-01"},{"lineNumber":397,"author":{"gitId":"songfangyl"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2023-10-25"},{"lineNumber":398,"author":{"gitId":"songfangyl"},"content":"    -fx-max-width: 200px;","lastModifiedDate":"2023-10-25"},{"lineNumber":399,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"yucongkoo":169,"songfangyl":3,"LamJiuFong":23,"-":204}},{"path":"src/main/resources/view/FlowPaneLabel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"\u003cHBox fx:id\u003d\"flowPaneLabel\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"    \u003cLabel fx:id\u003d\"value\" /\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"yucongkoo":8}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":14,"author":{"gitId":"LamJiuFong"},"content":"         title\u003d\"EzContact\" minWidth\u003d\"1050\" minHeight\u003d\"800\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"LamJiuFong"},"content":"    \u003cImage url\u003d\"@/images/address_book.png\" /\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"songfangyl"},"content":"                   minHeight\u003d\"150\" prefHeight\u003d\"150\" maxHeight\u003d\"150\"\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"songfangyl":1,"LamJiuFong":2,"-":56}},{"path":"src/main/resources/view/PersonAttributeCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"LamJiuFong"},"content":"\u003cHBox fx:id\u003d\"attributeCard\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" spacing\u003d\"5\" styleClass\u003d\"attribute-card\" \u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":"    \u003cHBox styleClass\u003d\"icons-container\"\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"LamJiuFong"},"content":"        \u003cImageView fx:id\u003d\"imageView\" fitWidth\u003d\"22\" fitHeight\u003d\"22\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"LamJiuFong"},"content":"    \u003cHBox alignment\u003d\"CENTER_LEFT\" styleClass\u003d\"attribute-card-label-container\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"LamJiuFong"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"LamJiuFong"},"content":"            \u003cInsets left\u003d\"4\"/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"LamJiuFong"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"LamJiuFong"},"content":"        \u003cLabel fx:id\u003d\"body\" wrapText\u003d\"true\" styleClass\u003d\"cell_small_label\"/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"LamJiuFong"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"LamJiuFong"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"yucongkoo":9,"LamJiuFong":12}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"\u003c?import javafx.scene.chart.BarChart?\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"      \u003cColumnConstraints hgrow\u003d\"NEVER\" minWidth\u003d\"10\" prefWidth\u003d\"350\" /\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"Jweewee"},"content":"    \u003c!-- Left HBox for name, priority and tags --\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\" \u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"      \u003cVBox prefHeight\u003d\"5\" minHeight\u003d\"5\" maxHeight\u003d\"5\"/\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"Jweewee"},"content":"      \u003cFlowPane fx:id\u003d\"flowPaneLabels\" /\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"LamJiuFong"},"content":"    \u003c!-- Right HBox for customers information --\u003e","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"LamJiuFong"},"content":"    \u003cHBox fx:id\u003d\u0027informationBox\u0027 GridPane.columnIndex\u003d\"1\"\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"LamJiuFong"},"content":"        \u003cInsets top\u003d\"8\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"songfangyl"},"content":"      \u003cVBox styleClass\u003d\"attribute-card-container\" minHeight\u003d\"105\" \u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"songfangyl"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"LamJiuFong"},"content":"          \u003cInsets top\u003d\"10\" bottom\u003d\"10\"/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"songfangyl"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"yucongkoo"},"content":"        \u003cVBox fx:id\u003d\"phoneCardPlaceholder\"/\u003e","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"yucongkoo"},"content":"        \u003cVBox fx:id\u003d\"emailCardPlaceholder\" /\u003e","lastModifiedDate":"2023-10-10"},{"lineNumber":53,"author":{"gitId":"yucongkoo"},"content":"        \u003cVBox fx:id\u003d\"addressCardPlaceholder\" /\u003e","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"Jweewee"},"content":"      \u003cVBox fx:id\u003d\"remarkCardPlaceholder\"/\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"Jweewee"},"content":"      \u003cVBox fx:id\u003d\"appointmentCardPlaceholder\"/\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"yucongkoo"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2023-10-10"},{"lineNumber":58,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yucongkoo":15,"songfangyl":3,"LamJiuFong":4,"-":32,"Jweewee":6}},{"path":"src/main/resources/view/RemarkCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"\u003cVBox fx:id\u003d\"remarkCard\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"remark-card-container\" minWidth\u003d\"200\" maxWidth\u003d\"200\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"LamJiuFong"},"content":"        \u003cInsets top\u003d\"9\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"LamJiuFong"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":"    \u003cHBox\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"LamJiuFong"},"content":"        \u003cImageView fx:id\u003d\"imageView\" fitWidth\u003d\"25\" fitHeight\u003d\"25\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"LamJiuFong"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"LamJiuFong"},"content":"    \u003cHBox\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"LamJiuFong"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"LamJiuFong"},"content":"            \u003cInsets top\u003d\"10\" /\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"        \u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"LamJiuFong"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"yucongkoo":10,"LamJiuFong":11}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book.png\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"LamJiuFong":1,"-":35}},{"path":"src/test/java/seedu/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":144,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":145,"author":{"gitId":"yucongkoo"},"content":"    public void trimContiguousSpaces_leadingAndTrailingSpaces_success() {","lastModifiedDate":"2023-11-02"},{"lineNumber":146,"author":{"gitId":"yucongkoo"},"content":"        String input \u003d \"     This    is    a   test.   \";","lastModifiedDate":"2023-11-02"},{"lineNumber":147,"author":{"gitId":"yucongkoo"},"content":"        String expectedOutput \u003d \"This is a test.\";","lastModifiedDate":"2023-11-02"},{"lineNumber":148,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(StringUtil.trimContiguousSpaces(input), expectedOutput);","lastModifiedDate":"2023-11-02"},{"lineNumber":149,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":150,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":151,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":152,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":153,"author":{"gitId":"yucongkoo"},"content":"    public void countCharactersWithoutSpaces_leadingAndTrailingSpaces_success() {","lastModifiedDate":"2023-11-02"},{"lineNumber":154,"author":{"gitId":"yucongkoo"},"content":"        String input \u003d \"     This    is    a   test.   \";","lastModifiedDate":"2023-11-02"},{"lineNumber":155,"author":{"gitId":"yucongkoo"},"content":"        int expectedCount \u003d 12;","lastModifiedDate":"2023-11-02"},{"lineNumber":156,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(StringUtil.countCharactersWithoutSpaces(input), expectedCount);","lastModifiedDate":"2023-11-02"},{"lineNumber":157,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"yucongkoo":15,"-":143}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PRIORITY_DESC_HIGH;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_AMY;","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"Jweewee"},"content":"        assertCommandSuccess(listCommand, String.format(ListCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"Jweewee"},"content":"                model.getFilteredPersonListSize()), model);","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"songfangyl"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + REMARK_DESC_AMY + PRIORITY_DESC_HIGH;","lastModifiedDate":"2023-10-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"songfangyl":3,"-":173,"Jweewee":2}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"Jweewee"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppointmentCommand.class);","lastModifiedDate":"2023-11-01"},{"lineNumber":25,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model,","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"Jweewee"},"content":"                Messages.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"-":45,"Jweewee":6}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"yucongkoo"},"content":"        assertThrows(CommandException.class, Messages.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"yucongkoo"},"content":"    public void execute_tagExceedLimit_throwsCommandException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"yucongkoo"},"content":"        Person person \u003d new PersonBuilder().withTags(\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\").build();","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"yucongkoo"},"content":"        Command command \u003d new AddCommand(person);","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"yucongkoo"},"content":"        assertThrows(CommandException.class, Messages.MESSAGE_TAG_COUNT_EXCEED, () -\u003e command.execute(new ModelStub()));","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":63,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"yucongkoo"},"content":"    public void execute_tagAtLimit_success() throws Exception {","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"yucongkoo"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"yucongkoo"},"content":"        Person person \u003d new PersonBuilder().withTags(\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\").build();","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"yucongkoo"},"content":"        CommandResult commandResult \u003d new AddCommand(person).execute(modelStub);","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(person)),","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"yucongkoo"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2023-10-20"},{"lineNumber":72,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":73,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"TehOPanas"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"TehOPanas"},"content":"    public void execute_insuranceNone_throwsCommandException() throws Exception {","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"TehOPanas"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"TehOPanas"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"TehOPanas"},"content":"        CommandResult commandResult \u003d new AddCommand(person).execute(modelStub);","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"TehOPanas"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(person)),","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"TehOPanas"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"TehOPanas"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"TehOPanas"},"content":"    public void execute_insuranceAtLimit_success() throws Exception {","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"TehOPanas"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"TehOPanas"},"content":"        Person person \u003d new PersonBuilder().withInsurances(\"1\", \"2\", \"3\", \"4\", \"5\").build();","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"TehOPanas"},"content":"        CommandResult commandResult \u003d new AddCommand(person).execute(modelStub);","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"TehOPanas"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(person)),","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"TehOPanas"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"TehOPanas"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"TehOPanas"},"content":"    public void execute_insuranceExceedLimit_success() throws Exception {","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"TehOPanas"},"content":"        Person person \u003d new PersonBuilder().withInsurances(\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\").build();","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"TehOPanas"},"content":"        AddCommand command \u003d new AddCommand(person);","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"TehOPanas"},"content":"        assertThrows(CommandException.class, Messages.MESSAGE_INSURANCE_COUNT_EXCEED, () -\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"TehOPanas"},"content":"                command.execute(new ModelStub()));","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":211,"author":{"gitId":"yucongkoo"},"content":"        @Override","lastModifiedDate":"2023-10-16"},{"lineNumber":212,"author":{"gitId":"yucongkoo"},"content":"        public int getFilteredPersonListSize() {","lastModifiedDate":"2023-10-16"},{"lineNumber":213,"author":{"gitId":"yucongkoo"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-16"},{"lineNumber":214,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":236,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":237,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":259,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"TehOPanas":30,"yucongkoo":24,"-":205}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_INSURANCE;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_TAG;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DELETE_INSURANCE;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DELETE_TAG;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INSURANCE;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.person.PersonTestUtil;","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.predicate.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"    public static final String VALID_NAME_CALMEN \u003d \"Calmen\";","lastModifiedDate":"2023-10-08"},{"lineNumber":41,"author":{"gitId":"LamJiuFong"},"content":"    public static final String VALID_NAME_DERRICK \u003d \"Derrick\";","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"    public static final String VALID_PHONE_CALMEN \u003d \"33333333\";","lastModifiedDate":"2023-10-08"},{"lineNumber":45,"author":{"gitId":"LamJiuFong"},"content":"    public static final String VALID_PHONE_DERRICK \u003d \"44444444\";","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"    public static final String VALID_EMAIL_CALMEN \u003d \"calmen@example.com\";","lastModifiedDate":"2023-10-08"},{"lineNumber":49,"author":{"gitId":"LamJiuFong"},"content":"    public static final String VALID_EMAIL_DERRICK \u003d \"derrick@example.com\";","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"songfangyl"},"content":"    public static final String VALID_REMARK_AMY \u003d \"nothing to remark\";","lastModifiedDate":"2023-09-27"},{"lineNumber":53,"author":{"gitId":"songfangyl"},"content":"    public static final String VALID_REMARK_BOB \u003d \"Owned me 30k\";","lastModifiedDate":"2023-09-27"},{"lineNumber":54,"author":{"gitId":"songfangyl"},"content":"    public static final String VALID_REMARK_CALMEN \u003d \"He like to eat apple\";","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"songfangyl"},"content":"    public static final String VALID_REMARK_DERRICK \u003d \"He don\u0027t like to shake hand with people\";","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"LamJiuFong"},"content":"    public static final String VALID_ADDRESS_DERRICK \u003d \"Block 432, Derrick Road\";","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"LamJiuFong"},"content":"    public static final String VALID_ADDRESS_WITH_PREFIX_TAG \u003d \"51, Kent Ridge/t\";","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"Jweewee"},"content":"    public static final String VALID_ADDRESS_EMPTY \u003d \"  \";","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"yucongkoo"},"content":"    public static final String VALID_TAG_MALE \u003d \"male\";","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"Jweewee"},"content":"    public static final String VALID_INSURANCE_CAR \u003d \"car insurance\";","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"Jweewee"},"content":"    public static final String VALID_INSURANCE_LIFE \u003d \"life insurance\";","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"Jweewee"},"content":"    public static final String VALID_INSURANCE_HEALTH \u003d \"health insurance\";","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"LamJiuFong"},"content":"    public static final String VALID_PRIORITY_HIGH \u003d \"high\";","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"LamJiuFong"},"content":"    public static final String VALID_PRIORITY_LOW \u003d \"low\";","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"LamJiuFong"},"content":"    public static final String VALID_PRIORITY_NONE \u003d \"-\";","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"Jweewee"},"content":"    public static final String VALID_APPOINTMENT_AMY \u003d \"10 Oct 2025\";","lastModifiedDate":"2023-11-01"},{"lineNumber":70,"author":{"gitId":"Jweewee"},"content":"    public static final String VALID_APPOINTMENT_TIME_AMY \u003d \"0530\";","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"Jweewee"},"content":"    public static final String VALID_APPOINTMENT_VENUE_AMY \u003d \"Suntec City\";","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"Jweewee"},"content":"    public static final String VALID_APPOINTMENT_BOB \u003d \"10 Oct 2025\";","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"Jweewee"},"content":"    public static final String VALID_APPOINTMENT_TIME_BOB \u003d \"0530\";","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"Jweewee"},"content":"    public static final String VALID_APPOINTMENT_VENUE_BOB \u003d \"Suntec City\";","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"Jweewee"},"content":"    public static final String VALID_APPOINTMENT_CALMEN \u003d \"10 Oct 2025\";","lastModifiedDate":"2023-11-01"},{"lineNumber":76,"author":{"gitId":"Jweewee"},"content":"    public static final String VALID_APPOINTMENT_TIME_CALMEN \u003d \"0530\";","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"Jweewee"},"content":"    public static final String VALID_APPOINTMENT_VENUE_CALMEN \u003d \"Suntec City\";","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"Jweewee"},"content":"    public static final String VALID_APPOINTMENT_DERRICK \u003d \"10 Oct 2025\";","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"Jweewee"},"content":"    public static final String VALID_APPOINTMENT_TIME_DERRICK \u003d \"0530\";","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"Jweewee"},"content":"    public static final String VALID_APPOINTMENT_VENUE_DERRICK \u003d \"Suntec City\";","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"yucongkoo"},"content":"    public static final String NAME_DESC_CALMEN \u003d \" \" + PREFIX_NAME + VALID_NAME_CALMEN;","lastModifiedDate":"2023-10-08"},{"lineNumber":85,"author":{"gitId":"LamJiuFong"},"content":"    public static final String NAME_DESC_DERRICK \u003d \" \" + PREFIX_NAME + VALID_NAME_DERRICK;","lastModifiedDate":"2023-10-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"yucongkoo"},"content":"    public static final String PHONE_DESC_CALMEN \u003d \" \" + PREFIX_PHONE + VALID_PHONE_CALMEN;","lastModifiedDate":"2023-10-08"},{"lineNumber":89,"author":{"gitId":"LamJiuFong"},"content":"    public static final String PHONE_DESC_DERRICK \u003d \" \" + PREFIX_PHONE + VALID_PHONE_DERRICK;","lastModifiedDate":"2023-10-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"yucongkoo"},"content":"    public static final String EMAIL_DESC_CALMEN \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_CALMEN;","lastModifiedDate":"2023-10-08"},{"lineNumber":93,"author":{"gitId":"LamJiuFong"},"content":"    public static final String EMAIL_DESC_DERRICK \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_DERRICK;","lastModifiedDate":"2023-10-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"LamJiuFong"},"content":"    public static final String ADDRESS_DESC_DERRICK \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_DERRICK;","lastModifiedDate":"2023-10-23"},{"lineNumber":97,"author":{"gitId":"LamJiuFong"},"content":"    public static final String ADDRESS_DESC_WITH_PREFIX_TAG \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_WITH_PREFIX_TAG;","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"Jweewee"},"content":"    public static final String ADDRESS_DESC_EMPTY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_EMPTY;","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"songfangyl"},"content":"    public static final String REMARK_DESC_AMY \u003d \" \" + PREFIX_REMARK + VALID_REMARK_AMY;","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"songfangyl"},"content":"    public static final String REMARK_DESC_BOB \u003d \" \" + PREFIX_REMARK + VALID_REMARK_BOB;","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"songfangyl"},"content":"    public static final String REMARK_DESC_CALMEN \u003d \" \" + PREFIX_REMARK + VALID_REMARK_CALMEN;","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"songfangyl"},"content":"    public static final String REMARK_DESC_DERRICK \u003d \" \" + PREFIX_REMARK + VALID_REMARK_DERRICK;","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":106,"author":{"gitId":"yucongkoo"},"content":"    public static final String ADD_TAG_DESC_FRIEND \u003d \" \" + PREFIX_ADD_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"yucongkoo"},"content":"    public static final String DELETE_TAG_DESC_FRIEND \u003d \" \" + PREFIX_DELETE_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"Jweewee"},"content":"    public static final String INSURANCE_DESC_CAR \u003d \" \" + PREFIX_INSURANCE + VALID_INSURANCE_CAR;","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"Jweewee"},"content":"    public static final String INSURANCE_DESC_LIFE \u003d \" \" + PREFIX_INSURANCE + VALID_INSURANCE_LIFE;","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"Jweewee"},"content":"    public static final String INSURANCE_DESC_HEALTH \u003d \" \" + PREFIX_INSURANCE + VALID_INSURANCE_HEALTH;","lastModifiedDate":"2023-10-31"},{"lineNumber":111,"author":{"gitId":"Jweewee"},"content":"    public static final String ADD_INSURANCE_DESC_CAR \u003d \" \" + PREFIX_ADD_INSURANCE + VALID_INSURANCE_CAR;","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"Jweewee"},"content":"    public static final String ADD_INSURANCE_DESC_LIFE \u003d \" \" + PREFIX_ADD_INSURANCE + VALID_INSURANCE_LIFE;","lastModifiedDate":"2023-10-31"},{"lineNumber":113,"author":{"gitId":"Jweewee"},"content":"    public static final String ADD_INSURANCE_DESC_HEALTH \u003d \" \" + PREFIX_ADD_INSURANCE + VALID_INSURANCE_HEALTH;","lastModifiedDate":"2023-10-31"},{"lineNumber":114,"author":{"gitId":"Jweewee"},"content":"    public static final String DELETE_INSURANCE_DESC_CAR \u003d \" \" + PREFIX_DELETE_INSURANCE + VALID_INSURANCE_CAR;","lastModifiedDate":"2023-10-31"},{"lineNumber":115,"author":{"gitId":"Jweewee"},"content":"    public static final String DELETE_INSURANCE_DESC_LIFE \u003d \" \" + PREFIX_DELETE_INSURANCE + VALID_INSURANCE_LIFE;","lastModifiedDate":"2023-10-31"},{"lineNumber":116,"author":{"gitId":"Jweewee"},"content":"    public static final String DELETE_INSURANCE_DESC_HEALTH \u003d \" \" + PREFIX_DELETE_INSURANCE + VALID_INSURANCE_HEALTH;","lastModifiedDate":"2023-10-31"},{"lineNumber":117,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":118,"author":{"gitId":"LamJiuFong"},"content":"    public static final String PRIORITY_DESC_HIGH \u003d \" \" + PREFIX_PRIORITY + VALID_PRIORITY_HIGH;","lastModifiedDate":"2023-10-23"},{"lineNumber":119,"author":{"gitId":"LamJiuFong"},"content":"    public static final String PRIORITY_DESC_NONE \u003d \" \" + PREFIX_PRIORITY + VALID_PRIORITY_NONE;","lastModifiedDate":"2023-10-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":124,"author":{"gitId":"Jweewee"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":125,"author":{"gitId":"Jweewee"},"content":"            \" \" + PREFIX_ADDRESS + PersonTestUtil.generateStringOfLength(Address.MAX_LENGTH + 1);","lastModifiedDate":"2023-10-31"},{"lineNumber":126,"author":{"gitId":"Jweewee"},"content":"    public static final String INVALID_REMARK_DESC \u003d generateInvalidRemark();","lastModifiedDate":"2023-10-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":128,"author":{"gitId":"LamJiuFong"},"content":"    public static final String INVALID_TAG_DESC2 \u003d \" \" + PREFIX_TAG; // empty string not allowed for tags","lastModifiedDate":"2023-10-12"},{"lineNumber":129,"author":{"gitId":"yucongkoo"},"content":"    public static final String INVALID_ADD_TAG_DESC \u003d \" \" + PREFIX_ADD_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"yucongkoo"},"content":"    public static final String INVALID_DELETE_TAG_DESC \u003d \" \" + PREFIX_DELETE_TAG + \"hubby*\";","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"LamJiuFong"},"content":"    public static final String INVALID_PRIORITY_DESC \u003d \" \" + PREFIX_PRIORITY + \"high low\"; // multiple arguments","lastModifiedDate":"2023-10-23"},{"lineNumber":132,"author":{"gitId":"LamJiuFong"},"content":"    public static final String INVALID_PRIORITY_DESC2 \u003d \" \" + PREFIX_PRIORITY + \"1\";","lastModifiedDate":"2023-10-23"},{"lineNumber":133,"author":{"gitId":"LamJiuFong"},"content":"    public static final String INVALID_PRIORITY_DESC3 \u003d \" \" + PREFIX_PRIORITY;","lastModifiedDate":"2023-10-23"},{"lineNumber":134,"author":{"gitId":"Jweewee"},"content":"    public static final String INVALID_INSURANCE_DESC1 \u003d \" \" + PREFIX_INSURANCE + \"/*-+\"; // non-alphanumeric characters","lastModifiedDate":"2023-10-31"},{"lineNumber":135,"author":{"gitId":"Jweewee"},"content":"    public static final String INVALID_INSURANCE_DESC2 \u003d \" \" + PREFIX_INSURANCE","lastModifiedDate":"2023-10-31"},{"lineNumber":136,"author":{"gitId":"Jweewee"},"content":"            + \"12345678901234567890123456789012345\"; // longer than 32 characters","lastModifiedDate":"2023-10-31"},{"lineNumber":137,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":138,"author":{"gitId":"Jweewee"},"content":"    public static final String INVALID_ADD_INSURANCE_DESC1 \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":139,"author":{"gitId":"Jweewee"},"content":"            \" \" + PREFIX_ADD_INSURANCE + \"/*-+\"; // non-alphanumeric characters","lastModifiedDate":"2023-10-31"},{"lineNumber":140,"author":{"gitId":"Jweewee"},"content":"    public static final String INVALID_ADD_INSURANCE_DESC2 \u003d \" \" + PREFIX_ADD_INSURANCE","lastModifiedDate":"2023-10-31"},{"lineNumber":141,"author":{"gitId":"Jweewee"},"content":"            + \"12345678901234567890123456789012345\"; // longer than 32 characters","lastModifiedDate":"2023-10-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":146,"author":{"gitId":"LamJiuFong"},"content":"    public static final String INVALID_PRIORITY \u003d \"high low\";","lastModifiedDate":"2023-10-23"},{"lineNumber":147,"author":{"gitId":"LamJiuFong"},"content":"    public static final String INVALID_PRIORITY2 \u003d \"1\";","lastModifiedDate":"2023-10-23"},{"lineNumber":148,"author":{"gitId":"LamJiuFong"},"content":"    public static final String INVALID_PRIORITY3 \u003d \" \";","lastModifiedDate":"2023-10-23"},{"lineNumber":149,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":156,"author":{"gitId":"LamJiuFong"},"content":"                .build();","lastModifiedDate":"2023-10-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":159,"author":{"gitId":"LamJiuFong"},"content":"                .build();","lastModifiedDate":"2023-10-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"Jweewee"},"content":"    private static String generateInvalidRemark() {","lastModifiedDate":"2023-10-31"},{"lineNumber":219,"author":{"gitId":"Jweewee"},"content":"        StringBuilder invalidRemark \u003d new StringBuilder();","lastModifiedDate":"2023-10-31"},{"lineNumber":220,"author":{"gitId":"Jweewee"},"content":"        String repeatedMessage \u003d \"This remark is invalid because it is too long\";","lastModifiedDate":"2023-10-31"},{"lineNumber":221,"author":{"gitId":"Jweewee"},"content":"        for (int i \u003d 0; i \u003c 20; i++) {","lastModifiedDate":"2023-10-31"},{"lineNumber":222,"author":{"gitId":"Jweewee"},"content":"            invalidRemark.append(repeatedMessage);","lastModifiedDate":"2023-10-31"},{"lineNumber":223,"author":{"gitId":"Jweewee"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":224,"author":{"gitId":"Jweewee"},"content":"        return invalidRemark.toString();","lastModifiedDate":"2023-10-31"},{"lineNumber":225,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"songfangyl":14,"yucongkoo":11,"LamJiuFong":25,"-":124,"Jweewee":52}},{"path":"src/test/java/seedu/address/logic/commands/CommandUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LamJiuFong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"LamJiuFong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"LamJiuFong"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandUtil.getPersonAtIndex;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"LamJiuFong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"LamJiuFong"},"content":"public class CommandUtilTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"LamJiuFong"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"LamJiuFong"},"content":"    public void getPersonAtIndex_nullInput_throwsNullPointerException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"LamJiuFong"},"content":"        // model and index are null","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"LamJiuFong"},"content":"        assertThrows(NullPointerException.class, () -\u003e getPersonAtIndex(null, null));","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"LamJiuFong"},"content":"        // model is null","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"LamJiuFong"},"content":"        assertThrows(NullPointerException.class, () -\u003e getPersonAtIndex(null, INDEX_FIRST_PERSON));","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"LamJiuFong"},"content":"        // index is null","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"LamJiuFong"},"content":"        assertThrows(NullPointerException.class, () -\u003e getPersonAtIndex(model, null));","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"LamJiuFong"},"content":"    public void getPersonAtIndex_invalidIndex_throwsCommandException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"LamJiuFong"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonListSize() + 1);","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"LamJiuFong"},"content":"        assertThrows(CommandException.class, () -\u003e getPersonAtIndex(model, outOfBoundIndex));","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"LamJiuFong"},"content":"    public void getPersonAtIndex_validInput_success() {","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"LamJiuFong"},"content":"        Person expectedPerson \u003d new PersonBuilder(model.getFilteredPersonList().get(0)).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"LamJiuFong"},"content":"        try {","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"LamJiuFong"},"content":"            assertEquals(expectedPerson, getPersonAtIndex(model, INDEX_FIRST_PERSON));","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"LamJiuFong"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"LamJiuFong"},"content":"            fail();","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"LamJiuFong"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"LamJiuFong"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"LamJiuFong":51}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"LamJiuFong"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"TehOPanas"},"content":"import seedu.address.model.insurance.Insurance;","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"LamJiuFong"},"content":"    public void execute_allValidFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"LamJiuFong"},"content":"        Person personToEdit \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"TehOPanas"},"content":"        // tags should be inherited to the editedPerson","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"LamJiuFong"},"content":"        Set\u003cTag\u003e tags \u003d personToEdit.getTags();","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"TehOPanas"},"content":"        // insurances should be inherited to the edited person","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"LamJiuFong"},"content":"        Set\u003cInsurance\u003e insurances \u003d personToEdit.getInsurances();","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"LamJiuFong"},"content":"        // remarks should be inherited to the edited person","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"LamJiuFong"},"content":"        Remark remarks \u003d personToEdit.getRemark();","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"Jweewee"},"content":"        Appointment appointment \u003d personToEdit.getAppointment();","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"Jweewee"},"content":"        Person editedPerson \u003d new PersonBuilder().withTags(tags).withInsurances(insurances)","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"Jweewee"},"content":"                .withRemark(remarks).withAppointment(appointment).build();","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"LamJiuFong"},"content":"        expectedModel.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"LamJiuFong"},"content":"    public void execute_someValidFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":72,"author":{"gitId":"LamJiuFong"},"content":"        Set\u003cTag\u003e tags \u003d lastPerson.getTags(); // tags should be inherited to the editedPerson","lastModifiedDate":"2023-10-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"TehOPanas"},"content":"        // insurances should be inherited to the edited person","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"TehOPanas"},"content":"        Set\u003cInsurance\u003e insurances \u003d lastPerson.getInsurances();","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"TehOPanas"},"content":"                .withTags(tags).withInsurances(insurances).build();","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"LamJiuFong"},"content":"                .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"yucongkoo"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_failure() {","lastModifiedDate":"2023-10-29"},{"lineNumber":95,"author":{"gitId":"LamJiuFong"},"content":"        Person personToEdit \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"LamJiuFong"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"LamJiuFong"},"content":"        //expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"yucongkoo"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_PERSON_NOT_CHANGED);","lastModifiedDate":"2023-10-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":105,"author":{"gitId":"yucongkoo"},"content":"    public void execute_noChangeToPerson_failure() {","lastModifiedDate":"2023-10-29"},{"lineNumber":106,"author":{"gitId":"yucongkoo"},"content":"        Person personToEdit \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":108,"author":{"gitId":"yucongkoo"},"content":"        String nameOfPersonToEdit \u003d personToEdit.getName().fullName;","lastModifiedDate":"2023-10-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":110,"author":{"gitId":"yucongkoo"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(nameOfPersonToEdit).build();","lastModifiedDate":"2023-10-29"},{"lineNumber":111,"author":{"gitId":"yucongkoo"},"content":"        EditCommand command \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2023-10-29"},{"lineNumber":112,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":113,"author":{"gitId":"yucongkoo"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_PERSON_NOT_CHANGED);","lastModifiedDate":"2023-10-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"yucongkoo"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-10-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"yucongkoo"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-10-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":156,"author":{"gitId":"LamJiuFong"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonListSize() + 1);","lastModifiedDate":"2023-10-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2019-02-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"TehOPanas":7,"yucongkoo":13,"LamJiuFong":20,"-":171,"Jweewee":4}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"LamJiuFong"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \"}\";","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"LamJiuFong":1,"-":64}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.logic.Messages.MESSAGE_NO_PERSON_FOUND;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.testutil.TypicalPersons.CALMEN;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.testutil.TypicalPersons.JOJO;","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.testutil.TypicalPersons.KAKA;","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"import java.util.List;","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.predicate.AddressContainsKeywordsPredicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.predicate.EmailContainsKeywordsPredicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.predicate.InsuranceContainsKeywordsPredicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.predicate.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.predicate.PersonContainsKeywordsPredicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.predicate.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.predicate.PriorityContainsKeywordsPredicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.predicate.RemarkContainsKeywordsPredicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.predicate.TagContainsKeywordsPredicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"songfangyl"},"content":"        PersonContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"songfangyl"},"content":"                new PersonContainsKeywordsPredicate(Collections.singletonList(","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"songfangyl"},"content":"                        new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\"))));","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"songfangyl"},"content":"        PersonContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"songfangyl"},"content":"                new PersonContainsKeywordsPredicate(Collections.singletonList(","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"songfangyl"},"content":"                        new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\"))));","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"songfangyl"},"content":"        String expectedMessage \u003d String.format(MESSAGE_NO_PERSON_FOUND);","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"songfangyl"},"content":"        PersonContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"songfangyl"},"content":"                preparePredicate(new NameContainsKeywordsPredicate(Arrays.asList()));","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"songfangyl"},"content":"    public void execute_emptyKeyword_allPersonsFound() {","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"songfangyl"},"content":"        // Name predicate","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"songfangyl"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW,","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"songfangyl"},"content":"                expectedModel.getFilteredPersonListSize());","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"songfangyl"},"content":"        List\u003cPerson\u003e expectedPersonList \u003d expectedModel.getFilteredPersonList();","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"songfangyl"},"content":"        PersonContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"songfangyl"},"content":"                preparePredicate(new NameContainsKeywordsPredicate(Arrays.asList(\"\")));","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"songfangyl"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"songfangyl"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"songfangyl"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"songfangyl"},"content":"        assertEquals(expectedPersonList, model.getFilteredPersonList());","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":106,"author":{"gitId":"songfangyl"},"content":"        // Email predicate","lastModifiedDate":"2023-10-31"},{"lineNumber":107,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d preparePredicate(new EmailContainsKeywordsPredicate(Arrays.asList(\"\")));","lastModifiedDate":"2023-10-31"},{"lineNumber":108,"author":{"gitId":"songfangyl"},"content":"        command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"songfangyl"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":111,"author":{"gitId":"songfangyl"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"songfangyl"},"content":"        assertEquals(expectedPersonList, model.getFilteredPersonList());","lastModifiedDate":"2023-10-31"},{"lineNumber":113,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":114,"author":{"gitId":"songfangyl"},"content":"        // Phone predicate","lastModifiedDate":"2023-10-31"},{"lineNumber":115,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d preparePredicate(new PhoneContainsKeywordsPredicate(Arrays.asList(\"\")));","lastModifiedDate":"2023-10-31"},{"lineNumber":116,"author":{"gitId":"songfangyl"},"content":"        command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":117,"author":{"gitId":"songfangyl"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":118,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":119,"author":{"gitId":"songfangyl"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":120,"author":{"gitId":"songfangyl"},"content":"        assertEquals(expectedPersonList, model.getFilteredPersonList());","lastModifiedDate":"2023-10-31"},{"lineNumber":121,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":122,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":123,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":124,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":125,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":126,"author":{"gitId":"songfangyl"},"content":"    public void execute_nameKeywords_personFound() {","lastModifiedDate":"2023-10-31"},{"lineNumber":127,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":128,"author":{"gitId":"songfangyl"},"content":"        // multiple keywords one person found","lastModifiedDate":"2023-10-31"},{"lineNumber":129,"author":{"gitId":"songfangyl"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2023-10-31"},{"lineNumber":130,"author":{"gitId":"songfangyl"},"content":"        PersonContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":131,"author":{"gitId":"songfangyl"},"content":"                preparePredicate(new NameContainsKeywordsPredicate(Arrays.asList(\"Jo\", \"Be\")));","lastModifiedDate":"2023-10-31"},{"lineNumber":132,"author":{"gitId":"songfangyl"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":133,"author":{"gitId":"songfangyl"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":134,"author":{"gitId":"songfangyl"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":135,"author":{"gitId":"songfangyl"},"content":"        assertEquals(Arrays.asList(JOJO), model.getFilteredPersonList());","lastModifiedDate":"2023-10-31"},{"lineNumber":136,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":137,"author":{"gitId":"songfangyl"},"content":"        // multiple keywords but order of name different order","lastModifiedDate":"2023-10-31"},{"lineNumber":138,"author":{"gitId":"songfangyl"},"content":"        expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2023-10-31"},{"lineNumber":139,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d preparePredicate(new NameContainsKeywordsPredicate(Arrays.asList(\"Kaka\", \"Many\")));","lastModifiedDate":"2023-10-31"},{"lineNumber":140,"author":{"gitId":"songfangyl"},"content":"        command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":141,"author":{"gitId":"songfangyl"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":142,"author":{"gitId":"songfangyl"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":143,"author":{"gitId":"songfangyl"},"content":"        assertEquals(Arrays.asList(KAKA), model.getFilteredPersonList());","lastModifiedDate":"2023-10-31"},{"lineNumber":144,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":145,"author":{"gitId":"songfangyl"},"content":"        // multiple keywords multiple persons found","lastModifiedDate":"2023-10-31"},{"lineNumber":146,"author":{"gitId":"songfangyl"},"content":"        expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2023-10-31"},{"lineNumber":147,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d preparePredicate(new NameContainsKeywordsPredicate(Arrays.asList(\"D\", \"M\")));","lastModifiedDate":"2023-10-31"},{"lineNumber":148,"author":{"gitId":"songfangyl"},"content":"        command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":149,"author":{"gitId":"songfangyl"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":150,"author":{"gitId":"songfangyl"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":151,"author":{"gitId":"songfangyl"},"content":"        assertEquals(Arrays.asList(DANIEL, KAKA), model.getFilteredPersonList());","lastModifiedDate":"2023-10-31"},{"lineNumber":152,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":153,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":154,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":155,"author":{"gitId":"songfangyl"},"content":"    public void execute_emailKeywords_personFound() {","lastModifiedDate":"2023-10-31"},{"lineNumber":156,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":157,"author":{"gitId":"songfangyl"},"content":"        // one keyword one person found","lastModifiedDate":"2023-10-31"},{"lineNumber":158,"author":{"gitId":"songfangyl"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2023-10-31"},{"lineNumber":159,"author":{"gitId":"songfangyl"},"content":"        PersonContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":160,"author":{"gitId":"songfangyl"},"content":"                preparePredicate(new EmailContainsKeywordsPredicate(Arrays.asList(\"kaka@example.com\")));","lastModifiedDate":"2023-10-31"},{"lineNumber":161,"author":{"gitId":"songfangyl"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":162,"author":{"gitId":"songfangyl"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":163,"author":{"gitId":"songfangyl"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":164,"author":{"gitId":"songfangyl"},"content":"        assertEquals(Arrays.asList(KAKA), model.getFilteredPersonList());","lastModifiedDate":"2023-10-31"},{"lineNumber":165,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":166,"author":{"gitId":"songfangyl"},"content":"        // one keywords multiple persons found","lastModifiedDate":"2023-10-31"},{"lineNumber":167,"author":{"gitId":"songfangyl"},"content":"        expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2023-10-31"},{"lineNumber":168,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d preparePredicate(new EmailContainsKeywordsPredicate(Arrays.asList(\"j\")));","lastModifiedDate":"2023-10-31"},{"lineNumber":169,"author":{"gitId":"songfangyl"},"content":"        command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":170,"author":{"gitId":"songfangyl"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":171,"author":{"gitId":"songfangyl"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":172,"author":{"gitId":"songfangyl"},"content":"        assertEquals(Arrays.asList(BENSON, JOJO), model.getFilteredPersonList());","lastModifiedDate":"2023-10-31"},{"lineNumber":173,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":174,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":175,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":176,"author":{"gitId":"songfangyl"},"content":"    public void execute_phoneKeywords_personFound() {","lastModifiedDate":"2023-10-31"},{"lineNumber":177,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":178,"author":{"gitId":"songfangyl"},"content":"        // multiple keywords one person found","lastModifiedDate":"2023-10-31"},{"lineNumber":179,"author":{"gitId":"songfangyl"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2023-10-31"},{"lineNumber":180,"author":{"gitId":"songfangyl"},"content":"        PersonContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":181,"author":{"gitId":"songfangyl"},"content":"                preparePredicate(new PhoneContainsKeywordsPredicate(Arrays.asList(\"14445656\")));","lastModifiedDate":"2023-10-31"},{"lineNumber":182,"author":{"gitId":"songfangyl"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":183,"author":{"gitId":"songfangyl"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":184,"author":{"gitId":"songfangyl"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":185,"author":{"gitId":"songfangyl"},"content":"        assertEquals(Arrays.asList(JOJO), model.getFilteredPersonList());","lastModifiedDate":"2023-10-31"},{"lineNumber":186,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":187,"author":{"gitId":"songfangyl"},"content":"        // one keyword one person found","lastModifiedDate":"2023-10-31"},{"lineNumber":188,"author":{"gitId":"songfangyl"},"content":"        expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2023-10-31"},{"lineNumber":189,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d preparePredicate(new PhoneContainsKeywordsPredicate(Arrays.asList(\"8\")));","lastModifiedDate":"2023-10-31"},{"lineNumber":190,"author":{"gitId":"songfangyl"},"content":"        command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":191,"author":{"gitId":"songfangyl"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":192,"author":{"gitId":"songfangyl"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":193,"author":{"gitId":"songfangyl"},"content":"        assertEquals(Arrays.asList(DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2023-10-31"},{"lineNumber":194,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":195,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":196,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":197,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":198,"author":{"gitId":"songfangyl"},"content":"    public void execute_addressKeywords_personFound() {","lastModifiedDate":"2023-10-31"},{"lineNumber":199,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":200,"author":{"gitId":"songfangyl"},"content":"        // empty keyword, everyone with address found","lastModifiedDate":"2023-10-31"},{"lineNumber":201,"author":{"gitId":"songfangyl"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW,","lastModifiedDate":"2023-10-31"},{"lineNumber":202,"author":{"gitId":"songfangyl"},"content":"                expectedModel.getFilteredPersonListSize() - 1);","lastModifiedDate":"2023-10-31"},{"lineNumber":203,"author":{"gitId":"songfangyl"},"content":"        PersonContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":204,"author":{"gitId":"songfangyl"},"content":"                preparePredicate(new AddressContainsKeywordsPredicate(Arrays.asList(\"\")));","lastModifiedDate":"2023-10-31"},{"lineNumber":205,"author":{"gitId":"songfangyl"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":206,"author":{"gitId":"songfangyl"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":207,"author":{"gitId":"songfangyl"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":208,"author":{"gitId":"songfangyl"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, GEORGE,","lastModifiedDate":"2023-10-31"},{"lineNumber":209,"author":{"gitId":"songfangyl"},"content":"                JOJO, KAKA, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2023-10-31"},{"lineNumber":210,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":211,"author":{"gitId":"songfangyl"},"content":"        // one keyword one person found","lastModifiedDate":"2023-10-31"},{"lineNumber":212,"author":{"gitId":"songfangyl"},"content":"        expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2023-10-31"},{"lineNumber":213,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d preparePredicate(new AddressContainsKeywordsPredicate(Arrays.asList(\"little\")));","lastModifiedDate":"2023-10-31"},{"lineNumber":214,"author":{"gitId":"songfangyl"},"content":"        command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":215,"author":{"gitId":"songfangyl"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":216,"author":{"gitId":"songfangyl"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":217,"author":{"gitId":"songfangyl"},"content":"        assertEquals(Arrays.asList(FIONA), model.getFilteredPersonList());","lastModifiedDate":"2023-10-31"},{"lineNumber":218,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":219,"author":{"gitId":"songfangyl"},"content":"        // One keyword multiple persons found","lastModifiedDate":"2023-10-31"},{"lineNumber":220,"author":{"gitId":"songfangyl"},"content":"        expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 5);","lastModifiedDate":"2023-10-31"},{"lineNumber":221,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d preparePredicate(new AddressContainsKeywordsPredicate(Arrays.asList(\"street\")));","lastModifiedDate":"2023-10-31"},{"lineNumber":222,"author":{"gitId":"songfangyl"},"content":"        command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":223,"author":{"gitId":"songfangyl"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":224,"author":{"gitId":"songfangyl"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":225,"author":{"gitId":"songfangyl"},"content":"        assertEquals(Arrays.asList(CARL, DANIEL, GEORGE, JOJO, KAKA), model.getFilteredPersonList());","lastModifiedDate":"2023-10-31"},{"lineNumber":226,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":227,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":228,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":229,"author":{"gitId":"songfangyl"},"content":"    public void execute_priorityKeywords_personFound() {","lastModifiedDate":"2023-10-31"},{"lineNumber":230,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":231,"author":{"gitId":"songfangyl"},"content":"        // Empty keyword, everyone with priority found","lastModifiedDate":"2023-10-31"},{"lineNumber":232,"author":{"gitId":"songfangyl"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW,","lastModifiedDate":"2023-10-31"},{"lineNumber":233,"author":{"gitId":"songfangyl"},"content":"                expectedModel.getFilteredPersonListSize());","lastModifiedDate":"2023-10-31"},{"lineNumber":234,"author":{"gitId":"songfangyl"},"content":"        PersonContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":235,"author":{"gitId":"songfangyl"},"content":"                preparePredicate(new PriorityContainsKeywordsPredicate(Arrays.asList(\"\")));","lastModifiedDate":"2023-10-31"},{"lineNumber":236,"author":{"gitId":"songfangyl"},"content":"        List\u003cPerson\u003e expectedPersonList \u003d expectedModel.getFilteredPersonList();","lastModifiedDate":"2023-10-31"},{"lineNumber":237,"author":{"gitId":"songfangyl"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":238,"author":{"gitId":"songfangyl"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":239,"author":{"gitId":"songfangyl"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":240,"author":{"gitId":"songfangyl"},"content":"        assertEquals(expectedPersonList, model.getFilteredPersonList());","lastModifiedDate":"2023-10-31"},{"lineNumber":241,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":242,"author":{"gitId":"songfangyl"},"content":"        // One person found","lastModifiedDate":"2023-10-31"},{"lineNumber":243,"author":{"gitId":"songfangyl"},"content":"        expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2023-10-31"},{"lineNumber":244,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d preparePredicate(new PriorityContainsKeywordsPredicate(Arrays.asList(\"low\")));","lastModifiedDate":"2023-10-31"},{"lineNumber":245,"author":{"gitId":"songfangyl"},"content":"        command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":246,"author":{"gitId":"songfangyl"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":247,"author":{"gitId":"songfangyl"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":248,"author":{"gitId":"songfangyl"},"content":"        assertEquals(Arrays.asList(FIONA), model.getFilteredPersonList());","lastModifiedDate":"2023-10-31"},{"lineNumber":249,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":250,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":251,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":252,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":253,"author":{"gitId":"songfangyl"},"content":"    public void execute_remarkKeywords_personFound() {","lastModifiedDate":"2023-10-31"},{"lineNumber":254,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":255,"author":{"gitId":"songfangyl"},"content":"        // multiple keywords one person found","lastModifiedDate":"2023-10-31"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-10-31"},{"lineNumber":257,"author":{"gitId":"songfangyl"},"content":"        PersonContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":258,"author":{"gitId":"songfangyl"},"content":"                preparePredicate(new RemarkContainsKeywordsPredicate(Arrays.asList(\"\")));","lastModifiedDate":"2023-10-31"},{"lineNumber":259,"author":{"gitId":"songfangyl"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":260,"author":{"gitId":"songfangyl"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":261,"author":{"gitId":"songfangyl"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":262,"author":{"gitId":"songfangyl"},"content":"        assertEquals(Arrays.asList(BENSON, CALMEN, JOJO), model.getFilteredPersonList());","lastModifiedDate":"2023-10-31"},{"lineNumber":263,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":264,"author":{"gitId":"songfangyl"},"content":"        // One person found","lastModifiedDate":"2023-10-31"},{"lineNumber":265,"author":{"gitId":"songfangyl"},"content":"        expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2023-10-31"},{"lineNumber":266,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d preparePredicate(new RemarkContainsKeywordsPredicate(Arrays.asList(\"sOMe\", \"Re\")));","lastModifiedDate":"2023-10-31"},{"lineNumber":267,"author":{"gitId":"songfangyl"},"content":"        command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":268,"author":{"gitId":"songfangyl"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":269,"author":{"gitId":"songfangyl"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":270,"author":{"gitId":"songfangyl"},"content":"        assertEquals(Arrays.asList(JOJO), model.getFilteredPersonList());","lastModifiedDate":"2023-10-31"},{"lineNumber":271,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":272,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":273,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":274,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":275,"author":{"gitId":"songfangyl"},"content":"    public void execute_tagKeywords_personFound() {","lastModifiedDate":"2023-10-31"},{"lineNumber":276,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":277,"author":{"gitId":"songfangyl"},"content":"        // empty keyword, everyone with tags found","lastModifiedDate":"2023-10-31"},{"lineNumber":278,"author":{"gitId":"songfangyl"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-10-31"},{"lineNumber":279,"author":{"gitId":"songfangyl"},"content":"        PersonContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":280,"author":{"gitId":"songfangyl"},"content":"                preparePredicate(new TagContainsKeywordsPredicate(Arrays.asList(\"\")));","lastModifiedDate":"2023-10-31"},{"lineNumber":281,"author":{"gitId":"songfangyl"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":282,"author":{"gitId":"songfangyl"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":283,"author":{"gitId":"songfangyl"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":284,"author":{"gitId":"songfangyl"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2023-10-31"},{"lineNumber":285,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":286,"author":{"gitId":"songfangyl"},"content":"        // multiple persons found","lastModifiedDate":"2023-10-31"},{"lineNumber":287,"author":{"gitId":"songfangyl"},"content":"        expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-10-31"},{"lineNumber":288,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d preparePredicate(new TagContainsKeywordsPredicate(Arrays.asList(\"Frien\")));","lastModifiedDate":"2023-10-31"},{"lineNumber":289,"author":{"gitId":"songfangyl"},"content":"        command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":290,"author":{"gitId":"songfangyl"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":291,"author":{"gitId":"songfangyl"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":292,"author":{"gitId":"songfangyl"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2023-10-31"},{"lineNumber":293,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":294,"author":{"gitId":"songfangyl"},"content":"        // one person found","lastModifiedDate":"2023-10-31"},{"lineNumber":295,"author":{"gitId":"songfangyl"},"content":"        expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2023-10-31"},{"lineNumber":296,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d preparePredicate(new TagContainsKeywordsPredicate(Arrays.asList(\"owe\")));","lastModifiedDate":"2023-10-31"},{"lineNumber":297,"author":{"gitId":"songfangyl"},"content":"        command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":298,"author":{"gitId":"songfangyl"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":299,"author":{"gitId":"songfangyl"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":300,"author":{"gitId":"songfangyl"},"content":"        assertEquals(Arrays.asList(BENSON), model.getFilteredPersonList());","lastModifiedDate":"2023-10-31"},{"lineNumber":301,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":302,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":303,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":304,"author":{"gitId":"songfangyl"},"content":"    public void execute_insuraceKeywords_personFound() {","lastModifiedDate":"2023-10-31"},{"lineNumber":305,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":306,"author":{"gitId":"songfangyl"},"content":"        // empty keyword, everyone with insurances found","lastModifiedDate":"2023-10-31"},{"lineNumber":307,"author":{"gitId":"songfangyl"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 5);","lastModifiedDate":"2023-10-31"},{"lineNumber":308,"author":{"gitId":"songfangyl"},"content":"        PersonContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":309,"author":{"gitId":"songfangyl"},"content":"                preparePredicate(new InsuranceContainsKeywordsPredicate(Arrays.asList(\"\")));","lastModifiedDate":"2023-10-31"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":313,"author":{"gitId":"songfangyl"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, CARL, ELLE, GEORGE), model.getFilteredPersonList());","lastModifiedDate":"2023-10-31"},{"lineNumber":314,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":315,"author":{"gitId":"songfangyl"},"content":"        // One person found","lastModifiedDate":"2023-10-31"},{"lineNumber":316,"author":{"gitId":"songfangyl"},"content":"        expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2023-10-31"},{"lineNumber":317,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d preparePredicate(new InsuranceContainsKeywordsPredicate(Arrays.asList(\"Great\")));","lastModifiedDate":"2023-10-31"},{"lineNumber":318,"author":{"gitId":"songfangyl"},"content":"        command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":319,"author":{"gitId":"songfangyl"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":320,"author":{"gitId":"songfangyl"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":321,"author":{"gitId":"songfangyl"},"content":"        assertEquals(Arrays.asList(CARL), model.getFilteredPersonList());","lastModifiedDate":"2023-10-31"},{"lineNumber":322,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":323,"author":{"gitId":"songfangyl"},"content":"        // Multiple persons found","lastModifiedDate":"2023-10-31"},{"lineNumber":324,"author":{"gitId":"songfangyl"},"content":"        expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 4);","lastModifiedDate":"2023-10-31"},{"lineNumber":325,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d preparePredicate(new InsuranceContainsKeywordsPredicate(Arrays.asList(\"Ins\")));","lastModifiedDate":"2023-10-31"},{"lineNumber":326,"author":{"gitId":"songfangyl"},"content":"        command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":327,"author":{"gitId":"songfangyl"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":328,"author":{"gitId":"songfangyl"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":329,"author":{"gitId":"songfangyl"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, ELLE, GEORGE), model.getFilteredPersonList());","lastModifiedDate":"2023-10-31"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":331,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":332,"author":{"gitId":"songfangyl"},"content":"    public void execute_multipleTypeOfKeywords_personFound() {","lastModifiedDate":"2023-10-31"},{"lineNumber":333,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":334,"author":{"gitId":"songfangyl"},"content":"        // empty name, email, phone","lastModifiedDate":"2023-10-31"},{"lineNumber":335,"author":{"gitId":"songfangyl"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW,","lastModifiedDate":"2023-10-31"},{"lineNumber":336,"author":{"gitId":"songfangyl"},"content":"                expectedModel.getFilteredPersonListSize());","lastModifiedDate":"2023-10-31"},{"lineNumber":337,"author":{"gitId":"songfangyl"},"content":"        List\u003cPerson\u003e expectedPersonList \u003d expectedModel.getFilteredPersonList();","lastModifiedDate":"2023-10-31"},{"lineNumber":338,"author":{"gitId":"songfangyl"},"content":"        PersonContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":339,"author":{"gitId":"songfangyl"},"content":"                preparePredicate(new NameContainsKeywordsPredicate(Arrays.asList(\"\")),","lastModifiedDate":"2023-10-31"},{"lineNumber":340,"author":{"gitId":"songfangyl"},"content":"                        new EmailContainsKeywordsPredicate(Arrays.asList(\"\")),","lastModifiedDate":"2023-10-31"},{"lineNumber":341,"author":{"gitId":"songfangyl"},"content":"                        new PhoneContainsKeywordsPredicate(Arrays.asList(\"\")));","lastModifiedDate":"2023-10-31"},{"lineNumber":342,"author":{"gitId":"songfangyl"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":343,"author":{"gitId":"songfangyl"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":344,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":345,"author":{"gitId":"songfangyl"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":346,"author":{"gitId":"songfangyl"},"content":"        assertEquals(expectedPersonList, model.getFilteredPersonList());","lastModifiedDate":"2023-10-31"},{"lineNumber":347,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":348,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":349,"author":{"gitId":"songfangyl"},"content":"        // One person found","lastModifiedDate":"2023-10-31"},{"lineNumber":350,"author":{"gitId":"songfangyl"},"content":"        expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2023-10-31"},{"lineNumber":351,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d preparePredicate(new NameContainsKeywordsPredicate(Arrays.asList(\"Best\")),","lastModifiedDate":"2023-10-31"},{"lineNumber":352,"author":{"gitId":"songfangyl"},"content":"                new PhoneContainsKeywordsPredicate(Arrays.asList(\"14445656\")));","lastModifiedDate":"2023-10-31"},{"lineNumber":353,"author":{"gitId":"songfangyl"},"content":"        command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":354,"author":{"gitId":"songfangyl"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":355,"author":{"gitId":"songfangyl"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":356,"author":{"gitId":"songfangyl"},"content":"        assertEquals(Arrays.asList(JOJO), model.getFilteredPersonList());","lastModifiedDate":"2023-10-31"},{"lineNumber":357,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":358,"author":{"gitId":"songfangyl"},"content":"        // Multiple persons found","lastModifiedDate":"2023-10-31"},{"lineNumber":359,"author":{"gitId":"songfangyl"},"content":"        expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-10-31"},{"lineNumber":360,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d preparePredicate(new PhoneContainsKeywordsPredicate(Arrays.asList(\"94\")),","lastModifiedDate":"2023-10-31"},{"lineNumber":361,"author":{"gitId":"songfangyl"},"content":"                new InsuranceContainsKeywordsPredicate(Arrays.asList(\"ins\")));","lastModifiedDate":"2023-10-31"},{"lineNumber":362,"author":{"gitId":"songfangyl"},"content":"        command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":363,"author":{"gitId":"songfangyl"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":364,"author":{"gitId":"songfangyl"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-31"},{"lineNumber":365,"author":{"gitId":"songfangyl"},"content":"        assertEquals(Arrays.asList(ALICE, ELLE, GEORGE), model.getFilteredPersonList());","lastModifiedDate":"2023-10-31"},{"lineNumber":366,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":367,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-31"},{"lineNumber":371,"author":{"gitId":"songfangyl"},"content":"        PersonContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":372,"author":{"gitId":"songfangyl"},"content":"                preparePredicate(new NameContainsKeywordsPredicate(Arrays.asList(\"keywords\")));","lastModifiedDate":"2023-10-31"},{"lineNumber":373,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":374,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2023-10-31"},{"lineNumber":375,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2023-10-31"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":379,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2023-10-31"},{"lineNumber":380,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":381,"author":{"gitId":"songfangyl"},"content":"    private PersonContainsKeywordsPredicate preparePredicate(Predicate\u003cPerson\u003e... predicates) {","lastModifiedDate":"2023-10-31"},{"lineNumber":382,"author":{"gitId":"songfangyl"},"content":"        return new PersonContainsKeywordsPredicate(Arrays.asList(predicates));","lastModifiedDate":"2023-10-31"},{"lineNumber":383,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":384,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"songfangyl":306,"-":78}},{"path":"src/test/java/seedu/address/logic/commands/InsuranceCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TehOPanas"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"TehOPanas"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"TehOPanas"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"TehOPanas"},"content":"import static seedu.address.logic.Messages.MESSAGE_INSURANCE_COUNT_EXCEED;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"TehOPanas"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"TehOPanas"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"TehOPanas"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"TehOPanas"},"content":"import static seedu.address.logic.commands.InsuranceCommand.MESSAGE_INSURANCE_CONFLICT;","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"TehOPanas"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"TehOPanas"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"TehOPanas"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"TehOPanas"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"TehOPanas"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"TehOPanas"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"TehOPanas"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"TehOPanas"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"TehOPanas"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"TehOPanas"},"content":"import seedu.address.logic.commands.InsuranceCommand.UpdatePersonInsuranceDescriptor;","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"TehOPanas"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"TehOPanas"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"TehOPanas"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"TehOPanas"},"content":"import seedu.address.model.insurance.Insurance;","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"TehOPanas"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"TehOPanas"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"TehOPanas"},"content":"public class InsuranceCommandTest {","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"TehOPanas"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"TehOPanas"},"content":"    private Index firstIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"TehOPanas"},"content":"    private Index secondIndex \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"TehOPanas"},"content":"    private Index outOfBoundIndex \u003d Index.fromZeroBased(model.getFilteredPersonListSize());","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"TehOPanas"},"content":"    private Person alice \u003d ALICE; //first person in typical address book","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"TehOPanas"},"content":"    private Person benson \u003d BENSON; // second person in typical address book","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"TehOPanas"},"content":"    private UpdatePersonInsuranceDescriptor defaultDescriptor;","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"TehOPanas"},"content":"    private String carInsurance \u003d \"car insurance\";","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"TehOPanas"},"content":"    private String healthInsurance \u003d \"health insurance\";","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"TehOPanas"},"content":"    private String lifeInsurance \u003d \"life insurance\";","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"TehOPanas"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"TehOPanas"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"TehOPanas"},"content":"        defaultDescriptor \u003d new UpdatePersonInsuranceDescriptor(new HashSet\u003c\u003e(), new HashSet\u003c\u003e());","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"TehOPanas"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"TehOPanas"},"content":"    public void constructor_nullArgument_throwException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"TehOPanas"},"content":"        // both argument are null","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"TehOPanas"},"content":"        assertThrows(NullPointerException.class, () -\u003e new InsuranceCommand(null, null));","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"TehOPanas"},"content":"        // UpdatePersonInsuranceDescriptor is null","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"TehOPanas"},"content":"        assertThrows(NullPointerException.class, () -\u003e new InsuranceCommand(firstIndex, null));","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"TehOPanas"},"content":"        // Index is null","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"TehOPanas"},"content":"        assertThrows(NullPointerException.class, () -\u003e new InsuranceCommand(null, defaultDescriptor));","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"TehOPanas"},"content":"        // insurancesToDelete is null","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"TehOPanas"},"content":"        assertThrows(NullPointerException.class, () -\u003e new InsuranceCommand(firstIndex,","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"TehOPanas"},"content":"                new UpdatePersonInsuranceDescriptor(new HashSet\u003c\u003e(), null)));","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"TehOPanas"},"content":"        // insurancesToAdd is null","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"TehOPanas"},"content":"        assertThrows(NullPointerException.class, () -\u003e new InsuranceCommand(firstIndex,","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"TehOPanas"},"content":"                new UpdatePersonInsuranceDescriptor(null, new HashSet\u003c\u003e())));","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":78,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":79,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"TehOPanas"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":81,"author":{"gitId":"TehOPanas"},"content":"    public void constructor_noInsuranceToUpdate_assertionError() {","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"TehOPanas"},"content":"        assertThrows(AssertionError.class, () -\u003e new InsuranceCommand(firstIndex, defaultDescriptor));","lastModifiedDate":"2023-10-30"},{"lineNumber":83,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":84,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":85,"author":{"gitId":"TehOPanas"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":86,"author":{"gitId":"TehOPanas"},"content":"    public void execute_oneInsuranceToUpdate_success() {","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"TehOPanas"},"content":"        defaultDescriptor.setInsurancesToAdd(new Insurance(healthInsurance));","lastModifiedDate":"2023-10-30"},{"lineNumber":88,"author":{"gitId":"TehOPanas"},"content":"        InsuranceCommand command \u003d new InsuranceCommand(firstIndex, defaultDescriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":89,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":90,"author":{"gitId":"LamJiuFong"},"content":"        Person updatedAlice \u003d new PersonBuilder(alice).withInsurances(carInsurance, healthInsurance).build();","lastModifiedDate":"2023-10-30"},{"lineNumber":91,"author":{"gitId":"TehOPanas"},"content":"        String expectedMessage \u003d String.format(InsuranceCommand.MESSAGE_INSURANCE_PERSON_SUCCESS,","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"TehOPanas"},"content":"                Messages.format(updatedAlice));","lastModifiedDate":"2023-10-30"},{"lineNumber":93,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":94,"author":{"gitId":"TehOPanas"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-30"},{"lineNumber":95,"author":{"gitId":"TehOPanas"},"content":"        expectedModel.setPerson(alice, updatedAlice);","lastModifiedDate":"2023-10-30"},{"lineNumber":96,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":97,"author":{"gitId":"TehOPanas"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-30"},{"lineNumber":98,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":99,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":100,"author":{"gitId":"TehOPanas"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":101,"author":{"gitId":"TehOPanas"},"content":"    public void execute_twoInsuranceToUpdate_success() {","lastModifiedDate":"2023-10-30"},{"lineNumber":102,"author":{"gitId":"TehOPanas"},"content":"        defaultDescriptor.setInsurancesToAdd(new Insurance(healthInsurance));","lastModifiedDate":"2023-10-30"},{"lineNumber":103,"author":{"gitId":"TehOPanas"},"content":"        defaultDescriptor.setInsurancesToAdd(new Insurance(lifeInsurance));","lastModifiedDate":"2023-10-30"},{"lineNumber":104,"author":{"gitId":"TehOPanas"},"content":"        InsuranceCommand command \u003d new InsuranceCommand(firstIndex, defaultDescriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":105,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":106,"author":{"gitId":"TehOPanas"},"content":"        Person updatedAlice \u003d new PersonBuilder(alice)","lastModifiedDate":"2023-10-30"},{"lineNumber":107,"author":{"gitId":"LamJiuFong"},"content":"                .withInsurances(lifeInsurance, carInsurance, healthInsurance).build();","lastModifiedDate":"2023-10-30"},{"lineNumber":108,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":109,"author":{"gitId":"TehOPanas"},"content":"        String expectedMessage \u003d String.format(InsuranceCommand.MESSAGE_INSURANCE_PERSON_SUCCESS,","lastModifiedDate":"2023-10-30"},{"lineNumber":110,"author":{"gitId":"TehOPanas"},"content":"                Messages.format(updatedAlice));","lastModifiedDate":"2023-10-30"},{"lineNumber":111,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":112,"author":{"gitId":"TehOPanas"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-30"},{"lineNumber":113,"author":{"gitId":"TehOPanas"},"content":"        expectedModel.setPerson(alice, updatedAlice);","lastModifiedDate":"2023-10-30"},{"lineNumber":114,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":115,"author":{"gitId":"TehOPanas"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-30"},{"lineNumber":116,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":117,"author":{"gitId":"TehOPanas"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":118,"author":{"gitId":"TehOPanas"},"content":"    public void execute_oneInsuranceToDelete_success() {","lastModifiedDate":"2023-10-30"},{"lineNumber":119,"author":{"gitId":"TehOPanas"},"content":"        defaultDescriptor.setInsurancesToDelete(new Insurance(carInsurance));","lastModifiedDate":"2023-10-30"},{"lineNumber":120,"author":{"gitId":"TehOPanas"},"content":"        InsuranceCommand command \u003d new InsuranceCommand(firstIndex, defaultDescriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":121,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":122,"author":{"gitId":"TehOPanas"},"content":"        Person updatedAlice \u003d new PersonBuilder(alice).withInsurances(new HashSet\u003c\u003e()).build();","lastModifiedDate":"2023-10-30"},{"lineNumber":123,"author":{"gitId":"TehOPanas"},"content":"        String expectedMessage \u003d String.format(InsuranceCommand.MESSAGE_INSURANCE_PERSON_SUCCESS,","lastModifiedDate":"2023-10-30"},{"lineNumber":124,"author":{"gitId":"TehOPanas"},"content":"                Messages.format(updatedAlice));","lastModifiedDate":"2023-10-30"},{"lineNumber":125,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":126,"author":{"gitId":"TehOPanas"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-30"},{"lineNumber":127,"author":{"gitId":"TehOPanas"},"content":"        expectedModel.setPerson(alice, updatedAlice);","lastModifiedDate":"2023-10-30"},{"lineNumber":128,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":129,"author":{"gitId":"TehOPanas"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-30"},{"lineNumber":130,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":131,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":132,"author":{"gitId":"TehOPanas"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":133,"author":{"gitId":"TehOPanas"},"content":"    public void execute_twoInsuranceToDelete_success() {","lastModifiedDate":"2023-10-30"},{"lineNumber":134,"author":{"gitId":"TehOPanas"},"content":"        defaultDescriptor.setInsurancesToDelete(new Insurance(\"AIA insurance\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":135,"author":{"gitId":"TehOPanas"},"content":"        defaultDescriptor.setInsurancesToDelete(new Insurance(\"ABC insurance\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":136,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":137,"author":{"gitId":"TehOPanas"},"content":"        InsuranceCommand command \u003d new InsuranceCommand(secondIndex, defaultDescriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":138,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":139,"author":{"gitId":"TehOPanas"},"content":"        Person updatedBenson \u003d new PersonBuilder(benson).withInsurances(new HashSet\u003c\u003e()).build();","lastModifiedDate":"2023-10-30"},{"lineNumber":140,"author":{"gitId":"TehOPanas"},"content":"        String expectedMessage \u003d String.format(InsuranceCommand.MESSAGE_INSURANCE_PERSON_SUCCESS,","lastModifiedDate":"2023-10-30"},{"lineNumber":141,"author":{"gitId":"TehOPanas"},"content":"                Messages.format(updatedBenson));","lastModifiedDate":"2023-10-30"},{"lineNumber":142,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":143,"author":{"gitId":"TehOPanas"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-30"},{"lineNumber":144,"author":{"gitId":"TehOPanas"},"content":"        expectedModel.setPerson(benson, updatedBenson);","lastModifiedDate":"2023-10-30"},{"lineNumber":145,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":146,"author":{"gitId":"TehOPanas"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-30"},{"lineNumber":147,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":148,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":149,"author":{"gitId":"TehOPanas"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":150,"author":{"gitId":"TehOPanas"},"content":"    public void execute_oneInsuranceToUpdateDelete_success() {","lastModifiedDate":"2023-10-30"},{"lineNumber":151,"author":{"gitId":"TehOPanas"},"content":"        defaultDescriptor.setInsurancesToAdd(new Insurance(healthInsurance));","lastModifiedDate":"2023-10-30"},{"lineNumber":152,"author":{"gitId":"TehOPanas"},"content":"        defaultDescriptor.setInsurancesToDelete(new Insurance(carInsurance));","lastModifiedDate":"2023-10-30"},{"lineNumber":153,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":154,"author":{"gitId":"TehOPanas"},"content":"        InsuranceCommand command \u003d new InsuranceCommand(firstIndex, defaultDescriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":155,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":156,"author":{"gitId":"TehOPanas"},"content":"        Person updatedAlice \u003d new PersonBuilder(alice).withInsurances(healthInsurance).build();","lastModifiedDate":"2023-10-30"},{"lineNumber":157,"author":{"gitId":"TehOPanas"},"content":"        String expectedMessage \u003d String.format(InsuranceCommand.MESSAGE_INSURANCE_PERSON_SUCCESS,","lastModifiedDate":"2023-10-30"},{"lineNumber":158,"author":{"gitId":"TehOPanas"},"content":"                Messages.format(updatedAlice));","lastModifiedDate":"2023-10-30"},{"lineNumber":159,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":160,"author":{"gitId":"TehOPanas"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-30"},{"lineNumber":161,"author":{"gitId":"TehOPanas"},"content":"        expectedModel.setPerson(alice, updatedAlice);","lastModifiedDate":"2023-10-30"},{"lineNumber":162,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":163,"author":{"gitId":"TehOPanas"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-30"},{"lineNumber":164,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":165,"author":{"gitId":"TehOPanas"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":166,"author":{"gitId":"TehOPanas"},"content":"    public void execute_insuranceCountAtLimit_success() {","lastModifiedDate":"2023-10-30"},{"lineNumber":167,"author":{"gitId":"TehOPanas"},"content":"        defaultDescriptor.setInsurancesToAdd(new Insurance(carInsurance));","lastModifiedDate":"2023-10-30"},{"lineNumber":168,"author":{"gitId":"LamJiuFong"},"content":"        defaultDescriptor.setInsurancesToAdd(new Insurance(healthInsurance));","lastModifiedDate":"2023-10-30"},{"lineNumber":169,"author":{"gitId":"TehOPanas"},"content":"        defaultDescriptor.setInsurancesToAdd(new Insurance(lifeInsurance));","lastModifiedDate":"2023-10-30"},{"lineNumber":170,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":171,"author":{"gitId":"TehOPanas"},"content":"        InsuranceCommand command \u003d new InsuranceCommand(secondIndex, defaultDescriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":172,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":173,"author":{"gitId":"TehOPanas"},"content":"        Person updatedBenson \u003d new PersonBuilder(benson)","lastModifiedDate":"2023-10-30"},{"lineNumber":174,"author":{"gitId":"TehOPanas"},"content":"                .withInsurances(\"AIA insurance\", \"ABC insurance\", carInsurance, healthInsurance, lifeInsurance)","lastModifiedDate":"2023-10-30"},{"lineNumber":175,"author":{"gitId":"TehOPanas"},"content":"                .build();","lastModifiedDate":"2023-10-30"},{"lineNumber":176,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":177,"author":{"gitId":"TehOPanas"},"content":"        String expectedMessage \u003d String.format(InsuranceCommand.MESSAGE_INSURANCE_PERSON_SUCCESS,","lastModifiedDate":"2023-10-30"},{"lineNumber":178,"author":{"gitId":"TehOPanas"},"content":"                Messages.format(updatedBenson));","lastModifiedDate":"2023-10-30"},{"lineNumber":179,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":180,"author":{"gitId":"TehOPanas"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-30"},{"lineNumber":181,"author":{"gitId":"TehOPanas"},"content":"        expectedModel.setPerson(benson, updatedBenson);","lastModifiedDate":"2023-10-30"},{"lineNumber":182,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":183,"author":{"gitId":"TehOPanas"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-30"},{"lineNumber":184,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":185,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":186,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":187,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":188,"author":{"gitId":"TehOPanas"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":189,"author":{"gitId":"TehOPanas"},"content":"    public void execute_conflictingAddDelete_throwsCommandException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":190,"author":{"gitId":"TehOPanas"},"content":"        defaultDescriptor.setInsurancesToAdd(new Insurance(healthInsurance));","lastModifiedDate":"2023-10-30"},{"lineNumber":191,"author":{"gitId":"TehOPanas"},"content":"        defaultDescriptor.setInsurancesToDelete(new Insurance(healthInsurance));","lastModifiedDate":"2023-10-30"},{"lineNumber":192,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":193,"author":{"gitId":"TehOPanas"},"content":"        InsuranceCommand command \u003d new InsuranceCommand(firstIndex, defaultDescriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":194,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":195,"author":{"gitId":"TehOPanas"},"content":"        assertCommandFailure(command, model, MESSAGE_INSURANCE_CONFLICT);","lastModifiedDate":"2023-10-30"},{"lineNumber":196,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":197,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":198,"author":{"gitId":"TehOPanas"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":199,"author":{"gitId":"TehOPanas"},"content":"    public void execute_indexOutOfBounds_throwsCommandException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":200,"author":{"gitId":"TehOPanas"},"content":"        defaultDescriptor.setInsurancesToAdd(new Insurance(healthInsurance));","lastModifiedDate":"2023-10-30"},{"lineNumber":201,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":202,"author":{"gitId":"TehOPanas"},"content":"        InsuranceCommand command \u003d new InsuranceCommand(outOfBoundIndex, defaultDescriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":203,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":204,"author":{"gitId":"TehOPanas"},"content":"        assertCommandFailure(command, model, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-30"},{"lineNumber":205,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":206,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":207,"author":{"gitId":"TehOPanas"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":208,"author":{"gitId":"TehOPanas"},"content":"    public void execute_exceedInsuranceMaxCount_throwsCommandException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":209,"author":{"gitId":"TehOPanas"},"content":"        defaultDescriptor.setInsurancesToAdd(new Insurance(healthInsurance));","lastModifiedDate":"2023-10-30"},{"lineNumber":210,"author":{"gitId":"TehOPanas"},"content":"        defaultDescriptor.setInsurancesToAdd(new Insurance(carInsurance));","lastModifiedDate":"2023-10-30"},{"lineNumber":211,"author":{"gitId":"TehOPanas"},"content":"        defaultDescriptor.setInsurancesToAdd(new Insurance(lifeInsurance));","lastModifiedDate":"2023-10-30"},{"lineNumber":212,"author":{"gitId":"TehOPanas"},"content":"        defaultDescriptor.setInsurancesToAdd(new Insurance(\"Great eastern insurance\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":213,"author":{"gitId":"TehOPanas"},"content":"        defaultDescriptor.setInsurancesToAdd(new Insurance(\"Great western insurance\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":214,"author":{"gitId":"TehOPanas"},"content":"        defaultDescriptor.setInsurancesToAdd(new Insurance(\"Great southern insurance\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":215,"author":{"gitId":"TehOPanas"},"content":"        defaultDescriptor.setInsurancesToAdd(new Insurance(\"Great northern insurance\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":216,"author":{"gitId":"TehOPanas"},"content":"        defaultDescriptor.setInsurancesToAdd(new Insurance(\"Great asian insurance\"));","lastModifiedDate":"2023-11-02"},{"lineNumber":217,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":218,"author":{"gitId":"TehOPanas"},"content":"        InsuranceCommand command \u003d new InsuranceCommand(secondIndex, defaultDescriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":219,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":220,"author":{"gitId":"TehOPanas"},"content":"        assertCommandFailure(command, model, MESSAGE_INSURANCE_COUNT_EXCEED);","lastModifiedDate":"2023-10-30"},{"lineNumber":221,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":222,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":223,"author":{"gitId":"TehOPanas"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":224,"author":{"gitId":"TehOPanas"},"content":"    public void execute_nullArgument_throwsNullPointerException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":225,"author":{"gitId":"TehOPanas"},"content":"        defaultDescriptor.setInsurancesToAdd(new Insurance(healthInsurance));","lastModifiedDate":"2023-10-30"},{"lineNumber":226,"author":{"gitId":"TehOPanas"},"content":"        InsuranceCommand command \u003d new InsuranceCommand(firstIndex, defaultDescriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":227,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":228,"author":{"gitId":"TehOPanas"},"content":"        assertThrows(NullPointerException.class, () -\u003e command.execute(null));","lastModifiedDate":"2023-10-30"},{"lineNumber":229,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":230,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":231,"author":{"gitId":"TehOPanas"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":232,"author":{"gitId":"TehOPanas"},"content":"    public void equals() {","lastModifiedDate":"2023-10-30"},{"lineNumber":233,"author":{"gitId":"TehOPanas"},"content":"        defaultDescriptor.setInsurancesToAdd(new Insurance(healthInsurance));","lastModifiedDate":"2023-10-30"},{"lineNumber":234,"author":{"gitId":"TehOPanas"},"content":"        UpdatePersonInsuranceDescriptor newDescriptor \u003d","lastModifiedDate":"2023-10-30"},{"lineNumber":235,"author":{"gitId":"TehOPanas"},"content":"                new UpdatePersonInsuranceDescriptor(new HashSet\u003c\u003e(), new HashSet\u003c\u003e());","lastModifiedDate":"2023-10-30"},{"lineNumber":236,"author":{"gitId":"TehOPanas"},"content":"        newDescriptor.setInsurancesToAdd(new Insurance(carInsurance));","lastModifiedDate":"2023-10-30"},{"lineNumber":237,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":238,"author":{"gitId":"TehOPanas"},"content":"        InsuranceCommand command \u003d new InsuranceCommand(firstIndex, defaultDescriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":239,"author":{"gitId":"TehOPanas"},"content":"        InsuranceCommand sameCommand \u003d new InsuranceCommand(firstIndex, defaultDescriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":240,"author":{"gitId":"TehOPanas"},"content":"        InsuranceCommand diffIndexCommand \u003d new InsuranceCommand(secondIndex, defaultDescriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":241,"author":{"gitId":"TehOPanas"},"content":"        InsuranceCommand diffDescriptorCommand \u003d new InsuranceCommand(firstIndex, newDescriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":242,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":243,"author":{"gitId":"TehOPanas"},"content":"        // null value","lastModifiedDate":"2023-10-30"},{"lineNumber":244,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(command.equals(null));","lastModifiedDate":"2023-10-30"},{"lineNumber":245,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":246,"author":{"gitId":"TehOPanas"},"content":"        // object of different type","lastModifiedDate":"2023-10-30"},{"lineNumber":247,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(command.equals(0.5f));","lastModifiedDate":"2023-10-30"},{"lineNumber":248,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":249,"author":{"gitId":"TehOPanas"},"content":"        // different Index","lastModifiedDate":"2023-10-30"},{"lineNumber":250,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(command.equals(diffIndexCommand));","lastModifiedDate":"2023-10-30"},{"lineNumber":251,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":252,"author":{"gitId":"TehOPanas"},"content":"        // different UpdatePersonInsuranceDescriptor","lastModifiedDate":"2023-10-30"},{"lineNumber":253,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(command.equals(diffDescriptorCommand));","lastModifiedDate":"2023-10-30"},{"lineNumber":254,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":255,"author":{"gitId":"TehOPanas"},"content":"        // same object","lastModifiedDate":"2023-10-30"},{"lineNumber":256,"author":{"gitId":"TehOPanas"},"content":"        assertTrue(command.equals(command));","lastModifiedDate":"2023-10-30"},{"lineNumber":257,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":258,"author":{"gitId":"TehOPanas"},"content":"        // same command","lastModifiedDate":"2023-10-30"},{"lineNumber":259,"author":{"gitId":"TehOPanas"},"content":"        assertTrue(command.equals(sameCommand));","lastModifiedDate":"2023-10-30"},{"lineNumber":260,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":261,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":262,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":263,"author":{"gitId":"TehOPanas"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":264,"author":{"gitId":"TehOPanas"},"content":"    public void updatePersonInsuranceDescriptor_equals() {","lastModifiedDate":"2023-10-30"},{"lineNumber":265,"author":{"gitId":"TehOPanas"},"content":"        HashSet\u003cInsurance\u003e toAddSame \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-30"},{"lineNumber":266,"author":{"gitId":"TehOPanas"},"content":"        toAddSame.add(new Insurance(carInsurance));","lastModifiedDate":"2023-10-30"},{"lineNumber":267,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":268,"author":{"gitId":"TehOPanas"},"content":"        HashSet\u003cInsurance\u003e toAddDiff \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-30"},{"lineNumber":269,"author":{"gitId":"TehOPanas"},"content":"        toAddDiff.add(new Insurance(healthInsurance));","lastModifiedDate":"2023-10-30"},{"lineNumber":270,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":271,"author":{"gitId":"TehOPanas"},"content":"        HashSet\u003cInsurance\u003e toDeleteSame \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-30"},{"lineNumber":272,"author":{"gitId":"TehOPanas"},"content":"        toDeleteSame.add(new Insurance(lifeInsurance));","lastModifiedDate":"2023-10-30"},{"lineNumber":273,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":274,"author":{"gitId":"TehOPanas"},"content":"        HashSet\u003cInsurance\u003e toDeleteDiff \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-30"},{"lineNumber":275,"author":{"gitId":"TehOPanas"},"content":"        toDeleteDiff.add(new Insurance(\"AIA Insurance\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":276,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":277,"author":{"gitId":"TehOPanas"},"content":"        defaultDescriptor.setInsurancesToAdd(new Insurance(carInsurance));","lastModifiedDate":"2023-10-30"},{"lineNumber":278,"author":{"gitId":"TehOPanas"},"content":"        defaultDescriptor.setInsurancesToDelete(new Insurance(lifeInsurance));","lastModifiedDate":"2023-10-30"},{"lineNumber":279,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":280,"author":{"gitId":"TehOPanas"},"content":"        UpdatePersonInsuranceDescriptor addSameDeleteSameDescriptor \u003d","lastModifiedDate":"2023-10-30"},{"lineNumber":281,"author":{"gitId":"TehOPanas"},"content":"                new UpdatePersonInsuranceDescriptor(toAddSame, toDeleteSame);","lastModifiedDate":"2023-10-30"},{"lineNumber":282,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":283,"author":{"gitId":"TehOPanas"},"content":"        UpdatePersonInsuranceDescriptor addDiffDeleteSameDescriptor \u003d","lastModifiedDate":"2023-10-30"},{"lineNumber":284,"author":{"gitId":"TehOPanas"},"content":"                new UpdatePersonInsuranceDescriptor(toAddDiff, toDeleteSame);","lastModifiedDate":"2023-10-30"},{"lineNumber":285,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":286,"author":{"gitId":"TehOPanas"},"content":"        UpdatePersonInsuranceDescriptor addSameDeleteDiffDescriptor \u003d","lastModifiedDate":"2023-10-30"},{"lineNumber":287,"author":{"gitId":"TehOPanas"},"content":"                new UpdatePersonInsuranceDescriptor(toAddSame, toDeleteDiff);","lastModifiedDate":"2023-10-30"},{"lineNumber":288,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":289,"author":{"gitId":"TehOPanas"},"content":"        UpdatePersonInsuranceDescriptor addDiffDeleteDiffDescriptor \u003d","lastModifiedDate":"2023-10-30"},{"lineNumber":290,"author":{"gitId":"TehOPanas"},"content":"                new UpdatePersonInsuranceDescriptor(toAddDiff, toDeleteDiff);","lastModifiedDate":"2023-10-30"},{"lineNumber":291,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":292,"author":{"gitId":"TehOPanas"},"content":"        // insurancesToDelete and insurancesToAdd are different","lastModifiedDate":"2023-10-30"},{"lineNumber":293,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(defaultDescriptor.equals(addDiffDeleteDiffDescriptor));","lastModifiedDate":"2023-10-30"},{"lineNumber":294,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":295,"author":{"gitId":"TehOPanas"},"content":"        // insurancesToDelete is different","lastModifiedDate":"2023-10-30"},{"lineNumber":296,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(defaultDescriptor.equals(addSameDeleteDiffDescriptor));","lastModifiedDate":"2023-10-30"},{"lineNumber":297,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":298,"author":{"gitId":"TehOPanas"},"content":"        // insurancesToAdd is different","lastModifiedDate":"2023-10-30"},{"lineNumber":299,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(defaultDescriptor.equals(addDiffDeleteSameDescriptor));","lastModifiedDate":"2023-10-30"},{"lineNumber":300,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":301,"author":{"gitId":"TehOPanas"},"content":"        // object of different type","lastModifiedDate":"2023-10-30"},{"lineNumber":302,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(defaultDescriptor.equals(0.5f));","lastModifiedDate":"2023-10-30"},{"lineNumber":303,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":304,"author":{"gitId":"TehOPanas"},"content":"        // null value","lastModifiedDate":"2023-10-30"},{"lineNumber":305,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(defaultDescriptor.equals(null));","lastModifiedDate":"2023-10-30"},{"lineNumber":306,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":307,"author":{"gitId":"TehOPanas"},"content":"        // same object","lastModifiedDate":"2023-10-30"},{"lineNumber":308,"author":{"gitId":"TehOPanas"},"content":"        assertTrue(defaultDescriptor.equals(defaultDescriptor));","lastModifiedDate":"2023-10-30"},{"lineNumber":309,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":310,"author":{"gitId":"TehOPanas"},"content":"        // object with same insurancesToAdd and insurancesToDelete","lastModifiedDate":"2023-10-30"},{"lineNumber":311,"author":{"gitId":"TehOPanas"},"content":"        assertTrue(defaultDescriptor.equals(addSameDeleteSameDescriptor));","lastModifiedDate":"2023-10-30"},{"lineNumber":312,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":313,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":314,"author":{"gitId":"TehOPanas"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"TehOPanas":311,"LamJiuFong":3}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"Jweewee"},"content":"        String expectedMessage \u003d String.format(ListCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"Jweewee"},"content":"                expectedModel.getFilteredPersonListSize());","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"Jweewee"},"content":"        assertCommandSuccess(new ListCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":39,"author":{"gitId":"Jweewee"},"content":"        String expectedMessage \u003d String.format(ListCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"Jweewee"},"content":"                expectedModel.getFilteredPersonListSize());","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"Jweewee"},"content":"        assertCommandSuccess(new ListCommand(), model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":37,"Jweewee":6}},{"path":"src/test/java/seedu/address/logic/commands/PriorityCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LamJiuFong"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"LamJiuFong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"LamJiuFong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRIORITY_HIGH;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRIORITY_LOW;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRIORITY_NONE;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"LamJiuFong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.priority.Priority;","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"LamJiuFong"},"content":"public class PriorityCommandTest {","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"LamJiuFong"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"LamJiuFong"},"content":"    private final Priority lowPriority \u003d new Priority(VALID_PRIORITY_LOW);","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"LamJiuFong"},"content":"    private final Priority highPriority \u003d new Priority(VALID_PRIORITY_HIGH);","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"LamJiuFong"},"content":"    private final Priority nonePriority \u003d new Priority(VALID_PRIORITY_NONE);","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"LamJiuFong"},"content":"    public void constructor_nullArguments_throwsNullPointerException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"LamJiuFong"},"content":"        // null index","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"LamJiuFong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new PriorityCommand(null, lowPriority));","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"LamJiuFong"},"content":"        // null priority","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"LamJiuFong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new PriorityCommand(INDEX_FIRST_PERSON, null));","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"LamJiuFong"},"content":"        // null index and priority","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"LamJiuFong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new PriorityCommand(null, null));","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"LamJiuFong"},"content":"    public void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"LamJiuFong"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonListSize() + 1);","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"LamJiuFong"},"content":"        PriorityCommand pc \u003d new PriorityCommand(outOfBoundIndex, lowPriority);","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"LamJiuFong"},"content":"        assertCommandFailure(pc, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"LamJiuFong"},"content":"    public void execute_samePriority_throwsCommandException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"LamJiuFong"},"content":"        PriorityCommand pc \u003d new PriorityCommand(INDEX_FIRST_PERSON, highPriority); // default priority is high","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"yucongkoo"},"content":"        assertCommandFailure(pc, model, Messages.MESSAGE_PERSON_NOT_CHANGED);","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"LamJiuFong"},"content":"    public void execute_validPriority_success() {","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"LamJiuFong"},"content":"        // change from high priority to low","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"LamJiuFong"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"LamJiuFong"},"content":"        Person expectedPerson \u003d new PersonBuilder(personInFilteredList).withPriority(VALID_PRIORITY_LOW).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"LamJiuFong"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"LamJiuFong"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()), expectedPerson);","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"LamJiuFong"},"content":"        String expectedMessage \u003d String.format(PriorityCommand.MESSAGE_ASSIGN_PRIORITY_SUCCESS,","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"LamJiuFong"},"content":"                Messages.format(expectedPerson));","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"LamJiuFong"},"content":"        Index indexOfTargetPerson \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-23"},{"lineNumber":72,"author":{"gitId":"LamJiuFong"},"content":"        PriorityCommand pc \u003d new PriorityCommand(indexOfTargetPerson, lowPriority);","lastModifiedDate":"2023-10-23"},{"lineNumber":73,"author":{"gitId":"LamJiuFong"},"content":"        assertCommandSuccess(pc, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":75,"author":{"gitId":"LamJiuFong"},"content":"        // change from high priority to none","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"LamJiuFong"},"content":"        personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"LamJiuFong"},"content":"        expectedPerson \u003d new PersonBuilder(personInFilteredList).withPriority(VALID_PRIORITY_NONE).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":78,"author":{"gitId":"LamJiuFong"},"content":"        expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"LamJiuFong"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased()), expectedPerson);","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"LamJiuFong"},"content":"        expectedMessage \u003d String.format(PriorityCommand.MESSAGE_ASSIGN_PRIORITY_SUCCESS,","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"LamJiuFong"},"content":"                Messages.format(expectedPerson));","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":83,"author":{"gitId":"LamJiuFong"},"content":"        indexOfTargetPerson \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-23"},{"lineNumber":84,"author":{"gitId":"LamJiuFong"},"content":"        pc \u003d new PriorityCommand(indexOfTargetPerson, nonePriority);","lastModifiedDate":"2023-10-23"},{"lineNumber":85,"author":{"gitId":"LamJiuFong"},"content":"        assertCommandSuccess(pc, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-23"},{"lineNumber":86,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":87,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"LamJiuFong"},"content":"    public void equals() {","lastModifiedDate":"2023-10-23"},{"lineNumber":90,"author":{"gitId":"LamJiuFong"},"content":"        final PriorityCommand standardCommand \u003d new PriorityCommand(INDEX_FIRST_PERSON, highPriority);","lastModifiedDate":"2023-10-23"},{"lineNumber":91,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":92,"author":{"gitId":"LamJiuFong"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-23"},{"lineNumber":93,"author":{"gitId":"LamJiuFong"},"content":"        PriorityCommand commandWithSameValues \u003d new PriorityCommand(INDEX_FIRST_PERSON, highPriority);","lastModifiedDate":"2023-10-23"},{"lineNumber":94,"author":{"gitId":"LamJiuFong"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-10-23"},{"lineNumber":95,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":96,"author":{"gitId":"LamJiuFong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-23"},{"lineNumber":97,"author":{"gitId":"LamJiuFong"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-10-23"},{"lineNumber":98,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":99,"author":{"gitId":"LamJiuFong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":100,"author":{"gitId":"LamJiuFong"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-10-23"},{"lineNumber":101,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":102,"author":{"gitId":"LamJiuFong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":103,"author":{"gitId":"LamJiuFong"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-10-23"},{"lineNumber":104,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":105,"author":{"gitId":"LamJiuFong"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":106,"author":{"gitId":"LamJiuFong"},"content":"        assertFalse(standardCommand.equals(new PriorityCommand(INDEX_SECOND_PERSON, highPriority)));","lastModifiedDate":"2023-10-23"},{"lineNumber":107,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":108,"author":{"gitId":"LamJiuFong"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":109,"author":{"gitId":"LamJiuFong"},"content":"        assertFalse(standardCommand.equals(new PriorityCommand(INDEX_FIRST_PERSON, lowPriority)));","lastModifiedDate":"2023-10-23"},{"lineNumber":110,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":111,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":112,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":113,"author":{"gitId":"LamJiuFong"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-23"},{"lineNumber":114,"author":{"gitId":"LamJiuFong"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-23"},{"lineNumber":115,"author":{"gitId":"LamJiuFong"},"content":"        PriorityCommand pc \u003d new PriorityCommand(index, lowPriority);","lastModifiedDate":"2023-10-23"},{"lineNumber":116,"author":{"gitId":"LamJiuFong"},"content":"        String expected \u003d PriorityCommand.class.getCanonicalName() + \"{priority\u003d\"","lastModifiedDate":"2023-10-23"},{"lineNumber":117,"author":{"gitId":"LamJiuFong"},"content":"                + Priority.LOW_PRIORITY_KEYWORD + \"}\";","lastModifiedDate":"2023-10-23"},{"lineNumber":118,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":119,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(expected, pc.toString());","lastModifiedDate":"2023-10-23"},{"lineNumber":120,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":121,"author":{"gitId":"LamJiuFong"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"yucongkoo":1,"LamJiuFong":120}},{"path":"src/test/java/seedu/address/logic/commands/RemarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"class RemarkCommandTest {","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"    private static final String REMARK_STUB \u003d \"Some remark\";","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"    public void execute_remarkUnfilteredList_success() {","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"        // add remark to a person","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"songfangyl"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withRemark(REMARK_STUB).build();","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"songfangyl"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"songfangyl"},"content":"                new Remark(editedPerson.getRemark().toString()));","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"LamJiuFong"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"songfangyl"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"songfangyl"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"songfangyl"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"songfangyl"},"content":"        // delete remark from a person","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"songfangyl"},"content":"        firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"songfangyl"},"content":"        editedPerson \u003d new PersonBuilder(firstPerson).withRemark(\"\").build();","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"songfangyl"},"content":"        remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"songfangyl"},"content":"                new Remark(editedPerson.getRemark().toString()));","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"LamJiuFong"},"content":"        expectedMessage \u003d String.format(RemarkCommand.MESSAGE_DELETE_REMARK_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"songfangyl"},"content":"        expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"songfangyl"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"songfangyl"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"songfangyl"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"songfangyl"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-10-28"},{"lineNumber":66,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":67,"author":{"gitId":"songfangyl"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-28"},{"lineNumber":68,"author":{"gitId":"songfangyl"},"content":"        Person editedPerson \u003d new PersonBuilder(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()))","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"songfangyl"},"content":"                .withRemark(REMARK_STUB).build();","lastModifiedDate":"2023-10-28"},{"lineNumber":70,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":71,"author":{"gitId":"songfangyl"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-10-28"},{"lineNumber":72,"author":{"gitId":"songfangyl"},"content":"                new Remark(editedPerson.getRemark().toString()));","lastModifiedDate":"2023-10-28"},{"lineNumber":73,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":74,"author":{"gitId":"LamJiuFong"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":76,"author":{"gitId":"songfangyl"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-28"},{"lineNumber":77,"author":{"gitId":"songfangyl"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2023-10-28"},{"lineNumber":78,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":79,"author":{"gitId":"songfangyl"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-28"},{"lineNumber":80,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":81,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":82,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":83,"author":{"gitId":"songfangyl"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2023-10-28"},{"lineNumber":84,"author":{"gitId":"songfangyl"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-10-28"},{"lineNumber":85,"author":{"gitId":"songfangyl"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(outOfBoundIndex, new Remark(VALID_REMARK_BOB));","lastModifiedDate":"2023-10-28"},{"lineNumber":86,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":87,"author":{"gitId":"songfangyl"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-28"},{"lineNumber":88,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":89,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":90,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":91,"author":{"gitId":"songfangyl"},"content":"    public void equals() {","lastModifiedDate":"2023-10-28"},{"lineNumber":92,"author":{"gitId":"songfangyl"},"content":"        final RemarkCommand standardCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(REMARK_STUB));","lastModifiedDate":"2023-10-28"},{"lineNumber":93,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":94,"author":{"gitId":"songfangyl"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-28"},{"lineNumber":95,"author":{"gitId":"songfangyl"},"content":"        RemarkCommand commandWithSameValues \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(REMARK_STUB));","lastModifiedDate":"2023-10-28"},{"lineNumber":96,"author":{"gitId":"songfangyl"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-10-28"},{"lineNumber":97,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":98,"author":{"gitId":"songfangyl"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-28"},{"lineNumber":99,"author":{"gitId":"songfangyl"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-10-28"},{"lineNumber":100,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":101,"author":{"gitId":"songfangyl"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-28"},{"lineNumber":102,"author":{"gitId":"songfangyl"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-10-28"},{"lineNumber":103,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":104,"author":{"gitId":"songfangyl"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-28"},{"lineNumber":105,"author":{"gitId":"songfangyl"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-10-28"},{"lineNumber":106,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":107,"author":{"gitId":"songfangyl"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-10-28"},{"lineNumber":108,"author":{"gitId":"songfangyl"},"content":"        assertFalse(standardCommand.equals(new RemarkCommand(INDEX_SECOND_PERSON, new Remark(REMARK_STUB))));","lastModifiedDate":"2023-10-28"},{"lineNumber":109,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":110,"author":{"gitId":"songfangyl"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2023-10-28"},{"lineNumber":111,"author":{"gitId":"songfangyl"},"content":"        assertFalse(standardCommand.equals(new RemarkCommand(INDEX_FIRST_PERSON, new Remark(VALID_REMARK_BOB))));","lastModifiedDate":"2023-10-28"},{"lineNumber":112,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":113,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"songfangyl":110,"LamJiuFong":3}},{"path":"src/test/java/seedu/address/logic/commands/TagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_MALE;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.model.util.SampleDataUtil.getTagSet;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-10-16"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.logic.commands.TagCommand.UpdatePersonTagsDescriptor;","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.testutil.UpdatePersonTagsDescriptorBuilder;","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"public class TagCommandTest {","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"    // alice is first person","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"    private Index aliceIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"    private Person alice \u003d model.getFilteredPersonList().get(aliceIndex.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"    private String aliceTag \u003d \"friends\";","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"    // benson is second person","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"    private Index bensonIndex \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"    private Person benson \u003d model.getFilteredPersonList().get(bensonIndex.getZeroBased());","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"    private String bensonFirstTag \u003d \"owesMoney\";","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"    private String bensonSecondTag \u003d \"friends\";","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"    public void constructor_nullArguments_throwsNullPointerException() {","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"yucongkoo"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TagCommand(null,","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"yucongkoo"},"content":"                new UpdatePersonTagsDescriptorBuilder().build()));","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"yucongkoo"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"yucongkoo"},"content":"                new TagCommand(INDEX_FIRST_PERSON, null));","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"yucongkoo"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"yucongkoo"},"content":"                new TagCommand(INDEX_FIRST_PERSON, new UpdatePersonTagsDescriptor(null, new HashSet\u003c\u003e())));","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"yucongkoo"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"yucongkoo"},"content":"                new TagCommand(INDEX_FIRST_PERSON, new UpdatePersonTagsDescriptor(new HashSet\u003c\u003e(), null)));","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"yucongkoo"},"content":"    public void constructor_noTagToUpdate_assertionError() {","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"yucongkoo"},"content":"        assertThrows(AssertionError.class, () -\u003e","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"yucongkoo"},"content":"                new TagCommand(INDEX_FIRST_PERSON, new UpdatePersonTagsDescriptorBuilder().build()));","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"yucongkoo"},"content":"    public void execute_onlyAddSingleTag_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"yucongkoo"},"content":"        UpdatePersonTagsDescriptor descriptor \u003d","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"yucongkoo"},"content":"                new UpdatePersonTagsDescriptorBuilder().withTagsToAdd(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"yucongkoo"},"content":"        Command command \u003d new TagCommand(aliceIndex, descriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"yucongkoo"},"content":"        Person updatedAlice \u003d new PersonBuilder(alice).withTags(aliceTag, VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":75,"author":{"gitId":"yucongkoo"},"content":"        String expectedMessage \u003d String.format(TagCommand.MESSAGE_TAG_PERSON_SUCCESS, Messages.format(updatedAlice));","lastModifiedDate":"2023-10-16"},{"lineNumber":76,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"yucongkoo"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":78,"author":{"gitId":"yucongkoo"},"content":"        expectedModel.setPerson(alice, updatedAlice);","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":80,"author":{"gitId":"yucongkoo"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":81,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":83,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":84,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":85,"author":{"gitId":"yucongkoo"},"content":"    public void execute_onlyAddMultipleTags_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"yucongkoo"},"content":"        UpdatePersonTagsDescriptor descriptor \u003d new UpdatePersonTagsDescriptorBuilder()","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"yucongkoo"},"content":"                .withTagsToAdd(VALID_TAG_HUSBAND, VALID_TAG_MALE).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"yucongkoo"},"content":"        Command command \u003d new TagCommand(aliceIndex, descriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":90,"author":{"gitId":"yucongkoo"},"content":"        Person updatedAlice \u003d new PersonBuilder(alice).withTags(aliceTag, VALID_TAG_HUSBAND, VALID_TAG_MALE).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"yucongkoo"},"content":"        String expectedMessage \u003d String.format(TagCommand.MESSAGE_TAG_PERSON_SUCCESS, Messages.format(updatedAlice));","lastModifiedDate":"2023-10-16"},{"lineNumber":92,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"yucongkoo"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"yucongkoo"},"content":"        expectedModel.setPerson(alice, updatedAlice);","lastModifiedDate":"2023-10-16"},{"lineNumber":95,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"yucongkoo"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":97,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":98,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":99,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"yucongkoo"},"content":"    public void execute_addDuplicateTag_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"yucongkoo"},"content":"        UpdatePersonTagsDescriptor descriptor \u003d new UpdatePersonTagsDescriptorBuilder()","lastModifiedDate":"2023-10-24"},{"lineNumber":103,"author":{"gitId":"yucongkoo"},"content":"                .withTagsToAdd(bensonFirstTag, VALID_TAG_MALE).build();","lastModifiedDate":"2023-10-29"},{"lineNumber":104,"author":{"gitId":"yucongkoo"},"content":"        Command command \u003d new TagCommand(bensonIndex, descriptor);","lastModifiedDate":"2023-10-29"},{"lineNumber":105,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":106,"author":{"gitId":"yucongkoo"},"content":"        Person updatedBenson \u003d new PersonBuilder(benson)","lastModifiedDate":"2023-10-29"},{"lineNumber":107,"author":{"gitId":"yucongkoo"},"content":"                .withTags(bensonFirstTag, bensonSecondTag, VALID_TAG_MALE).build();","lastModifiedDate":"2023-10-29"},{"lineNumber":108,"author":{"gitId":"yucongkoo"},"content":"        String expectedMessage \u003d String.format(TagCommand.MESSAGE_TAG_PERSON_SUCCESS, Messages.format(updatedBenson));","lastModifiedDate":"2023-10-29"},{"lineNumber":109,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"yucongkoo"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"yucongkoo"},"content":"        expectedModel.setPerson(benson, updatedBenson);","lastModifiedDate":"2023-10-29"},{"lineNumber":112,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":113,"author":{"gitId":"yucongkoo"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":114,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":115,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":116,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":117,"author":{"gitId":"yucongkoo"},"content":"    public void execute_addDuplicateTag_failure() {","lastModifiedDate":"2023-10-29"},{"lineNumber":118,"author":{"gitId":"yucongkoo"},"content":"        UpdatePersonTagsDescriptor descriptor \u003d new UpdatePersonTagsDescriptorBuilder().withTagsToAdd(aliceTag).build();","lastModifiedDate":"2023-10-29"},{"lineNumber":119,"author":{"gitId":"yucongkoo"},"content":"        Command command \u003d new TagCommand(aliceIndex, descriptor);","lastModifiedDate":"2023-10-29"},{"lineNumber":120,"author":{"gitId":"yucongkoo"},"content":"        assertCommandFailure(command, model,","lastModifiedDate":"2023-11-08"},{"lineNumber":121,"author":{"gitId":"yucongkoo"},"content":"                Messages.MESSAGE_PERSON_NOT_CHANGED + \"\\n\" + TagCommand.MESSAGE_TAG_UNCHANGED_REASONS);","lastModifiedDate":"2023-11-08"},{"lineNumber":122,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":123,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":124,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":126,"author":{"gitId":"yucongkoo"},"content":"    public void execute_onlyDeleteSingleTag_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":127,"author":{"gitId":"yucongkoo"},"content":"        UpdatePersonTagsDescriptor descriptor \u003d new UpdatePersonTagsDescriptorBuilder()","lastModifiedDate":"2023-10-24"},{"lineNumber":128,"author":{"gitId":"yucongkoo"},"content":"                .withTagsToDelete(aliceTag).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":129,"author":{"gitId":"yucongkoo"},"content":"        Command command \u003d new TagCommand(aliceIndex, descriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":130,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"yucongkoo"},"content":"        Person updatedAlice \u003d new PersonBuilder(alice).withTags().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"yucongkoo"},"content":"        String expectedMessage \u003d String.format(TagCommand.MESSAGE_TAG_PERSON_SUCCESS, Messages.format(updatedAlice));","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":134,"author":{"gitId":"yucongkoo"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":135,"author":{"gitId":"yucongkoo"},"content":"        expectedModel.setPerson(alice, updatedAlice);","lastModifiedDate":"2023-10-16"},{"lineNumber":136,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":137,"author":{"gitId":"yucongkoo"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":138,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":139,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":140,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":141,"author":{"gitId":"yucongkoo"},"content":"    public void execute_onlyDeleteMultipleTag_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":142,"author":{"gitId":"yucongkoo"},"content":"        UpdatePersonTagsDescriptor descriptor \u003d new UpdatePersonTagsDescriptorBuilder()","lastModifiedDate":"2023-10-24"},{"lineNumber":143,"author":{"gitId":"yucongkoo"},"content":"                .withTagsToDelete(bensonFirstTag, bensonSecondTag).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":144,"author":{"gitId":"yucongkoo"},"content":"        Command command \u003d new TagCommand(bensonIndex, descriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":145,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":146,"author":{"gitId":"yucongkoo"},"content":"        Person updatedBenson \u003d new PersonBuilder(benson).withTags().build();","lastModifiedDate":"2023-10-16"},{"lineNumber":147,"author":{"gitId":"yucongkoo"},"content":"        String expectedMessage \u003d String.format(TagCommand.MESSAGE_TAG_PERSON_SUCCESS, Messages.format(updatedBenson));","lastModifiedDate":"2023-10-16"},{"lineNumber":148,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":149,"author":{"gitId":"yucongkoo"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":150,"author":{"gitId":"yucongkoo"},"content":"        expectedModel.setPerson(benson, updatedBenson);","lastModifiedDate":"2023-10-16"},{"lineNumber":151,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":152,"author":{"gitId":"yucongkoo"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":153,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":154,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":155,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":156,"author":{"gitId":"yucongkoo"},"content":"    public void execute_deleteNonExistingTag_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":157,"author":{"gitId":"yucongkoo"},"content":"        UpdatePersonTagsDescriptor descriptor \u003d new UpdatePersonTagsDescriptorBuilder()","lastModifiedDate":"2023-10-24"},{"lineNumber":158,"author":{"gitId":"yucongkoo"},"content":"                .withTagsToDelete(aliceTag, \"nonExistingTag\").build();","lastModifiedDate":"2023-10-29"},{"lineNumber":159,"author":{"gitId":"yucongkoo"},"content":"        Command command \u003d new TagCommand(aliceIndex, descriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":160,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":161,"author":{"gitId":"yucongkoo"},"content":"        Person updatedAlice \u003d new PersonBuilder(alice).withTags().build();","lastModifiedDate":"2023-10-29"},{"lineNumber":162,"author":{"gitId":"yucongkoo"},"content":"        String expectedMessage \u003d String.format(TagCommand.MESSAGE_TAG_PERSON_SUCCESS, Messages.format(updatedAlice));","lastModifiedDate":"2023-10-29"},{"lineNumber":163,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":164,"author":{"gitId":"yucongkoo"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":165,"author":{"gitId":"yucongkoo"},"content":"        expectedModel.setPerson(alice, updatedAlice);","lastModifiedDate":"2023-10-29"},{"lineNumber":166,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":167,"author":{"gitId":"yucongkoo"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":168,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":169,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":170,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":171,"author":{"gitId":"yucongkoo"},"content":"    public void execute_deleteNonExistingTag_failure() {","lastModifiedDate":"2023-10-29"},{"lineNumber":172,"author":{"gitId":"yucongkoo"},"content":"        UpdatePersonTagsDescriptor descriptor \u003d new UpdatePersonTagsDescriptorBuilder()","lastModifiedDate":"2023-10-29"},{"lineNumber":173,"author":{"gitId":"yucongkoo"},"content":"                .withTagsToDelete(\"nonExistingTag\").build();","lastModifiedDate":"2023-10-29"},{"lineNumber":174,"author":{"gitId":"yucongkoo"},"content":"        Command command \u003d new TagCommand(aliceIndex, descriptor);","lastModifiedDate":"2023-10-29"},{"lineNumber":175,"author":{"gitId":"yucongkoo"},"content":"        assertCommandFailure(command, model,","lastModifiedDate":"2023-11-08"},{"lineNumber":176,"author":{"gitId":"yucongkoo"},"content":"                Messages.MESSAGE_PERSON_NOT_CHANGED + \"\\n\" + TagCommand.MESSAGE_TAG_UNCHANGED_REASONS);","lastModifiedDate":"2023-11-08"},{"lineNumber":177,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":178,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":179,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":180,"author":{"gitId":"yucongkoo"},"content":"    public void execute_addAndDeleteTags_success() {","lastModifiedDate":"2023-10-16"},{"lineNumber":181,"author":{"gitId":"yucongkoo"},"content":"        UpdatePersonTagsDescriptor descriptor \u003d new UpdatePersonTagsDescriptorBuilder()","lastModifiedDate":"2023-10-24"},{"lineNumber":182,"author":{"gitId":"yucongkoo"},"content":"                .withTagsToAdd(VALID_TAG_HUSBAND, VALID_TAG_MALE, bensonFirstTag)","lastModifiedDate":"2023-10-24"},{"lineNumber":183,"author":{"gitId":"yucongkoo"},"content":"                .withTagsToDelete(bensonSecondTag, \"nonExistingTag\")","lastModifiedDate":"2023-10-24"},{"lineNumber":184,"author":{"gitId":"yucongkoo"},"content":"                .build();","lastModifiedDate":"2023-10-24"},{"lineNumber":185,"author":{"gitId":"yucongkoo"},"content":"        Command command \u003d new TagCommand(bensonIndex, descriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":186,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":187,"author":{"gitId":"yucongkoo"},"content":"        Person updatedBenson \u003d new PersonBuilder(benson)","lastModifiedDate":"2023-10-16"},{"lineNumber":188,"author":{"gitId":"yucongkoo"},"content":"                .withTags(bensonFirstTag, VALID_TAG_HUSBAND, VALID_TAG_MALE).build();","lastModifiedDate":"2023-10-16"},{"lineNumber":189,"author":{"gitId":"yucongkoo"},"content":"        String expectedMessage \u003d String.format(TagCommand.MESSAGE_TAG_PERSON_SUCCESS, Messages.format(updatedBenson));","lastModifiedDate":"2023-10-16"},{"lineNumber":190,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":191,"author":{"gitId":"yucongkoo"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-16"},{"lineNumber":192,"author":{"gitId":"yucongkoo"},"content":"        expectedModel.setPerson(benson, updatedBenson);","lastModifiedDate":"2023-10-16"},{"lineNumber":193,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":194,"author":{"gitId":"yucongkoo"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-16"},{"lineNumber":195,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":196,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":197,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":198,"author":{"gitId":"yucongkoo"},"content":"    public void execute_indexOutOfBound_failure() {","lastModifiedDate":"2023-10-16"},{"lineNumber":199,"author":{"gitId":"yucongkoo"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonListSize() + 1);","lastModifiedDate":"2023-10-16"},{"lineNumber":200,"author":{"gitId":"yucongkoo"},"content":"        UpdatePersonTagsDescriptor descriptor \u003d new UpdatePersonTagsDescriptorBuilder()","lastModifiedDate":"2023-10-24"},{"lineNumber":201,"author":{"gitId":"yucongkoo"},"content":"                .withTagsToAdd(\"tagToAdd\").build();","lastModifiedDate":"2023-10-24"},{"lineNumber":202,"author":{"gitId":"yucongkoo"},"content":"        Command command \u003d new TagCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":203,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":204,"author":{"gitId":"yucongkoo"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-16"},{"lineNumber":205,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":206,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":207,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":208,"author":{"gitId":"yucongkoo"},"content":"    public void execute_addAndDeleteCommonTag_failure() {","lastModifiedDate":"2023-10-20"},{"lineNumber":209,"author":{"gitId":"yucongkoo"},"content":"        UpdatePersonTagsDescriptor descriptor \u003d new UpdatePersonTagsDescriptorBuilder()","lastModifiedDate":"2023-10-24"},{"lineNumber":210,"author":{"gitId":"yucongkoo"},"content":"                .withTagsToAdd(\"commonTag\", \"validTag\").withTagsToDelete(\"commonTag\").build();","lastModifiedDate":"2023-10-24"},{"lineNumber":211,"author":{"gitId":"yucongkoo"},"content":"        Command command \u003d new TagCommand(aliceIndex, descriptor);","lastModifiedDate":"2023-10-31"},{"lineNumber":212,"author":{"gitId":"yucongkoo"},"content":"        assertCommandFailure(command, model, TagCommand.MESSAGE_COMMON_TAG_FAILURE);","lastModifiedDate":"2023-10-20"},{"lineNumber":213,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":214,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":215,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":216,"author":{"gitId":"yucongkoo"},"content":"    public void execute_tagCountExceedLimit_failure() {","lastModifiedDate":"2023-10-20"},{"lineNumber":217,"author":{"gitId":"yucongkoo"},"content":"        UpdatePersonTagsDescriptor descriptor \u003d new UpdatePersonTagsDescriptorBuilder()","lastModifiedDate":"2023-10-24"},{"lineNumber":218,"author":{"gitId":"yucongkoo"},"content":"                .withEnumeratedTagsToAdd(9).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":219,"author":{"gitId":"yucongkoo"},"content":"        Command command \u003d new TagCommand(bensonIndex, descriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":220,"author":{"gitId":"yucongkoo"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_TAG_COUNT_EXCEED);","lastModifiedDate":"2023-10-20"},{"lineNumber":221,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":222,"author":{"gitId":"yucongkoo"},"content":"        descriptor \u003d new UpdatePersonTagsDescriptorBuilder().withEnumeratedTagsToAdd(10).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":223,"author":{"gitId":"yucongkoo"},"content":"        command \u003d new TagCommand(bensonIndex, descriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":224,"author":{"gitId":"yucongkoo"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_TAG_COUNT_EXCEED);","lastModifiedDate":"2023-10-20"},{"lineNumber":225,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":226,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":227,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":228,"author":{"gitId":"yucongkoo"},"content":"    public void execute_tagCountAtLimit_success() {","lastModifiedDate":"2023-10-20"},{"lineNumber":229,"author":{"gitId":"yucongkoo"},"content":"        UpdatePersonTagsDescriptor descriptor \u003d new UpdatePersonTagsDescriptorBuilder()","lastModifiedDate":"2023-10-24"},{"lineNumber":230,"author":{"gitId":"yucongkoo"},"content":"                .withEnumeratedTagsToAdd(8).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":231,"author":{"gitId":"yucongkoo"},"content":"        Command command \u003d new TagCommand(bensonIndex, descriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":232,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":233,"author":{"gitId":"yucongkoo"},"content":"        Person updatedBenson \u003d new PersonBuilder(benson)","lastModifiedDate":"2023-10-20"},{"lineNumber":234,"author":{"gitId":"yucongkoo"},"content":"                .withTags(bensonFirstTag, bensonSecondTag, \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\").build();","lastModifiedDate":"2023-10-20"},{"lineNumber":235,"author":{"gitId":"yucongkoo"},"content":"        String expectedMessage \u003d String.format(TagCommand.MESSAGE_TAG_PERSON_SUCCESS, Messages.format(updatedBenson));","lastModifiedDate":"2023-10-20"},{"lineNumber":236,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":237,"author":{"gitId":"yucongkoo"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-20"},{"lineNumber":238,"author":{"gitId":"yucongkoo"},"content":"        expectedModel.setPerson(benson, updatedBenson);","lastModifiedDate":"2023-10-20"},{"lineNumber":239,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":240,"author":{"gitId":"yucongkoo"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-20"},{"lineNumber":241,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":242,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":243,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":244,"author":{"gitId":"yucongkoo"},"content":"    public void equals() {","lastModifiedDate":"2023-10-18"},{"lineNumber":245,"author":{"gitId":"yucongkoo"},"content":"        Index testIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-18"},{"lineNumber":246,"author":{"gitId":"yucongkoo"},"content":"        UpdatePersonTagsDescriptor descriptor \u003d new UpdatePersonTagsDescriptorBuilder()","lastModifiedDate":"2023-10-24"},{"lineNumber":247,"author":{"gitId":"yucongkoo"},"content":"                .withTagsToAdd(\"tagToAdd\").withTagsToDelete(\"tagToDelete\").build();","lastModifiedDate":"2023-10-24"},{"lineNumber":248,"author":{"gitId":"yucongkoo"},"content":"        TagCommand tagCommand \u003d new TagCommand(testIndex, descriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":249,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":250,"author":{"gitId":"yucongkoo"},"content":"        Set\u003cTag\u003e testSetToAdd \u003d getTagSet(\"tagToAdd\");","lastModifiedDate":"2023-10-20"},{"lineNumber":251,"author":{"gitId":"yucongkoo"},"content":"        Set\u003cTag\u003e testSetToDelete \u003d getTagSet(\"tagToDelete\");","lastModifiedDate":"2023-10-20"},{"lineNumber":252,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":253,"author":{"gitId":"yucongkoo"},"content":"        assertTrue(tagCommand.equals(tagCommand)); // same object -\u003e true","lastModifiedDate":"2023-10-24"},{"lineNumber":254,"author":{"gitId":"yucongkoo"},"content":"        assertFalse(tagCommand.equals(new Object())); // different class -\u003e false","lastModifiedDate":"2023-10-24"},{"lineNumber":255,"author":{"gitId":"yucongkoo"},"content":"        assertFalse(tagCommand.equals(null)); // null -\u003e false","lastModifiedDate":"2023-10-24"},{"lineNumber":256,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":257,"author":{"gitId":"yucongkoo"},"content":"        // same value -\u003e true","lastModifiedDate":"2023-10-18"},{"lineNumber":258,"author":{"gitId":"yucongkoo"},"content":"        assertTrue(tagCommand.equals(new TagCommand(testIndex,","lastModifiedDate":"2023-10-20"},{"lineNumber":259,"author":{"gitId":"yucongkoo"},"content":"                new UpdatePersonTagsDescriptor(testSetToAdd, testSetToDelete))));","lastModifiedDate":"2023-10-20"},{"lineNumber":260,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":261,"author":{"gitId":"yucongkoo"},"content":"        // different index -\u003e false","lastModifiedDate":"2023-10-18"},{"lineNumber":262,"author":{"gitId":"yucongkoo"},"content":"        assertFalse(tagCommand.equals(new TagCommand(INDEX_SECOND_PERSON,","lastModifiedDate":"2023-10-20"},{"lineNumber":263,"author":{"gitId":"yucongkoo"},"content":"                new UpdatePersonTagsDescriptor(testSetToAdd, testSetToDelete))));","lastModifiedDate":"2023-10-20"},{"lineNumber":264,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":265,"author":{"gitId":"yucongkoo"},"content":"        // different setToAdd -\u003e false","lastModifiedDate":"2023-10-18"},{"lineNumber":266,"author":{"gitId":"yucongkoo"},"content":"        assertFalse(tagCommand.equals(new TagCommand(testIndex,","lastModifiedDate":"2023-10-20"},{"lineNumber":267,"author":{"gitId":"yucongkoo"},"content":"                new UpdatePersonTagsDescriptor(new HashSet\u003c\u003e(), testSetToDelete))));","lastModifiedDate":"2023-10-20"},{"lineNumber":268,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":269,"author":{"gitId":"yucongkoo"},"content":"        // different setToDelete -\u003e false","lastModifiedDate":"2023-10-18"},{"lineNumber":270,"author":{"gitId":"yucongkoo"},"content":"        assertFalse(tagCommand.equals(new TagCommand(testIndex,","lastModifiedDate":"2023-10-20"},{"lineNumber":271,"author":{"gitId":"yucongkoo"},"content":"                new UpdatePersonTagsDescriptor(testSetToAdd, new HashSet\u003c\u003e()))));","lastModifiedDate":"2023-10-20"},{"lineNumber":272,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":273,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":274,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":275,"author":{"gitId":"yucongkoo"},"content":"    public void updatePersonDescriptorEquals() {","lastModifiedDate":"2023-10-21"},{"lineNumber":276,"author":{"gitId":"yucongkoo"},"content":"        UpdatePersonTagsDescriptor descriptor \u003d new UpdatePersonTagsDescriptorBuilder().build();","lastModifiedDate":"2023-10-24"},{"lineNumber":277,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":278,"author":{"gitId":"yucongkoo"},"content":"        assertTrue(descriptor.equals(descriptor)); // same object -\u003e true","lastModifiedDate":"2023-10-24"},{"lineNumber":279,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":280,"author":{"gitId":"yucongkoo"},"content":"        assertFalse(descriptor.equals(new Object())); // different object type -\u003e false","lastModifiedDate":"2023-10-24"},{"lineNumber":281,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":282,"author":{"gitId":"yucongkoo"},"content":"        assertFalse(descriptor.equals(null)); // null -\u003e false","lastModifiedDate":"2023-10-24"},{"lineNumber":283,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":284,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"yucongkoo":284}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_DERRICK;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_CALMEN;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_DERRICK;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INSURANCE_DESC_CAR;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INSURANCE_DESC_HEALTH;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_INSURANCE_DESC1;","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_INSURANCE_DESC2;","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PRIORITY_DESC;","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PRIORITY_DESC2;","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_CALMEN;","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_DERRICK;","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_CALMEN;","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_DERRICK;","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PRIORITY_DESC_HIGH;","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_AMY;","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_BOB;","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_CALMEN;","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-07-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":48,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":51,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":54,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.testutil.TypicalPersons.CALMEN;","lastModifiedDate":"2023-10-08"},{"lineNumber":55,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.testutil.TypicalPersons.DERRICK;","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"Jweewee"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"Jweewee"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"Jweewee"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.insurance.Insurance;","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2023-11-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.priority.Priority;","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"Jweewee"},"content":"    private static final Set\u003cInsurance\u003e VALID_INSURANCE_CAR \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"Jweewee"},"content":"            new HashSet\u003c\u003e(Arrays.asList(new Insurance(\"car insurance\")));","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":83,"author":{"gitId":"yucongkoo"},"content":"    public void parse_null_failure() {","lastModifiedDate":"2023-10-21"},{"lineNumber":84,"author":{"gitId":"yucongkoo"},"content":"        assertThrows(NullPointerException.class, () -\u003e parser.parse(null));","lastModifiedDate":"2023-10-21"},{"lineNumber":85,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":86,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"LamJiuFong"},"content":"        Person expectedPerson \u003d new PersonBuilder(DERRICK).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"LamJiuFong"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_DERRICK + PHONE_DESC_DERRICK","lastModifiedDate":"2023-10-23"},{"lineNumber":93,"author":{"gitId":"Jweewee"},"content":"                + EMAIL_DESC_DERRICK + ADDRESS_DESC_DERRICK + TAG_DESC_FRIEND + INSURANCE_DESC_CAR + PRIORITY_DESC_HIGH,","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"LamJiuFong"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2023-10-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"LamJiuFong"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(DERRICK).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2023-10-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"LamJiuFong"},"content":"                NAME_DESC_DERRICK + PHONE_DESC_DERRICK + EMAIL_DESC_DERRICK + ADDRESS_DESC_DERRICK","lastModifiedDate":"2023-10-23"},{"lineNumber":101,"author":{"gitId":"Jweewee"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + PRIORITY_DESC_HIGH + INSURANCE_DESC_CAR,","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"Jweewee"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + PRIORITY_DESC_HIGH + INSURANCE_DESC_HEALTH;","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":122,"author":{"gitId":"LamJiuFong"},"content":"        // multiple priorities","lastModifiedDate":"2023-10-23"},{"lineNumber":123,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, PRIORITY_DESC_HIGH + validExpectedPersonString,","lastModifiedDate":"2023-10-23"},{"lineNumber":124,"author":{"gitId":"LamJiuFong"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PRIORITY));","lastModifiedDate":"2023-10-23"},{"lineNumber":125,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":133,"author":{"gitId":"LamJiuFong"},"content":"                        + PRIORITY_DESC_HIGH + validExpectedPersonString,","lastModifiedDate":"2023-10-23"},{"lineNumber":134,"author":{"gitId":"LamJiuFong"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_ADDRESS, PREFIX_EMAIL, PREFIX_PHONE,","lastModifiedDate":"2023-10-23"},{"lineNumber":135,"author":{"gitId":"LamJiuFong"},"content":"                        PREFIX_PRIORITY));","lastModifiedDate":"2023-10-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":137,"author":{"gitId":"LamJiuFong"},"content":"        // invalid value followed by valid values","lastModifiedDate":"2023-10-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":152,"author":{"gitId":"LamJiuFong"},"content":"        // invalid priority","lastModifiedDate":"2023-10-23"},{"lineNumber":153,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, INVALID_PRIORITY_DESC + validExpectedPersonString,","lastModifiedDate":"2023-10-23"},{"lineNumber":154,"author":{"gitId":"LamJiuFong"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PRIORITY));","lastModifiedDate":"2023-10-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":170,"author":{"gitId":"LamJiuFong"},"content":"        // invalid priority","lastModifiedDate":"2023-10-23"},{"lineNumber":171,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PRIORITY_DESC2,","lastModifiedDate":"2023-10-23"},{"lineNumber":172,"author":{"gitId":"LamJiuFong"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PRIORITY));","lastModifiedDate":"2023-10-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":178,"author":{"gitId":"Jweewee"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags()","lastModifiedDate":"2023-11-01"},{"lineNumber":179,"author":{"gitId":"Jweewee"},"content":"                .withAppointment(Appointment.getDefaultEmptyAppointment()).build();","lastModifiedDate":"2023-11-01"},{"lineNumber":180,"author":{"gitId":"LamJiuFong"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-10-23"},{"lineNumber":181,"author":{"gitId":"songfangyl"},"content":"                + REMARK_DESC_AMY + PRIORITY_DESC_HIGH, new AddCommand(expectedPerson));","lastModifiedDate":"2023-10-25"},{"lineNumber":182,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":183,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":184,"author":{"gitId":"yucongkoo"},"content":"        // missing address","lastModifiedDate":"2023-10-08"},{"lineNumber":185,"author":{"gitId":"Jweewee"},"content":"        Person expectedPersonWithoutAddress \u003d new PersonBuilder(CALMEN).withInsurances(VALID_INSURANCE_CAR)","lastModifiedDate":"2023-11-01"},{"lineNumber":186,"author":{"gitId":"Jweewee"},"content":"                .withAppointment(Appointment.getDefaultEmptyAppointment()).build();","lastModifiedDate":"2023-11-01"},{"lineNumber":187,"author":{"gitId":"LamJiuFong"},"content":"        assertParseSuccess(parser, NAME_DESC_CALMEN + PHONE_DESC_CALMEN + EMAIL_DESC_CALMEN","lastModifiedDate":"2023-10-23"},{"lineNumber":188,"author":{"gitId":"Jweewee"},"content":"                + INSURANCE_DESC_CAR + REMARK_DESC_CALMEN + PRIORITY_DESC_HIGH,","lastModifiedDate":"2023-10-31"},{"lineNumber":189,"author":{"gitId":"Jweewee"},"content":"                new AddCommand(expectedPersonWithoutAddress));","lastModifiedDate":"2023-10-31"},{"lineNumber":190,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":191,"author":{"gitId":"LamJiuFong"},"content":"        // missing priority","lastModifiedDate":"2023-10-23"},{"lineNumber":192,"author":{"gitId":"Jweewee"},"content":"        Person expectedPersonWithoutPriority \u003d new PersonBuilder(BOB)","lastModifiedDate":"2023-10-31"},{"lineNumber":193,"author":{"gitId":"Jweewee"},"content":"                .withInsurances(VALID_INSURANCE_CAR).withPriority(Priority.NONE_PRIORITY_KEYWORD)","lastModifiedDate":"2023-10-31"},{"lineNumber":194,"author":{"gitId":"Jweewee"},"content":"                .withAppointment(Appointment.getDefaultEmptyAppointment()).build();","lastModifiedDate":"2023-11-01"},{"lineNumber":195,"author":{"gitId":"LamJiuFong"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":196,"author":{"gitId":"Jweewee"},"content":"                + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + INSURANCE_DESC_CAR + REMARK_DESC_BOB,","lastModifiedDate":"2023-10-31"},{"lineNumber":197,"author":{"gitId":"Jweewee"},"content":"                new AddCommand(expectedPersonWithoutPriority));","lastModifiedDate":"2023-10-31"},{"lineNumber":198,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":199,"author":{"gitId":"Jweewee"},"content":"        // missing insurance","lastModifiedDate":"2023-10-31"},{"lineNumber":200,"author":{"gitId":"Jweewee"},"content":"        Person expectedPersonWithoutInsurance \u003d new PersonBuilder(CALMEN)","lastModifiedDate":"2023-11-01"},{"lineNumber":201,"author":{"gitId":"Jweewee"},"content":"                .withAppointment(Appointment.getDefaultEmptyAppointment()).build();","lastModifiedDate":"2023-11-01"},{"lineNumber":202,"author":{"gitId":"Jweewee"},"content":"        assertParseSuccess(parser, NAME_DESC_CALMEN + PHONE_DESC_CALMEN + EMAIL_DESC_CALMEN","lastModifiedDate":"2023-10-31"},{"lineNumber":203,"author":{"gitId":"Jweewee"},"content":"                + REMARK_DESC_CALMEN + PRIORITY_DESC_HIGH, new AddCommand(expectedPersonWithoutInsurance));","lastModifiedDate":"2023-10-31"},{"lineNumber":204,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":232,"author":{"gitId":"Jweewee"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + INSURANCE_DESC_CAR, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":236,"author":{"gitId":"Jweewee"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + INSURANCE_DESC_CAR, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-31"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":240,"author":{"gitId":"Jweewee"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + INSURANCE_DESC_CAR, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-31"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":243,"author":{"gitId":"Jweewee"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-10-31"},{"lineNumber":244,"author":{"gitId":"Jweewee"},"content":"                Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-31"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":248,"author":{"gitId":"Jweewee"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND + INSURANCE_DESC_CAR, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-31"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":250,"author":{"gitId":"LamJiuFong"},"content":"        // invalid priority","lastModifiedDate":"2023-10-23"},{"lineNumber":251,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":252,"author":{"gitId":"Jweewee"},"content":"                + TAG_DESC_FRIEND + INVALID_PRIORITY_DESC + INSURANCE_DESC_CAR, Priority.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-31"},{"lineNumber":253,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":254,"author":{"gitId":"Jweewee"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-31"},{"lineNumber":255,"author":{"gitId":"Jweewee"},"content":"                + TAG_DESC_FRIEND + INVALID_PRIORITY_DESC2 + INSURANCE_DESC_CAR, Priority.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-31"},{"lineNumber":256,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":257,"author":{"gitId":"Jweewee"},"content":"        // invalid insurance","lastModifiedDate":"2023-10-31"},{"lineNumber":258,"author":{"gitId":"Jweewee"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-31"},{"lineNumber":259,"author":{"gitId":"Jweewee"},"content":"                + TAG_DESC_FRIEND + PRIORITY_DESC_HIGH + INVALID_INSURANCE_DESC1, Insurance.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-31"},{"lineNumber":260,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":261,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":262,"author":{"gitId":"Jweewee"},"content":"                + TAG_DESC_FRIEND + PRIORITY_DESC_HIGH + INVALID_INSURANCE_DESC2, Insurance.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":265,"author":{"gitId":"Jweewee"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB","lastModifiedDate":"2023-10-31"},{"lineNumber":266,"author":{"gitId":"Jweewee"},"content":"                        + INVALID_EMAIL_DESC + INSURANCE_DESC_CAR,","lastModifiedDate":"2023-10-31"},{"lineNumber":267,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":271,"author":{"gitId":"Jweewee"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + INSURANCE_DESC_CAR,","lastModifiedDate":"2023-10-31"},{"lineNumber":272,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":274,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"songfangyl":14,"yucongkoo":9,"LamJiuFong":31,"-":167,"Jweewee":53}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"TehOPanas"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_INSURANCE_CAR;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"TehOPanas"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_INSURANCE_HEALTH;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRIORITY_LOW;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"TehOPanas"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"TehOPanas"},"content":"import seedu.address.logic.commands.InsuranceCommand;","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.logic.commands.PriorityCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.logic.commands.TagCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.logic.commands.TagCommand.UpdatePersonTagsDescriptor;","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"TehOPanas"},"content":"import seedu.address.model.insurance.Insurance;","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.predicate.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.predicate.PersonContainsKeywordsPredicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.priority.Priority;","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"Jweewee"},"content":"        Person person \u003d new PersonBuilder().withAppointment(Appointment.getDefaultEmptyAppointment()).build();","lastModifiedDate":"2023-11-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"LamJiuFong"},"content":"        Person person \u003d new PersonBuilder().withTags(\"dad\").build();","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":90,"author":{"gitId":"songfangyl"},"content":"        NameContainsKeywordsPredicate nameContainsKeywordsPredicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2023-10-30"},{"lineNumber":91,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"songfangyl"},"content":"        PersonContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-30"},{"lineNumber":93,"author":{"gitId":"songfangyl"},"content":"                new PersonContainsKeywordsPredicate(List.of(nameContainsKeywordsPredicate));","lastModifiedDate":"2023-10-30"},{"lineNumber":94,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"songfangyl"},"content":"                FindCommand.COMMAND_WORD + \" n/\" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-10-30"},{"lineNumber":97,"author":{"gitId":"songfangyl"},"content":"        assertEquals(new FindCommand(predicate), command);","lastModifiedDate":"2023-10-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"TehOPanas"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" vsedbnns\") instanceof ListCommand);","lastModifiedDate":"2023-11-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":113,"author":{"gitId":"yucongkoo"},"content":"    public void parseCommand_tag_returnsTagCommand() throws Exception {","lastModifiedDate":"2023-10-31"},{"lineNumber":114,"author":{"gitId":"yucongkoo"},"content":"        Index testIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-18"},{"lineNumber":115,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":116,"author":{"gitId":"yucongkoo"},"content":"        Set\u003cTag\u003e testSetToAdd \u003d Set.of(new Tag(\"tagToAdd\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":117,"author":{"gitId":"yucongkoo"},"content":"        Set\u003cTag\u003e testSetToDelete \u003d Set.of(new Tag(\"tagToDelete\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":118,"author":{"gitId":"yucongkoo"},"content":"        UpdatePersonTagsDescriptor updatePersonTagsDescriptor \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":119,"author":{"gitId":"yucongkoo"},"content":"                new UpdatePersonTagsDescriptor(testSetToAdd, testSetToDelete);","lastModifiedDate":"2023-10-20"},{"lineNumber":120,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":121,"author":{"gitId":"yucongkoo"},"content":"        TagCommand expectedCommand \u003d new TagCommand(testIndex, updatePersonTagsDescriptor);","lastModifiedDate":"2023-10-20"},{"lineNumber":122,"author":{"gitId":"yucongkoo"},"content":"        Command actualCommand \u003d parser.parseCommand(PersonUtil.getTagCommand(testIndex, updatePersonTagsDescriptor));","lastModifiedDate":"2023-10-20"},{"lineNumber":123,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":124,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(expectedCommand, actualCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":125,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":126,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":127,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":128,"author":{"gitId":"LamJiuFong"},"content":"    public void parseCommand_priority() throws Exception {","lastModifiedDate":"2023-10-23"},{"lineNumber":129,"author":{"gitId":"LamJiuFong"},"content":"        Index testIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-23"},{"lineNumber":130,"author":{"gitId":"LamJiuFong"},"content":"        Priority priority \u003d new Priority(VALID_PRIORITY_LOW);","lastModifiedDate":"2023-10-23"},{"lineNumber":131,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":132,"author":{"gitId":"LamJiuFong"},"content":"        PriorityCommand expectedCommand \u003d new PriorityCommand(testIndex, priority);","lastModifiedDate":"2023-10-23"},{"lineNumber":133,"author":{"gitId":"LamJiuFong"},"content":"        Command actualCommand \u003d parser.parseCommand(PersonUtil.getPriorityCommand(testIndex, priority));","lastModifiedDate":"2023-10-23"},{"lineNumber":134,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":135,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(expectedCommand, actualCommand);","lastModifiedDate":"2023-10-23"},{"lineNumber":136,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":137,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":138,"author":{"gitId":"TehOPanas"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":139,"author":{"gitId":"TehOPanas"},"content":"    public void parseCommand_insurance() throws Exception {","lastModifiedDate":"2023-10-30"},{"lineNumber":140,"author":{"gitId":"TehOPanas"},"content":"        Index testIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-30"},{"lineNumber":141,"author":{"gitId":"TehOPanas"},"content":"        Insurance carInsurance \u003d new Insurance(VALID_INSURANCE_CAR);","lastModifiedDate":"2023-10-30"},{"lineNumber":142,"author":{"gitId":"TehOPanas"},"content":"        Insurance healthInsurance \u003d new Insurance(VALID_INSURANCE_HEALTH);","lastModifiedDate":"2023-10-30"},{"lineNumber":143,"author":{"gitId":"TehOPanas"},"content":"        InsuranceCommand.UpdatePersonInsuranceDescriptor descriptor \u003d","lastModifiedDate":"2023-10-30"},{"lineNumber":144,"author":{"gitId":"TehOPanas"},"content":"                new InsuranceCommand.UpdatePersonInsuranceDescriptor(new HashSet\u003c\u003e(), new HashSet\u003c\u003e());","lastModifiedDate":"2023-10-30"},{"lineNumber":145,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":146,"author":{"gitId":"TehOPanas"},"content":"        descriptor.setInsurancesToAdd(carInsurance);","lastModifiedDate":"2023-10-30"},{"lineNumber":147,"author":{"gitId":"TehOPanas"},"content":"        descriptor.setInsurancesToDelete(healthInsurance);","lastModifiedDate":"2023-10-30"},{"lineNumber":148,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":149,"author":{"gitId":"TehOPanas"},"content":"        InsuranceCommand expectedCommand \u003d new InsuranceCommand(testIndex, descriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":150,"author":{"gitId":"TehOPanas"},"content":"        Command actualCommand \u003d parser.parseCommand(PersonUtil.getInsuranceCommand(testIndex, descriptor));","lastModifiedDate":"2023-10-30"},{"lineNumber":151,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":152,"author":{"gitId":"TehOPanas"},"content":"        assertEquals(expectedCommand, actualCommand);","lastModifiedDate":"2023-10-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":155,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"TehOPanas":21,"yucongkoo":21,"songfangyl":9,"LamJiuFong":16,"-":97,"Jweewee":2}},{"path":"src/test/java/seedu/address/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\", \"--u\");","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\", \"ppp/\");","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\", \"-ttt\");","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\", \"^QQQ\");","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"yucongkoo"},"content":"        argsString \u003d \"  Some preamble string ppp/ Argument value \";","lastModifiedDate":"2023-11-03"},{"lineNumber":75,"author":{"gitId":"yucongkoo"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2023-11-03"},{"lineNumber":76,"author":{"gitId":"yucongkoo"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2023-11-03"},{"lineNumber":77,"author":{"gitId":"yucongkoo"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2023-11-03"},{"lineNumber":78,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"yucongkoo"},"content":"        argsString \u003d \" ppp/   Argument value \";","lastModifiedDate":"2023-11-03"},{"lineNumber":86,"author":{"gitId":"yucongkoo"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2023-11-03"},{"lineNumber":87,"author":{"gitId":"yucongkoo"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2023-11-03"},{"lineNumber":88,"author":{"gitId":"yucongkoo"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2023-11-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":148,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-11-03"},{"lineNumber":149,"author":{"gitId":"yucongkoo"},"content":"    public void tokenize_multipleArgumentsWithSecondaryPrefix_success() {","lastModifiedDate":"2023-11-03"},{"lineNumber":150,"author":{"gitId":"yucongkoo"},"content":"        String argsString \u003d \"Some Preamble String ppp/value 1 pPp/value2 p/value3 P/value4 PPP/value5 -tdashvalue -ttt\";","lastModifiedDate":"2023-11-03"},{"lineNumber":151,"author":{"gitId":"yucongkoo"},"content":"        ArgumentMultimap argumentMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2023-11-03"},{"lineNumber":152,"author":{"gitId":"yucongkoo"},"content":"        assertPreamblePresent(argumentMultimap, \"Some Preamble String\");","lastModifiedDate":"2023-11-03"},{"lineNumber":153,"author":{"gitId":"yucongkoo"},"content":"        assertArgumentPresent(argumentMultimap, pSlash, \"value 1\", \"value2\", \"value3\", \"value4\", \"value5\");","lastModifiedDate":"2023-11-03"},{"lineNumber":154,"author":{"gitId":"yucongkoo"},"content":"        assertArgumentPresent(argumentMultimap, dashT, \"dashvalue\", \"\");","lastModifiedDate":"2023-11-03"},{"lineNumber":155,"author":{"gitId":"yucongkoo"},"content":"        assertArgumentAbsent(argumentMultimap, hatQ);","lastModifiedDate":"2023-11-03"},{"lineNumber":156,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":157,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":158,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":161,"author":{"gitId":"yucongkoo"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\", \"aaa\");","lastModifiedDate":"2023-11-03"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":164,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(aaa, new Prefix(\"aaa\", \"aaa\"));","lastModifiedDate":"2023-11-03"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":167,"author":{"gitId":"yucongkoo"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\", \"aab\"));","lastModifiedDate":"2023-11-03"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"TehOPanas":1,"yucongkoo":26,"-":143}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_EMPTY;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_WITH_PREFIX_TAG;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PRIORITY_DESC;","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PRIORITY_DESC2;","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PRIORITY_DESC3;","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC2;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_DERRICK;","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PRIORITY_DESC_HIGH;","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PRIORITY_DESC_NONE;","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_EMPTY;","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_WITH_PREFIX_TAG;","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.EditCommand.MESSAGE_EDIT_PRIORITY_ERROR;","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.EditCommand.MESSAGE_EDIT_TAG_ERROR;","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":85,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, \"1 in/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":105,"author":{"gitId":"LamJiuFong"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB","lastModifiedDate":"2023-10-18"},{"lineNumber":106,"author":{"gitId":"LamJiuFong"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY;","lastModifiedDate":"2023-10-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"LamJiuFong"},"content":"                .build();","lastModifiedDate":"2023-10-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":155,"author":{"gitId":"LamJiuFong"},"content":"        // address","lastModifiedDate":"2023-10-18"},{"lineNumber":156,"author":{"gitId":"LamJiuFong"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_WITH_PREFIX_TAG;","lastModifiedDate":"2023-10-18"},{"lineNumber":157,"author":{"gitId":"LamJiuFong"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_WITH_PREFIX_TAG).build();","lastModifiedDate":"2023-10-18"},{"lineNumber":158,"author":{"gitId":"LamJiuFong"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":159,"author":{"gitId":"LamJiuFong"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-18"},{"lineNumber":160,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":161,"author":{"gitId":"yucongkoo"},"content":"        // empty address","lastModifiedDate":"2023-10-30"},{"lineNumber":162,"author":{"gitId":"yucongkoo"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_EMPTY;","lastModifiedDate":"2023-10-30"},{"lineNumber":163,"author":{"gitId":"yucongkoo"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_EMPTY).build();","lastModifiedDate":"2023-10-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":184,"author":{"gitId":"LamJiuFong"},"content":"        // multiple valid fields repeated","lastModifiedDate":"2023-10-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":186,"author":{"gitId":"LamJiuFong"},"content":"                + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-10-18"},{"lineNumber":187,"author":{"gitId":"LamJiuFong"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB;","lastModifiedDate":"2023-10-18"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":193,"author":{"gitId":"yucongkoo"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-10-30"},{"lineNumber":194,"author":{"gitId":"yucongkoo"},"content":"                + INVALID_PHONE_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-10-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":197,"author":{"gitId":"yucongkoo"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL));","lastModifiedDate":"2023-10-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":201,"author":{"gitId":"LamJiuFong"},"content":"    public void parse_editTag_failure() {","lastModifiedDate":"2023-10-18"},{"lineNumber":202,"author":{"gitId":"LamJiuFong"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-18"},{"lineNumber":203,"author":{"gitId":"LamJiuFong"},"content":"        String exceptionMessage \u003d MESSAGE_EDIT_TAG_ERROR;","lastModifiedDate":"2023-10-31"},{"lineNumber":204,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":205,"author":{"gitId":"LamJiuFong"},"content":"        // all fields specified with tag","lastModifiedDate":"2023-10-23"},{"lineNumber":206,"author":{"gitId":"LamJiuFong"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_DERRICK + EMAIL_DESC_AMY + PHONE_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":207,"author":{"gitId":"LamJiuFong"},"content":"                + TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-23"},{"lineNumber":208,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, userInput, exceptionMessage);","lastModifiedDate":"2023-10-24"},{"lineNumber":209,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":210,"author":{"gitId":"LamJiuFong"},"content":"        // all fields specified with invalid tag","lastModifiedDate":"2023-10-23"},{"lineNumber":211,"author":{"gitId":"LamJiuFong"},"content":"        targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-18"},{"lineNumber":212,"author":{"gitId":"LamJiuFong"},"content":"        userInput \u003d targetIndex.getOneBased() + NAME_DESC_DERRICK + EMAIL_DESC_AMY + PHONE_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":213,"author":{"gitId":"LamJiuFong"},"content":"                + INVALID_TAG_DESC;","lastModifiedDate":"2023-10-23"},{"lineNumber":214,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, userInput, exceptionMessage);","lastModifiedDate":"2023-10-24"},{"lineNumber":215,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":216,"author":{"gitId":"LamJiuFong"},"content":"        // all fields specified with empty tag","lastModifiedDate":"2023-10-23"},{"lineNumber":217,"author":{"gitId":"LamJiuFong"},"content":"        targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-23"},{"lineNumber":218,"author":{"gitId":"LamJiuFong"},"content":"        userInput \u003d targetIndex.getOneBased() + NAME_DESC_DERRICK + EMAIL_DESC_AMY + PHONE_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":219,"author":{"gitId":"LamJiuFong"},"content":"                + INVALID_TAG_DESC2;","lastModifiedDate":"2023-10-23"},{"lineNumber":220,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, userInput, exceptionMessage);","lastModifiedDate":"2023-10-24"},{"lineNumber":221,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":223,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":224,"author":{"gitId":"LamJiuFong"},"content":"    public void parse_editPriority_failure() {","lastModifiedDate":"2023-10-23"},{"lineNumber":225,"author":{"gitId":"LamJiuFong"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-23"},{"lineNumber":226,"author":{"gitId":"LamJiuFong"},"content":"        String exceptionMessage \u003d MESSAGE_EDIT_PRIORITY_ERROR;","lastModifiedDate":"2023-10-31"},{"lineNumber":227,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":228,"author":{"gitId":"LamJiuFong"},"content":"        // all fields specified with priority high","lastModifiedDate":"2023-10-23"},{"lineNumber":229,"author":{"gitId":"LamJiuFong"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_DERRICK + EMAIL_DESC_AMY + PHONE_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":230,"author":{"gitId":"LamJiuFong"},"content":"                + PRIORITY_DESC_HIGH;","lastModifiedDate":"2023-10-23"},{"lineNumber":231,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, userInput, exceptionMessage);","lastModifiedDate":"2023-10-24"},{"lineNumber":232,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":233,"author":{"gitId":"LamJiuFong"},"content":"        // all fields specified with priority none","lastModifiedDate":"2023-10-23"},{"lineNumber":234,"author":{"gitId":"LamJiuFong"},"content":"        targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-10-18"},{"lineNumber":235,"author":{"gitId":"LamJiuFong"},"content":"        userInput \u003d targetIndex.getOneBased() + NAME_DESC_DERRICK + EMAIL_DESC_AMY + PHONE_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":236,"author":{"gitId":"LamJiuFong"},"content":"                + PRIORITY_DESC_NONE;","lastModifiedDate":"2023-10-23"},{"lineNumber":237,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, userInput, exceptionMessage);","lastModifiedDate":"2023-10-24"},{"lineNumber":238,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":239,"author":{"gitId":"LamJiuFong"},"content":"        // invalid priority","lastModifiedDate":"2023-10-23"},{"lineNumber":240,"author":{"gitId":"LamJiuFong"},"content":"        userInput \u003d targetIndex.getOneBased() + NAME_DESC_DERRICK + EMAIL_DESC_AMY + PHONE_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":241,"author":{"gitId":"LamJiuFong"},"content":"                + INVALID_PRIORITY_DESC;","lastModifiedDate":"2023-10-23"},{"lineNumber":242,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, userInput, exceptionMessage);","lastModifiedDate":"2023-10-24"},{"lineNumber":243,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":244,"author":{"gitId":"LamJiuFong"},"content":"        userInput \u003d targetIndex.getOneBased() + NAME_DESC_DERRICK + EMAIL_DESC_AMY + PHONE_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":245,"author":{"gitId":"LamJiuFong"},"content":"                + INVALID_PRIORITY_DESC2;","lastModifiedDate":"2023-10-23"},{"lineNumber":246,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, userInput, exceptionMessage);","lastModifiedDate":"2023-10-24"},{"lineNumber":247,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":248,"author":{"gitId":"LamJiuFong"},"content":"        // empty priority","lastModifiedDate":"2023-10-23"},{"lineNumber":249,"author":{"gitId":"LamJiuFong"},"content":"        userInput \u003d targetIndex.getOneBased() + NAME_DESC_DERRICK + EMAIL_DESC_AMY + PHONE_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":250,"author":{"gitId":"LamJiuFong"},"content":"                + INVALID_PRIORITY_DESC3;","lastModifiedDate":"2023-10-23"},{"lineNumber":251,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, userInput, exceptionMessage);","lastModifiedDate":"2023-10-24"},{"lineNumber":252,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":254,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":255,"author":{"gitId":"LamJiuFong"},"content":"    public void parse_bothTagAndPriority_failure() {","lastModifiedDate":"2023-10-23"},{"lineNumber":256,"author":{"gitId":"LamJiuFong"},"content":"        // error message for tag will be thrown since we check for tag first","lastModifiedDate":"2023-10-31"},{"lineNumber":257,"author":{"gitId":"LamJiuFong"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-23"},{"lineNumber":258,"author":{"gitId":"LamJiuFong"},"content":"        String exceptionMessageTag \u003d MESSAGE_EDIT_TAG_ERROR;","lastModifiedDate":"2023-10-31"},{"lineNumber":259,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":260,"author":{"gitId":"LamJiuFong"},"content":"        // both tags and priority are valid","lastModifiedDate":"2023-10-23"},{"lineNumber":261,"author":{"gitId":"LamJiuFong"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_DERRICK + EMAIL_DESC_AMY + PHONE_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":262,"author":{"gitId":"LamJiuFong"},"content":"                + PRIORITY_DESC_HIGH + TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-31"},{"lineNumber":263,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, userInput, exceptionMessageTag);","lastModifiedDate":"2023-10-31"},{"lineNumber":264,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":265,"author":{"gitId":"LamJiuFong"},"content":"        // empty tag","lastModifiedDate":"2023-10-23"},{"lineNumber":266,"author":{"gitId":"LamJiuFong"},"content":"        userInput \u003d targetIndex.getOneBased() + NAME_DESC_DERRICK + EMAIL_DESC_AMY + PHONE_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":267,"author":{"gitId":"LamJiuFong"},"content":"                + INVALID_TAG_DESC2 + PRIORITY_DESC_HIGH;","lastModifiedDate":"2023-10-23"},{"lineNumber":268,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, userInput, exceptionMessageTag);","lastModifiedDate":"2023-10-31"},{"lineNumber":269,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":270,"author":{"gitId":"LamJiuFong"},"content":"        // empty priority","lastModifiedDate":"2023-10-23"},{"lineNumber":271,"author":{"gitId":"LamJiuFong"},"content":"        userInput \u003d targetIndex.getOneBased() + NAME_DESC_DERRICK + EMAIL_DESC_AMY + PHONE_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":272,"author":{"gitId":"LamJiuFong"},"content":"                + TAG_DESC_FRIEND + INVALID_PRIORITY_DESC3;","lastModifiedDate":"2023-10-23"},{"lineNumber":273,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, userInput, exceptionMessageTag);","lastModifiedDate":"2023-10-31"},{"lineNumber":274,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":275,"author":{"gitId":"LamJiuFong"},"content":"        // both tag and priority are empty","lastModifiedDate":"2023-10-23"},{"lineNumber":276,"author":{"gitId":"LamJiuFong"},"content":"        userInput \u003d targetIndex.getOneBased() + NAME_DESC_DERRICK + EMAIL_DESC_AMY + PHONE_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":277,"author":{"gitId":"LamJiuFong"},"content":"                + INVALID_TAG_DESC2 + INVALID_PRIORITY_DESC3;","lastModifiedDate":"2023-10-23"},{"lineNumber":278,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, userInput, exceptionMessageTag);","lastModifiedDate":"2023-10-31"},{"lineNumber":279,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":280,"author":{"gitId":"LamJiuFong"},"content":"        // invalid tag","lastModifiedDate":"2023-10-23"},{"lineNumber":281,"author":{"gitId":"LamJiuFong"},"content":"        userInput \u003d targetIndex.getOneBased() + NAME_DESC_DERRICK + EMAIL_DESC_AMY + PHONE_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":282,"author":{"gitId":"LamJiuFong"},"content":"                + INVALID_TAG_DESC + PRIORITY_DESC_HIGH;","lastModifiedDate":"2023-10-23"},{"lineNumber":283,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, userInput, exceptionMessageTag);","lastModifiedDate":"2023-10-31"},{"lineNumber":284,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":285,"author":{"gitId":"LamJiuFong"},"content":"        // invalid priority","lastModifiedDate":"2023-10-23"},{"lineNumber":286,"author":{"gitId":"LamJiuFong"},"content":"        userInput \u003d targetIndex.getOneBased() + NAME_DESC_DERRICK + EMAIL_DESC_AMY + PHONE_DESC_BOB","lastModifiedDate":"2023-10-23"},{"lineNumber":287,"author":{"gitId":"LamJiuFong"},"content":"                + TAG_DESC_FRIEND + INVALID_PRIORITY_DESC;","lastModifiedDate":"2023-10-23"},{"lineNumber":288,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, userInput, exceptionMessageTag);","lastModifiedDate":"2023-10-31"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":290,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"yucongkoo":9,"LamJiuFong":109,"-":172}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"import java.util.List;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.predicate.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.predicate.PersonContainsKeywordsPredicate;","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"                new FindCommand(new PersonContainsKeywordsPredicate(","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"                        List.of(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")))));","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"        assertParseSuccess(parser, \"n/Alice Bob\", expectedFindCommand);","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"        assertParseSuccess(parser, \"n/\\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"songfangyl":7,"-":30}},{"path":"src/test/java/seedu/address/logic/parser/InsuranceCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TehOPanas"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"TehOPanas"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"TehOPanas"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"TehOPanas"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"TehOPanas"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"TehOPanas"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"TehOPanas"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"TehOPanas"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"TehOPanas"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"TehOPanas"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"TehOPanas"},"content":"import seedu.address.logic.commands.InsuranceCommand;","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"TehOPanas"},"content":"import seedu.address.logic.commands.InsuranceCommand.UpdatePersonInsuranceDescriptor;","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"TehOPanas"},"content":"import seedu.address.model.insurance.Insurance;","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"TehOPanas"},"content":"public class InsuranceCommandParserTest {","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"TehOPanas"},"content":"    private InsuranceCommandParser parser \u003d new InsuranceCommandParser();","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"TehOPanas"},"content":"    private UpdatePersonInsuranceDescriptor descriptor;","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"TehOPanas"},"content":"    private Index firstIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"TehOPanas"},"content":"    private String invalidFormat \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, InsuranceCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"TehOPanas"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"TehOPanas"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"TehOPanas"},"content":"        descriptor \u003d new UpdatePersonInsuranceDescriptor(new HashSet\u003c\u003e(), new HashSet\u003c\u003e());","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"TehOPanas"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"TehOPanas"},"content":"    public void parse_nullArgument_throwsNullPointerException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"TehOPanas"},"content":"        assertThrows(NullPointerException.class, () -\u003e parser.parse(null));","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"TehOPanas"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"TehOPanas"},"content":"    public void parse_addOneInsurnance_success() {","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"TehOPanas"},"content":"        descriptor.setInsurancesToAdd(new Insurance(\"car insurance\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"TehOPanas"},"content":"        String argument \u003d \"1 ai/car insurance\";","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"TehOPanas"},"content":"        InsuranceCommand expectedCommand \u003d new InsuranceCommand(firstIndex, descriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"TehOPanas"},"content":"        assertParseSuccess(parser, argument, expectedCommand);","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"TehOPanas"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"TehOPanas"},"content":"    public void parse_addMultipleInsurnance_success() {","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"TehOPanas"},"content":"        descriptor.setInsurancesToAdd(new Insurance(\"car insurance\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"TehOPanas"},"content":"        descriptor.setInsurancesToAdd(new Insurance(\"life insurance\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"TehOPanas"},"content":"        descriptor.setInsurancesToAdd(new Insurance(\"health insurance\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"TehOPanas"},"content":"        String argument \u003d \"1 ai/car insurance ai/life insurance ai/health insurance\";","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"TehOPanas"},"content":"        InsuranceCommand expectedCommand \u003d new InsuranceCommand(firstIndex, descriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"TehOPanas"},"content":"        assertParseSuccess(parser, argument, expectedCommand);","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"TehOPanas"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"TehOPanas"},"content":"    public void parse_deleteOneInsurnance_success() {","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"TehOPanas"},"content":"        descriptor.setInsurancesToDelete(new Insurance(\"car insurance\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"TehOPanas"},"content":"        String argument \u003d \"1 di/car insurance\";","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"TehOPanas"},"content":"        InsuranceCommand expectedCommand \u003d new InsuranceCommand(firstIndex, descriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"TehOPanas"},"content":"        assertParseSuccess(parser, argument, expectedCommand);","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"TehOPanas"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"TehOPanas"},"content":"    public void parse_deleteMultipleInsurnance_success() {","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"TehOPanas"},"content":"        descriptor.setInsurancesToDelete(new Insurance(\"car insurance\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"TehOPanas"},"content":"        descriptor.setInsurancesToDelete(new Insurance(\"life insurance\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"TehOPanas"},"content":"        descriptor.setInsurancesToDelete(new Insurance(\"health insurance\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"TehOPanas"},"content":"        String argument \u003d \"1 di/car insurance di/life insurance di/health insurance\";","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"TehOPanas"},"content":"        InsuranceCommand expectedCommand \u003d new InsuranceCommand(firstIndex, descriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":78,"author":{"gitId":"TehOPanas"},"content":"        assertParseSuccess(parser, argument, expectedCommand);","lastModifiedDate":"2023-10-30"},{"lineNumber":79,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":81,"author":{"gitId":"TehOPanas"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"TehOPanas"},"content":"    public void parse_addDeleteInsurance_success() {","lastModifiedDate":"2023-10-30"},{"lineNumber":83,"author":{"gitId":"TehOPanas"},"content":"        descriptor.setInsurancesToAdd(new Insurance(\"car insurance\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":84,"author":{"gitId":"TehOPanas"},"content":"        descriptor.setInsurancesToDelete(new Insurance(\"life insurance\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":85,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":86,"author":{"gitId":"TehOPanas"},"content":"        String argument \u003d \"1 ai/car insurance di/life insurance\";","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":88,"author":{"gitId":"TehOPanas"},"content":"        InsuranceCommand expectedCommand \u003d new InsuranceCommand(firstIndex, descriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":89,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":90,"author":{"gitId":"TehOPanas"},"content":"        assertParseSuccess(parser, argument, expectedCommand);","lastModifiedDate":"2023-10-30"},{"lineNumber":91,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":93,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":94,"author":{"gitId":"TehOPanas"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":95,"author":{"gitId":"TehOPanas"},"content":"    public void parse_addDeleteMultipleInsurance_success() {","lastModifiedDate":"2023-10-30"},{"lineNumber":96,"author":{"gitId":"TehOPanas"},"content":"        descriptor.setInsurancesToAdd(new Insurance(\"car insurance\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":97,"author":{"gitId":"TehOPanas"},"content":"        descriptor.setInsurancesToDelete(new Insurance(\"life insurance\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":98,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":99,"author":{"gitId":"TehOPanas"},"content":"        descriptor.setInsurancesToAdd(new Insurance(\"AIA insurance\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":100,"author":{"gitId":"TehOPanas"},"content":"        descriptor.setInsurancesToDelete(new Insurance(\"ABC insurance\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":101,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":102,"author":{"gitId":"TehOPanas"},"content":"        String argument \u003d \"1 ai/car insurance di/life insurance ai/AIA insurance di/ABC insurance\";","lastModifiedDate":"2023-10-30"},{"lineNumber":103,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":104,"author":{"gitId":"TehOPanas"},"content":"        InsuranceCommand expectedCommand \u003d new InsuranceCommand(firstIndex, descriptor);","lastModifiedDate":"2023-10-30"},{"lineNumber":105,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":106,"author":{"gitId":"TehOPanas"},"content":"        assertParseSuccess(parser, argument, expectedCommand);","lastModifiedDate":"2023-10-30"},{"lineNumber":107,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":108,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":109,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":110,"author":{"gitId":"TehOPanas"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":111,"author":{"gitId":"TehOPanas"},"content":"    public void parse_missingArguments_failure() {","lastModifiedDate":"2023-10-30"},{"lineNumber":112,"author":{"gitId":"TehOPanas"},"content":"        // missing field","lastModifiedDate":"2023-10-30"},{"lineNumber":113,"author":{"gitId":"TehOPanas"},"content":"        assertParseFailure(parser, \"1\", InsuranceCommand.MESSAGE_INSURANCE_NO_UPDATE);","lastModifiedDate":"2023-10-30"},{"lineNumber":114,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":115,"author":{"gitId":"TehOPanas"},"content":"        // missing index with add field","lastModifiedDate":"2023-10-30"},{"lineNumber":116,"author":{"gitId":"TehOPanas"},"content":"        assertParseFailure(parser, \"ai/\", invalidFormat);","lastModifiedDate":"2023-10-30"},{"lineNumber":117,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":118,"author":{"gitId":"TehOPanas"},"content":"        // missing index with delete field","lastModifiedDate":"2023-10-30"},{"lineNumber":119,"author":{"gitId":"TehOPanas"},"content":"        assertParseFailure(parser, \"di/\", invalidFormat);","lastModifiedDate":"2023-10-30"},{"lineNumber":120,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":121,"author":{"gitId":"TehOPanas"},"content":"        // missing both index and field","lastModifiedDate":"2023-10-30"},{"lineNumber":122,"author":{"gitId":"TehOPanas"},"content":"        assertParseFailure(parser, \"\", invalidFormat);","lastModifiedDate":"2023-10-30"},{"lineNumber":123,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":124,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":125,"author":{"gitId":"TehOPanas"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":126,"author":{"gitId":"TehOPanas"},"content":"    public void parse_invalidPreamble_throwsParseException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":127,"author":{"gitId":"TehOPanas"},"content":"        // negative index","lastModifiedDate":"2023-10-30"},{"lineNumber":128,"author":{"gitId":"TehOPanas"},"content":"        assertParseFailure(parser, \"-1 ai/car insurance\", invalidFormat);","lastModifiedDate":"2023-10-30"},{"lineNumber":129,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":130,"author":{"gitId":"TehOPanas"},"content":"        // zero index","lastModifiedDate":"2023-10-30"},{"lineNumber":131,"author":{"gitId":"TehOPanas"},"content":"        assertParseFailure(parser, \"0 ai/car insurance\", invalidFormat);","lastModifiedDate":"2023-10-30"},{"lineNumber":132,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":133,"author":{"gitId":"TehOPanas"},"content":"        // alphabets","lastModifiedDate":"2023-10-30"},{"lineNumber":134,"author":{"gitId":"TehOPanas"},"content":"        assertParseFailure(parser, \"abvbvh ai/car insurance\", invalidFormat);","lastModifiedDate":"2023-10-30"},{"lineNumber":135,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":136,"author":{"gitId":"TehOPanas"},"content":"        // symbols","lastModifiedDate":"2023-10-30"},{"lineNumber":137,"author":{"gitId":"TehOPanas"},"content":"        assertParseFailure(parser, \"*-+ ai/car insurance\", invalidFormat);","lastModifiedDate":"2023-10-30"},{"lineNumber":138,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":139,"author":{"gitId":"TehOPanas"},"content":"        // index mixed with redundant argument","lastModifiedDate":"2023-10-30"},{"lineNumber":140,"author":{"gitId":"TehOPanas"},"content":"        assertParseFailure(parser, \"1 abcdef ai/car insurance\", invalidFormat);","lastModifiedDate":"2023-10-30"},{"lineNumber":141,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":142,"author":{"gitId":"TehOPanas"},"content":"        // invalid prefix recognized as preamble","lastModifiedDate":"2023-10-30"},{"lineNumber":143,"author":{"gitId":"TehOPanas"},"content":"        assertParseFailure(parser, \"1 i/AIA ai/car insurance\", invalidFormat);","lastModifiedDate":"2023-10-30"},{"lineNumber":144,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":145,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":146,"author":{"gitId":"TehOPanas"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":147,"author":{"gitId":"TehOPanas"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-10-30"},{"lineNumber":148,"author":{"gitId":"TehOPanas"},"content":"        // invalid insurance with add field only","lastModifiedDate":"2023-10-30"},{"lineNumber":149,"author":{"gitId":"TehOPanas"},"content":"        assertParseFailure(parser, \"1 ai/hush*-+\", Insurance.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-30"},{"lineNumber":150,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":151,"author":{"gitId":"TehOPanas"},"content":"        // invalid insurance with delete field only","lastModifiedDate":"2023-10-30"},{"lineNumber":152,"author":{"gitId":"TehOPanas"},"content":"        assertParseFailure(parser, \"1 di/hush*-+\", Insurance.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-30"},{"lineNumber":153,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":154,"author":{"gitId":"TehOPanas"},"content":"        // invalid add insurance with add and delete field","lastModifiedDate":"2023-10-30"},{"lineNumber":155,"author":{"gitId":"TehOPanas"},"content":"        assertParseFailure(parser, \"1 ai/hush*-+ di/abc insurance\", Insurance.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-30"},{"lineNumber":156,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":157,"author":{"gitId":"TehOPanas"},"content":"        // invalid delete insurance with add and delete field","lastModifiedDate":"2023-10-30"},{"lineNumber":158,"author":{"gitId":"TehOPanas"},"content":"        assertParseFailure(parser, \"1 ai/hush insurance di/abc@sg insurance\", Insurance.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-30"},{"lineNumber":159,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":160,"author":{"gitId":"TehOPanas"},"content":"        // both insurances invalid with add and delete field","lastModifiedDate":"2023-10-30"},{"lineNumber":161,"author":{"gitId":"TehOPanas"},"content":"        assertParseFailure(parser, \"1 ai/hush*-+ di/abc@-insurance\", Insurance.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-30"},{"lineNumber":162,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":163,"author":{"gitId":"TehOPanas"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"TehOPanas":163}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.person.EmptyAddress;","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.person.NonEmptyAddress;","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.person.PersonTestUtil;","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.predicate.AddressContainsKeywordsPredicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.predicate.EmailContainsKeywordsPredicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.predicate.InsuranceContainsKeywordsPredicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.predicate.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.predicate.PhoneContainsKeywordsPredicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.predicate.PriorityContainsKeywordsPredicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.predicate.RemarkContainsKeywordsPredicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.predicate.TagContainsKeywordsPredicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"    private static final String INVALID_ADDRESS \u003d PersonTestUtil.generateStringOfLength(101);","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":44,"author":{"gitId":"TehOPanas"},"content":"    private static final String VALID_PHONE \u003d \"12345678\";","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"    private static final String VALID_EMPTY_ADDRESS \u003d \" \";","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"    private static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"yucongkoo"},"content":"    private static final String VALID_TAG_NEIGHBOUR \u003d \"neighbour\";","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"songfangyl"},"content":"    private static final String VALID_NAME_KEYWORDS_ONE \u003d \"Alice\";","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"songfangyl"},"content":"    private static final String VALID_NAME_KEYWORDS_TWO \u003d \"Main\";","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"songfangyl"},"content":"    private static final String VALID_NAME_KEYWORDS_THREE \u003d \"12345678\";","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"yucongkoo"},"content":"    public void parseAddress_emptyAddress_returnsEmptyAddress() throws Exception {","lastModifiedDate":"2023-10-30"},{"lineNumber":124,"author":{"gitId":"yucongkoo"},"content":"        Address expectedAddress \u003d EmptyAddress.getEmptyAddress();","lastModifiedDate":"2023-10-30"},{"lineNumber":125,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_EMPTY_ADDRESS));","lastModifiedDate":"2023-10-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"yucongkoo"},"content":"        Address expectedAddress \u003d new NonEmptyAddress(VALID_ADDRESS);","lastModifiedDate":"2023-10-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"yucongkoo"},"content":"        Address expectedAddress \u003d new NonEmptyAddress(VALID_ADDRESS);","lastModifiedDate":"2023-10-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":142,"author":{"gitId":"yucongkoo"},"content":"    public void parseAddress_nullValue_throwsNullPointerException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":143,"author":{"gitId":"yucongkoo"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress(null));","lastModifiedDate":"2023-10-30"},{"lineNumber":144,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":145,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":146,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":147,"author":{"gitId":"yucongkoo"},"content":"    public void parseAddress_invalidAddress_throwsParseException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":148,"author":{"gitId":"yucongkoo"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2023-10-30"},{"lineNumber":149,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":150,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"yucongkoo"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_FRIEND);","lastModifiedDate":"2023-10-17"},{"lineNumber":187,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_FRIEND));","lastModifiedDate":"2023-10-17"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":192,"author":{"gitId":"yucongkoo"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_FRIEND + WHITESPACE;","lastModifiedDate":"2023-10-17"},{"lineNumber":193,"author":{"gitId":"yucongkoo"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_FRIEND);","lastModifiedDate":"2023-10-17"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":204,"author":{"gitId":"yucongkoo"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_FRIEND, INVALID_TAG)));","lastModifiedDate":"2023-10-17"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":214,"author":{"gitId":"yucongkoo"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_FRIEND, VALID_TAG_NEIGHBOUR));","lastModifiedDate":"2023-10-17"},{"lineNumber":215,"author":{"gitId":"yucongkoo"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003c\u003e(Arrays.asList(new Tag(VALID_TAG_FRIEND), new Tag(VALID_TAG_NEIGHBOUR)));","lastModifiedDate":"2023-10-17"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":218,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":219,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":220,"author":{"gitId":"songfangyl"},"content":"    public void parseNameKeywords_validKeywords_returnsNameContainsKeywordsPredicate() throws Exception {","lastModifiedDate":"2023-10-31"},{"lineNumber":221,"author":{"gitId":"songfangyl"},"content":"        Predicate\u003cPerson\u003e actualPredicate \u003d ParserUtil.parseNameKeywords(VALID_NAME_KEYWORDS_ONE","lastModifiedDate":"2023-10-31"},{"lineNumber":222,"author":{"gitId":"songfangyl"},"content":"                + \" \" + VALID_NAME_KEYWORDS_TWO);","lastModifiedDate":"2023-10-31"},{"lineNumber":223,"author":{"gitId":"songfangyl"},"content":"        Predicate\u003cPerson\u003e expectedPredicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(","lastModifiedDate":"2023-10-31"},{"lineNumber":224,"author":{"gitId":"songfangyl"},"content":"                VALID_NAME_KEYWORDS_ONE, VALID_NAME_KEYWORDS_TWO));","lastModifiedDate":"2023-10-31"},{"lineNumber":225,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":226,"author":{"gitId":"songfangyl"},"content":"        assertEquals(expectedPredicate, actualPredicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":227,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":228,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":229,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":230,"author":{"gitId":"songfangyl"},"content":"    public void parseAddressKeywords_validKeywords_returnsAddressContainsKeywordsPredicate() throws Exception {","lastModifiedDate":"2023-10-31"},{"lineNumber":231,"author":{"gitId":"songfangyl"},"content":"        Predicate\u003cPerson\u003e actualPredicate \u003d ParserUtil.parseAddressKeywords(VALID_NAME_KEYWORDS_ONE","lastModifiedDate":"2023-10-31"},{"lineNumber":232,"author":{"gitId":"songfangyl"},"content":"                + \" \" + VALID_NAME_KEYWORDS_THREE);","lastModifiedDate":"2023-10-31"},{"lineNumber":233,"author":{"gitId":"songfangyl"},"content":"        Predicate\u003cPerson\u003e expectedPredicate \u003d new AddressContainsKeywordsPredicate(Arrays.asList(","lastModifiedDate":"2023-10-31"},{"lineNumber":234,"author":{"gitId":"songfangyl"},"content":"                VALID_NAME_KEYWORDS_ONE, VALID_NAME_KEYWORDS_THREE));","lastModifiedDate":"2023-10-31"},{"lineNumber":235,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":236,"author":{"gitId":"songfangyl"},"content":"        assertEquals(expectedPredicate, actualPredicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":237,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":238,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":239,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":240,"author":{"gitId":"songfangyl"},"content":"    public void parseEmailKeywords_validKeywords_returnsEmailContainsKeywordsPredicate() throws Exception {","lastModifiedDate":"2023-10-31"},{"lineNumber":241,"author":{"gitId":"songfangyl"},"content":"        Predicate\u003cPerson\u003e actualPredicate \u003d ParserUtil.parseEmailKeywords(VALID_NAME_KEYWORDS_THREE","lastModifiedDate":"2023-10-31"},{"lineNumber":242,"author":{"gitId":"songfangyl"},"content":"                + \" \" + VALID_NAME_KEYWORDS_TWO);","lastModifiedDate":"2023-10-31"},{"lineNumber":243,"author":{"gitId":"songfangyl"},"content":"        Predicate\u003cPerson\u003e expectedPredicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(","lastModifiedDate":"2023-10-31"},{"lineNumber":244,"author":{"gitId":"songfangyl"},"content":"                VALID_NAME_KEYWORDS_THREE, VALID_NAME_KEYWORDS_TWO));","lastModifiedDate":"2023-10-31"},{"lineNumber":245,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":246,"author":{"gitId":"songfangyl"},"content":"        assertEquals(expectedPredicate, actualPredicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":247,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":248,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":249,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":250,"author":{"gitId":"songfangyl"},"content":"    public void parseInsuranceKeywords_validKeywords_returnsInsuranceContainsKeywordsPredicate() throws Exception {","lastModifiedDate":"2023-10-31"},{"lineNumber":251,"author":{"gitId":"songfangyl"},"content":"        Predicate\u003cPerson\u003e actualPredicate \u003d ParserUtil.parseInsuranceKeywords(VALID_NAME_KEYWORDS_ONE","lastModifiedDate":"2023-10-31"},{"lineNumber":252,"author":{"gitId":"songfangyl"},"content":"                + \" \" + VALID_NAME_KEYWORDS_TWO);","lastModifiedDate":"2023-10-31"},{"lineNumber":253,"author":{"gitId":"songfangyl"},"content":"        Predicate\u003cPerson\u003e expectedPredicate \u003d new InsuranceContainsKeywordsPredicate(Arrays.asList(","lastModifiedDate":"2023-10-31"},{"lineNumber":254,"author":{"gitId":"songfangyl"},"content":"                VALID_NAME_KEYWORDS_ONE, VALID_NAME_KEYWORDS_TWO));","lastModifiedDate":"2023-10-31"},{"lineNumber":255,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":256,"author":{"gitId":"songfangyl"},"content":"        assertEquals(expectedPredicate, actualPredicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":257,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":258,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":259,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":260,"author":{"gitId":"songfangyl"},"content":"    public void parsePhoneKeywords_validKeywords_returnPhoneContainsKeywordsPredicate() throws Exception {","lastModifiedDate":"2023-10-31"},{"lineNumber":261,"author":{"gitId":"songfangyl"},"content":"        Predicate\u003cPerson\u003e actualPredicate \u003d ParserUtil.parsePhoneKeywords(VALID_NAME_KEYWORDS_ONE","lastModifiedDate":"2023-10-31"},{"lineNumber":262,"author":{"gitId":"songfangyl"},"content":"                + \" \" + VALID_NAME_KEYWORDS_THREE);","lastModifiedDate":"2023-10-31"},{"lineNumber":263,"author":{"gitId":"songfangyl"},"content":"        Predicate\u003cPerson\u003e expectedPredicate \u003d new PhoneContainsKeywordsPredicate(Arrays.asList(","lastModifiedDate":"2023-10-31"},{"lineNumber":264,"author":{"gitId":"songfangyl"},"content":"                VALID_NAME_KEYWORDS_ONE, VALID_NAME_KEYWORDS_THREE));","lastModifiedDate":"2023-10-31"},{"lineNumber":265,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":266,"author":{"gitId":"songfangyl"},"content":"        assertEquals(expectedPredicate, actualPredicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":267,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":268,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":269,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":270,"author":{"gitId":"songfangyl"},"content":"    public void parseTagKeywords_validKeywords_returnsPriorityContainsKeywordsPredicate() throws Exception {","lastModifiedDate":"2023-10-31"},{"lineNumber":271,"author":{"gitId":"songfangyl"},"content":"        Predicate\u003cPerson\u003e actualPredicate \u003d ParserUtil.parsePriorityKeywords(VALID_NAME_KEYWORDS_THREE","lastModifiedDate":"2023-10-31"},{"lineNumber":272,"author":{"gitId":"songfangyl"},"content":"                + \" \" + VALID_NAME_KEYWORDS_TWO);","lastModifiedDate":"2023-10-31"},{"lineNumber":273,"author":{"gitId":"songfangyl"},"content":"        Predicate\u003cPerson\u003e expectedPredicate \u003d new PriorityContainsKeywordsPredicate(Arrays.asList(","lastModifiedDate":"2023-10-31"},{"lineNumber":274,"author":{"gitId":"songfangyl"},"content":"                VALID_NAME_KEYWORDS_THREE, VALID_NAME_KEYWORDS_TWO));","lastModifiedDate":"2023-10-31"},{"lineNumber":275,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":276,"author":{"gitId":"songfangyl"},"content":"        assertEquals(expectedPredicate, actualPredicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":277,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":278,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":279,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":280,"author":{"gitId":"songfangyl"},"content":"    public void parseRemarkKeywords_validKeywords_returnsRemarkContainsKeywordsPredicate() throws Exception {","lastModifiedDate":"2023-10-31"},{"lineNumber":281,"author":{"gitId":"songfangyl"},"content":"        Predicate\u003cPerson\u003e actualPredicate \u003d ParserUtil.parseRemarkKeywords(VALID_NAME_KEYWORDS_THREE","lastModifiedDate":"2023-10-31"},{"lineNumber":282,"author":{"gitId":"songfangyl"},"content":"                + \" \" + VALID_NAME_KEYWORDS_TWO);","lastModifiedDate":"2023-10-31"},{"lineNumber":283,"author":{"gitId":"songfangyl"},"content":"        Predicate\u003cPerson\u003e expectedPredicate \u003d new RemarkContainsKeywordsPredicate(Arrays.asList(","lastModifiedDate":"2023-10-31"},{"lineNumber":284,"author":{"gitId":"songfangyl"},"content":"                VALID_NAME_KEYWORDS_THREE, VALID_NAME_KEYWORDS_TWO));","lastModifiedDate":"2023-10-31"},{"lineNumber":285,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":286,"author":{"gitId":"songfangyl"},"content":"        assertEquals(expectedPredicate, actualPredicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":287,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":288,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":289,"author":{"gitId":"songfangyl"},"content":"    public void parsePriorityKeywords_validKeywords_returnsTagContainsKeywordsPredicate() throws Exception {","lastModifiedDate":"2023-10-31"},{"lineNumber":290,"author":{"gitId":"songfangyl"},"content":"        Predicate\u003cPerson\u003e actualPredicate \u003d ParserUtil.parseTagKeywords(VALID_NAME_KEYWORDS_ONE","lastModifiedDate":"2023-10-31"},{"lineNumber":291,"author":{"gitId":"songfangyl"},"content":"                + \" \" + VALID_NAME_KEYWORDS_TWO);","lastModifiedDate":"2023-10-31"},{"lineNumber":292,"author":{"gitId":"songfangyl"},"content":"        Predicate\u003cPerson\u003e expectedPredicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(","lastModifiedDate":"2023-10-31"},{"lineNumber":293,"author":{"gitId":"songfangyl"},"content":"                VALID_NAME_KEYWORDS_ONE, VALID_NAME_KEYWORDS_TWO));","lastModifiedDate":"2023-10-31"},{"lineNumber":294,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":295,"author":{"gitId":"songfangyl"},"content":"        assertEquals(expectedPredicate, actualPredicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":296,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":297,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":298,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"TehOPanas":1,"songfangyl":93,"yucongkoo":30,"-":174}},{"path":"src/test/java/seedu/address/logic/parser/PriorityCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LamJiuFong"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PRIORITY;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PRIORITY2;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PRIORITY3;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRIORITY_HIGH;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRIORITY_NONE;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.model.priority.Priority.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"LamJiuFong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.logic.commands.PriorityCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.priority.Priority;","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"LamJiuFong"},"content":"public class PriorityCommandParserTest {","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"LamJiuFong"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"LamJiuFong"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, PriorityCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"LamJiuFong"},"content":"    private final Parser\u003cPriorityCommand\u003e parser \u003d new PriorityCommandParser();","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"LamJiuFong"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"LamJiuFong"},"content":"        // no index specified","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, VALID_PRIORITY_HIGH, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"LamJiuFong"},"content":"        // no field specified","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, \"1\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"LamJiuFong"},"content":"        // no index and no field specified","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"LamJiuFong"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"LamJiuFong"},"content":"        // negative index","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, \"-5\" + VALID_PRIORITY_HIGH, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"LamJiuFong"},"content":"        // zero index","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, \"0\" + VALID_PRIORITY_HIGH, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"LamJiuFong"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, \"one\" + VALID_PRIORITY_HIGH, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"LamJiuFong"},"content":"    public void parse_invalidPriority_failure() {","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, \"1 \" + INVALID_PRIORITY, MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, \"1 \" + INVALID_PRIORITY2, MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"LamJiuFong"},"content":"        assertParseFailure(parser, \"1 \" + INVALID_PRIORITY3, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"LamJiuFong"},"content":"    public void parse_validFields_success() {","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"LamJiuFong"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"LamJiuFong"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + VALID_PRIORITY_HIGH;","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"LamJiuFong"},"content":"        Priority highPriority \u003d new Priority(Priority.HIGH_PRIORITY_KEYWORD);","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"LamJiuFong"},"content":"        assertParseSuccess(parser, userInput, new PriorityCommand(targetIndex, highPriority));","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"LamJiuFong"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \" + VALID_PRIORITY_NONE;","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"LamJiuFong"},"content":"        Priority nonePriority \u003d new Priority(Priority.NONE_PRIORITY_KEYWORD);","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"LamJiuFong"},"content":"        assertParseSuccess(parser, userInput, new PriorityCommand(targetIndex, nonePriority));","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"LamJiuFong"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"LamJiuFong":68}},{"path":"src/test/java/seedu/address/logic/parser/RemarkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_REMARK_DESC;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.model.person.Remark.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"public class RemarkCommandParserTest {","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemarkCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"    private static final String REMARK_STUB \u003d \"Some remarks.\";","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"    private final Parser\u003cRemarkCommand\u003e parser \u003d new RemarkCommandParser();","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"        // no index specified","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"        assertParseFailure(parser, REMARK_STUB, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"        // no index and no field specified","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"        // negative index","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"        assertParseFailure(parser, \"-1\" + REMARK_STUB, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"songfangyl"},"content":"        // zero index","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"songfangyl"},"content":"        assertParseFailure(parser, \"0\" + REMARK_STUB, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"songfangyl"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"songfangyl"},"content":"        assertParseFailure(parser, \"second\" + REMARK_STUB, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"songfangyl"},"content":"    public void parse_invalidRemark_failure() {","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"songfangyl"},"content":"        assertParseFailure(parser, \"1 \" + INVALID_REMARK_DESC, MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"songfangyl"},"content":"    public void parse_validFields_success() {","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"songfangyl"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"songfangyl"},"content":"        // Add/update remark.","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"songfangyl"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + REMARK_STUB;","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"songfangyl"},"content":"        RemarkCommand expectedRemarkCommand \u003d new RemarkCommand(targetIndex, new Remark(REMARK_STUB));","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"songfangyl"},"content":"        assertParseSuccess(parser, userInput, expectedRemarkCommand);","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"songfangyl"},"content":"        // Delete remark","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"songfangyl"},"content":"        userInput \u003d targetIndex.getOneBased() + \"\";","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"songfangyl"},"content":"        expectedRemarkCommand \u003d new RemarkCommand(targetIndex, new Remark(\"\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"songfangyl"},"content":"        assertParseSuccess(parser, userInput, expectedRemarkCommand);","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"songfangyl":63}},{"path":"src/test/java/seedu/address/logic/parser/TagCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADD_TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DELETE_TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADD_TAG_DESC;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DELETE_TAG_DESC;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_TAG;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DELETE_TAG;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.logic.commands.TagCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.logic.commands.TagCommand.UpdatePersonTagsDescriptor;","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.testutil.UpdatePersonTagsDescriptorBuilder;","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"public class TagCommandParserTest {","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, TagCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"    private TagCommandParser parser \u003d new TagCommandParser();","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"    private Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"    public void parse_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"        assertThrows(NullPointerException.class, () -\u003e parser.parse(null));","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"    public void parse_onlyAddOneTag_success() {","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"        UpdatePersonTagsDescriptor descriptor \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"                new UpdatePersonTagsDescriptorBuilder().withTagsToAdd(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"        Command expectedCommand \u003d new TagCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"        String userInput \u003d String.format(\"%d %s\",","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"                targetIndex.getOneBased(),","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"yucongkoo"},"content":"                PREFIX_ADD_TAG + VALID_TAG_FRIEND);","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"yucongkoo"},"content":"    public void parse_onlyAddMultipleTags_success() {","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"yucongkoo"},"content":"        UpdatePersonTagsDescriptor descriptor \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"yucongkoo"},"content":"                new UpdatePersonTagsDescriptorBuilder().withTagsToAdd(VALID_TAG_FRIEND, VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"yucongkoo"},"content":"        Command expectedCommand \u003d new TagCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"yucongkoo"},"content":"        String userInput \u003d String.format(\"%d %s %s\",","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"yucongkoo"},"content":"                targetIndex.getOneBased(),","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"yucongkoo"},"content":"                PREFIX_ADD_TAG + VALID_TAG_FRIEND,","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"yucongkoo"},"content":"                PREFIX_ADD_TAG + VALID_TAG_HUSBAND);","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"yucongkoo"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"yucongkoo"},"content":"    public void parse_onlyDeleteOneTag_success() {","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"yucongkoo"},"content":"        UpdatePersonTagsDescriptor descriptor \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"yucongkoo"},"content":"                new UpdatePersonTagsDescriptorBuilder().withTagsToDelete(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"yucongkoo"},"content":"        Command expectedCommand \u003d new TagCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"yucongkoo"},"content":"        String userInput \u003d String.format(\"%d %s\",","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"yucongkoo"},"content":"                targetIndex.getOneBased(),","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"yucongkoo"},"content":"                PREFIX_DELETE_TAG + VALID_TAG_FRIEND);","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"yucongkoo"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"yucongkoo"},"content":"    public void parse_onlyDeleteTag_success() {","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"yucongkoo"},"content":"        UpdatePersonTagsDescriptor descriptor \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"yucongkoo"},"content":"                new UpdatePersonTagsDescriptorBuilder().withTagsToDelete(VALID_TAG_FRIEND, VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"yucongkoo"},"content":"        Command expectedCommand \u003d new TagCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"yucongkoo"},"content":"        String userInput \u003d String.format(\"%d %s %s\",","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"yucongkoo"},"content":"                targetIndex.getOneBased(),","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"yucongkoo"},"content":"                PREFIX_DELETE_TAG + VALID_TAG_FRIEND,","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"yucongkoo"},"content":"                PREFIX_DELETE_TAG + VALID_TAG_HUSBAND);","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"yucongkoo"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"yucongkoo"},"content":"    public void parse_bothAddAndDeleteTags_success() {","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"yucongkoo"},"content":"        UpdatePersonTagsDescriptor descriptor \u003d new UpdatePersonTagsDescriptorBuilder()","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"yucongkoo"},"content":"                .withTagsToAdd(VALID_TAG_FRIEND).withTagsToDelete(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"yucongkoo"},"content":"        Command expectedCommand \u003d new TagCommand(targetIndex, descriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":93,"author":{"gitId":"yucongkoo"},"content":"        String userInput \u003d String.format(\"%d %s %s\",","lastModifiedDate":"2023-10-17"},{"lineNumber":94,"author":{"gitId":"yucongkoo"},"content":"                targetIndex.getOneBased(),","lastModifiedDate":"2023-10-17"},{"lineNumber":95,"author":{"gitId":"yucongkoo"},"content":"                PREFIX_ADD_TAG + VALID_TAG_FRIEND,","lastModifiedDate":"2023-10-17"},{"lineNumber":96,"author":{"gitId":"yucongkoo"},"content":"                PREFIX_DELETE_TAG + VALID_TAG_HUSBAND);","lastModifiedDate":"2023-10-17"},{"lineNumber":97,"author":{"gitId":"yucongkoo"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"yucongkoo"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"yucongkoo"},"content":"        // no index specified","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"yucongkoo"},"content":"        assertParseFailure(parser, ADD_TAG_DESC_FRIEND, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":105,"author":{"gitId":"yucongkoo"},"content":"        // no field specified","lastModifiedDate":"2023-10-17"},{"lineNumber":106,"author":{"gitId":"yucongkoo"},"content":"        assertParseFailure(parser, \"1\", TagCommand.MESSAGE_NOT_UPDATED);","lastModifiedDate":"2023-10-17"},{"lineNumber":107,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":108,"author":{"gitId":"yucongkoo"},"content":"        // no index and field specified","lastModifiedDate":"2023-10-17"},{"lineNumber":109,"author":{"gitId":"yucongkoo"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-17"},{"lineNumber":110,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":111,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":112,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":113,"author":{"gitId":"yucongkoo"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"yucongkoo"},"content":"        // negative index","lastModifiedDate":"2023-10-17"},{"lineNumber":115,"author":{"gitId":"yucongkoo"},"content":"        assertParseFailure(parser, \"-5\" + ADD_TAG_DESC_FRIEND, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-17"},{"lineNumber":116,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":117,"author":{"gitId":"yucongkoo"},"content":"        // zero index","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"yucongkoo"},"content":"        assertParseFailure(parser, \"0\" + ADD_TAG_DESC_FRIEND, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"yucongkoo"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"yucongkoo"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"yucongkoo"},"content":"        assertParseFailure(parser, \"random string 1\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"yucongkoo"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"yucongkoo"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-10-17"},{"lineNumber":126,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":127,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":128,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":129,"author":{"gitId":"yucongkoo"},"content":"    public void parse_invalidValues_failure() {","lastModifiedDate":"2023-10-17"},{"lineNumber":130,"author":{"gitId":"yucongkoo"},"content":"        // invalid tag in add tag","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"yucongkoo"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADD_TAG_DESC, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":132,"author":{"gitId":"yucongkoo"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-17"},{"lineNumber":133,"author":{"gitId":"yucongkoo"},"content":"                \"1\" + INVALID_ADD_TAG_DESC + DELETE_TAG_DESC_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"yucongkoo"},"content":"        // invalid tag in delete tag","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"yucongkoo"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DELETE_TAG_DESC, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"yucongkoo"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"yucongkoo"},"content":"                \"1\" + ADD_TAG_DESC_FRIEND + INVALID_DELETE_TAG_DESC, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"yucongkoo"},"content":"        // both invalid values","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"yucongkoo"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"yucongkoo"},"content":"                \"1\" + INVALID_ADD_TAG_DESC + INVALID_DELETE_TAG_DESC, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-17"},{"lineNumber":143,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":144,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"yucongkoo":144}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.predicate.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"songfangyl":1,"-":131}},{"path":"src/test/java/seedu/address/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"    private String validAddress \u003d \"some valid address\";","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"    private String invalidAddress \u003d PersonTestUtil.generateStringOfLength(Address.MAX_LENGTH + 1);","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"    public void createAddress_nullValue_throwsNullPointerException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.createAddress(null));","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"    public void createAddress_validAddress_returnsNonEmptyAddress() {","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(new NonEmptyAddress(validAddress), Address.createAddress(validAddress));","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"    public void createAddress_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Address.createAddress(invalidAddress));","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"    public void createAddress_emptyString_returnsEmptyAddress() {","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(EmptyAddress.getEmptyAddress(), Address.createAddress(\"\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"    public void isValidAddress_emptyString_returnsTrue() {","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"        assertTrue(Address.isValidAddress(\"\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"        assertTrue(Address.isValidAddress(\"  \"));","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"    public void isValidAddress_nonEmptyValidString_returnsTrue() {","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"        assertTrue(Address.isValidAddress(validAddress));","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"    public void isValidAddress_invalidString_returnsFalse() {","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"yucongkoo"},"content":"        assertFalse(Address.isValidAddress(invalidAddress));","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":51,"author":{"gitId":"yucongkoo"},"content":"    public void isEmptyAddress() {","lastModifiedDate":"2023-10-08"},{"lineNumber":52,"author":{"gitId":"yucongkoo"},"content":"        // empty address","lastModifiedDate":"2023-10-08"},{"lineNumber":53,"author":{"gitId":"yucongkoo"},"content":"        assertTrue(EmptyAddress.getEmptyAddress().isEmptyAddress());","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":55,"author":{"gitId":"yucongkoo"},"content":"        // non-empty address","lastModifiedDate":"2023-10-08"},{"lineNumber":56,"author":{"gitId":"yucongkoo"},"content":"        assertFalse(Address.createAddress(\"Some address\").isEmptyAddress());","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":58,"author":{"gitId":"yucongkoo"},"content":"        // address with empty value","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"yucongkoo"},"content":"        assertTrue(Address.createAddress(EmptyAddress.DUMMY_VALUE_FOR_EMPTY_ADDRESS).isEmptyAddress());","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":61,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"yucongkoo"},"content":"    public void getValue() {","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"yucongkoo"},"content":"        // empty address","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"yucongkoo"},"content":"        Address emptyAddress \u003d EmptyAddress.getEmptyAddress();","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(EmptyAddress.DUMMY_VALUE_FOR_EMPTY_ADDRESS, emptyAddress.getValue());","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"yucongkoo"},"content":"        // non-empty address","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"yucongkoo"},"content":"        Address nonEmptyAddress \u003d new NonEmptyAddress(\"Some address\");","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(\"Some address\", nonEmptyAddress.getValue());","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"yucongkoo":43,"-":29}},{"path":"src/test/java/seedu/address/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exa..mple.com\")); // domain part has two consecutive periods","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than 2 chars","lastModifiedDate":"2023-10-11"},{"lineNumber":52,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.computer\")); // top level domain has more than 7 chars","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.123\")); // top level domain has numbers","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.*-/+\")); // top level domain has special characters","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(Email.isValidEmail(\"test@localhost\")); // alphabets only, no top level domain","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(Email.isValidEmail(\"123@145\")); // numeric local part and domain name with no top level domain","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"TehOPanas"},"content":"        assertTrue(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2023-10-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":68,"author":{"gitId":"TehOPanas"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack\u00261190@example.com\")); // \u0027\u0026\u0027 symbol in local part","lastModifiedDate":"2023-10-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":70,"author":{"gitId":"TehOPanas"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack1190@exam-ple.com\")); // hyphen in domain part","lastModifiedDate":"2023-10-11"},{"lineNumber":71,"author":{"gitId":"TehOPanas"},"content":"        assertTrue(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2023-10-11"},{"lineNumber":72,"author":{"gitId":"TehOPanas"},"content":"        assertTrue(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2023-10-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"TehOPanas"},"content":"        Email email \u003d new Email(\"valid@email.com\");","lastModifiedDate":"2023-10-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"TehOPanas"},"content":"        assertTrue(email.equals(new Email(\"valid@email.com\")));","lastModifiedDate":"2023-10-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(email));","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(email.equals(new Email(\"other.valid@email.com\")));","lastModifiedDate":"2023-10-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"TehOPanas":20,"-":78}},{"path":"src/test/java/seedu/address/model/person/EmptyAddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"public class EmptyAddressTest {","lastModifiedDate":"2023-10-08"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"    public void equals() {","lastModifiedDate":"2023-10-08"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"        Address emptyAddress \u003d EmptyAddress.getEmptyAddress();","lastModifiedDate":"2023-10-21"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"        // empty address -\u003e returns true","lastModifiedDate":"2023-10-08"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"        assertTrue(emptyAddress.equals(EmptyAddress.getEmptyAddress()));","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"        assertTrue(emptyAddress.equals(emptyAddress));","lastModifiedDate":"2023-10-08"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-08"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"        assertFalse(emptyAddress.equals(null));","lastModifiedDate":"2023-10-08"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-08"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"        assertFalse(emptyAddress.equals(5.0f));","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"        // non-empty address with different value -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"        assertFalse(emptyAddress.equals(new NonEmptyAddress(\"Other Valid Address\")));","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"        // non-empty address with same value -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"        assertTrue(emptyAddress.equals(Address.createAddress(EmptyAddress.DUMMY_VALUE_FOR_EMPTY_ADDRESS)));","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-08"}],"authorContributionMap":{"yucongkoo":31}},{"path":"src/test/java/seedu/address/model/person/InsuranceTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TehOPanas"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"TehOPanas"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"TehOPanas"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"TehOPanas"},"content":"import static seedu.address.model.insurance.Insurance.isValidInsuranceName;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"TehOPanas"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"TehOPanas"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"TehOPanas"},"content":"import seedu.address.model.insurance.Insurance;","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"TehOPanas"},"content":"public class InsuranceTest {","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"TehOPanas"},"content":"    private String invalidArgument \u003d \"  \";","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"TehOPanas"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"TehOPanas"},"content":"    public void constructor_nullArgument_throwsNullPointerException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"TehOPanas"},"content":"        assertThrows(NullPointerException.class, ()-\u003e new Insurance(null));","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"TehOPanas"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"TehOPanas"},"content":"    public void constructor_invalidArgument_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"TehOPanas"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Insurance(invalidArgument));","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"TehOPanas"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"TehOPanas"},"content":"    public void isValidInsuranceName_validName_success() {","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"TehOPanas"},"content":"        // alphabets below 32 characters","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"TehOPanas"},"content":"        assertTrue(isValidInsuranceName(\"abcdef\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"TehOPanas"},"content":"        // alphabets below 32 characters with space","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"TehOPanas"},"content":"        assertTrue(isValidInsuranceName(\"abc def\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"TehOPanas"},"content":"        // alphabets and numbers below 32 characters","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"TehOPanas"},"content":"        assertTrue(isValidInsuranceName(\"abcdef123456\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"TehOPanas"},"content":"        // alphabets and numbers with spaces below 32 characters","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"TehOPanas"},"content":"        assertTrue(isValidInsuranceName(\"abcdef 123456\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"TehOPanas"},"content":"        // exactly 32 characters","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"TehOPanas"},"content":"        assertTrue(isValidInsuranceName(\"1245678901234567890123456789012\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"TehOPanas"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"TehOPanas"},"content":"    public void isValidInsuranceName_nullValue_throwsNullPointerException() {","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"TehOPanas"},"content":"        assertThrows(NullPointerException.class, ()-\u003e isValidInsuranceName(null));","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"TehOPanas"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"TehOPanas"},"content":"    public void isValidInsuranceName_invalidName_fail() {","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"TehOPanas"},"content":"        // empty string","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(isValidInsuranceName(\"\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"TehOPanas"},"content":"        // empty spaces","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(isValidInsuranceName(\"  \"));","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"TehOPanas"},"content":"        // symbols only below 32 characters","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(isValidInsuranceName(\"/*-+\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"TehOPanas"},"content":"        // symbols and alphabets below 32 characters","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(isValidInsuranceName(\"abcdef/*-+\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"TehOPanas"},"content":"        // symbols and numbers below 32 characters","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(isValidInsuranceName(\"123456/*-+\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"TehOPanas"},"content":"        // symbols, alphabets, numbers under 32 characters","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(isValidInsuranceName(\"abcdef12345/*-+\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"TehOPanas"},"content":"        // numbers exceeding 32 characters","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(isValidInsuranceName(\"123456789012345678901234567890123456789\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"TehOPanas"},"content":"        // alphabets exceeding 32 characters","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(isValidInsuranceName(\"zxcvbnmasdfghjklqwertyuiopxcvbnmasdfghjkl\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"TehOPanas"},"content":"        // alphabets and numbers with spaces exceeding 32 characters","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(isValidInsuranceName(\"xcvbnm asdfghjk qwertyuio 123456789 plmijn\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":78,"author":{"gitId":"TehOPanas"},"content":"        // symbols exceeding 32 characters","lastModifiedDate":"2023-10-30"},{"lineNumber":79,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(isValidInsuranceName(\"/*/*-/*- /*-/*/*- /*-/*-/*- -+-+-+-+-+-+-+-+-+-!@#$%^\u0026*!@#$%^\u0026*\"));","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":81,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"TehOPanas"},"content":"    @Test","lastModifiedDate":"2023-10-30"},{"lineNumber":83,"author":{"gitId":"TehOPanas"},"content":"    public void equals() {","lastModifiedDate":"2023-10-30"},{"lineNumber":84,"author":{"gitId":"TehOPanas"},"content":"        Insurance carInsurance \u003d new Insurance(\"car insurance\");","lastModifiedDate":"2023-10-30"},{"lineNumber":85,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":86,"author":{"gitId":"TehOPanas"},"content":"        Insurance newCarInsurance \u003d new Insurance(\"car insurance\");","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":88,"author":{"gitId":"TehOPanas"},"content":"        Insurance healthInsurance \u003d new Insurance(\"health insurance\");","lastModifiedDate":"2023-10-30"},{"lineNumber":89,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":90,"author":{"gitId":"TehOPanas"},"content":"        // same object","lastModifiedDate":"2023-10-30"},{"lineNumber":91,"author":{"gitId":"TehOPanas"},"content":"        assertTrue(carInsurance.equals(carInsurance));","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":93,"author":{"gitId":"TehOPanas"},"content":"        // same name","lastModifiedDate":"2023-10-30"},{"lineNumber":94,"author":{"gitId":"TehOPanas"},"content":"        assertTrue(carInsurance.equals(newCarInsurance));","lastModifiedDate":"2023-10-30"},{"lineNumber":95,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":96,"author":{"gitId":"TehOPanas"},"content":"        // null value","lastModifiedDate":"2023-10-30"},{"lineNumber":97,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(carInsurance.equals(null));","lastModifiedDate":"2023-10-30"},{"lineNumber":98,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":99,"author":{"gitId":"TehOPanas"},"content":"        // different object type","lastModifiedDate":"2023-10-30"},{"lineNumber":100,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(carInsurance.equals(0.5f));","lastModifiedDate":"2023-10-30"},{"lineNumber":101,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":102,"author":{"gitId":"TehOPanas"},"content":"        // different name","lastModifiedDate":"2023-10-30"},{"lineNumber":103,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(carInsurance.equals(healthInsurance));","lastModifiedDate":"2023-10-30"},{"lineNumber":104,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":105,"author":{"gitId":"TehOPanas"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":106,"author":{"gitId":"TehOPanas"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"TehOPanas":106}},{"path":"src/test/java/seedu/address/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters and shorter than 64 characters","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(Name.isValidName(\"Haliphibourous Maximilian Hippopotolosoto; \"","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"TehOPanas"},"content":"                + \"Eater of The Five Golden Suns, \"","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"TehOPanas"},"content":"                + \"Son of the Great Sultan Kolosomonomia\")); //name longer than 64 characters and special characters","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(Name.isValidName(\"Haliphibourous Maximilian Hippopotolosoto \"","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"TehOPanas"},"content":"                + \"Eater of The Five Golden Suns \"","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"TehOPanas"},"content":"                + \"Son of the Great Sultan Kolosomonomia\")); //name longer than 64 characters and no special characters","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":44,"author":{"gitId":"TehOPanas"},"content":"        assertTrue(Name.isValidName(\"SPONGEBOB\")); // only capital letters","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"TehOPanas"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names shorter than 64 characters","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Name name \u003d new Name(\"Valid Name\");","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(new Name(\"Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(new Name(\"Other Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"TehOPanas":9,"-":58}},{"path":"src/test/java/seedu/address/model/person/NonEmptyAddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"public class NonEmptyAddressTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"        assertThrows(NullPointerException.class, () -\u003e new NonEmptyAddress(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new NonEmptyAddress(invalidAddress));","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"    public void equals() {","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"        Address address \u003d new NonEmptyAddress(\"Valid Address\");","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"        assertTrue(address.equals(new NonEmptyAddress(\"Valid Address\")));","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"        assertTrue(address.equals(address));","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"        assertFalse(address.equals(null));","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"        assertFalse(address.equals(5.0f));","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"        assertFalse(address.equals(new NonEmptyAddress(\"Other Valid Address\")));","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"        // empty address -\u003e returns false","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"        assertFalse(address.equals(EmptyAddress.getEmptyAddress()));","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"yucongkoo":45}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_BOB;","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_TIME_BOB;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_VENUE_BOB;","lastModifiedDate":"2023-11-01"},{"lineNumber":10,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-11-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_INSURANCE_CAR;","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-11-01"},{"lineNumber":14,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-11-01"},{"lineNumber":16,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRIORITY_HIGH;","lastModifiedDate":"2023-11-01"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRIORITY_LOW;","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRIORITY_NONE;","lastModifiedDate":"2023-11-01"},{"lineNumber":19,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2023-11-01"},{"lineNumber":20,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-11-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-11-01"},{"lineNumber":23,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.model.person.Person.createPersonWithUpdatedPriority;","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.model.person.Person.createPersonWithUpdatedTags;","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-11-01"},{"lineNumber":27,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2023-11-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-11-01"},{"lineNumber":29,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.testutil.TypicalPersons.DERRICK;","lastModifiedDate":"2023-11-01"},{"lineNumber":30,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.testutil.TypicalPersons.INITIAL_COUNT;","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":37,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.insurance.Insurance;","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.priority.Priority;","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":42,"author":{"gitId":"Jweewee"},"content":"    // dummy persons used for testing","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"Jweewee"},"content":"    private Person bobWithoutTags \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"Jweewee"},"content":"            .withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"Jweewee"},"content":"    private Person bobWithFriendTag \u003d new PersonBuilder(bobWithoutTags).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"Jweewee"},"content":"    private Person bobWithHusbandTag \u003d new PersonBuilder(bobWithoutTags).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"Jweewee"},"content":"    private Person bobWithHusbandAndFriendTag \u003d new PersonBuilder(bobWithoutTags)","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"Jweewee"},"content":"            .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"Jweewee"},"content":"    private Set\u003cTag\u003e friendTagSet \u003d Set.of(new Tag(VALID_TAG_FRIEND));","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"Jweewee"},"content":"    private Set\u003cTag\u003e husbandTagSet \u003d Set.of(new Tag(VALID_TAG_HUSBAND));","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"Jweewee"},"content":"    private Set\u003cTag\u003e husbandAndFriendTagset \u003d Set.of(new Tag(VALID_TAG_FRIEND), new Tag(VALID_TAG_HUSBAND));","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"Jweewee"},"content":"    private Set\u003cTag\u003e emptyTagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"Jweewee"},"content":"    public void constructor_oneNullFieldWithPriority_throwsNullPointerException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"LamJiuFong"},"content":"        Name validName \u003d new Name(VALID_NAME_BOB);","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"LamJiuFong"},"content":"        Phone validPhone \u003d new Phone(VALID_PHONE_BOB);","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"LamJiuFong"},"content":"        Email validEmail \u003d new Email(VALID_EMAIL_BOB);","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"LamJiuFong"},"content":"        Address validAddress \u003d new NonEmptyAddress(VALID_ADDRESS_BOB);","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"songfangyl"},"content":"        Remark validRemark \u003d new Remark(VALID_REMARK_AMY);","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"LamJiuFong"},"content":"        Set\u003cTag\u003e validTags \u003d new HashSet\u003c\u003e() {{","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"LamJiuFong"},"content":"                add(new Tag(VALID_TAG_FRIEND));","lastModifiedDate":"2023-10-23"},{"lineNumber":72,"author":{"gitId":"LamJiuFong"},"content":"            }};","lastModifiedDate":"2023-10-23"},{"lineNumber":73,"author":{"gitId":"Jweewee"},"content":"        Set\u003cInsurance\u003e validInsurances \u003d new HashSet\u003c\u003e() {{","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"Jweewee"},"content":"                add(new Insurance(VALID_INSURANCE_CAR));","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"Jweewee"},"content":"            }};","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"LamJiuFong"},"content":"        Priority validPriority \u003d new Priority(VALID_PRIORITY_HIGH);","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"Jweewee"},"content":"        Appointment validAppointment \u003d new Appointment(VALID_APPOINTMENT_BOB,","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"Jweewee"},"content":"                VALID_APPOINTMENT_TIME_BOB, VALID_APPOINTMENT_VENUE_BOB);","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"Jweewee"},"content":"        AppointmentCount validAppointmentCount \u003d new AppointmentCount(INITIAL_COUNT);","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":81,"author":{"gitId":"LamJiuFong"},"content":"        // with priority field","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"LamJiuFong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Person(null, validPhone, validEmail, validAddress,","lastModifiedDate":"2023-10-23"},{"lineNumber":83,"author":{"gitId":"Jweewee"},"content":"                validRemark, validTags, validInsurances, validAppointment, validAppointmentCount, validPriority));","lastModifiedDate":"2023-11-01"},{"lineNumber":84,"author":{"gitId":"LamJiuFong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Person(validName, null, validEmail, validAddress,","lastModifiedDate":"2023-10-23"},{"lineNumber":85,"author":{"gitId":"Jweewee"},"content":"                validRemark, validTags, validInsurances, validAppointment, validAppointmentCount, validPriority));","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"LamJiuFong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Person(validName, validPhone, null, validAddress,","lastModifiedDate":"2023-10-23"},{"lineNumber":87,"author":{"gitId":"Jweewee"},"content":"                validRemark, validTags, validInsurances, validAppointment, validAppointmentCount, validPriority));","lastModifiedDate":"2023-11-01"},{"lineNumber":88,"author":{"gitId":"LamJiuFong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Person(validName, validPhone, validEmail, null,","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"Jweewee"},"content":"                validRemark, validTags, validInsurances, validAppointment, validAppointmentCount, validPriority));","lastModifiedDate":"2023-11-01"},{"lineNumber":90,"author":{"gitId":"LamJiuFong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Person(validName, validPhone, validEmail, validAddress,","lastModifiedDate":"2023-10-23"},{"lineNumber":91,"author":{"gitId":"Jweewee"},"content":"                null, validTags, validInsurances, validAppointment, validAppointmentCount, validPriority));","lastModifiedDate":"2023-11-01"},{"lineNumber":92,"author":{"gitId":"LamJiuFong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Person(validName, validPhone, validEmail, validAddress,","lastModifiedDate":"2023-10-23"},{"lineNumber":93,"author":{"gitId":"Jweewee"},"content":"                validRemark, null, validInsurances, validAppointment, validAppointmentCount, validPriority));","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"songfangyl"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Person(validName, validPhone, validEmail, validAddress,","lastModifiedDate":"2023-10-25"},{"lineNumber":95,"author":{"gitId":"Jweewee"},"content":"                validRemark, validTags, null, validAppointment, validAppointmentCount, validPriority));","lastModifiedDate":"2023-11-01"},{"lineNumber":96,"author":{"gitId":"Jweewee"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Person(validName, validPhone, validEmail, validAddress,","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"Jweewee"},"content":"                validRemark, validTags, validInsurances, validAppointment, validAppointmentCount, null));","lastModifiedDate":"2023-11-01"},{"lineNumber":98,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"Jweewee"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"Jweewee"},"content":"    public void constructor_oneNullFieldWithoutPriority_throwsNullPointerException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"Jweewee"},"content":"        Name validName \u003d new Name(VALID_NAME_BOB);","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"Jweewee"},"content":"        Phone validPhone \u003d new Phone(VALID_PHONE_BOB);","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"Jweewee"},"content":"        Email validEmail \u003d new Email(VALID_EMAIL_BOB);","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"Jweewee"},"content":"        Address validAddress \u003d new NonEmptyAddress(VALID_ADDRESS_BOB);","lastModifiedDate":"2023-10-31"},{"lineNumber":106,"author":{"gitId":"Jweewee"},"content":"        Remark validRemark \u003d new Remark(VALID_REMARK_AMY);","lastModifiedDate":"2023-10-31"},{"lineNumber":107,"author":{"gitId":"Jweewee"},"content":"        Set\u003cTag\u003e validTags \u003d new HashSet\u003c\u003e() {","lastModifiedDate":"2023-10-31"},{"lineNumber":108,"author":{"gitId":"Jweewee"},"content":"            {","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"Jweewee"},"content":"                add(new Tag(VALID_TAG_FRIEND));","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"Jweewee"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":111,"author":{"gitId":"Jweewee"},"content":"        };","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"Jweewee"},"content":"        Set\u003cInsurance\u003e validInsurances \u003d new HashSet\u003c\u003e() {","lastModifiedDate":"2023-10-31"},{"lineNumber":113,"author":{"gitId":"Jweewee"},"content":"            {","lastModifiedDate":"2023-10-31"},{"lineNumber":114,"author":{"gitId":"Jweewee"},"content":"                add(new Insurance(VALID_INSURANCE_CAR));","lastModifiedDate":"2023-10-31"},{"lineNumber":115,"author":{"gitId":"Jweewee"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":116,"author":{"gitId":"Jweewee"},"content":"        };","lastModifiedDate":"2023-10-31"},{"lineNumber":117,"author":{"gitId":"Jweewee"},"content":"        Appointment validAppointment \u003d new Appointment(VALID_APPOINTMENT_BOB,","lastModifiedDate":"2023-11-01"},{"lineNumber":118,"author":{"gitId":"Jweewee"},"content":"                VALID_APPOINTMENT_TIME_BOB, VALID_APPOINTMENT_VENUE_BOB);","lastModifiedDate":"2023-11-01"},{"lineNumber":119,"author":{"gitId":"Jweewee"},"content":"        AppointmentCount validAppointmentCount \u003d new AppointmentCount(INITIAL_COUNT);","lastModifiedDate":"2023-11-01"},{"lineNumber":120,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":121,"author":{"gitId":"LamJiuFong"},"content":"        // without priority field","lastModifiedDate":"2023-10-23"},{"lineNumber":122,"author":{"gitId":"LamJiuFong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Person(null, validPhone, validEmail, validAddress,","lastModifiedDate":"2023-10-23"},{"lineNumber":123,"author":{"gitId":"Jweewee"},"content":"                validRemark, validTags, validInsurances, validAppointment, validAppointmentCount));","lastModifiedDate":"2023-11-01"},{"lineNumber":124,"author":{"gitId":"LamJiuFong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Person(validName, null, validEmail, validAddress,","lastModifiedDate":"2023-10-23"},{"lineNumber":125,"author":{"gitId":"Jweewee"},"content":"                validRemark, validTags, validInsurances, validAppointment, validAppointmentCount));","lastModifiedDate":"2023-11-01"},{"lineNumber":126,"author":{"gitId":"LamJiuFong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Person(validName, validPhone, null, validAddress,","lastModifiedDate":"2023-10-23"},{"lineNumber":127,"author":{"gitId":"Jweewee"},"content":"                validRemark, validTags, validInsurances, validAppointment, validAppointmentCount));","lastModifiedDate":"2023-11-01"},{"lineNumber":128,"author":{"gitId":"LamJiuFong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Person(validName, validPhone, validEmail, null,","lastModifiedDate":"2023-10-23"},{"lineNumber":129,"author":{"gitId":"Jweewee"},"content":"                validRemark, validTags, validInsurances, validAppointment, validAppointmentCount));","lastModifiedDate":"2023-11-01"},{"lineNumber":130,"author":{"gitId":"songfangyl"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Person(validName, validPhone, validEmail, validAddress,","lastModifiedDate":"2023-10-25"},{"lineNumber":131,"author":{"gitId":"Jweewee"},"content":"                null, validTags, validInsurances, validAppointment, validAppointmentCount));","lastModifiedDate":"2023-11-01"},{"lineNumber":132,"author":{"gitId":"LamJiuFong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Person(validName, validPhone, validEmail, validAddress,","lastModifiedDate":"2023-10-23"},{"lineNumber":133,"author":{"gitId":"Jweewee"},"content":"                validRemark, null, validInsurances, validAppointment, validAppointmentCount));","lastModifiedDate":"2023-11-01"},{"lineNumber":134,"author":{"gitId":"Jweewee"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Person(validName, validPhone, validEmail, validAddress,","lastModifiedDate":"2023-10-31"},{"lineNumber":135,"author":{"gitId":"Jweewee"},"content":"                validRemark, validTags, null, validAppointment, validAppointmentCount));","lastModifiedDate":"2023-11-01"},{"lineNumber":136,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":137,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":138,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":139,"author":{"gitId":"LamJiuFong"},"content":"    public void constructor_allFieldsValid_success() {","lastModifiedDate":"2023-10-23"},{"lineNumber":140,"author":{"gitId":"LamJiuFong"},"content":"        Name validName \u003d new Name(VALID_NAME_BOB);","lastModifiedDate":"2023-10-23"},{"lineNumber":141,"author":{"gitId":"LamJiuFong"},"content":"        Phone validPhone \u003d new Phone(VALID_PHONE_BOB);","lastModifiedDate":"2023-10-23"},{"lineNumber":142,"author":{"gitId":"LamJiuFong"},"content":"        Email validEmail \u003d new Email(VALID_EMAIL_BOB);","lastModifiedDate":"2023-10-23"},{"lineNumber":143,"author":{"gitId":"LamJiuFong"},"content":"        Address validAddress \u003d new NonEmptyAddress(VALID_ADDRESS_BOB);","lastModifiedDate":"2023-10-23"},{"lineNumber":144,"author":{"gitId":"songfangyl"},"content":"        Remark validRemark \u003d new Remark(VALID_REMARK_BOB);","lastModifiedDate":"2023-10-25"},{"lineNumber":145,"author":{"gitId":"LamJiuFong"},"content":"        Set\u003cTag\u003e validTags \u003d new HashSet\u003c\u003e() {{","lastModifiedDate":"2023-10-23"},{"lineNumber":146,"author":{"gitId":"LamJiuFong"},"content":"                add(new Tag(VALID_TAG_FRIEND));","lastModifiedDate":"2023-10-23"},{"lineNumber":147,"author":{"gitId":"LamJiuFong"},"content":"                add(new Tag(VALID_TAG_HUSBAND));","lastModifiedDate":"2023-10-23"},{"lineNumber":148,"author":{"gitId":"LamJiuFong"},"content":"            }};","lastModifiedDate":"2023-10-23"},{"lineNumber":149,"author":{"gitId":"Jweewee"},"content":"        Set\u003cInsurance\u003e validInsurances \u003d new HashSet\u003c\u003e() {{","lastModifiedDate":"2023-10-31"},{"lineNumber":150,"author":{"gitId":"Jweewee"},"content":"                add(new Insurance(VALID_INSURANCE_CAR));","lastModifiedDate":"2023-10-31"},{"lineNumber":151,"author":{"gitId":"Jweewee"},"content":"            }};","lastModifiedDate":"2023-10-31"},{"lineNumber":152,"author":{"gitId":"LamJiuFong"},"content":"        Priority validPriority \u003d new Priority(VALID_PRIORITY_NONE);","lastModifiedDate":"2023-10-23"},{"lineNumber":153,"author":{"gitId":"Jweewee"},"content":"        Appointment validAppointment \u003d new Appointment(VALID_APPOINTMENT_BOB,","lastModifiedDate":"2023-11-01"},{"lineNumber":154,"author":{"gitId":"Jweewee"},"content":"                VALID_APPOINTMENT_TIME_BOB, VALID_APPOINTMENT_VENUE_BOB);","lastModifiedDate":"2023-11-01"},{"lineNumber":155,"author":{"gitId":"Jweewee"},"content":"        AppointmentCount validAppointmentCount \u003d new AppointmentCount(INITIAL_COUNT);","lastModifiedDate":"2023-11-01"},{"lineNumber":156,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":157,"author":{"gitId":"Jweewee"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withInsurances(VALID_INSURANCE_CAR)","lastModifiedDate":"2023-11-01"},{"lineNumber":158,"author":{"gitId":"Jweewee"},"content":"                .withAppointment(validAppointment).withPriority(\"-\").build();","lastModifiedDate":"2023-11-01"},{"lineNumber":159,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":160,"author":{"gitId":"LamJiuFong"},"content":"        // with priority field","lastModifiedDate":"2023-10-23"},{"lineNumber":161,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":162,"author":{"gitId":"Jweewee"},"content":"        Person testPerson \u003d new Person(validName, validPhone, validEmail, validAddress,","lastModifiedDate":"2023-10-31"},{"lineNumber":163,"author":{"gitId":"Jweewee"},"content":"                validRemark, validTags, validInsurances, validAppointment, validAppointmentCount, validPriority);","lastModifiedDate":"2023-11-01"},{"lineNumber":164,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(expectedPerson, testPerson);","lastModifiedDate":"2023-10-23"},{"lineNumber":165,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":166,"author":{"gitId":"LamJiuFong"},"content":"        // without priority field","lastModifiedDate":"2023-10-23"},{"lineNumber":167,"author":{"gitId":"Jweewee"},"content":"        testPerson \u003d new Person(validName, validPhone, validEmail, validAddress,","lastModifiedDate":"2023-10-31"},{"lineNumber":168,"author":{"gitId":"Jweewee"},"content":"                validRemark, validTags, validInsurances, validAppointment, validAppointmentCount);","lastModifiedDate":"2023-11-01"},{"lineNumber":169,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":170,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(expectedPerson, testPerson);","lastModifiedDate":"2023-10-23"},{"lineNumber":171,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":172,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":173,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":182,"author":{"gitId":"Jweewee"},"content":"        // same phone number, all other attributes different -\u003e returns true","lastModifiedDate":"2023-10-31"},{"lineNumber":183,"author":{"gitId":"Jweewee"},"content":"        Person newPhoneAmy \u003d new PersonBuilder(AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":184,"author":{"gitId":"Jweewee"},"content":"        assertTrue(BOB.isSamePerson(newPhoneAmy));","lastModifiedDate":"2023-10-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":186,"author":{"gitId":"Jweewee"},"content":"        // same email, all other attributes different -\u003e returns true","lastModifiedDate":"2023-10-31"},{"lineNumber":187,"author":{"gitId":"Jweewee"},"content":"        Person newEmailAmy \u003d new PersonBuilder(AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":188,"author":{"gitId":"Jweewee"},"content":"        assertTrue(BOB.isSamePerson(newEmailAmy));","lastModifiedDate":"2023-10-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":190,"author":{"gitId":"Jweewee"},"content":"        // same phone number and email, all other attributes different -\u003e returns true","lastModifiedDate":"2023-10-31"},{"lineNumber":191,"author":{"gitId":"Jweewee"},"content":"        Person editedAmy \u003d new PersonBuilder(AMY).withEmail(VALID_EMAIL_BOB).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":192,"author":{"gitId":"Jweewee"},"content":"        assertTrue(BOB.isSamePerson(editedAmy));","lastModifiedDate":"2023-10-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":194,"author":{"gitId":"Jweewee"},"content":"        // different phone number and email, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":195,"author":{"gitId":"Jweewee"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withEmail(VALID_EMAIL_AMY).withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2023-10-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":197,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":198,"author":{"gitId":"Jweewee"},"content":"        // all attributes different -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":199,"author":{"gitId":"Jweewee"},"content":"        assertFalse(ALICE.isSamePerson(BOB));","lastModifiedDate":"2023-10-31"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":203,"author":{"gitId":"Jweewee"},"content":"    public void createPersonWithUpdatedTagsTest_noUpdate_success() {","lastModifiedDate":"2023-10-31"},{"lineNumber":204,"author":{"gitId":"Jweewee"},"content":"        // both empty","lastModifiedDate":"2023-10-31"},{"lineNumber":205,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(bobWithHusbandAndFriendTag,","lastModifiedDate":"2023-10-16"},{"lineNumber":206,"author":{"gitId":"Jweewee"},"content":"                createPersonWithUpdatedTags(bobWithHusbandAndFriendTag, emptyTagSet, emptyTagSet));","lastModifiedDate":"2023-10-31"},{"lineNumber":207,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":208,"author":{"gitId":"Jweewee"},"content":"        // add existing tag","lastModifiedDate":"2023-10-31"},{"lineNumber":209,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(bobWithHusbandAndFriendTag,","lastModifiedDate":"2023-10-16"},{"lineNumber":210,"author":{"gitId":"Jweewee"},"content":"                createPersonWithUpdatedTags(bobWithHusbandAndFriendTag, friendTagSet, emptyTagSet));","lastModifiedDate":"2023-10-31"},{"lineNumber":211,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(bobWithHusbandAndFriendTag,","lastModifiedDate":"2023-10-16"},{"lineNumber":212,"author":{"gitId":"Jweewee"},"content":"                createPersonWithUpdatedTags(bobWithHusbandAndFriendTag, husbandAndFriendTagset, emptyTagSet));","lastModifiedDate":"2023-10-31"},{"lineNumber":213,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":214,"author":{"gitId":"Jweewee"},"content":"        // delete non-existing tag","lastModifiedDate":"2023-10-31"},{"lineNumber":215,"author":{"gitId":"Jweewee"},"content":"        assertEquals(bobWithHusbandAndFriendTag, createPersonWithUpdatedTags(bobWithHusbandAndFriendTag,","lastModifiedDate":"2023-10-31"},{"lineNumber":216,"author":{"gitId":"Jweewee"},"content":"                emptyTagSet, Set.of(new Tag(\"non existing tag\"))));","lastModifiedDate":"2023-10-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":220,"author":{"gitId":"Jweewee"},"content":"    public void createPersonWithUpdatedTagsTest_addTag_success() {","lastModifiedDate":"2023-10-31"},{"lineNumber":221,"author":{"gitId":"Jweewee"},"content":"        // adding all non-existing tags","lastModifiedDate":"2023-10-31"},{"lineNumber":222,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(bobWithHusbandAndFriendTag,","lastModifiedDate":"2023-10-16"},{"lineNumber":223,"author":{"gitId":"Jweewee"},"content":"                createPersonWithUpdatedTags(bobWithoutTags, husbandAndFriendTagset, emptyTagSet));","lastModifiedDate":"2023-10-31"},{"lineNumber":224,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":225,"author":{"gitId":"Jweewee"},"content":"        // adding tags with some already existing","lastModifiedDate":"2023-10-31"},{"lineNumber":226,"author":{"gitId":"Jweewee"},"content":"        assertEquals(bobWithHusbandAndFriendTag,","lastModifiedDate":"2023-10-31"},{"lineNumber":227,"author":{"gitId":"Jweewee"},"content":"                createPersonWithUpdatedTags(bobWithFriendTag, husbandAndFriendTagset, emptyTagSet));","lastModifiedDate":"2023-10-31"},{"lineNumber":228,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":229,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":230,"author":{"gitId":"Jweewee"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":231,"author":{"gitId":"Jweewee"},"content":"    public void createPersonWithUpdatedTagTest_deleteTag_success() {","lastModifiedDate":"2023-10-31"},{"lineNumber":232,"author":{"gitId":"Jweewee"},"content":"        // deleting only existing-tag","lastModifiedDate":"2023-10-31"},{"lineNumber":233,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(bobWithoutTags,","lastModifiedDate":"2023-10-16"},{"lineNumber":234,"author":{"gitId":"Jweewee"},"content":"                createPersonWithUpdatedTags(bobWithHusbandAndFriendTag, emptyTagSet, husbandAndFriendTagset));","lastModifiedDate":"2023-10-31"},{"lineNumber":235,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":236,"author":{"gitId":"Jweewee"},"content":"        // deleting both existing and non-existing tag","lastModifiedDate":"2023-10-31"},{"lineNumber":237,"author":{"gitId":"Jweewee"},"content":"        Set\u003cTag\u003e tagsToDelete \u003d new HashSet\u003c\u003e(husbandAndFriendTagset);","lastModifiedDate":"2023-10-31"},{"lineNumber":238,"author":{"gitId":"Jweewee"},"content":"        tagsToDelete.add(new Tag(\"non existing tag\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":239,"author":{"gitId":"Jweewee"},"content":"        assertEquals(bobWithoutTags,","lastModifiedDate":"2023-10-31"},{"lineNumber":240,"author":{"gitId":"Jweewee"},"content":"                createPersonWithUpdatedTags(bobWithHusbandAndFriendTag, emptyTagSet, tagsToDelete));","lastModifiedDate":"2023-10-31"},{"lineNumber":241,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":242,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":243,"author":{"gitId":"Jweewee"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":244,"author":{"gitId":"Jweewee"},"content":"    public void createPersonWithUpdatedTagTest_addAndDeleteTag_success() {","lastModifiedDate":"2023-10-31"},{"lineNumber":245,"author":{"gitId":"yucongkoo"},"content":"        // adding new tag and deleting existing tag of a person","lastModifiedDate":"2023-10-16"},{"lineNumber":246,"author":{"gitId":"Jweewee"},"content":"        assertEquals(bobWithHusbandTag, createPersonWithUpdatedTags(bobWithFriendTag, husbandTagSet, friendTagSet));","lastModifiedDate":"2023-10-31"},{"lineNumber":247,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":248,"author":{"gitId":"yucongkoo"},"content":"        // adding existing tag and deleting existing tag of a person","lastModifiedDate":"2023-10-16"},{"lineNumber":249,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(bobWithFriendTag,","lastModifiedDate":"2023-10-16"},{"lineNumber":250,"author":{"gitId":"yucongkoo"},"content":"                createPersonWithUpdatedTags(bobWithHusbandAndFriendTag, friendTagSet, husbandTagSet));","lastModifiedDate":"2023-10-20"},{"lineNumber":251,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":252,"author":{"gitId":"yucongkoo"},"content":"        // adding new tag and deleting non-existing tag of a person","lastModifiedDate":"2023-10-16"},{"lineNumber":253,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(bobWithFriendTag, createPersonWithUpdatedTags(bobWithoutTags, friendTagSet, husbandTagSet));","lastModifiedDate":"2023-10-20"},{"lineNumber":254,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":255,"author":{"gitId":"yucongkoo"},"content":"        // adding existing tag and deleting non-existing tag of a person","lastModifiedDate":"2023-10-16"},{"lineNumber":256,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(bobWithFriendTag, createPersonWithUpdatedTags(bobWithFriendTag, friendTagSet, husbandTagSet));","lastModifiedDate":"2023-10-20"},{"lineNumber":257,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":258,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":260,"author":{"gitId":"LamJiuFong"},"content":"    public void createPersonWithUpdatedPriorityMethod() {","lastModifiedDate":"2023-10-23"},{"lineNumber":261,"author":{"gitId":"LamJiuFong"},"content":"        Person derrickWithHighPriority \u003d new PersonBuilder(DERRICK).withPriority(VALID_PRIORITY_HIGH).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":262,"author":{"gitId":"LamJiuFong"},"content":"        Person derrickWithNoPriority \u003d new PersonBuilder(DERRICK).withPriority(VALID_PRIORITY_NONE).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":263,"author":{"gitId":"LamJiuFong"},"content":"        Person derrickWithLowPriority \u003d new PersonBuilder(DERRICK).withPriority(VALID_PRIORITY_LOW).build();","lastModifiedDate":"2023-10-23"},{"lineNumber":264,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":265,"author":{"gitId":"LamJiuFong"},"content":"        Priority highPriority \u003d new Priority(VALID_PRIORITY_HIGH);","lastModifiedDate":"2023-10-23"},{"lineNumber":266,"author":{"gitId":"LamJiuFong"},"content":"        Priority noPriority \u003d new Priority(VALID_PRIORITY_NONE);","lastModifiedDate":"2023-10-23"},{"lineNumber":267,"author":{"gitId":"LamJiuFong"},"content":"        Priority lowPriority \u003d new Priority(VALID_PRIORITY_LOW);","lastModifiedDate":"2023-10-23"},{"lineNumber":268,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":269,"author":{"gitId":"LamJiuFong"},"content":"        // assigning priority from none to high","lastModifiedDate":"2023-10-23"},{"lineNumber":270,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(derrickWithHighPriority, createPersonWithUpdatedPriority(derrickWithNoPriority, highPriority));","lastModifiedDate":"2023-10-23"},{"lineNumber":271,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":272,"author":{"gitId":"LamJiuFong"},"content":"        // assigning priority from low to none","lastModifiedDate":"2023-10-23"},{"lineNumber":273,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(derrickWithNoPriority, createPersonWithUpdatedPriority(derrickWithLowPriority, noPriority));","lastModifiedDate":"2023-10-23"},{"lineNumber":274,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":275,"author":{"gitId":"LamJiuFong"},"content":"        // assigning priority from high to low","lastModifiedDate":"2023-10-23"},{"lineNumber":276,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(derrickWithLowPriority, createPersonWithUpdatedPriority(derrickWithHighPriority, lowPriority));","lastModifiedDate":"2023-10-23"},{"lineNumber":277,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":278,"author":{"gitId":"LamJiuFong"},"content":"        // assigning same level of priority","lastModifiedDate":"2023-10-23"},{"lineNumber":279,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(derrickWithHighPriority, createPersonWithUpdatedPriority(derrickWithHighPriority, highPriority));","lastModifiedDate":"2023-10-23"},{"lineNumber":280,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":281,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":282,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":283,"author":{"gitId":"LamJiuFong"},"content":"    public void equalsMethod() {","lastModifiedDate":"2023-10-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":314,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":316,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":317,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":319,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":320,"author":{"gitId":"LamJiuFong"},"content":"        // different priority -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":321,"author":{"gitId":"LamJiuFong"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPriority(VALID_PRIORITY_LOW).build(); // default priority is high","lastModifiedDate":"2023-10-23"},{"lineNumber":322,"author":{"gitId":"LamJiuFong"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-10-23"},{"lineNumber":323,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":324,"author":{"gitId":"Jweewee"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAppointment(VALID_APPOINTMENT_BOB,","lastModifiedDate":"2023-11-01"},{"lineNumber":325,"author":{"gitId":"Jweewee"},"content":"                VALID_APPOINTMENT_TIME_BOB, VALID_APPOINTMENT_VENUE_BOB).build(); // default appointment is empty","lastModifiedDate":"2023-11-01"},{"lineNumber":326,"author":{"gitId":"Jweewee"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-11-01"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23"},{"lineNumber":332,"author":{"gitId":"Jweewee"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress()","lastModifiedDate":"2023-10-31"},{"lineNumber":333,"author":{"gitId":"Jweewee"},"content":"                + \", priority\u003d\" + ALICE.getPriority() + \", tags\u003d\" + ALICE.getTags()","lastModifiedDate":"2023-10-31"},{"lineNumber":334,"author":{"gitId":"Jweewee"},"content":"                + \", insurances\u003d\" + ALICE.getInsurances() + \", remark\u003d\" + ALICE.getRemark()","lastModifiedDate":"2023-11-01"},{"lineNumber":335,"author":{"gitId":"Jweewee"},"content":"                + \", appointment\u003d\" + ALICE.getAppointment() + \"}\";","lastModifiedDate":"2023-11-01"},{"lineNumber":336,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"yucongkoo":27,"songfangyl":4,"LamJiuFong":77,"-":89,"Jweewee":142}},{"path":"src/test/java/seedu/address/model/person/PersonTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":" * Contains helper method for testing persons.","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"public class PersonTestUtil {","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"     * Generates a String of length {@code len}.","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"    public static String generateStringOfLength(int len) {","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"        for (int i \u003d 0; i \u003c len; ++i) {","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"            sb.append(\"a\");","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"        return sb.toString();","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"yucongkoo":18}},{"path":"src/test/java/seedu/address/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(Phone.isValidPhone(\"911\")); // short phone numbers","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(Phone.isValidPhone(\"/*-/-++\")); // special characters","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(Phone.isValidPhone(\"+6589562314\")); // with country code","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(Phone.isValidPhone(\"+60123931189\")); // non-Singapore phone number","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"TehOPanas"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\")); // exactly 8 numbers","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"TehOPanas"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"TehOPanas"},"content":"        Phone phone \u003d new Phone(\"12345678\");","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"TehOPanas"},"content":"        // same values","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"TehOPanas"},"content":"        assertTrue(phone.equals(new Phone(\"12345678\")));","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"TehOPanas"},"content":"        // same object","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(phone));","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"TehOPanas"},"content":"        // null","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(null));","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"TehOPanas"},"content":"        // primitive and Phone type","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(phone.equals(50.f));","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"TehOPanas"},"content":"        // different type","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(phone.equals(new Name(\"apple\")));","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"TehOPanas"},"content":"        // different values","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"TehOPanas"},"content":"        assertFalse(phone.equals(new Phone(\"87654321\")));","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"TehOPanas":18,"-":49}},{"path":"src/test/java/seedu/address/model/person/RemarkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_REMARK_DESC;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.model.person.Remark.isValidRemark;","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"public class RemarkTest {","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Remark(null));","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"    public void constructor_invalidRemark_throwsParseException() {","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Remark(INVALID_REMARK_DESC));","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"    public void isValidRemark_invalidRemark_returnsFalse() {","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"        assertFalse(isValidRemark(INVALID_REMARK_DESC));","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"    public void isValidRemark_validRemark_returnsTrue() {","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"        assertTrue(isValidRemark(\"Some Remark\"));","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"        assertTrue(isValidRemark(\"!@#$%^\u0026*()_+\"));","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"        assertTrue(isValidRemark(\"AAAbbbCCC\\t\\n\\tDDD\"));","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"        assertTrue(isValidRemark(\"\"));","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"songfangyl"},"content":"    public void equalsMethod() {","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"songfangyl"},"content":"        Remark remark \u003d new Remark(VALID_REMARK_AMY);","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"songfangyl"},"content":"        // same object -\u003e return true","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"songfangyl"},"content":"        assertTrue(remark.equals(remark));","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"songfangyl"},"content":"        // different type -\u003e false","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"songfangyl"},"content":"        assertFalse(remark.equals(new Object()));","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"songfangyl"},"content":"        assertFalse(remark.equals(null));","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"songfangyl"},"content":"        assertFalse(remark.equals(new Phone(\"12345678\")));","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"songfangyl"},"content":"        // different value -\u003e false","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"songfangyl"},"content":"        assertFalse(remark.equals(new Remark(VALID_REMARK_BOB)));","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"songfangyl"},"content":"        // same value -\u003e true","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"songfangyl"},"content":"        assertTrue(remark.equals(new Remark(VALID_REMARK_AMY)));","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"songfangyl":55}},{"path":"src/test/java/seedu/address/model/person/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"    // EP: null case","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"    public void isValidTagName_nullTagName_throwsNullPointerException() {","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"    // EP : valid tag name","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"    public void isValidTagName_validTagName_returnsTrue() {","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"        assertTrue(Tag.isValidTagName(\"1\")); // boundary value","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"        assertTrue(Tag.isValidTagName(\"valid\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"        assertTrue(Tag.isValidTagName(\"valid1\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"        assertTrue(Tag.isValidTagName(\"valid1 tag2 name\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"        assertTrue(Tag.isValidTagName(\"12345678901234567890\")); // boundary value","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"        // boundary value with spaces","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"        assertTrue(Tag.isValidTagName(\" 1 2 3 4 5 6 7   8  9 0 1 2 3 4 5 6 7 8 9 0 \"));","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"    // EP: invalid tag name","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"    public void isValidTagName_invalidTagName_returnsFalse() {","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"        assertFalse(Tag.isValidTagName(\"#\")); // non-alphanumeric","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"        assertFalse(Tag.isValidTagName(\"\")); // boundary value: empty string","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"        assertFalse(Tag.isValidTagName(\" \"));","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"        assertFalse(Tag.isValidTagName(\"123456789012345678901\")); // boundary value : too long","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":49,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-21"},{"lineNumber":50,"author":{"gitId":"yucongkoo"},"content":"    public void equals() {","lastModifiedDate":"2023-10-21"},{"lineNumber":51,"author":{"gitId":"yucongkoo"},"content":"        Tag tag \u003d new Tag(\"valid tag\");","lastModifiedDate":"2023-10-21"},{"lineNumber":52,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"yucongkoo"},"content":"        // same object -\u003e return true","lastModifiedDate":"2023-10-21"},{"lineNumber":54,"author":{"gitId":"yucongkoo"},"content":"        assertTrue(tag.equals(tag));","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":56,"author":{"gitId":"yucongkoo"},"content":"        // different type -\u003e false","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"yucongkoo"},"content":"        assertFalse(tag.equals(new Object()));","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"yucongkoo"},"content":"        assertFalse(tag.equals(null));","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"yucongkoo"},"content":"        // different value -\u003e false","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"yucongkoo"},"content":"        assertFalse(tag.equals(new Tag(\"other valid tag\")));","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"yucongkoo"},"content":"        // same value -\u003e true","lastModifiedDate":"2023-10-21"},{"lineNumber":64,"author":{"gitId":"yucongkoo"},"content":"        assertTrue(tag.equals(new Tag(\"valid tag\")));","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"yucongkoo"},"content":"        // same value with contiguous spaces -\u003e true","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"yucongkoo"},"content":"        assertTrue(tag.equals(new Tag(\" valid    tag \")));","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"yucongkoo":46,"-":23}},{"path":"src/test/java/seedu/address/model/person/predicate/AddressContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package seedu.address.model.person.predicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"import java.util.List;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"public class AddressContainsKeywordsPredicateTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"    public void equals() {","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"        AddressContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"                new AddressContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"        AddressContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"                new AddressContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"        AddressContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"                new AddressContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"songfangyl"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"songfangyl"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"songfangyl"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"songfangyl"},"content":"        // different  -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"songfangyl"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"songfangyl"},"content":"    public void test_addressContainsKeywordsAsPrefix_returnsTrue() {","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"songfangyl"},"content":"        // One Keyword","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"songfangyl"},"content":"        AddressContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"songfangyl"},"content":"                new AddressContainsKeywordsPredicate(Collections.singletonList(\"Singapore\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAddress(\"Singapore\").build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(Arrays.asList(\"Sing\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAddress(\"Singapore\").build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"songfangyl"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(Arrays.asList(\"Jurong\", \"West\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAddress(\"Jurong West\").build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(Arrays.asList(\"J\", \"W\", \"Cen\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAddress(\"Jurong West Center\").build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"songfangyl"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(Arrays.asList(\"Jurong\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAddress(\"Jurong West Recreational Park\").build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(Arrays.asList(\"Recrea\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAddress(\"Jurong West Recreational Park\").build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"songfangyl"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(Arrays.asList(\"juRoNg\", \"weST\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAddress(\"Jurong West Recreational Park\").build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(Arrays.asList(\"juR\", \"wES\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAddress(\"Jurong West Recreational Park\").build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"songfangyl"},"content":"        // Keywords match but not in order","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(Arrays.asList(\"Park\", \"Jurong\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAddress(\"Jurong West Recreational Park\").build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(Arrays.asList(\"Jur\", \"Rec\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAddress(\"Jurong West Recreational Park\").build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"songfangyl"},"content":"        // Empty Keyword","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(Arrays.asList(\"\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAddress(\"Singapore\").build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"songfangyl"},"content":"    public void test_addressDoesNotContainKeywordsAsPrefix_returnsFalse() {","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"songfangyl"},"content":"        // Zero keywords","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"songfangyl"},"content":"        AddressContainsKeywordsPredicate predicate \u003d new AddressContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(new PersonBuilder().withAddress(\"Singapore\").build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"songfangyl"},"content":"        // Empty Address","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(Arrays.asList(\"\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(new PersonBuilder().withoutAddress().build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"songfangyl"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(Arrays.asList(\"Jurong\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(new PersonBuilder().withAddress(\"Chang Yi\").build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(Arrays.asList(\"jur\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(new PersonBuilder().withAddress(\"Chang Yi\").build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":106,"author":{"gitId":"songfangyl"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-31"},{"lineNumber":107,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(Arrays.asList(\"Jurong\", \"East\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":108,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(new PersonBuilder().withAddress(\"Jurong West\").build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(Arrays.asList(\"Juro\", \"Park\", \"Ea\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":111,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(new PersonBuilder().withAddress(\"Jurong West Park\").build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":113,"author":{"gitId":"songfangyl"},"content":"        // Keywords match phone, email and name, but does not match address","lastModifiedDate":"2023-10-31"},{"lineNumber":114,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new AddressContainsKeywordsPredicate(Arrays.asList(\"12345678\", \"alice@email.com\", \"Alice\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":115,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345678\")","lastModifiedDate":"2023-10-31"},{"lineNumber":116,"author":{"gitId":"songfangyl"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":117,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":118,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":119,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":120,"author":{"gitId":"songfangyl"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-31"},{"lineNumber":121,"author":{"gitId":"songfangyl"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2023-10-31"},{"lineNumber":122,"author":{"gitId":"songfangyl"},"content":"        AddressContainsKeywordsPredicate predicate \u003d new AddressContainsKeywordsPredicate(keywords);","lastModifiedDate":"2023-10-31"},{"lineNumber":123,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":124,"author":{"gitId":"songfangyl"},"content":"        String expected \u003d AddressContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2023-10-31"},{"lineNumber":125,"author":{"gitId":"songfangyl"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-31"},{"lineNumber":126,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":127,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"songfangyl":127}},{"path":"src/test/java/seedu/address/model/person/predicate/EmailContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package seedu.address.model.person.predicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"import java.util.List;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"public class EmailContainsKeywordsPredicateTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"    public void equals() {","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"        EmailContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"                new EmailContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"        EmailContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"                new EmailContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"        EmailContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"                new EmailContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"songfangyl"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"songfangyl"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"songfangyl"},"content":"        // different  -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"songfangyl"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"songfangyl"},"content":"    public void test_emailContainsKeywordsAsPrefix_returnsTrue() {","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"songfangyl"},"content":"        // One Keyword","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"songfangyl"},"content":"        EmailContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"songfangyl"},"content":"                new EmailContainsKeywordsPredicate(Collections.singletonList(\"alice@gmail.com\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"alice@gmail.com\").build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"alice\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"alice@gmail.com\").build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"songfangyl"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"alice\", \"ali\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"alice@gmail.com\").build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"songfangyl"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"aLICe@gMail.cOM\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"alice@gmail.com\").build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"AlIcE\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"alice@gmail.com\").build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"songfangyl"},"content":"        // Empty keywords","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"alice@gmail.com\").build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"songfangyl"},"content":"    public void test_emailDoesNotContainKeywordsAsPrefix_returnsFalse() {","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"songfangyl"},"content":"        // Zero keywords","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"songfangyl"},"content":"        EmailContainsKeywordsPredicate predicate \u003d new EmailContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(new PersonBuilder().withEmail(\"bob@gmail.com\").build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"songfangyl"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"alice@gmail.com\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(new PersonBuilder().withEmail(\"bob@gmail.com\").build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"alice\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(new PersonBuilder().withEmail(\"bob@gmail.com\").build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"songfangyl"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"bob\", \"gmail.com\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(new PersonBuilder().withEmail(\"bob@gmail.com\").build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"alice@gmail.com\", \"carol@gmail.com\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(new PersonBuilder().withEmail(\"bob@gmail.com\").build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"songfangyl"},"content":"        // Keywords match phone, name and address, but does not match email","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new EmailContainsKeywordsPredicate(Arrays.asList(\"12345678\", \"Main Street\", \"Alice\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345678\")","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"songfangyl"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"songfangyl"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"songfangyl"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"songfangyl"},"content":"        EmailContainsKeywordsPredicate predicate \u003d new EmailContainsKeywordsPredicate(keywords);","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"songfangyl"},"content":"        String expected \u003d EmailContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"songfangyl"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"songfangyl":105}},{"path":"src/test/java/seedu/address/model/person/predicate/InsuranceContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package seedu.address.model.person.predicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"import java.util.List;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"public class InsuranceContainsKeywordsPredicateTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"    private static final String[] INSURANCE_STUB \u003d new String[]{","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"        \"Great Eastern\", \"Best Insurance\", \"IQInsurance\"","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"    };","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"    public void equals() {","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"        InsuranceContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"                new InsuranceContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"        InsuranceContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"                new InsuranceContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"        InsuranceContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"                new InsuranceContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"songfangyl"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"songfangyl"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"songfangyl"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"songfangyl"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"songfangyl"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"songfangyl"},"content":"        // different  -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"songfangyl"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"songfangyl"},"content":"    public void test_insuranceContainsKeywordsAsPrefix_returnsTrue() {","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"songfangyl"},"content":"        // One Keyword","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"songfangyl"},"content":"        InsuranceContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"songfangyl"},"content":"                new InsuranceContainsKeywordsPredicate(Collections.singletonList(\"IQInsurance\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withInsurances(INSURANCE_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new InsuranceContainsKeywordsPredicate(Arrays.asList(\"IQ\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withInsurances(INSURANCE_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"songfangyl"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new InsuranceContainsKeywordsPredicate(Arrays.asList(\"Great\", \"Eastern\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withInsurances(INSURANCE_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new InsuranceContainsKeywordsPredicate(Arrays.asList(\"IQ\", \"East\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withInsurances(INSURANCE_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"songfangyl"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new InsuranceContainsKeywordsPredicate(Arrays.asList(\"Great\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withInsurances(INSURANCE_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new InsuranceContainsKeywordsPredicate(Arrays.asList(\"Eas\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withInsurances(INSURANCE_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"songfangyl"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new InsuranceContainsKeywordsPredicate(Arrays.asList(\"grEAt\", \"eAsTeRN\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withInsurances(INSURANCE_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new InsuranceContainsKeywordsPredicate(Arrays.asList(\"beS\", \"eAS\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withInsurances(INSURANCE_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"songfangyl"},"content":"        // Keywords match but not in order","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new InsuranceContainsKeywordsPredicate(Arrays.asList(\"Insurance\", \"Best\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withInsurances(INSURANCE_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new InsuranceContainsKeywordsPredicate(Arrays.asList(\"Eas\", \"Grea\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withInsurances(INSURANCE_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"songfangyl"},"content":"        // Empty Keyword","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new InsuranceContainsKeywordsPredicate(Arrays.asList(\"\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withInsurances(INSURANCE_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"songfangyl"},"content":"    public void test_insuranceDoesNotContainKeywordsAsPrefix_returnsFalse() {","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"songfangyl"},"content":"        // Zero keywords","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"songfangyl"},"content":"        InsuranceContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"songfangyl"},"content":"                new InsuranceContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(new PersonBuilder().withInsurances(INSURANCE_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"songfangyl"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new InsuranceContainsKeywordsPredicate(Arrays.asList(\"Life\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(new PersonBuilder().withInsurances(INSURANCE_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new InsuranceContainsKeywordsPredicate(Arrays.asList(\"Li\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(new PersonBuilder().withInsurances().build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":106,"author":{"gitId":"songfangyl"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-31"},{"lineNumber":107,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new InsuranceContainsKeywordsPredicate(Arrays.asList(\"Great\", \"Car\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":108,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(new PersonBuilder().withInsurances(INSURANCE_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new InsuranceContainsKeywordsPredicate(Arrays.asList(\"IQ\", \"Din\", \"Gr\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":111,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(new PersonBuilder().withInsurances(INSURANCE_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":113,"author":{"gitId":"songfangyl"},"content":"        // Keywords match phone, name, email and address, but does not match insurance","lastModifiedDate":"2023-10-31"},{"lineNumber":114,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new InsuranceContainsKeywordsPredicate(Arrays.asList(\"12345678\", \"alice@email.com\",","lastModifiedDate":"2023-10-31"},{"lineNumber":115,"author":{"gitId":"songfangyl"},"content":"                \"Alice\", \"Main Street\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":116,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345678\")","lastModifiedDate":"2023-10-31"},{"lineNumber":117,"author":{"gitId":"songfangyl"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").withInsurances(INSURANCE_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":118,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":119,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":120,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":121,"author":{"gitId":"songfangyl"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-31"},{"lineNumber":122,"author":{"gitId":"songfangyl"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2023-10-31"},{"lineNumber":123,"author":{"gitId":"songfangyl"},"content":"        InsuranceContainsKeywordsPredicate predicate \u003d new InsuranceContainsKeywordsPredicate(keywords);","lastModifiedDate":"2023-10-31"},{"lineNumber":124,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":125,"author":{"gitId":"songfangyl"},"content":"        String expected \u003d InsuranceContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2023-10-31"},{"lineNumber":126,"author":{"gitId":"songfangyl"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-31"},{"lineNumber":127,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":128,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"songfangyl":128}},{"path":"src/test/java/seedu/address/model/person/predicate/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package seedu.address.model.person.predicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"songfangyl"},"content":"    public void test_nameContainsKeywordsAsPrefix_returnsTrue() {","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"songfangyl"},"content":"        // One Keyword","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Al\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob Carol\").build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"a\", \"b\", \"ca\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob Carol\").build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Ca\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":70,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aL\", \"bO\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"songfangyl"},"content":"        // Keywords match but there are some words between the keywords","lastModifiedDate":"2023-10-11"},{"lineNumber":74,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Carol\"));","lastModifiedDate":"2023-10-11"},{"lineNumber":75,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob Carol\").build()));","lastModifiedDate":"2023-10-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"al\", \"c\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob Carol\").build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"songfangyl"},"content":"        // Empty Keyword","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob Carol\").build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"songfangyl"},"content":"    public void test_nameDoesNotContainKeywordsAsPrefix_returnsFalse() {","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":92,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"lice\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"songfangyl"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"ob\", \"lice\", \"rol\"));","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob Carol\").build()));","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345678\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345678\")","lastModifiedDate":"2023-10-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"songfangyl":34,"-":83}},{"path":"src/test/java/seedu/address/model/person/predicate/PersonContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package seedu.address.model.person.predicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"import java.util.List;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"public class PersonContainsKeywordsPredicateTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"    private static final NameContainsKeywordsPredicate NAME_PREDICATE \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"            new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"    private static final AddressContainsKeywordsPredicate ADDRESS_PREDICATE \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"            new AddressContainsKeywordsPredicate(Arrays.asList(\"Main\", \"Street\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"    private static final EmailContainsKeywordsPredicate EMAIL_PREDICATE \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"            new EmailContainsKeywordsPredicate(Arrays.asList(\"alice@gmail.com\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"    private static final InsuranceContainsKeywordsPredicate INSURANCE_PREDICATE \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"            new InsuranceContainsKeywordsPredicate(Arrays.asList(\"Great\", \"Eastern\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"    private static final PhoneContainsKeywordsPredicate PHONE_PREDICATE \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"            new PhoneContainsKeywordsPredicate(Arrays.asList(\"12345678\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"    private static final PriorityContainsKeywordsPredicate PRIORITY_PREDICATE \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"            new PriorityContainsKeywordsPredicate(Arrays.asList(\"high\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"    private static final RemarkContainsKeywordsPredicate REMARK_PREDICATE \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"            new RemarkContainsKeywordsPredicate(Arrays.asList(\"Some\", \"remarks\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"    private static final TagContainsKeywordsPredicate TAG_PREDICATE \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"            new TagContainsKeywordsPredicate(Arrays.asList(\"Friend\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"    private static final List\u003cString\u003e WRONG_KEYWORD_LIST \u003d Arrays.asList(\"Wrong\", \"Keywords\");","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"songfangyl"},"content":"    private static final Person PERSON_STUB \u003d new PersonBuilder()","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"songfangyl"},"content":"            .withAddress(\"Main Street\")","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"songfangyl"},"content":"            .withName(\"Alice Bob\")","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"songfangyl"},"content":"            .withInsurances(\"Great Eastern\")","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"songfangyl"},"content":"            .withEmail(\"alice@gmail.com\")","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"songfangyl"},"content":"            .withPriority(\"high\")","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"songfangyl"},"content":"            .withPhone(\"12345678\")","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"songfangyl"},"content":"            .withRemark(\"Some Remarks\")","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"songfangyl"},"content":"            .withTags(\"Friend\")","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"songfangyl"},"content":"            .build();","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"songfangyl"},"content":"    public void equals() {","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"songfangyl"},"content":"        List\u003cPredicate\u003cPerson\u003e\u003e firstPredicateList \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"songfangyl"},"content":"                Collections.singletonList(new NameContainsKeywordsPredicate(Collections.singletonList(\"first\")));","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"songfangyl"},"content":"        List\u003cPredicate\u003cPerson\u003e\u003e secondPredicateList \u003d Arrays.asList(NAME_PREDICATE, REMARK_PREDICATE);","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"songfangyl"},"content":"        PersonContainsKeywordsPredicate firstPredicate \u003d new PersonContainsKeywordsPredicate(firstPredicateList);","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"songfangyl"},"content":"        PersonContainsKeywordsPredicate secondPredicate \u003d new PersonContainsKeywordsPredicate(secondPredicateList);","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"songfangyl"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"songfangyl"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"songfangyl"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"songfangyl"},"content":"        PersonContainsKeywordsPredicate firstPredicateCopy \u003d new PersonContainsKeywordsPredicate(firstPredicateList);","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"songfangyl"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"songfangyl"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"songfangyl"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"songfangyl"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"songfangyl"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"songfangyl"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"songfangyl"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"songfangyl"},"content":"    public void test_allPredicateReturnTrue_returnsTrue() {","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"songfangyl"},"content":"        // One Predicate","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"songfangyl"},"content":"        PersonContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"songfangyl"},"content":"                new PersonContainsKeywordsPredicate(Arrays.asList(NAME_PREDICATE));","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new PersonContainsKeywordsPredicate(Arrays.asList(ADDRESS_PREDICATE));","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAddress(\"Main Street\").build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new PersonContainsKeywordsPredicate(Arrays.asList(EMAIL_PREDICATE));","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"alice@gmail.com\").build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new PersonContainsKeywordsPredicate(Arrays.asList(ADDRESS_PREDICATE));","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAddress(\"Main Street\").build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new PersonContainsKeywordsPredicate(Arrays.asList(INSURANCE_PREDICATE));","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withInsurances(\"Great Eastern\").build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new PersonContainsKeywordsPredicate(Arrays.asList(PHONE_PREDICATE));","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPhone(\"12345678\").build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new PersonContainsKeywordsPredicate(Arrays.asList(PRIORITY_PREDICATE));","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPriority(\"high\").build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new PersonContainsKeywordsPredicate(Arrays.asList(REMARK_PREDICATE));","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withRemark(\"Some Remarks\").build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new PersonContainsKeywordsPredicate(Arrays.asList(TAG_PREDICATE));","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"Friend\").build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"songfangyl"},"content":"        // Multiple predicates","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new PersonContainsKeywordsPredicate(Arrays.asList(","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"songfangyl"},"content":"                ADDRESS_PREDICATE, EMAIL_PREDICATE, INSURANCE_PREDICATE, NAME_PREDICATE,","lastModifiedDate":"2023-10-31"},{"lineNumber":106,"author":{"gitId":"songfangyl"},"content":"                PHONE_PREDICATE, PRIORITY_PREDICATE, REMARK_PREDICATE, TAG_PREDICATE","lastModifiedDate":"2023-10-31"},{"lineNumber":107,"author":{"gitId":"songfangyl"},"content":"        ));","lastModifiedDate":"2023-10-31"},{"lineNumber":108,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(PERSON_STUB));","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":111,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"songfangyl"},"content":"    public void test_somePredicatesRetuenFalse_returnsFalse() {","lastModifiedDate":"2023-10-31"},{"lineNumber":113,"author":{"gitId":"songfangyl"},"content":"        // Zero Predicate","lastModifiedDate":"2023-10-31"},{"lineNumber":114,"author":{"gitId":"songfangyl"},"content":"        PersonContainsKeywordsPredicate predicate \u003d new PersonContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-10-31"},{"lineNumber":115,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":116,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":117,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":118,"author":{"gitId":"songfangyl"},"content":"        // Wrong Address Predicate","lastModifiedDate":"2023-10-31"},{"lineNumber":119,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d predicate \u003d new PersonContainsKeywordsPredicate(Arrays.asList(","lastModifiedDate":"2023-10-31"},{"lineNumber":120,"author":{"gitId":"songfangyl"},"content":"                new AddressContainsKeywordsPredicate(WRONG_KEYWORD_LIST),","lastModifiedDate":"2023-10-31"},{"lineNumber":121,"author":{"gitId":"songfangyl"},"content":"                EMAIL_PREDICATE, INSURANCE_PREDICATE, NAME_PREDICATE,","lastModifiedDate":"2023-10-31"},{"lineNumber":122,"author":{"gitId":"songfangyl"},"content":"                PHONE_PREDICATE, PRIORITY_PREDICATE, REMARK_PREDICATE, TAG_PREDICATE","lastModifiedDate":"2023-10-31"},{"lineNumber":123,"author":{"gitId":"songfangyl"},"content":"        ));","lastModifiedDate":"2023-10-31"},{"lineNumber":124,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(PERSON_STUB));","lastModifiedDate":"2023-10-31"},{"lineNumber":125,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":126,"author":{"gitId":"songfangyl"},"content":"        // Wrong Email Predicate","lastModifiedDate":"2023-10-31"},{"lineNumber":127,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d predicate \u003d new PersonContainsKeywordsPredicate(Arrays.asList(","lastModifiedDate":"2023-10-31"},{"lineNumber":128,"author":{"gitId":"songfangyl"},"content":"                new EmailContainsKeywordsPredicate(WRONG_KEYWORD_LIST),","lastModifiedDate":"2023-10-31"},{"lineNumber":129,"author":{"gitId":"songfangyl"},"content":"                ADDRESS_PREDICATE, INSURANCE_PREDICATE, NAME_PREDICATE,","lastModifiedDate":"2023-10-31"},{"lineNumber":130,"author":{"gitId":"songfangyl"},"content":"                PHONE_PREDICATE, PRIORITY_PREDICATE, REMARK_PREDICATE, TAG_PREDICATE","lastModifiedDate":"2023-10-31"},{"lineNumber":131,"author":{"gitId":"songfangyl"},"content":"        ));","lastModifiedDate":"2023-10-31"},{"lineNumber":132,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(PERSON_STUB));","lastModifiedDate":"2023-10-31"},{"lineNumber":133,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":134,"author":{"gitId":"songfangyl"},"content":"        // Wrong Insurance Predicate","lastModifiedDate":"2023-10-31"},{"lineNumber":135,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d predicate \u003d new PersonContainsKeywordsPredicate(Arrays.asList(","lastModifiedDate":"2023-10-31"},{"lineNumber":136,"author":{"gitId":"songfangyl"},"content":"                new InsuranceContainsKeywordsPredicate(WRONG_KEYWORD_LIST),","lastModifiedDate":"2023-10-31"},{"lineNumber":137,"author":{"gitId":"songfangyl"},"content":"                ADDRESS_PREDICATE, EMAIL_PREDICATE, NAME_PREDICATE,","lastModifiedDate":"2023-10-31"},{"lineNumber":138,"author":{"gitId":"songfangyl"},"content":"                PHONE_PREDICATE, PRIORITY_PREDICATE, REMARK_PREDICATE, TAG_PREDICATE","lastModifiedDate":"2023-10-31"},{"lineNumber":139,"author":{"gitId":"songfangyl"},"content":"        ));","lastModifiedDate":"2023-10-31"},{"lineNumber":140,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(PERSON_STUB));","lastModifiedDate":"2023-10-31"},{"lineNumber":141,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":142,"author":{"gitId":"songfangyl"},"content":"        // Wrong Name Predicate","lastModifiedDate":"2023-10-31"},{"lineNumber":143,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d predicate \u003d new PersonContainsKeywordsPredicate(Arrays.asList(","lastModifiedDate":"2023-10-31"},{"lineNumber":144,"author":{"gitId":"songfangyl"},"content":"                new NameContainsKeywordsPredicate(WRONG_KEYWORD_LIST),","lastModifiedDate":"2023-10-31"},{"lineNumber":145,"author":{"gitId":"songfangyl"},"content":"                ADDRESS_PREDICATE, INSURANCE_PREDICATE, EMAIL_PREDICATE,","lastModifiedDate":"2023-10-31"},{"lineNumber":146,"author":{"gitId":"songfangyl"},"content":"                PHONE_PREDICATE, PRIORITY_PREDICATE, REMARK_PREDICATE, TAG_PREDICATE","lastModifiedDate":"2023-10-31"},{"lineNumber":147,"author":{"gitId":"songfangyl"},"content":"        ));","lastModifiedDate":"2023-10-31"},{"lineNumber":148,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(PERSON_STUB));","lastModifiedDate":"2023-10-31"},{"lineNumber":149,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":150,"author":{"gitId":"songfangyl"},"content":"        // Wrong Email Predicate","lastModifiedDate":"2023-10-31"},{"lineNumber":151,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d predicate \u003d new PersonContainsKeywordsPredicate(Arrays.asList(","lastModifiedDate":"2023-10-31"},{"lineNumber":152,"author":{"gitId":"songfangyl"},"content":"                new PhoneContainsKeywordsPredicate(WRONG_KEYWORD_LIST),","lastModifiedDate":"2023-10-31"},{"lineNumber":153,"author":{"gitId":"songfangyl"},"content":"                ADDRESS_PREDICATE, INSURANCE_PREDICATE, NAME_PREDICATE,","lastModifiedDate":"2023-10-31"},{"lineNumber":154,"author":{"gitId":"songfangyl"},"content":"                EMAIL_PREDICATE, PRIORITY_PREDICATE, REMARK_PREDICATE, TAG_PREDICATE","lastModifiedDate":"2023-10-31"},{"lineNumber":155,"author":{"gitId":"songfangyl"},"content":"        ));","lastModifiedDate":"2023-10-31"},{"lineNumber":156,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(PERSON_STUB));","lastModifiedDate":"2023-10-31"},{"lineNumber":157,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":158,"author":{"gitId":"songfangyl"},"content":"        // Wrong Email Predicate","lastModifiedDate":"2023-10-31"},{"lineNumber":159,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d predicate \u003d new PersonContainsKeywordsPredicate(Arrays.asList(","lastModifiedDate":"2023-10-31"},{"lineNumber":160,"author":{"gitId":"songfangyl"},"content":"                new PriorityContainsKeywordsPredicate(WRONG_KEYWORD_LIST),","lastModifiedDate":"2023-10-31"},{"lineNumber":161,"author":{"gitId":"songfangyl"},"content":"                ADDRESS_PREDICATE, INSURANCE_PREDICATE, NAME_PREDICATE,","lastModifiedDate":"2023-10-31"},{"lineNumber":162,"author":{"gitId":"songfangyl"},"content":"                PHONE_PREDICATE, EMAIL_PREDICATE, REMARK_PREDICATE, TAG_PREDICATE","lastModifiedDate":"2023-10-31"},{"lineNumber":163,"author":{"gitId":"songfangyl"},"content":"        ));","lastModifiedDate":"2023-10-31"},{"lineNumber":164,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(PERSON_STUB));","lastModifiedDate":"2023-10-31"},{"lineNumber":165,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":166,"author":{"gitId":"songfangyl"},"content":"        // Wrong Email Predicate","lastModifiedDate":"2023-10-31"},{"lineNumber":167,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d predicate \u003d new PersonContainsKeywordsPredicate(Arrays.asList(","lastModifiedDate":"2023-10-31"},{"lineNumber":168,"author":{"gitId":"songfangyl"},"content":"                new RemarkContainsKeywordsPredicate(WRONG_KEYWORD_LIST),","lastModifiedDate":"2023-10-31"},{"lineNumber":169,"author":{"gitId":"songfangyl"},"content":"                ADDRESS_PREDICATE, INSURANCE_PREDICATE, NAME_PREDICATE,","lastModifiedDate":"2023-10-31"},{"lineNumber":170,"author":{"gitId":"songfangyl"},"content":"                PHONE_PREDICATE, PRIORITY_PREDICATE, EMAIL_PREDICATE, TAG_PREDICATE","lastModifiedDate":"2023-10-31"},{"lineNumber":171,"author":{"gitId":"songfangyl"},"content":"        ));","lastModifiedDate":"2023-10-31"},{"lineNumber":172,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(PERSON_STUB));","lastModifiedDate":"2023-10-31"},{"lineNumber":173,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":174,"author":{"gitId":"songfangyl"},"content":"        // Wrong Email Predicate","lastModifiedDate":"2023-10-31"},{"lineNumber":175,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d predicate \u003d new PersonContainsKeywordsPredicate(Arrays.asList(","lastModifiedDate":"2023-10-31"},{"lineNumber":176,"author":{"gitId":"songfangyl"},"content":"                new TagContainsKeywordsPredicate(WRONG_KEYWORD_LIST),","lastModifiedDate":"2023-10-31"},{"lineNumber":177,"author":{"gitId":"songfangyl"},"content":"                ADDRESS_PREDICATE, INSURANCE_PREDICATE, NAME_PREDICATE,","lastModifiedDate":"2023-10-31"},{"lineNumber":178,"author":{"gitId":"songfangyl"},"content":"                PHONE_PREDICATE, PRIORITY_PREDICATE, REMARK_PREDICATE, EMAIL_PREDICATE","lastModifiedDate":"2023-10-31"},{"lineNumber":179,"author":{"gitId":"songfangyl"},"content":"        ));","lastModifiedDate":"2023-10-31"},{"lineNumber":180,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(PERSON_STUB));","lastModifiedDate":"2023-10-31"},{"lineNumber":181,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":182,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"songfangyl":182}},{"path":"src/test/java/seedu/address/model/person/predicate/PhoneContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package seedu.address.model.person.predicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"import java.util.List;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"public class PhoneContainsKeywordsPredicateTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"    private static final String PHONE_STUB \u003d \"12345678\";","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"    public void equals() {","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"        PhoneContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"                new PhoneContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"        PhoneContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"                new PhoneContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"        PhoneContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"                new PhoneContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"songfangyl"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"songfangyl"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"songfangyl"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"songfangyl"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"songfangyl"},"content":"        // different  -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"songfangyl"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"songfangyl"},"content":"    public void test_phoneContainsKeywordsAsPrefix_returnsTrue() {","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"songfangyl"},"content":"        // One Keyword","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"songfangyl"},"content":"        PhoneContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"songfangyl"},"content":"                new PhoneContainsKeywordsPredicate(Collections.singletonList(\"12345678\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPhone(PHONE_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new PhoneContainsKeywordsPredicate(Arrays.asList(\"1234\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPhone(PHONE_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"songfangyl"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new PhoneContainsKeywordsPredicate(Arrays.asList(\"1234\", \"12\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPhone(PHONE_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"songfangyl"},"content":"        // Empty Keyword","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new PhoneContainsKeywordsPredicate(Arrays.asList(\"\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPhone(PHONE_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"songfangyl"},"content":"    public void test_phoneDoesNotContainKeywordsAsPrefix_returnsFalse() {","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"songfangyl"},"content":"        // Zero keywords","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"songfangyl"},"content":"        PhoneContainsKeywordsPredicate predicate \u003d new PhoneContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPhone(PHONE_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"songfangyl"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new PhoneContainsKeywordsPredicate(Arrays.asList(\"87654321\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPhone(PHONE_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new PhoneContainsKeywordsPredicate(Arrays.asList(\"8765\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPhone(PHONE_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"songfangyl"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new PhoneContainsKeywordsPredicate(Arrays.asList(\"12345678\", \"87654321\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPhone(PHONE_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new PhoneContainsKeywordsPredicate(Arrays.asList(\"12345\", \"00012\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPhone(PHONE_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"songfangyl"},"content":"        // Keywords match name, email and address, but does not match phone","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new PhoneContainsKeywordsPredicate(Arrays.asList(\"Main Street\", \"Alice\", \"alice@email.com\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345678\")","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"songfangyl"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"songfangyl"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"songfangyl"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"songfangyl"},"content":"        PhoneContainsKeywordsPredicate predicate \u003d new PhoneContainsKeywordsPredicate(keywords);","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"songfangyl"},"content":"        String expected \u003d PhoneContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"songfangyl"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"songfangyl":100}},{"path":"src/test/java/seedu/address/model/person/predicate/PriorityContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package seedu.address.model.person.predicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"import java.util.List;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"public class PriorityContainsKeywordsPredicateTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"    private static final String PRIORITY_STUB \u003d \"high\";","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"    public void equals() {","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"        PriorityContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"                new PriorityContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"        PriorityContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"                new PriorityContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"        PriorityContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"                new PriorityContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"songfangyl"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"songfangyl"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"songfangyl"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"songfangyl"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"songfangyl"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"songfangyl"},"content":"        // different  -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"songfangyl"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"songfangyl"},"content":"    public void test_priorityContainsKeywordsAsPrefix_returnsTrue() {","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"songfangyl"},"content":"        // One Keyword","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"songfangyl"},"content":"        PriorityContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"songfangyl"},"content":"                new PriorityContainsKeywordsPredicate(Collections.singletonList(\"high\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPriority(PRIORITY_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new PriorityContainsKeywordsPredicate(Arrays.asList(\"hi\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPriority(PRIORITY_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"songfangyl"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new PriorityContainsKeywordsPredicate(Arrays.asList(\"high\", \"hi\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPriority(PRIORITY_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"songfangyl"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new PriorityContainsKeywordsPredicate(Arrays.asList(\"hIGh\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPriority(PRIORITY_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new PriorityContainsKeywordsPredicate(Arrays.asList(\"HI\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPriority(PRIORITY_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"songfangyl"},"content":"        // Empty keywords","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new PriorityContainsKeywordsPredicate(Arrays.asList(\"\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPriority(PRIORITY_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"songfangyl"},"content":"    public void test_priorityDoesNotContainKeywordsAsPrefix_returnsFalse() {","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"songfangyl"},"content":"        // Zero keywords","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"songfangyl"},"content":"        PriorityContainsKeywordsPredicate predicate \u003d new PriorityContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPriority(PRIORITY_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"songfangyl"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new PriorityContainsKeywordsPredicate(Arrays.asList(\"low\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPriority(PRIORITY_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new PriorityContainsKeywordsPredicate(Arrays.asList(\"median\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPriority(PRIORITY_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"songfangyl"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new PriorityContainsKeywordsPredicate(Arrays.asList(\"high\", \"low\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPriority(PRIORITY_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"songfangyl"},"content":"        // Keywords match name, phone, email and address, but does not match priority","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new PriorityContainsKeywordsPredicate(Arrays.asList(\"12345678\", \"Main Street\", \"Alice\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345678\")","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"songfangyl"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").withPriority(PRIORITY_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"songfangyl"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"songfangyl"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"songfangyl"},"content":"        PriorityContainsKeywordsPredicate predicate \u003d new PriorityContainsKeywordsPredicate(keywords);","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"songfangyl"},"content":"        String expected \u003d PriorityContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"songfangyl"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":106,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"songfangyl":106}},{"path":"src/test/java/seedu/address/model/person/predicate/RemarkContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package seedu.address.model.person.predicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"import java.util.List;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"public class RemarkContainsKeywordsPredicateTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"    private static final String REMARK_STUB \u003d \"Some Remarks...\";","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"    public void equals() {","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"        RemarkContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"                new RemarkContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"        RemarkContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"                new RemarkContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"        RemarkContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"                new RemarkContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"songfangyl"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"songfangyl"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"songfangyl"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"songfangyl"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"songfangyl"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"songfangyl"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"songfangyl"},"content":"    public void test_remarkContainsKeywordsAsPrefix_returnsTrue() {","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"songfangyl"},"content":"        // One Keyword","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"songfangyl"},"content":"        RemarkContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"songfangyl"},"content":"                new RemarkContainsKeywordsPredicate(Collections.singletonList(\"Some\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withRemark(REMARK_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new RemarkContainsKeywordsPredicate(Arrays.asList(\"Rema\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withRemark(REMARK_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"songfangyl"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new RemarkContainsKeywordsPredicate(Arrays.asList(\"Some\", \"Remarks...\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withRemark(REMARK_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new RemarkContainsKeywordsPredicate(Arrays.asList(\"So\", \"Re\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withRemark(REMARK_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"songfangyl"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new RemarkContainsKeywordsPredicate(Arrays.asList(\"Some\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withRemark(REMARK_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new RemarkContainsKeywordsPredicate(Arrays.asList(\"Re\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withRemark(REMARK_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"songfangyl"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new RemarkContainsKeywordsPredicate(Arrays.asList(\"sOMe\", \"rEMaRks...\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withRemark(REMARK_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new RemarkContainsKeywordsPredicate(Arrays.asList(\"sOM\", \"rEM\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withRemark(REMARK_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"songfangyl"},"content":"        // Keywords match but there are some words between the keywords","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new RemarkContainsKeywordsPredicate(Arrays.asList(\"Remarks...\", \"Some\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withRemark(REMARK_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new RemarkContainsKeywordsPredicate(Arrays.asList(\"Rem\", \"S\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withRemark(REMARK_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"songfangyl"},"content":"        // Empty Keyword","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new RemarkContainsKeywordsPredicate(Arrays.asList(\"\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withRemark(REMARK_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"songfangyl"},"content":"    public void test_remarkDoesNotContainKeywordsAsPrefix_returnsFalse() {","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"songfangyl"},"content":"        // Zero keywords","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"songfangyl"},"content":"        RemarkContainsKeywordsPredicate predicate \u003d new RemarkContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(new PersonBuilder().withRemark(REMARK_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"songfangyl"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new RemarkContainsKeywordsPredicate(Arrays.asList(\"Apple\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(new PersonBuilder().withRemark(REMARK_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new RemarkContainsKeywordsPredicate(Arrays.asList(\"Ap\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(new PersonBuilder().withRemark(REMARK_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"songfangyl"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new RemarkContainsKeywordsPredicate(Arrays.asList(\"Some\", \"Apple\", \"Eat\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":106,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(new PersonBuilder().withRemark(REMARK_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":107,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":108,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new RemarkContainsKeywordsPredicate(Arrays.asList(\"Som\", \"Re\", \"Mark\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(new PersonBuilder().withRemark(REMARK_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":111,"author":{"gitId":"songfangyl"},"content":"        // Keywords match phone, email, name and address, but does not match remark","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new RemarkContainsKeywordsPredicate(Arrays.asList(\"12345678\", \"alice@email.com\",","lastModifiedDate":"2023-10-31"},{"lineNumber":113,"author":{"gitId":"songfangyl"},"content":"                \"Alice\", \"Main\", \"Street\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":114,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345678\")","lastModifiedDate":"2023-10-31"},{"lineNumber":115,"author":{"gitId":"songfangyl"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").withRemark(REMARK_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":116,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":117,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":118,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":119,"author":{"gitId":"songfangyl"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-31"},{"lineNumber":120,"author":{"gitId":"songfangyl"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2023-10-31"},{"lineNumber":121,"author":{"gitId":"songfangyl"},"content":"        RemarkContainsKeywordsPredicate predicate \u003d new RemarkContainsKeywordsPredicate(keywords);","lastModifiedDate":"2023-10-31"},{"lineNumber":122,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":123,"author":{"gitId":"songfangyl"},"content":"        String expected \u003d RemarkContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2023-10-31"},{"lineNumber":124,"author":{"gitId":"songfangyl"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-31"},{"lineNumber":125,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":126,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"songfangyl":126}},{"path":"src/test/java/seedu/address/model/person/predicate/TagContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"songfangyl"},"content":"package seedu.address.model.person.predicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"songfangyl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"songfangyl"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"songfangyl"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"songfangyl"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"songfangyl"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"songfangyl"},"content":"import java.util.List;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"songfangyl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"songfangyl"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"songfangyl"},"content":"public class TagContainsKeywordsPredicateTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"songfangyl"},"content":"    private static final String[] Tag_STUB \u003d new String[]{","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"songfangyl"},"content":"        \"Male\", \"Best Friend\", \"Old People\"","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"songfangyl"},"content":"    };","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"    public void equals() {","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"songfangyl"},"content":"        TagContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"songfangyl"},"content":"                new TagContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"songfangyl"},"content":"        TagContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"songfangyl"},"content":"                new TagContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"songfangyl"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"songfangyl"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"songfangyl"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"songfangyl"},"content":"        TagContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"songfangyl"},"content":"                new TagContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"songfangyl"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"songfangyl"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"songfangyl"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"songfangyl"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"songfangyl"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"songfangyl"},"content":"        // different  -\u003e returns false","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"songfangyl"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"songfangyl"},"content":"    public void test_tagContainsKeywordsAsPrefix_returnsTrue() {","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"songfangyl"},"content":"        // One Keyword","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"songfangyl"},"content":"        TagContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"songfangyl"},"content":"                new TagContainsKeywordsPredicate(Collections.singletonList(\"Male\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(Tag_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"Be\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(Tag_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"songfangyl"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"Old\", \"Friend\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(Tag_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"Fri\", \"Ma\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(Tag_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"songfangyl"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"Friend\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(Tag_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"Ol\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(Tag_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"songfangyl"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"fRienD\", \"peOPlE\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(Tag_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"oL\", \"maL\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(Tag_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"songfangyl"},"content":"        // Keywords match but not in order","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"People\", \"Old\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(Tag_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"Peo\", \"Ol\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(Tag_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"songfangyl"},"content":"        // Empty Keyword","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"songfangyl"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(Tag_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"songfangyl"},"content":"    public void test_tagDoesNotContainKeywordsAsPrefix_returnsFalse() {","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"songfangyl"},"content":"        // Zero keywords","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"songfangyl"},"content":"        TagContainsKeywordsPredicate predicate \u003d new TagContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(Tag_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"songfangyl"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"Girl\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(Tag_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"Wrong\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags().build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"songfangyl"},"content":"        // Multiple keywords","lastModifiedDate":"2023-10-31"},{"lineNumber":106,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"Old\", \"What\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":107,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(Tag_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":108,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"songfangyl"},"content":"        // Keywords match phone, name, email and address, but does not match tag","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"songfangyl"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"12345678\", \"alice@email.com\",","lastModifiedDate":"2023-10-31"},{"lineNumber":111,"author":{"gitId":"songfangyl"},"content":"                \"Alice\", \"Main Street\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"songfangyl"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345678\")","lastModifiedDate":"2023-10-31"},{"lineNumber":113,"author":{"gitId":"songfangyl"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").withTags(Tag_STUB).build()));","lastModifiedDate":"2023-10-31"},{"lineNumber":114,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":115,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":116,"author":{"gitId":"songfangyl"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":117,"author":{"gitId":"songfangyl"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-31"},{"lineNumber":118,"author":{"gitId":"songfangyl"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2023-10-31"},{"lineNumber":119,"author":{"gitId":"songfangyl"},"content":"        TagContainsKeywordsPredicate predicate \u003d new TagContainsKeywordsPredicate(keywords);","lastModifiedDate":"2023-10-31"},{"lineNumber":120,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":121,"author":{"gitId":"songfangyl"},"content":"        String expected \u003d TagContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2023-10-31"},{"lineNumber":122,"author":{"gitId":"songfangyl"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-31"},{"lineNumber":123,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":124,"author":{"gitId":"songfangyl"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"songfangyl":124}},{"path":"src/test/java/seedu/address/model/priority/PriorityTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LamJiuFong"},"content":"package seedu.address.model.priority;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"LamJiuFong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"LamJiuFong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"LamJiuFong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.model.priority.Priority.HIGH_PRIORITY_KEYWORD;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.model.priority.Priority.LOW_PRIORITY_KEYWORD;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.model.priority.Priority.isValidPriority;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"LamJiuFong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"LamJiuFong"},"content":"public class PriorityTest {","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"LamJiuFong"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"LamJiuFong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Priority(null));","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"LamJiuFong"},"content":"    public void constructor_invalidPriority_throwsParseException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"LamJiuFong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Priority(\"blah\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"LamJiuFong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Priority(\"high low\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"LamJiuFong"},"content":"    public void assignPriorityLevel_validPriority_assignsCorrectPriorityLevel() {","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(Priority.Level.LOW, new Priority(\"low\").getPriorityLevel());","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(Priority.Level.MEDIUM, new Priority(\"medium\").getPriorityLevel());","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(Priority.Level.HIGH, new Priority(\"high\").getPriorityLevel());","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(Priority.Level.NONE, new Priority(\"-\").getPriorityLevel());","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"LamJiuFong"},"content":"    public void isValidPriority_invalidPriority_returnsFalse() {","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"LamJiuFong"},"content":"        assertFalse(isValidPriority(null));","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"LamJiuFong"},"content":"        assertFalse(isValidPriority(\"high low\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"LamJiuFong"},"content":"        assertFalse(isValidPriority(\"top\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"LamJiuFong"},"content":"        assertFalse(isValidPriority(\"\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"LamJiuFong"},"content":"        assertFalse(isValidPriority(\" \"));","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"LamJiuFong"},"content":"    public void isValidPriority_validPriority_returnsTrue() {","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"LamJiuFong"},"content":"        assertTrue(isValidPriority(\"high\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"LamJiuFong"},"content":"        assertTrue(isValidPriority(\"medium\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"LamJiuFong"},"content":"        assertTrue(isValidPriority(\"low\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"LamJiuFong"},"content":"        assertTrue(isValidPriority(\"-\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"LamJiuFong"},"content":"    public void equalsMethod() {","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"LamJiuFong"},"content":"        Priority priority \u003d new Priority(LOW_PRIORITY_KEYWORD);","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"LamJiuFong"},"content":"        // same object -\u003e return true","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"LamJiuFong"},"content":"        assertTrue(priority.equals(priority));","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"LamJiuFong"},"content":"        // different type -\u003e false","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"LamJiuFong"},"content":"        assertFalse(priority.equals(new Object()));","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"LamJiuFong"},"content":"        assertFalse(priority.equals(null));","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"LamJiuFong"},"content":"        assertFalse(priority.equals(new Tag(HIGH_PRIORITY_KEYWORD)));","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"LamJiuFong"},"content":"        // different value -\u003e false","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"LamJiuFong"},"content":"        assertFalse(priority.equals(new Priority(HIGH_PRIORITY_KEYWORD)));","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"LamJiuFong"},"content":"        // same value -\u003e true","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"LamJiuFong"},"content":"        assertTrue(priority.equals(new Priority(LOW_PRIORITY_KEYWORD)));","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"LamJiuFong"},"content":"    public void hashCodeMethod() {","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"LamJiuFong"},"content":"        Priority priority \u003d new Priority(LOW_PRIORITY_KEYWORD);","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(priority.hashCode(), Priority.Level.LOW.hashCode());","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"LamJiuFong"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"yucongkoo":1,"LamJiuFong":75}},{"path":"src/test/java/seedu/address/storage/jsonadaptedperson/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package seedu.address.storage.jsonadaptedperson;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.storage.jsonadaptedperson.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.testutil.TypicalPersons.CALMEN;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.testutil.TypicalPersons.DERRICK;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"Jweewee"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.insurance.Insurance;","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.person.NonEmptyAddress;","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.person.PersonTestUtil;","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.priority.Priority;","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"Jweewee"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(Appointment.class);","lastModifiedDate":"2023-11-01"},{"lineNumber":31,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"    private static final JsonAdaptedName INVALID_NAME \u003d new JsonAdaptedName(\"R@chel\");","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"    private static final JsonAdaptedPhone INVALID_PHONE \u003d new JsonAdaptedPhone(\"+651234\");","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"Jweewee"},"content":"    private static final JsonAdaptedAddress INVALID_ADDRESS \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"Jweewee"},"content":"            new JsonAdaptedAddress(PersonTestUtil.generateStringOfLength(NonEmptyAddress.MAX_LENGTH + 1));","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"    private static final JsonAdaptedEmail INVALID_EMAIL \u003d new JsonAdaptedEmail(\"example.com\");","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"LamJiuFong"},"content":"    private static final JsonAdaptedPriority INVALID_PRIORITY \u003d new JsonAdaptedPriority(\"top\");","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"Jweewee"},"content":"    private static final String INVALID_INSURANCE \u003d \"/*weird insurance\";","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"Jweewee"},"content":"    private static final String INVALID_APPOINTMENT_DATE \u003d \"10 Oct 2025\";","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"Jweewee"},"content":"    private static final String INVALID_APPOINTMENT_TIME \u003d \"10:00\";","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"Jweewee"},"content":"    private static final String INVALID_APPOINTMENT_VENUE \u003d \"test1test2test3test4test5test6test7\";","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"Jweewee"},"content":"    private static final String INVALID_APPOINTMENT_COUNT \u003d \"-1000\";","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"Jweewee"},"content":"    private static final JsonAdaptedAppointment INVALID_APPOINTMENT \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"Jweewee"},"content":"            new JsonAdaptedAppointment(INVALID_APPOINTMENT_DATE, INVALID_APPOINTMENT_TIME, INVALID_APPOINTMENT_VENUE);","lastModifiedDate":"2023-11-01"},{"lineNumber":48,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":49,"author":{"gitId":"yucongkoo"},"content":"    private static final JsonAdaptedName VALID_NAME \u003d new JsonAdaptedName(BENSON.getName().toString());","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"yucongkoo"},"content":"    private static final JsonAdaptedPhone VALID_PHONE \u003d new JsonAdaptedPhone(BENSON.getPhone().toString());","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"yucongkoo"},"content":"    private static final JsonAdaptedEmail VALID_EMAIL \u003d new JsonAdaptedEmail(BENSON.getEmail().toString());","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"yucongkoo"},"content":"    private static final JsonAdaptedAddress VALID_ADDRESS \u003d new JsonAdaptedAddress(BENSON.getAddress());","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"songfangyl"},"content":"    private static final JsonAdaptedRemark VALID_REMARK \u003d new JsonAdaptedRemark(BENSON.getRemark());","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"Jweewee"},"content":"    private static final List\u003cJsonAdaptedInsurance\u003e VALID_INSURANCES \u003d BENSON.getInsurances().stream()","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"Jweewee"},"content":"            .map(JsonAdaptedInsurance::new)","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"Jweewee"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"Jweewee"},"content":"    private static final JsonAdaptedAppointment VALID_APPOINTMENT \u003d new JsonAdaptedAppointment(BENSON.getAppointment());","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"Jweewee"},"content":"    private static final JsonAdaptedAppointmentCount VALID_APPOINTMENT_COUNT \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"Jweewee"},"content":"            new JsonAdaptedAppointmentCount(BENSON.getAppointmentCount());","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"LamJiuFong"},"content":"    private static final JsonAdaptedPriority VALID_PRIORITY \u003d new JsonAdaptedPriority(DERRICK.getPriority());","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"Jweewee"},"content":"        logger.info(BENSON.toString());","lastModifiedDate":"2023-11-01"},{"lineNumber":71,"author":{"gitId":"Jweewee"},"content":"        logger.info(person.toModelType().toString());","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"yucongkoo"},"content":"    @Test","lastModifiedDate":"2023-10-11"},{"lineNumber":76,"author":{"gitId":"yucongkoo"},"content":"    public void toModelType_validPersonDetailsWithoutAddress_returnsPerson() throws Exception {","lastModifiedDate":"2023-10-11"},{"lineNumber":77,"author":{"gitId":"yucongkoo"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(CALMEN);","lastModifiedDate":"2023-10-11"},{"lineNumber":78,"author":{"gitId":"yucongkoo"},"content":"        assertEquals(CALMEN, person.toModelType());","lastModifiedDate":"2023-10-11"},{"lineNumber":79,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":80,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":81,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"LamJiuFong"},"content":"    public void toModelType_validPersonDetailsWithPriority_returnsPerson() throws Exception {","lastModifiedDate":"2023-10-23"},{"lineNumber":83,"author":{"gitId":"LamJiuFong"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(DERRICK);","lastModifiedDate":"2023-10-23"},{"lineNumber":84,"author":{"gitId":"LamJiuFong"},"content":"        assertEquals(DERRICK, person.toModelType());","lastModifiedDate":"2023-10-23"},{"lineNumber":85,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":86,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"Jweewee"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK, VALID_TAGS,","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"Jweewee"},"content":"                        VALID_INSURANCES, VALID_APPOINTMENT, VALID_APPOINTMENT_COUNT, VALID_PRIORITY);","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"Jweewee"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"Jweewee"},"content":"                VALID_REMARK, VALID_TAGS, VALID_INSURANCES, VALID_APPOINTMENT, VALID_APPOINTMENT_COUNT, VALID_PRIORITY);","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"songfangyl"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK, VALID_TAGS,","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"Jweewee"},"content":"                        VALID_INSURANCES, VALID_APPOINTMENT, VALID_APPOINTMENT_COUNT, VALID_PRIORITY);","lastModifiedDate":"2023-10-31"},{"lineNumber":111,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"songfangyl"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"Jweewee"},"content":"                VALID_REMARK, VALID_TAGS, VALID_INSURANCES, VALID_APPOINTMENT, VALID_APPOINTMENT_COUNT, VALID_PRIORITY);","lastModifiedDate":"2023-10-31"},{"lineNumber":120,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"Jweewee"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_REMARK, VALID_TAGS,","lastModifiedDate":"2023-10-31"},{"lineNumber":129,"author":{"gitId":"Jweewee"},"content":"                       VALID_INSURANCES, VALID_APPOINTMENT, VALID_APPOINTMENT_COUNT, VALID_PRIORITY);","lastModifiedDate":"2023-10-31"},{"lineNumber":130,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"songfangyl"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2023-10-25"},{"lineNumber":138,"author":{"gitId":"Jweewee"},"content":"                VALID_REMARK, VALID_TAGS, VALID_INSURANCES, VALID_APPOINTMENT, VALID_APPOINTMENT_COUNT, VALID_PRIORITY);","lastModifiedDate":"2023-10-31"},{"lineNumber":139,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"Jweewee"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_REMARK, VALID_TAGS,","lastModifiedDate":"2023-10-31"},{"lineNumber":148,"author":{"gitId":"Jweewee"},"content":"                        VALID_INSURANCES, VALID_APPOINTMENT, VALID_APPOINTMENT_COUNT, VALID_PRIORITY);","lastModifiedDate":"2023-10-31"},{"lineNumber":149,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":150,"author":{"gitId":"yucongkoo"},"content":"        String expectedMessage \u003d NonEmptyAddress.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":156,"author":{"gitId":"songfangyl"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2023-10-25"},{"lineNumber":157,"author":{"gitId":"Jweewee"},"content":"                VALID_REMARK, VALID_TAGS, VALID_INSURANCES, VALID_APPOINTMENT, VALID_APPOINTMENT_COUNT, VALID_PRIORITY);","lastModifiedDate":"2023-10-31"},{"lineNumber":158,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":168,"author":{"gitId":"songfangyl"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK, invalidTags,","lastModifiedDate":"2023-10-25"},{"lineNumber":169,"author":{"gitId":"Jweewee"},"content":"                        VALID_INSURANCES, VALID_APPOINTMENT, VALID_APPOINTMENT_COUNT, VALID_PRIORITY);","lastModifiedDate":"2023-10-31"},{"lineNumber":170,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":173,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":174,"author":{"gitId":"Jweewee"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":175,"author":{"gitId":"Jweewee"},"content":"    public void toModelType_invalidInsurances_throwsIllegalValueException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":176,"author":{"gitId":"Jweewee"},"content":"        List\u003cJsonAdaptedInsurance\u003e invalidInsurances \u003d new ArrayList\u003c\u003e(VALID_INSURANCES);","lastModifiedDate":"2023-10-31"},{"lineNumber":177,"author":{"gitId":"Jweewee"},"content":"        invalidInsurances.add(new JsonAdaptedInsurance(INVALID_INSURANCE));","lastModifiedDate":"2023-10-31"},{"lineNumber":178,"author":{"gitId":"Jweewee"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":179,"author":{"gitId":"Jweewee"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK, VALID_TAGS,","lastModifiedDate":"2023-10-31"},{"lineNumber":180,"author":{"gitId":"Jweewee"},"content":"                        invalidInsurances, VALID_APPOINTMENT, VALID_APPOINTMENT_COUNT, VALID_PRIORITY);","lastModifiedDate":"2023-10-31"},{"lineNumber":181,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":182,"author":{"gitId":"Jweewee"},"content":"        String expectedMessage \u003d Insurance.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-31"},{"lineNumber":183,"author":{"gitId":"Jweewee"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-31"},{"lineNumber":184,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":185,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":186,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":187,"author":{"gitId":"LamJiuFong"},"content":"    public void toModelType_invalidPriority_throwsIllegalValueException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":188,"author":{"gitId":"LamJiuFong"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-23"},{"lineNumber":189,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":190,"author":{"gitId":"Jweewee"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK, VALID_TAGS,","lastModifiedDate":"2023-10-31"},{"lineNumber":191,"author":{"gitId":"Jweewee"},"content":"                        VALID_INSURANCES, VALID_APPOINTMENT, VALID_APPOINTMENT_COUNT, INVALID_PRIORITY);","lastModifiedDate":"2023-10-31"},{"lineNumber":192,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":193,"author":{"gitId":"LamJiuFong"},"content":"        String expectedMessage \u003d Priority.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-23"},{"lineNumber":194,"author":{"gitId":"LamJiuFong"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-23"},{"lineNumber":195,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":196,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":197,"author":{"gitId":"LamJiuFong"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":198,"author":{"gitId":"LamJiuFong"},"content":"    public void toModelType_nullPriority_throwsIllegalValueException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":199,"author":{"gitId":"LamJiuFong"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-10-23"},{"lineNumber":200,"author":{"gitId":"Jweewee"},"content":"                VALID_REMARK, VALID_TAGS, VALID_INSURANCES, VALID_APPOINTMENT, VALID_APPOINTMENT_COUNT, null);","lastModifiedDate":"2023-10-31"},{"lineNumber":201,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":202,"author":{"gitId":"LamJiuFong"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Priority.class.getSimpleName());","lastModifiedDate":"2023-10-23"},{"lineNumber":203,"author":{"gitId":"LamJiuFong"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-23"},{"lineNumber":204,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":205,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":206,"author":{"gitId":"Jweewee"},"content":"    @Test","lastModifiedDate":"2023-11-01"},{"lineNumber":207,"author":{"gitId":"Jweewee"},"content":"    public void toModelType_invalidAppointment_throwsIllegalValueException() {","lastModifiedDate":"2023-11-01"},{"lineNumber":208,"author":{"gitId":"Jweewee"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-11-01"},{"lineNumber":209,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":210,"author":{"gitId":"Jweewee"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_REMARK, VALID_TAGS,","lastModifiedDate":"2023-11-01"},{"lineNumber":211,"author":{"gitId":"Jweewee"},"content":"                        VALID_INSURANCES, INVALID_APPOINTMENT, VALID_APPOINTMENT_COUNT, VALID_PRIORITY);","lastModifiedDate":"2023-11-01"},{"lineNumber":212,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":213,"author":{"gitId":"Jweewee"},"content":"        String expectedMessage \u003d Appointment.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-11-01"},{"lineNumber":214,"author":{"gitId":"Jweewee"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-11-01"},{"lineNumber":215,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"yucongkoo":18,"songfangyl":6,"LamJiuFong":24,"-":89,"Jweewee":79}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"yucongkoo"},"content":"        descriptor.setAddress(Address.createAddress(address));","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"yucongkoo":1,"-":70}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.insurance.Insurance;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.person.AppointmentCount;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.person.EmptyAddress;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.person.NonEmptyAddress;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"songfangyl"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2023-09-27"},{"lineNumber":17,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.priority.Priority;","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"songfangyl"},"content":"    public static final String DEFAULT_REMARK \u003d \"\";","lastModifiedDate":"2023-09-27"},{"lineNumber":30,"author":{"gitId":"LamJiuFong"},"content":"    public static final String DEFAULT_PRIORITY \u003d \"high\";","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"Jweewee"},"content":"    public static final String DEFAULT_APPOINTMENT \u003d \"10 Oct 2025\";","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"Jweewee"},"content":"    public static final String DEFAULT_APPOINTMENT_TIME \u003d \"2000\";","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"Jweewee"},"content":"    public static final String DEFAULT_APPOINTMENT_VENUE \u003d \"Jewel Changi\";","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"Jweewee"},"content":"    public static final String DEFAULT_APPOINTMENT_COUNT \u003d \"0\";","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"songfangyl"},"content":"    private Remark remark;","lastModifiedDate":"2023-09-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"Jweewee"},"content":"    private Set\u003cInsurance\u003e insurances;","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"Jweewee"},"content":"    private Appointment appointment;","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"Jweewee"},"content":"    private AppointmentCount count;","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"LamJiuFong"},"content":"    private Priority priority;","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"songfangyl"},"content":"        remark \u003d new Remark(DEFAULT_REMARK);","lastModifiedDate":"2023-09-27"},{"lineNumber":55,"author":{"gitId":"yucongkoo"},"content":"        address \u003d new NonEmptyAddress(DEFAULT_ADDRESS);","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"Jweewee"},"content":"        insurances \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"Jweewee"},"content":"        appointment \u003d new Appointment(DEFAULT_APPOINTMENT, DEFAULT_APPOINTMENT_TIME, DEFAULT_APPOINTMENT_VENUE);","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"Jweewee"},"content":"        count \u003d new AppointmentCount(DEFAULT_APPOINTMENT_COUNT);","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"LamJiuFong"},"content":"        priority \u003d new Priority(DEFAULT_PRIORITY);","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"songfangyl"},"content":"        remark \u003d personToCopy.getRemark();","lastModifiedDate":"2023-09-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"Jweewee"},"content":"        insurances \u003d new HashSet\u003c\u003e(personToCopy.getInsurances());","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"Jweewee"},"content":"        appointment \u003d personToCopy.getAppointment();","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"Jweewee"},"content":"        count \u003d personToCopy.getAppointmentCount();","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"LamJiuFong"},"content":"        priority \u003d personToCopy.getPriority();","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"LamJiuFong"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"LamJiuFong"},"content":"     * Set the tags from {@code tags} to the [@code Person} that we are building.","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"LamJiuFong"},"content":"     *","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"LamJiuFong"},"content":"     * @param tags Set of tags.","lastModifiedDate":"2023-10-18"},{"lineNumber":99,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"LamJiuFong"},"content":"    public PersonBuilder withTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"LamJiuFong"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"LamJiuFong"},"content":"        return this;","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":105,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":106,"author":{"gitId":"Jweewee"},"content":"     * Assigns the customer with {@code Insurance}","lastModifiedDate":"2023-10-31"},{"lineNumber":107,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":108,"author":{"gitId":"Jweewee"},"content":"    public PersonBuilder withInsurances(String... insurances) {","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"Jweewee"},"content":"        this.insurances \u003d SampleDataUtil.getInsuranceSet(insurances);","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"Jweewee"},"content":"        return this;","lastModifiedDate":"2023-10-31"},{"lineNumber":111,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":113,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":114,"author":{"gitId":"Jweewee"},"content":"     * Assigns the customer with {@code Insurance}","lastModifiedDate":"2023-10-31"},{"lineNumber":115,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":116,"author":{"gitId":"Jweewee"},"content":"    public PersonBuilder withInsurances(Set\u003cInsurance\u003e insurances) {","lastModifiedDate":"2023-10-31"},{"lineNumber":117,"author":{"gitId":"Jweewee"},"content":"        this.insurances \u003d insurances;","lastModifiedDate":"2023-10-31"},{"lineNumber":118,"author":{"gitId":"Jweewee"},"content":"        return this;","lastModifiedDate":"2023-10-31"},{"lineNumber":119,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":120,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"yucongkoo"},"content":"        this.address \u003d new NonEmptyAddress(address);","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":129,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-08"},{"lineNumber":130,"author":{"gitId":"yucongkoo"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building to","lastModifiedDate":"2023-10-08"},{"lineNumber":131,"author":{"gitId":"yucongkoo"},"content":"     * be an empty address.","lastModifiedDate":"2023-10-08"},{"lineNumber":132,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-08"},{"lineNumber":133,"author":{"gitId":"yucongkoo"},"content":"    public PersonBuilder withoutAddress() {","lastModifiedDate":"2023-10-08"},{"lineNumber":134,"author":{"gitId":"yucongkoo"},"content":"        this.address \u003d EmptyAddress.getEmptyAddress();","lastModifiedDate":"2023-10-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":154,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-09-27"},{"lineNumber":155,"author":{"gitId":"songfangyl"},"content":"     * Sets the {@code Remark} of the {@code Person} that we are building.","lastModifiedDate":"2023-09-27"},{"lineNumber":156,"author":{"gitId":"songfangyl"},"content":"     */","lastModifiedDate":"2023-09-27"},{"lineNumber":157,"author":{"gitId":"songfangyl"},"content":"    public PersonBuilder withRemark(String remark) {","lastModifiedDate":"2023-09-27"},{"lineNumber":158,"author":{"gitId":"songfangyl"},"content":"        this.remark \u003d new Remark(remark);","lastModifiedDate":"2023-09-27"},{"lineNumber":159,"author":{"gitId":"songfangyl"},"content":"        return this;","lastModifiedDate":"2023-10-25"},{"lineNumber":160,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":161,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":162,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":163,"author":{"gitId":"Jweewee"},"content":"     * Sets the of the {@code Person} to {@code remark}.","lastModifiedDate":"2023-11-01"},{"lineNumber":164,"author":{"gitId":"Jweewee"},"content":"     *","lastModifiedDate":"2023-11-01"},{"lineNumber":165,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":166,"author":{"gitId":"Jweewee"},"content":"    public PersonBuilder withRemark(Remark remark) {","lastModifiedDate":"2023-11-01"},{"lineNumber":167,"author":{"gitId":"Jweewee"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2023-11-01"},{"lineNumber":168,"author":{"gitId":"Jweewee"},"content":"        return this;","lastModifiedDate":"2023-11-01"},{"lineNumber":169,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":170,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":171,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":172,"author":{"gitId":"Jweewee"},"content":"     * Sets the {@code Appointment} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-31"},{"lineNumber":173,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":174,"author":{"gitId":"Jweewee"},"content":"    public PersonBuilder withAppointment(String date, String time, String venue) {","lastModifiedDate":"2023-10-31"},{"lineNumber":175,"author":{"gitId":"Jweewee"},"content":"        this.appointment \u003d new Appointment(date, time, venue);","lastModifiedDate":"2023-10-31"},{"lineNumber":176,"author":{"gitId":"Jweewee"},"content":"        return this;","lastModifiedDate":"2023-10-31"},{"lineNumber":177,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":178,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":179,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":180,"author":{"gitId":"Jweewee"},"content":"     * Sets the {@code Appointment} of the {@code Person} that we are building.","lastModifiedDate":"2023-11-01"},{"lineNumber":181,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":182,"author":{"gitId":"Jweewee"},"content":"    public PersonBuilder withAppointment(Appointment appointment) {","lastModifiedDate":"2023-11-01"},{"lineNumber":183,"author":{"gitId":"Jweewee"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2023-11-01"},{"lineNumber":184,"author":{"gitId":"Jweewee"},"content":"        return this;","lastModifiedDate":"2023-11-01"},{"lineNumber":185,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":186,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":187,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":188,"author":{"gitId":"Jweewee"},"content":"     * Sets the {@code AppointmentCount} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-31"},{"lineNumber":189,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":190,"author":{"gitId":"Jweewee"},"content":"    public PersonBuilder withAppointmentCount(String count) {","lastModifiedDate":"2023-10-31"},{"lineNumber":191,"author":{"gitId":"Jweewee"},"content":"        this.count \u003d new AppointmentCount(count);","lastModifiedDate":"2023-10-31"},{"lineNumber":192,"author":{"gitId":"Jweewee"},"content":"        return this;","lastModifiedDate":"2023-10-31"},{"lineNumber":193,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":194,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":195,"author":{"gitId":"songfangyl"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":196,"author":{"gitId":"LamJiuFong"},"content":"     * Sets the {@code Priority} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-23"},{"lineNumber":197,"author":{"gitId":"LamJiuFong"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":198,"author":{"gitId":"LamJiuFong"},"content":"    public PersonBuilder withPriority(String priority) {","lastModifiedDate":"2023-10-23"},{"lineNumber":199,"author":{"gitId":"LamJiuFong"},"content":"        this.priority \u003d new Priority(priority);","lastModifiedDate":"2023-10-23"},{"lineNumber":200,"author":{"gitId":"songfangyl"},"content":"        return this;","lastModifiedDate":"2023-09-27"},{"lineNumber":201,"author":{"gitId":"songfangyl"},"content":"    }","lastModifiedDate":"2023-09-27"},{"lineNumber":202,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-09-27"},{"lineNumber":203,"author":{"gitId":"Jweewee"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":204,"author":{"gitId":"Jweewee"},"content":"     * Create the {@code Person} with all information","lastModifiedDate":"2023-10-31"},{"lineNumber":205,"author":{"gitId":"Jweewee"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":207,"author":{"gitId":"Jweewee"},"content":"        return new Person(name, phone, email, address, remark, tags, insurances, appointment, count, priority);","lastModifiedDate":"2023-10-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"yucongkoo":10,"songfangyl":17,"LamJiuFong":19,"-":94,"Jweewee":70}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_INSURANCE;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD_TAG;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DELETE_INSURANCE;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DELETE_TAG;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INSURANCE;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"Jweewee"},"content":"import seedu.address.logic.commands.InsuranceCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"Jweewee"},"content":"import seedu.address.logic.commands.InsuranceCommand.UpdatePersonInsuranceDescriptor;","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.logic.commands.PriorityCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.logic.commands.TagCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"LamJiuFong"},"content":"import seedu.address.model.priority.Priority;","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":39,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":40,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"yucongkoo"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().getValue() + \" \");","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"yucongkoo"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.getTagName() + \" \")","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"Jweewee"},"content":"        person.getInsurances().stream().forEach(","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"Jweewee"},"content":"                i -\u003e sb.append(PREFIX_INSURANCE + i.getInsuranceName() + \" \")","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"Jweewee"},"content":"        );","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"LamJiuFong"},"content":"        sb.append(PREFIX_PRIORITY + person.getPriority().toString() + \" \");","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"yucongkoo"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.getValue()).append(\" \"));","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":72,"author":{"gitId":"yucongkoo"},"content":"    public static String getTagCommand(Index index, TagCommand.UpdatePersonTagsDescriptor updatePersonTagsDescriptor) {","lastModifiedDate":"2023-10-20"},{"lineNumber":73,"author":{"gitId":"yucongkoo"},"content":"        String tagsToAddString \u003d updatePersonTagsDescriptor.getTagsToAdd().stream()","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"yucongkoo"},"content":"                .map(t -\u003e \" \" + PREFIX_ADD_TAG + t.getTagName())","lastModifiedDate":"2023-10-18"},{"lineNumber":75,"author":{"gitId":"yucongkoo"},"content":"                .collect(Collectors.joining());","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"yucongkoo"},"content":"        String tagsToDeleteString \u003d updatePersonTagsDescriptor.getTagsToDelete().stream()","lastModifiedDate":"2023-10-20"},{"lineNumber":77,"author":{"gitId":"yucongkoo"},"content":"                .map(t -\u003e \" \" + PREFIX_DELETE_TAG + t.getTagName())","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"yucongkoo"},"content":"                .collect(Collectors.joining());","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"yucongkoo"},"content":"        return TagCommand.COMMAND_WORD + \" \" + index.getOneBased() + tagsToAddString + tagsToDeleteString;","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"LamJiuFong"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":83,"author":{"gitId":"Jweewee"},"content":"    public static String getInsuranceCommand(Index index,","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"Jweewee"},"content":"                                             UpdatePersonInsuranceDescriptor updatePersonInsuranceDescriptor) {","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"Jweewee"},"content":"        String insurancesToAddString \u003d updatePersonInsuranceDescriptor.getInsurancesToAdd().stream()","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"Jweewee"},"content":"                .map(i -\u003e \" \" + PREFIX_ADD_INSURANCE + i.getInsuranceName())","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"Jweewee"},"content":"                .collect(Collectors.joining());","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"Jweewee"},"content":"        String insurancesToDeleteString \u003d updatePersonInsuranceDescriptor.getInsurancesToDelete().stream()","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"Jweewee"},"content":"                .map(i -\u003e \" \" + PREFIX_DELETE_INSURANCE + i.getInsuranceName())","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"Jweewee"},"content":"                .collect(Collectors.joining());","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"Jweewee"},"content":"        return InsuranceCommand.COMMAND_WORD + \" \" + index.getOneBased()","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"Jweewee"},"content":"                + insurancesToAddString + insurancesToDeleteString;","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"Jweewee"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"LamJiuFong"},"content":"    public static String getPriorityCommand(Index index, Priority priority) {","lastModifiedDate":"2023-10-23"},{"lineNumber":99,"author":{"gitId":"LamJiuFong"},"content":"        return PriorityCommand.COMMAND_WORD + \" \" + index.getOneBased() + \" \" + priority;","lastModifiedDate":"2023-10-23"},{"lineNumber":100,"author":{"gitId":"LamJiuFong"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"yucongkoo":19,"LamJiuFong":8,"-":49,"Jweewee":25}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_DERRICK;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_CALMEN;","lastModifiedDate":"2023-10-08"},{"lineNumber":10,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_DERRICK;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"Jweewee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_INSURANCE_CAR;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_CALMEN;","lastModifiedDate":"2023-10-08"},{"lineNumber":15,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_DERRICK;","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_CALMEN;","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_DERRICK;","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"LamJiuFong"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PRIORITY_HIGH;","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"songfangyl"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_CALMEN;","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"Jweewee"},"content":"import seedu.address.model.person.Appointment;","lastModifiedDate":"2023-11-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":35,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"Jweewee"},"content":"    public static final String NO_APPT \u003d \"No Appointment Scheduled Yet\";","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"Jweewee"},"content":"    public static final String NO_APPT_TIME \u003d \"\";","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"Jweewee"},"content":"    public static final String NO_APPT_VENUE \u003d \"\";","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"Jweewee"},"content":"    public static final String INITIAL_COUNT \u003d \"0\";","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"Jweewee"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"Jweewee"},"content":"            .withInsurances(\"car insurance\")","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"Jweewee"},"content":"            .withAppointment(Appointment.getDefaultEmptyAppointment())","lastModifiedDate":"2023-11-01"},{"lineNumber":51,"author":{"gitId":"Jweewee"},"content":"            .withAppointmentCount(INITIAL_COUNT)","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"Jweewee"},"content":"            .build();","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":56,"author":{"gitId":"Jweewee"},"content":"            .withTags(\"owesMoney\", \"friends\")","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"songfangyl"},"content":"            .withRemark(\"Owned me 1M\")","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"Jweewee"},"content":"            .withInsurances(\"AIA insurance\", \"ABC insurance\")","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"Jweewee"},"content":"            .withAppointmentCount(INITIAL_COUNT)","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"Jweewee"},"content":"            .withAppointment(Appointment.getDefaultEmptyAppointment())","lastModifiedDate":"2023-11-01"},{"lineNumber":61,"author":{"gitId":"Jweewee"},"content":"            .build();","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":64,"author":{"gitId":"Jweewee"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").withInsurances(\"Great Eastern\")","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"Jweewee"},"content":"            .withAppointmentCount(INITIAL_COUNT)","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"Jweewee"},"content":"            .withAppointment(Appointment.getDefaultEmptyAppointment())","lastModifiedDate":"2023-11-01"},{"lineNumber":67,"author":{"gitId":"Jweewee"},"content":"            .build();","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"Jweewee"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\")","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"Jweewee"},"content":"            .withAppointmentCount(INITIAL_COUNT)","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"Jweewee"},"content":"            .withAppointment(Appointment.getDefaultEmptyAppointment())","lastModifiedDate":"2023-11-01"},{"lineNumber":72,"author":{"gitId":"Jweewee"},"content":"            .build();","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"TehOPanas"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"94822224\")","lastModifiedDate":"2023-10-11"},{"lineNumber":74,"author":{"gitId":"Jweewee"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").withInsurances(\"InsureIQ\")","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"Jweewee"},"content":"            .withAppointmentCount(INITIAL_COUNT)","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"Jweewee"},"content":"            .withAppointment(Appointment.getDefaultEmptyAppointment())","lastModifiedDate":"2023-11-01"},{"lineNumber":77,"author":{"gitId":"Jweewee"},"content":"            .build();","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"TehOPanas"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"94821427\")","lastModifiedDate":"2023-10-11"},{"lineNumber":79,"author":{"gitId":"Jweewee"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withPriority(\"low\")","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"Jweewee"},"content":"            .withAppointmentCount(INITIAL_COUNT)","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"Jweewee"},"content":"            .withAppointment(Appointment.getDefaultEmptyAppointment())","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"Jweewee"},"content":"            .build();","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"TehOPanas"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"94828442\")","lastModifiedDate":"2023-10-11"},{"lineNumber":84,"author":{"gitId":"Jweewee"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").withInsurances(\"GGO Insurance\")","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"Jweewee"},"content":"            .withAppointmentCount(INITIAL_COUNT)","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"Jweewee"},"content":"            .withAppointment(Appointment.getDefaultEmptyAppointment())","lastModifiedDate":"2023-11-01"},{"lineNumber":87,"author":{"gitId":"Jweewee"},"content":"            .build();","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":90,"author":{"gitId":"TehOPanas"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"84829424\")","lastModifiedDate":"2023-10-11"},{"lineNumber":91,"author":{"gitId":"Jweewee"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\")","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"Jweewee"},"content":"            .withAppointmentCount(INITIAL_COUNT)","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"Jweewee"},"content":"            .withAppointment(Appointment.getDefaultEmptyAppointment())","lastModifiedDate":"2023-11-01"},{"lineNumber":94,"author":{"gitId":"Jweewee"},"content":"            .build();","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"TehOPanas"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"84824131\")","lastModifiedDate":"2023-10-11"},{"lineNumber":96,"author":{"gitId":"Jweewee"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\")","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"Jweewee"},"content":"            .withAppointmentCount(INITIAL_COUNT)","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"Jweewee"},"content":"            .withAppointment(Appointment.getDefaultEmptyAppointment())","lastModifiedDate":"2023-11-01"},{"lineNumber":99,"author":{"gitId":"Jweewee"},"content":"            .build();","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":101,"author":{"gitId":"songfangyl"},"content":"    public static final Person JOJO \u003d new PersonBuilder().withName(\"Jojo Best\").withPhone(\"14445656\")","lastModifiedDate":"2023-10-11"},{"lineNumber":102,"author":{"gitId":"Jweewee"},"content":"            .withEmail(\"jojo@example.com\").withAddress(\"100th street\").withRemark(\"Some remark\")","lastModifiedDate":"2023-11-01"},{"lineNumber":103,"author":{"gitId":"Jweewee"},"content":"            .withAppointmentCount(INITIAL_COUNT)","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"Jweewee"},"content":"            .withAppointment(Appointment.getDefaultEmptyAppointment())","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"Jweewee"},"content":"            .build();","lastModifiedDate":"2023-10-31"},{"lineNumber":106,"author":{"gitId":"songfangyl"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":107,"author":{"gitId":"songfangyl"},"content":"    public static final Person KAKA \u003d new PersonBuilder().withName(\"Kaka Der Many\").withPhone(\"78756232\")","lastModifiedDate":"2023-10-18"},{"lineNumber":108,"author":{"gitId":"Jweewee"},"content":"            .withEmail(\"kaka@example.com\").withAddress(\"kaka street\")","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"Jweewee"},"content":"            .withAppointmentCount(INITIAL_COUNT)","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"Jweewee"},"content":"            .withAppointment(Appointment.getDefaultEmptyAppointment())","lastModifiedDate":"2023-11-01"},{"lineNumber":111,"author":{"gitId":"Jweewee"},"content":"            .build();","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"songfangyl"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"songfangyl"},"content":"            .withRemark(VALID_REMARK_AMY)","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"Jweewee"},"content":"            .withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2023-10-31"},{"lineNumber":118,"author":{"gitId":"Jweewee"},"content":"            .withAppointmentCount(INITIAL_COUNT)","lastModifiedDate":"2023-10-31"},{"lineNumber":119,"author":{"gitId":"Jweewee"},"content":"            .withAppointment(Appointment.getDefaultEmptyAppointment())","lastModifiedDate":"2023-11-01"},{"lineNumber":120,"author":{"gitId":"Jweewee"},"content":"            .build();","lastModifiedDate":"2023-10-31"},{"lineNumber":121,"author":{"gitId":"Jweewee"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"songfangyl"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-10-25"},{"lineNumber":124,"author":{"gitId":"songfangyl"},"content":"            .withRemark(VALID_REMARK_BOB)","lastModifiedDate":"2023-10-25"},{"lineNumber":125,"author":{"gitId":"songfangyl"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2023-10-25"},{"lineNumber":126,"author":{"gitId":"Jweewee"},"content":"            .withAppointmentCount(INITIAL_COUNT)","lastModifiedDate":"2023-10-31"},{"lineNumber":127,"author":{"gitId":"Jweewee"},"content":"            .withAppointment(Appointment.getDefaultEmptyAppointment())","lastModifiedDate":"2023-11-01"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":129,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":130,"author":{"gitId":"yucongkoo"},"content":"    // Person without address","lastModifiedDate":"2023-10-11"},{"lineNumber":131,"author":{"gitId":"yucongkoo"},"content":"    public static final Person CALMEN \u003d new PersonBuilder().withName(VALID_NAME_CALMEN).withPhone(VALID_PHONE_CALMEN)","lastModifiedDate":"2023-10-08"},{"lineNumber":132,"author":{"gitId":"Jweewee"},"content":"            .withEmail(VALID_EMAIL_CALMEN).withoutAddress().withRemark(VALID_REMARK_CALMEN)","lastModifiedDate":"2023-10-31"},{"lineNumber":133,"author":{"gitId":"Jweewee"},"content":"            .withAppointmentCount(INITIAL_COUNT)","lastModifiedDate":"2023-10-31"},{"lineNumber":134,"author":{"gitId":"Jweewee"},"content":"            .withAppointment(Appointment.getDefaultEmptyAppointment())","lastModifiedDate":"2023-11-01"},{"lineNumber":135,"author":{"gitId":"Jweewee"},"content":"            .build();;","lastModifiedDate":"2023-10-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":137,"author":{"gitId":"LamJiuFong"},"content":"    // Person with priority","lastModifiedDate":"2023-10-23"},{"lineNumber":138,"author":{"gitId":"LamJiuFong"},"content":"    public static final Person DERRICK \u003d new PersonBuilder().withName(VALID_NAME_DERRICK).withPhone(VALID_PHONE_DERRICK)","lastModifiedDate":"2023-10-23"},{"lineNumber":139,"author":{"gitId":"Jweewee"},"content":"            .withEmail(VALID_EMAIL_DERRICK).withAddress(VALID_ADDRESS_DERRICK)","lastModifiedDate":"2023-10-31"},{"lineNumber":140,"author":{"gitId":"Jweewee"},"content":"            .withInsurances(VALID_INSURANCE_CAR).withPriority(VALID_PRIORITY_HIGH)","lastModifiedDate":"2023-10-31"},{"lineNumber":141,"author":{"gitId":"Jweewee"},"content":"            .withAppointmentCount(INITIAL_COUNT)","lastModifiedDate":"2023-10-31"},{"lineNumber":142,"author":{"gitId":"Jweewee"},"content":"            .withAppointment(Appointment.getDefaultEmptyAppointment())","lastModifiedDate":"2023-11-01"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2023-10-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":161,"author":{"gitId":"songfangyl"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE,","lastModifiedDate":"2023-10-31"},{"lineNumber":162,"author":{"gitId":"songfangyl"},"content":"                CALMEN, JOJO, KAKA));","lastModifiedDate":"2023-10-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"TehOPanas":5,"yucongkoo":6,"songfangyl":14,"LamJiuFong":7,"-":62,"Jweewee":70}},{"path":"src/test/java/seedu/address/testutil/UpdatePersonTagsDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yucongkoo"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"yucongkoo"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"yucongkoo"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.logic.commands.TagCommand.UpdatePersonTagsDescriptor;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.person.Tag;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"yucongkoo"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"yucongkoo"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"yucongkoo"},"content":" * A utility class to help with building UpdatePersonTagsDescriptor objects.","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"yucongkoo"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"yucongkoo"},"content":"public class UpdatePersonTagsDescriptorBuilder {","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"yucongkoo"},"content":"    private UpdatePersonTagsDescriptor updatePersonTagsDescriptor;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"yucongkoo"},"content":"    public UpdatePersonTagsDescriptorBuilder() {","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"yucongkoo"},"content":"        this.updatePersonTagsDescriptor \u003d new UpdatePersonTagsDescriptor(new HashSet\u003c\u003e(), new HashSet\u003c\u003e());","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"yucongkoo"},"content":"    public UpdatePersonTagsDescriptorBuilder(UpdatePersonTagsDescriptor updatePersonTagsDescriptor) {","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"yucongkoo"},"content":"        this.updatePersonTagsDescriptor \u003d new UpdatePersonTagsDescriptor(updatePersonTagsDescriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"yucongkoo"},"content":"     * Sets the {@code tagsToAdd} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"yucongkoo"},"content":"    public UpdatePersonTagsDescriptorBuilder withTagsToAdd(String... tags) {","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"yucongkoo"},"content":"        Set\u003cTag\u003e tagsToAdd \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"yucongkoo"},"content":"        updatePersonTagsDescriptor.setTagsToAdd(tagsToAdd);","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"yucongkoo"},"content":"        return this;","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"yucongkoo"},"content":"     * Sets the {@code tagsToDelete} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"yucongkoo"},"content":"    public UpdatePersonTagsDescriptorBuilder withTagsToDelete(String... tags) {","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"yucongkoo"},"content":"        Set\u003cTag\u003e tagsToDelete \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"yucongkoo"},"content":"        updatePersonTagsDescriptor.setTagsToDelete(tagsToDelete);","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"yucongkoo"},"content":"        return this;","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"yucongkoo"},"content":"     * Sets the {@code tagsToAdd} of the {@code EditPersonDescriptor} that we are building","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"yucongkoo"},"content":"     * to tags with of value 1, 2, 3, ..., n.","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"yucongkoo"},"content":"    public UpdatePersonTagsDescriptorBuilder withEnumeratedTagsToAdd(int n) {","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"yucongkoo"},"content":"        Set\u003cTag\u003e tagsToAdd \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"yucongkoo"},"content":"        for (int i \u003d 1; i \u003c\u003d n; ++i) {","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"yucongkoo"},"content":"            tagsToAdd.add(new Tag(Integer.toString(i)));","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"yucongkoo"},"content":"        updatePersonTagsDescriptor.setTagsToAdd(tagsToAdd);","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"yucongkoo"},"content":"        return this;","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"yucongkoo"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"yucongkoo"},"content":"     * Sets the {@code tagsToDelete} of the {@code EditPersonDescriptor} that we are building","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"yucongkoo"},"content":"     * to tags with of value 1, 2, 3, ..., n.","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"yucongkoo"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"yucongkoo"},"content":"    public UpdatePersonTagsDescriptorBuilder withEnumeratedTagsToDelete(int n) {","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"yucongkoo"},"content":"        Set\u003cTag\u003e tagsToDelete \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"yucongkoo"},"content":"        for (int i \u003d 1; i \u003c\u003d n; ++i) {","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"yucongkoo"},"content":"            tagsToDelete.add(new Tag(Integer.toString(i)));","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"yucongkoo"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"yucongkoo"},"content":"        updatePersonTagsDescriptor.setTagsToAdd(tagsToDelete);","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"yucongkoo"},"content":"        return this;","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"yucongkoo"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"yucongkoo"},"content":"    public UpdatePersonTagsDescriptor build() {","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"yucongkoo"},"content":"        return updatePersonTagsDescriptor;","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"yucongkoo"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"yucongkoo"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"yucongkoo":72}}]
